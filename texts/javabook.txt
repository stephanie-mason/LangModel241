<s> overview the mental landscape when you begin a journey it’s a good idea to have a mental map of the terrain you’ll be passing through </s>
<s> the same is true for an intellectual journey such as learning to write computer programs </s>
<s> in this case you’ll need to know the basics of what computers are and how they work </s>
<s> you’ll want to have some idea of what a computer program is and how one is created </s>
<s> since you will be writing programs in the java programming language you’ll want to know something about that language in particular and about the modern networked computing environment for which java is designed as you read this chapter don’t worry if you can’t understand everything in detail ( in fact it would be impossible for you to learn all the details from the brief expositions in this chapter ) concentrate on learning enough about the big ideas to orient yourself in preparation for the rest of the book </s>
<s> most of what is covered in this chapter will be covered in much greater detail later in the book 11 the fetch and execute cycle machine language a computer is a complex system consisting of many diﬀerent components </s>
<s> but at the heart—or the brain if you want—of the computer is a single component that does the actual computing </s>
<s> this is the central processing unit or cpu </s>
<s> in a modern desktop computer the cpu is a single chip” on the order of one square inch in size </s>
<s> the job of the cpu is to execute programs a program is simply a list of unambiguous instructions meant to be followed mechanically by a computer </s>
<s> a computer is built to carry out instructions that are written in a very simple type of language called machine language </s>
<s> each type of computer has its own machine language and the computer can directly execute a program only if the program is expressed in that language ( it can execute programs written in other languages if they are ﬁrst translated into machine language ) when the cpu executes a program that program is stored in the computer’s main memory ( also called the ram or random access memory ) </s>
<s> in addition to the program memory can also hold data that is being used or processed by the program </s>
<s> main memory consists of a sequence of locations </s>
<s> these locations are numbered and the sequence number of a location is called its address </s>
<s> an address provides a way of picking out one particular piece of information from among the millions stored in memory </s>
<s> when the cpu needs to access the program instruction or data in a particular location it sends the address of that information as a signal to the memory the memory responds by sending back the data contained in the speciﬁed 1 chapter 1 </s>
<s> the mental landscape location </s>
<s> the cpu can also store information in memory by specifying the information to be stored and the address of the location where it is to be stored on the level of machine language the operation of the cpu is fairly straightforward ( although it is very complicated in detail ) </s>
<s> the cpu executes a program that is stored as a sequence of machine language instructions in main memory </s>
<s> it does this by repeatedly reading or fetching an instruction from memory and then carrying out or executing that instruction </s>
<s> this process—fetch an instruction execute it fetch another instruction execute it and so on forever—is called the fetch-and-execute cycle </s>
<s> with one exception which will be covered in the next section this is all that the cpu ever does the details of the fetch-and-execute cycle are not terribly important but there are a few basic things you should know </s>
<s> the cpu contains a few internal registers which are small memory units capable of holding a single number or machine language instruction </s>
<s> the cpu uses one of these registers—the program counter or pc—to keep track of where it is in the program it is executing </s>
<s> the pc stores the address of the next instruction that the cpu should execute </s>
<s> at the beginning of each fetch-and-execute cycle the cpu checks the pc to see which instruction it should fetch </s>
<s> during the course of the fetch-and-execute cycle the number in the pc is updated to indicate the instruction that is to be executed in the next cycle ( usually but not always this is just the instruction that sequentially follows the current instruction in the program ) ∗ ∗ ∗ a computer executes machine language programs mechanically—that is without understanding them or thinking about them—simply because of the way it is physically put together this is not an easy concept </s>
<s> a computer is a machine built of millions of tiny switches called transistors which have the property that they can be wired together in such a way that an output from one switch can turn another switch on or oﬀ </s>
<s> as a computer computes these switches turn each other on or oﬀ in a pattern determined both by the way they are wired together and by the program that the computer is executing machine language instructions are expressed as binary numbers </s>
<s> a binary number is made up of just two possible digits zero and one </s>
<s> so a machine language instruction is just a sequence of zeros and ones </s>
<s> each particular sequence encodes some particular instruction </s>
<s> the data that the computer manipulates is also encoded as binary numbers </s>
<s> a computer can work directly with binary numbers because switches can readily represent such numbers turn the switch on to represent a one turn it oﬀ to represent a zero </s>
<s> machine language instructions are stored in memory as patterns of switches turned on or oﬀ </s>
<s> when a machine language instruction is loaded into the cpu all that happens is that certain switches are turned on or oﬀ in the pattern that encodes that particular instruction </s>
<s> the cpu is built to respond to this pattern by executing the instruction it encodes it does this simply because of the way all the other switches in the cpu are wired together so you should understand this much about how computers work main memory holds machine language programs and data </s>
<s> these are encoded as binary numbers </s>
<s> the cpu fetches machine language instructions from memory one after another and executes them </s>
<s> it does this mechanically without thinking about or understanding what it does—and therefore the program it executes must be perfect complete in all details and unambiguous because the cpu can do nothing but execute it exactly as written </s>
<s> here is a schematic view of this ﬁrst-stage understanding of the computer 12 </s>
<s> asynchronous events memory cpu program counter 1011100001 12 00101110 11010011 data to memory 01010011 00010000 10111111 data from memory 10100110 11101001 00000111 10100110 address for 00010001 reading/writing data 00111110 ( location 0 ) ( location 1 ) ( location 2 ) ( location 3 ) ( location 10 ) asynchronous events polling loops and interrupts the cpu spends almost all of its time fetching instructions from memory and executing them </s>
<s> however the cpu and main memory are only two out of many components in a real computer system </s>
<s> a complete system contains other devices such as • a hard disk for storing programs and data ﬁles ( note that main memory holds only a comparatively small amount of information and holds it only as long as the power is turned on </s>
<s> a hard disk is used for permanent storage of larger amounts of information but programs have to be loaded from disk into main memory before they can actually be executed ) • a keyboard and mouse for user input • a monitor and printer which can be used to display the computer’s output • an audio output device that allows the computer to play sounds • a network interface that allows the computer to communicate with other computers that are connected to it on a network either wirelessly or by wire • a scanner that converts images into coded binary numbers that can be stored and manipulated on the computer the list of devices is entirely open ended and computer systems are built so that they can easily be expanded by adding new devices </s>
<s> somehow the cpu has to communicate with and control all these devices </s>
<s> the cpu can only do this by executing machine language instructions ( which is all it can do period ) </s>
<s> the way this works is that for each device in a system there is a device driver which consists of software that the cpu executes when it has to deal with the device </s>
<s> installing a new device on a system generally has two steps plugging the device physically into the computer and installing the device driver software </s>
<s> without the device driver the actual physical device would be useless since the cpu would not be able to communicate with it ∗ ∗ ∗ chapter 1 </s>
<s> the mental landscape a computer system consisting of many devices is typically organized by connecting those devices to one or more busses </s>
<s> a bus is a set of wires that carry various sorts of information between the devices connected to those wires </s>
<s> the wires carry data addresses and control signals </s>
<s> an address directs the data to a particular device and perhaps to a particular register or location within that device </s>
<s> control signals can be used for example by one device to alert another that data is available for it on the data bus </s>
<s> a fairly simple computer system might be organized like this cpu memory empty slot for future expansion data bus address bus control bus input/ output controller video controller and monitor keyboard network interface network cable now devices such as keyboard mouse and network interface can produce input that needs to be processed by the cpu </s>
<s> how does the cpu know that the data is there one simple idea which turns out to be not very satisfactory is for the cpu to keep checking for incoming data over and over </s>
<s> whenever it ﬁnds data it processes it </s>
<s> this method is called polling since the cpu polls the input devices continually to see whether they have any input data to report unfortunately although polling is very simple it is also very ineﬃcient </s>
<s> the cpu can waste an awful lot of time just waiting for input to avoid this ineﬃciency interrupts are often used instead of polling </s>
<s> an interrupt is a signal sent by another device to the cpu </s>
<s> the cpu responds to an interrupt signal by putting aside whatever it is doing in order to respond to the interrupt </s>
<s> once it has handled the interrupt it returns to what it was doing before the interrupt occurred </s>
<s> for example when you press a key on your computer keyboard a keyboard interrupt is sent to the cpu </s>
<s> the cpu responds to this signal by interrupting what it is doing reading the key that you pressed processing it and then returning to the task it was performing before you pressed the key again you should understand that this is a purely mechanical process a device signals an interrupt simply by turning on a wire </s>
<s> the cpu is built so that when that wire is turned on the cpu saves enough information about what it is currently doing so that it can return to the same state later </s>
<s> this information consists of the contents of important internal registers such as the program counter </s>
<s> then the cpu jumps to some predetermined memory location and begins executing the instructions stored there </s>
<s> those instructions make up an interrupt handler that does the processing necessary to respond to the interrupt ( this interrupt handler is part of the device driver software for the device that signalled the interrupt ) at the end of 5 12 </s>
<s> asynchronous events the interrupt handler is an instruction that tells the cpu to jump back to what it was doing it does that by restoring its previously saved state interrupts allow the cpu to deal with asynchronous events </s>
<s> in the regular fetch-andexecute cycle things happen in a predetermined order everything that happens is synchronized” with everything else </s>
<s> interrupts make it possible for the cpu to deal eﬃciently with events that happen asynchronously” that is at unpredictable times as another example of how interrupts are used consider what happens when the cpu needs to access data that is stored on the hard disk </s>
<s> the cpu can access data directly only if it is in main memory </s>
<s> data on the disk has to be copied into memory before it can be accessed unfortunately on the scale of speed at which the cpu operates the disk drive is extremely slow </s>
<s> when the cpu needs data from the disk it sends a signal to the disk drive telling it to locate the data and get it ready ( this signal is sent synchronously under the control of a regular program ) then instead of just waiting the long and unpredictable amount of time that the disk drive will take to do this the cpu goes on with some other task </s>
<s> when the disk drive has the data ready it sends an interrupt signal to the cpu </s>
<s> the interrupt handler can then read the requested data ∗ ∗ ∗ now you might have noticed that all this only makes sense if the cpu actually has several tasks to perform </s>
<s> if it has nothing better to do it might as well spend its time polling for input or waiting for disk drive operations to complete </s>
<s> all modern computers use multitasking to perform several tasks at once </s>
<s> some computers can be used by several people at once </s>
<s> since the cpu is so fast it can quickly switch its attention from one user to another devoting a fraction of a second to each user in turn </s>
<s> this application of multitasking is called timesharing </s>
<s> but a modern personal computer with just a single user also uses multitasking </s>
<s> for example the user might be typing a paper while a clock is continuously displaying the time and a ﬁle is being downloaded over the network each of the individual tasks that the cpu is working on is called a thread ( or a process there are technical diﬀerences between threads and processes but they are not important here since it is threads that are used in java ) many cpus can literally execute more than one thread simultaneously—such cpus contain multiple cores” each of which can run a thread— but there is always a limit on the number of threads that can be executed at the same time since there are often more threads than can be executed simultaneously the computer has to be able switch its attention from one thread to another just as a timesharing computer switches its attention from one user to another </s>
<s> in general a thread that is being executed will continue to run until one of several things happens • the thread might voluntarily yield control to give other threads a chance to run • the thread might have to wait for some asynchronous event to occur </s>
<s> for example the thread might request some data from the disk drive or it might wait for the user to press a key </s>
<s> while it is waiting the thread is said to be blocked and other threads if any have a chance to run </s>
<s> when the event occurs an interrupt will wake up” the thread so that it can continue running • the thread might use up its allotted slice of time and be suspended to allow other threads to run </s>
<s> not all computers can forcibly” suspend a thread in this way those that can are said to use preemptive multitasking </s>
<s> to do preemptive multitasking a computer needs a special timer device that generates an interrupt at regular intervals such as 100 times per second </s>
<s> when a timer interrupt occurs the cpu has a chance to switch from 6 chapter 1 </s>
<s> the mental landscape one thread to another whether the thread that is currently running likes it or not </s>
<s> all modern desktop and laptop computers use preemptive multitasking ordinary users and indeed ordinary programmers have no need to deal with interrupts and interrupt handlers </s>
<s> they can concentrate on the diﬀerent tasks or threads that they want the computer to perform the details of how the computer manages to get all those tasks done are not important to them </s>
<s> in fact most users and many programmers can ignore threads and multitasking altogether </s>
<s> however threads have become increasingly important as computers have become more powerful and as they have begun to make more use of multitasking and multiprocessing </s>
<s> in fact the ability to work with threads is fast becoming an essential job skill for programmers </s>
<s> fortunately java has good support for threads which are built into the java programming language as a fundamental programming concept </s>
<s> programming with threads will be covered in chapter 12 just as important in java and in modern programming in general is the basic concept of asynchronous events </s>
<s> while programmers don’t actually deal with interrupts directly they do often ﬁnd themselves writing event handlers which like interrupt handlers are called asynchronously when speciﬁc events occur </s>
<s> such event-driven programming” has a very diﬀerent feel from the more traditional straight-through synchronous programming </s>
<s> we will begin with the more traditional type of programming which is still used for programming individual tasks but we will return to threads and events later in the text starting in chapter 6 ∗ ∗ ∗ by the way the software that does all the interrupt handling handles communication with the user and with hardware devices and controls which thread is allowed to run is called the operating system </s>
<s> the operating system is the basic essential software without which a computer would not be able to function </s>
<s> other programs such as word processors and world wide web browsers are dependent upon the operating system </s>
<s> common operating systems include linux windows xp windows vista and mac os 13 the java virtual machine machine language consists of very simple instructions that can be executed directly by the cpu of a computer </s>
<s> almost all programs though are written in high-level programming languages such as java pascal or c++ </s>
<s> a program written in a high-level language cannot be run directly on any computer </s>
<s> first it has to be translated into machine language </s>
<s> this translation can be done by a program called a compiler </s>
<s> a compiler takes a high-level-language program and translates it into an executable machine-language program </s>
<s> once the translation is done the machine-language program can be run any number of times but of course it can only be run on one type of computer ( since each type of computer has its own individual machine language ) </s>
<s> if the program is to run on another type of computer it has to be re-translated using a diﬀerent compiler into the appropriate machine language there is an alternative to compiling a high-level language program </s>
<s> instead of using a compiler which translates the program all at once you can use an interpreter which translates it instruction-by-instruction as necessary </s>
<s> an interpreter is a program that acts much like a cpu with a kind of fetch-and-execute cycle </s>
<s> in order to execute a program the interpreter runs in a loop in which it repeatedly reads one instruction from the program decides what is necessary to carry out that instruction and then performs the appropriate machine-language commands to do so 13 </s>
<s> the java virtual machine one use of interpreters is to execute high-level language programs </s>
<s> for example the programming language lisp is usually executed by an interpreter rather than a compiler </s>
<s> however interpreters have another purpose they can let you use a machine-language program meant for one type of computer on a completely diﬀerent type of computer </s>
<s> for example there is a program called virtual pc” that runs on mac os computers </s>
<s> virtual pc is an interpreter that executes machine-language programs written for ibm-pc-clone computers </s>
<s> if you run virtual pc on your mac os you can run any pc program including programs written for windows ( unfortunately a pc program will run much more slowly than it would on an actual ibm clone </s>
<s> the problem is that virtual pc executes several mac os machine-language instructions for each pc machine-language instruction in the program it is interpreting </s>
<s> compiled programs are inherently faster than interpreted programs ) ∗ ∗ ∗ the designers of java chose to use a combination of compilation and interpretation </s>
<s> programs written in java are compiled into machine language but it is a machine language for a computer that doesn’t really exist </s>
<s> this so-called virtual” computer is known as the java virtual machine or jvm </s>
<s> the machine language for the java virtual machine is called java bytecode </s>
<s> there is no reason why java bytecode couldn’t be used as the machine language of a real computer rather than a virtual computer </s>
<s> but in fact the use of a virtual machine makes possible one of the main selling points of java the fact that it can actually be used on any computer </s>
<s> all that the computer needs is an interpreter for java bytecode </s>
<s> such an interpreter simulates the jvm in the same way that virtual pc simulates a pc computer ( the term jvm is also used for the java bytecode interpreter program that does the simulation so we say that a computer needs a jvm in order to run java programs </s>
<s> technically it would be more correct to say that the interpreter implements the jvm than to say that it is a jvm ) of course a diﬀerent java bytecode interpreter is needed for each type of computer but once a computer has a java bytecode interpreter it can run any java bytecode program </s>
<s> and the same java bytecode program can be run on any computer that has such an interpreter this is one of the essential features of java the same compiled program can be run on many diﬀerent types of computers java interpreter for mac os java program compiler java bytecode program java interpreter for windows java interpreter for linux why you might wonder use the intermediate java bytecode at all why not just distribute the original java program and let each person compile it into the machine language of whatever computer they want to run it on there are many reasons </s>
<s> first of all a compiler has to understand java a complex high-level language </s>
<s> the compiler is itself a complex program </s>
<s> a java bytecode interpreter on the other hand is a fairly small simple program </s>
<s> this makes it easy to write a bytecode interpreter for a new type of computer once that is done that computer 8 chapter 1 </s>
<s> the mental landscape can run any compiled java program </s>
<s> it would be much harder to write a java compiler for the same computer furthermore many java programs are meant to be downloaded over a network </s>
<s> this leads to obvious security concerns you don’t want to download and run a program that will damage your computer or your ﬁles </s>
<s> the bytecode interpreter acts as a buﬀer between you and the program you download </s>
<s> you are really running the interpreter which runs the downloaded program indirectly </s>
<s> the interpreter can protect you from potentially dangerous actions on the part of that program when java was still a new language it was criticized for being slow since java bytecode was executed by an interpreter it seemed that java bytecode programs could never run as quickly as programs compiled into native machine language ( that is the actual machine language of the computer on which the program is running ) </s>
<s> however this problem has been largely overcome by the use of just-in-time compilers for executing java bytecode </s>
<s> a just-in-time compiler translates java bytecode into native machine language </s>
<s> it does this while it is executing the program </s>
<s> just as for a normal interpreter the input to a just-in-time compiler is a java bytecode program and its task is to execute that program </s>
<s> but as it is executing the program it also translates parts of it into machine language </s>
<s> the translated parts of the program can then be executed much more quickly than they could be interpreted </s>
<s> since a given part of a program is often executed many times as the program runs a just-in-time compiler can signiﬁcantly speed up the overall execution time i should note that there is no necessary connection between java and java bytecode </s>
<s> a program written in java could certainly be compiled into the machine language of a real computer and programs written in other languages could be compiled into java bytecode </s>
<s> however it is the combination of java and java bytecode that is platform-independent secure and networkcompatible while allowing you to program in a modern high-level object-oriented language ( in the past few years it has become fairly common to create new programming languages or versions of old languages that compile into java bytecode </s>
<s> the compiled bytecode programs can then be executed by a standard jvm </s>
<s> new languages that have been developed speciﬁcally for programming the jvm include groovy clojure and processing </s>
<s> jython and jruby are versions of older languages python and ruby that target the jvm </s>
<s> these languages make it possible to enjoy many of the advantages of the jvm while avoiding some of the technicalities of the java language </s>
<s> in fact the use of other languages with the jvm has become important enough that several new features have been added to the jvm in java version 7 speciﬁcally to add better support for some of those languages ) ∗ ∗ ∗ i should also note that the really hard part of platform-independence is providing a graphical user interface”—with windows buttons etc—that will work on all the platforms that support java </s>
<s> you’ll see more about this problem in section 16 14 there fundamental building blocks of programs are two basic aspects of programming data and instructions </s>
<s> to work with data you need to understand variables and types to work with instructions you need to understand control structures and subroutines </s>
<s> you’ll spend a large part of the course becoming familiar with these concepts a variable is just a memory location ( or several locations treated as a unit ) that has been given a name so that it can be easily referred to and used in a program </s>
<s> the programmer only 14 </s>
<s> building blocks of programs 9 has to worry about the name it is the compiler’s responsibility to keep track of the memory location </s>
<s> the programmer does need to keep in mind that the name refers to a kind of box” in memory that can hold data even if the programmer doesn’t have to know where in memory that box is located in java and in many other programming languages a variable has a type that indicates what sort of data it can hold </s>
<s> one type of variable might hold integers—whole numbers such as 3 -7 and 0—while another holds ﬂoating point numbers—numbers with decimal points such as 314 -27 or 170 ( yes the computer does make a distinction between the integer 17 and the ﬂoating-point number 170 they actually look quite diﬀerent inside the computer ) there could also be types for individual characters ( ’a’ etc ) strings ( hello” a string can include many characters” etc ) and less common types such as dates colors sounds or any other kind of data that a program might need to store programming languages always have commands for getting data into and out of variables and for doing computations with data </s>
<s> for example the following assignment statement” which might appear in a java program tells the computer to take the number stored in the variable named principal” multiply that number by 007 and then store the result in the variable named interest” interest = principal * 007 there are also input commands” for getting data from the user or from ﬁles on the computer’s disks and output commands” for sending data in the other direction these basic commands—for moving data from place to place and for performing computations—are the building blocks for all programs </s>
<s> these building blocks are combined into complex programs using control structures and subroutines ∗ ∗ ∗ a program is a sequence of instructions </s>
<s> in the ordinary ﬂow of control” the computer executes the instructions in the sequence in which they appear one after the other </s>
<s> however this is obviously very limited the computer would soon run out of instructions to execute control structures are special instructions that can change the ﬂow of control </s>
<s> there are two basic types of control structure loops which allow a sequence of instructions to be repeated over and over and branches which allow the computer to decide between two or more diﬀerent courses of action by testing conditions that occur as the program is running for example it might be that if the value of the variable principal” is greater than 10000 then the interest” should be computed by multiplying the principal by 005 if not then the interest should be computed by multiplying the principal by 004 </s>
<s> a program needs some way of expressing this type of decision </s>
<s> in java it could be expressed using the following if statement” if ( principal > 10000 ) interest = principal * 005 else interest = principal * 004 ( don’t worry about the details for now </s>
<s> just remember that the computer can test a condition and decide what to do next on the basis of that test ) oops are used when the same task has to be performed more than once </s>
<s> for example if you want to print out a mailing label for each name on a mailing list you might say get the ﬁrst name and address and print the label get the second name and address and print the label get the third name and address and print the label ” but this quickly becomes 10 chapter 1 </s>
<s> the mental landscape ridiculous—and might not work at all if you don’t know in advance how many names there are what you would like to say is something like while there are more names to process get the next name and address and print the label” a loop can be used in a program to express such repetition ∗ ∗ ∗ arge programs are so complex that it would be almost impossible to write them if there were not some way to break them up into manageable chunks” subroutines provide one way to do this </s>
<s> a subroutine consists of the instructions for performing some task grouped together as a unit and given a name </s>
<s> that name can then be used as a substitute for the whole set of instructions </s>
<s> for example suppose that one of the tasks that your program needs to perform is to draw a house on the screen </s>
<s> you can take the necessary instructions make them into a subroutine and give that subroutine some appropriate name—say drawhouse( )” </s>
<s> then anyplace in your program where you need to draw a house you can do so with the single command drawhouse( ) this will have the same eﬀect as repeating all the house-drawing instructions in each place the advantage here is not just that you save typing </s>
<s> organizing your program into subroutines also helps you organize your thinking and your program design eﬀort </s>
<s> while writing the house-drawing subroutine you can concentrate on the problem of drawing a house without worrying for the moment about the rest of the program </s>
<s> and once the subroutine is written you can forget about the details of drawing houses—that problem is solved since you have a subroutine to do it for you </s>
<s> a subroutine becomes just like a built-in part of the language which you can use without thinking about the details of what goes on inside” the subroutine ∗ ∗ ∗ variables types loops branches and subroutines are the basis of what might be called traditional programming” however as programs become larger additional structure is needed to help deal with their complexity </s>
<s> one of the most eﬀective tools that has been found is objectoriented programming which is discussed in the next section 15 objects and object-oriented programming programs must be designed </s>
<s> no one can just sit down at the computer and compose a program of any complexity </s>
<s> the discipline called software engineering is concerned with the construction of correct working well-written programs </s>
<s> the software engineer tries to use accepted and proven methods for analyzing the problem to be solved and for designing a program to solve that problem during the 1970s and into the 80s the primary software engineering methodology was structured programming </s>
<s> the structured programming approach to program design was based on the following advice to solve a large problem break the problem into several pieces and work on each piece separately to solve each piece treat it as a new problem which can itself be broken down into smaller problems eventually you will work your way down to problems that can be solved directly without further decomposition </s>
<s> this approach is called top-down programming there is nothing wrong with top-down programming </s>
<s> it is a valuable and often-used approach to problem-solving </s>
<s> however it is incomplete </s>
<s> for one thing it deals almost entirely with producing the instructions necessary to solve a problem </s>
<s> but as time went on people 15 </s>
<s> object-oriented programming 11 realized that the design of the data structures for a program was at least as important as the design of subroutines and control structures </s>
<s> top-down programming doesn’t give adequate consideration to the data that the program manipulates another problem with strict top-down programming is that it makes it diﬃcult to reuse work done for other projects </s>
<s> by starting with a particular problem and subdividing it into convenient pieces top-down programming tends to produce a design that is unique to that problem </s>
<s> it is unlikely that you will be able to take a large chunk of programming from another program and ﬁt it into your project at least not without extensive modiﬁcation </s>
<s> producing high-quality programs is diﬃcult and expensive so programmers and the people who employ them are always eager to reuse past work ∗ ∗ ∗ so in practice top-down design is often combined with bottom-up design </s>
<s> in bottom-up design the approach is to start at the bottom” with problems that you already know how to solve ( and for which you might already have a reusable software component at hand ) </s>
<s> from there you can work upwards towards a solution to the overall problem the reusable components should be as modular” as possible </s>
<s> a module is a component of a larger system that interacts with the rest of the system in a simple well-deﬁned straightforward manner </s>
<s> the idea is that a module can be plugged into” a system </s>
<s> the details of what goes on inside the module are not important to the system as a whole as long as the module fulﬁlls its assigned role correctly </s>
<s> this is called information hiding and it is one of the most important principles of software engineering one common format for software modules is to contain some data along with some subroutines for manipulating that data </s>
<s> for example a mailing-list module might contain a list of names and addresses along with a subroutine for adding a new name a subroutine for printing mailing labels and so forth </s>
<s> in such modules the data itself is often hidden inside the module a program that uses the module can then manipulate the data only indirectly by calling the subroutines provided by the module </s>
<s> this protects the data since it can only be manipulated in known well-deﬁned ways </s>
<s> and it makes it easier for programs to use the module since they don’t have to worry about the details of how the data is represented </s>
<s> information about the representation of the data is hidden modules that could support this kind of information-hiding became common in programming languages in the early 1980s </s>
<s> since then a more advanced form of the same idea has more or less taken over software engineering </s>
<s> this latest approach is called object-oriented programming often abbreviated as oop the central concept of object-oriented programming is the object which is a kind of module containing data and subroutines </s>
<s> the point-of-view in oop is that an object is a kind of selfsuﬃcient entity that has an internal state ( the data it contains ) and that can respond to messages ( calls to its subroutines ) </s>
<s> a mailing list object for example has a state consisting of a list of names and addresses </s>
<s> if you send it a message telling it to add a name it will respond by modifying its state to reﬂect the change </s>
<s> if you send it a message telling it to print itself it will respond by printing out its list of names and addresses the oop approach to software engineering is to start by identifying the objects involved in a problem and the messages that those objects should respond to </s>
<s> the program that results is a collection of objects each with its own data and its own set of responsibilities </s>
<s> the objects interact by sending messages to each other </s>
<s> there is not much top-down” in the large-scale design of such a program and people used to more traditional programs can have a hard time getting used to oop </s>
<s> however people who use oop would claim that object-oriented programs 12 chapter 1 </s>
<s> the mental landscape tend to be better models of the way the world itself works and that they are therefore easier to write easier to understand and more likely to be correct ∗ ∗ ∗ you should think of objects as knowing” how to respond to certain messages </s>
<s> diﬀerent objects might respond to the same message in diﬀerent ways </s>
<s> for example a print” message would produce very diﬀerent results depending on the object it is sent to </s>
<s> this property of objects—that diﬀerent objects can respond to the same message in diﬀerent ways—is called polymorphism it is common for objects to bear a kind of family resemblance” to one another </s>
<s> objects that contain the same type of data and that respond to the same messages in the same way belong to the same class ( in actual programming the class is primary that is a class is created and then one or more objects are created using that class as a template ) but objects can be similar without being in exactly the same class for example consider a drawing program that lets the user draw lines rectangles ovals polygons and curves on the screen </s>
<s> in the program each visible object on the screen could be represented by a software object in the program </s>
<s> there would be ﬁve classes of objects in the program one for each type of visible object that can be drawn </s>
<s> all the lines would belong to one class all the rectangles to another class and so on </s>
<s> these classes are obviously related all of them represent drawable objects” they would for example all presumably be able to respond to a draw yourself” message </s>
<s> another level of grouping based on the data needed to represent each type of object is less obvious but would be very useful in a program we can group polygons and curves together as multipoint objects” while lines rectangles and ovals are two-point objects” ( a line is determined by its endpoints a rectangle by two of its corners and an oval by two corners of the rectangle that contains it ) we could diagram these relationships as follows drawableobject multipointobject polygon curve twopointobject ine rectangle oval drawableobject multipointobject and twopointobject would be classes in the program multipointobject and twopointobject would be subclasses of drawableobject </s>
<s> the class ine would be a subclass of twopointobject and ( indirectly ) of drawableobject </s>
<s> a subclass of a class is said to inherit the properties of that class </s>
<s> the subclass can add to its inheritance and it can even override” part of that inheritance ( by deﬁning a diﬀerent response to some method ) nevertheless lines rectangles and so on are drawable objects and the class drawableobject expresses this relationship inheritance is a powerful means for organizing a program </s>
<s> it is also related to the problem of reusing software components </s>
<s> a class is the ultimate reusable component </s>
<s> not only can it be reused directly if it ﬁts exactly into a program you are trying to write but if it just almost 16 </s>
<s> the modern user interface 13 ﬁts you can still reuse it by deﬁning a subclass and making only the small changes necessary to adapt it exactly to your needs so oop is meant to be both a superior program-development tool and a partial solution to the software reuse problem </s>
<s> objects classes and object-oriented programming will be important themes throughout the rest of this text </s>
<s> you will start using objects that are built into the java language in the next chapter and in chapter 5 you will begin creating your own classes and objects 16 the modern user interface when computers were first introduced ordinary people—including most programmers— couldn’t get near them </s>
<s> they were locked up in rooms with white-coated attendants who would take your programs and data feed them to the computer and return the computer’s response some time later </s>
<s> when timesharing—where the computer switches its attention rapidly from one person to another—was invented in the 1960s it became possible for several people to interact directly with the computer at the same time </s>
<s> on a timesharing system users sit at terminals” where they type commands to the computer and the computer types back its response </s>
<s> early personal computers also used typed commands and responses except that there was only one person involved at a time </s>
<s> this type of interaction between a user and a computer is called a command-line interface today of course most people interact with computers in a completely diﬀerent way </s>
<s> they use a graphical user interface or gui </s>
<s> the computer draws interface components on the screen </s>
<s> the components include things like windows scroll bars menus buttons and icons usually a mouse is used to manipulate such components </s>
<s> assuming that you have not just been teleported in from the 1970s you are no doubt already familiar with the basics of graphical user interfaces! a lot of gui interface components have become fairly standard </s>
<s> that is they have similar appearance and behavior on many diﬀerent computer platforms including mac os windows and linux </s>
<s> java programs which are supposed to run on many diﬀerent platforms without modiﬁcation to the program can use all the standard gui components </s>
<s> they might vary a little in appearance from platform to platform but their functionality should be identical on any computer on which the program runs shown below is an image of a very simple java program—actually an applet” since it is meant to appear on a web page—that shows a few standard gui interface components </s>
<s> there are four components that the user can interact with a button a checkbox a text ﬁeld and a pop-up menu </s>
<s> these components are labeled </s>
<s> there are a few other components in the applet the labels themselves are components ( even though you can’t interact with them ) </s>
<s> the right half of the applet is a text area component which can display multiple lines of text </s>
<s> and a scrollbar component appears alongside the text area when the number of lines of text becomes larger than will ﬁt in the text area </s>
<s> and in fact in java terminology the whole applet is itself considered to be a component” 14 chapter 1 </s>
<s> the mental landscape now java actually has two complete sets of gui components </s>
<s> one of these the awt or abstract windowing toolkit was available in the original version of java </s>
<s> the other which is known as swing is included in java version 12 or later and is used in preference to the awt in most modern java programs </s>
<s> the applet that is shown above uses components that are part of swing </s>
<s> if java is not installed in your web browser or if your browser uses a very old version of java you might get an error when the browser tries to load the applet </s>
<s> remember that most of the applets in this textbook require java 50 ( or higher ) when a user interacts with the gui components in this applet an event” is generated for example clicking a push button generates an event and pressing return while typing in a text ﬁeld generates an event </s>
<s> each time an event is generated a message is sent to the applet telling it that the event has occurred and the applet responds according to its program </s>
<s> in fact the program consists mainly of event handlers” that tell the applet how to respond to various types of events </s>
<s> in this example the applet has been programmed to respond to each event by displaying a message in the text area </s>
<s> in a more realistic example the event handlers would have more to do the use of the term message” here is deliberate </s>
<s> messages as you saw in the previous section are sent to objects </s>
<s> in fact java gui components are implemented as objects </s>
<s> java includes many predeﬁned classes that represent various types of gui components </s>
<s> some of these classes are subclasses of others </s>
<s> here is a diagram showing some of swing’s gui classes and their relationships jcomponent jlabel jabstractbutton jbutton jcombobox jtogglebutton jcheckbox jscrollbar jtextcomponent jtextfield jtextarea jradiobutton don’t worry about the details for now but try to get some feel about how object-oriented programming and inheritance are used here </s>
<s> note that all the gui classes are subclasses directly or indirectly of a class called jcomponent which represents general properties that are shared by all swing components </s>
<s> two of the direct subclasses of jcomponent themselves have subclasses </s>
<s> the classes jtextarea and jtextfield which have certain behaviors in common are grouped together as subclasses of jtextcomponent </s>
<s> similarly jbutton and jtogglebutton 17 </s>
<s> the internet and beyond 15 are subclasses of jabstractbutton which represents properties common to both buttons and checkboxes ( jcombobox by the way is the swing class that represents pop-up menus ) just from this brief discussion perhaps you can see how gui programming can make eﬀective use of object-oriented design </s>
<s> in fact gui’s with their visible objects” are probably a major factor contributing to the popularity of oop programming with gui components and events is one of the most interesting aspects of java </s>
<s> however we will spend several chapters on the basics before returning to this topic in chapter 6 17 the internet and beyond computers can be connected together on networks </s>
<s> a computer on a network can communicate with other computers on the same network by exchanging data and ﬁles or by sending and receiving messages </s>
<s> computers on a network can even work together on a large computation today millions of computers throughout the world are connected to a single huge network called the internet </s>
<s> new computers are being connected to the internet every day both by wireless communication and by physical connection using technologies such as dsl cable modems or ethernet there are elaborate protocols for communication over the internet </s>
<s> a protocol is simply a detailed speciﬁcation of how communication is to proceed </s>
<s> for two computers to communicate at all they must both be using the same protocols </s>
<s> the most basic protocols on the internet are the internet protocol ( ip ) which speciﬁes how data is to be physically transmitted from one computer to another and the transmission control protocol ( tcp ) which ensures that data sent using ip is received in its entirety and without error </s>
<s> these two protocols which are referred to collectively as tcp/ip provide a foundation for communication </s>
<s> other protocols use tcp/ip to send speciﬁc types of information such as web pages electronic mail and data ﬁles all communication over the internet is in the form of packets </s>
<s> a packet consists of some data being sent from one computer to another along with addressing information that indicates where on the internet that data is supposed to go </s>
<s> think of a packet as an envelope with an address on the outside and a message on the inside ( the message is the data ) the packet also includes a return address” that is the address of the sender </s>
<s> a packet can hold only a limited amount of data longer messages must be divided among several packets which are then sent individually over the net and reassembled at their destination every computer on the internet has an ip address a number that identiﬁes it uniquely among all the computers on the net </s>
<s> the ip address is used for addressing packets </s>
<s> a computer can only send data to another computer on the internet if it knows that computer’s ip address since people prefer to use names rather than numbers most computers are also identiﬁed by names called domain names </s>
<s> for example the main computer of the mathematics department at hobart and william smith colleges has the domain name mathhwsedu ( domain names are just for convenience your computer still needs to know ip addresses before it can communicate </s>
<s> there are computers on the internet whose job it is to translate domain names to ip addresses </s>
<s> when you use a domain name your computer sends a message to a domain name server to ﬁnd out the corresponding ip address </s>
<s> then your computer uses the ip address rather than the domain name to communicate with the other computer ) the internet provides a number of services to the computers connected to it ( and of course 16 chapter 1 </s>
<s> the mental landscape to the users of those computers ) </s>
<s> these services use tcp/ip to send various types of data over the net </s>
<s> among the most popular services are instant messaging ﬁle sharing electronic mail and the world-wide web </s>
<s> each service has its own protocols which are used to control transmission of data over the network </s>
<s> each service also has some sort of user interface which allows the user to view send and receive data through the service for example the email service uses a protocol known as smtp ( simple mail transfer protocol ) to transfer email messages from one computer to another </s>
<s> other protocols such as pop and imap are used to fetch messages from an email account so that the recipient can read them </s>
<s> a person who uses email however doesn’t need to understand or even know about these protocols </s>
<s> instead they are used behind the scenes by computer programs to send and receive email messages </s>
<s> these programs provide the user with an easy-to-use user interface to the underlying network protocols the world-wide web is perhaps the most exciting of network services </s>
<s> the world-wide web allows you to request pages of information that are stored on computers all over the internet </s>
<s> a web page can contain links to other pages on the same computer from which it was obtained or to other computers anywhere in the world </s>
<s> a computer that stores such pages of information is called a web server </s>
<s> the user interface to the web is the type of program known as a web browser </s>
<s> common web browsers include internet explorer and firefox </s>
<s> you use a web browser to request a page of information </s>
<s> the browser sends a request for that page to the computer on which the page is stored and when a response is received from that computer the web browser displays it to you in a neatly formatted form </s>
<s> a web browser is just a user interface to the web </s>
<s> behind the scenes the web browser uses a protocol called http ( hypertext transfer protocol ) to send each page request and to receive the response from the web server ∗ ∗ ∗ now just what you might be thinking does all this have to do with java in fact java is intimately associated with the internet and the world-wide web </s>
<s> as you have seen in the previous section special java programs called applets are meant to be transmitted over the internet and displayed on web pages </s>
<s> a web server transmits a java applet just as it would transmit any other type of information </s>
<s> a web browser that understands java—that is that includes an interpreter for the java virtual machine—can then run the applet right on the web page </s>
<s> since applets are programs they can do almost anything including complex interaction with the user </s>
<s> with java a web page becomes more than just a passive display of information it becomes anything that programmers can imagine and implement but applets are only one aspect of java’s relationship with the internet and not the major one </s>
<s> in fact as both java and the internet have matured applets have become much less important </s>
<s> at the same time however java has increasingly been used to write complex stand-alone applications that do not depend on a web browser </s>
<s> many of these programs are network-related </s>
<s> for example many of the largest and most complex web sites use web server software that is written in java </s>
<s> java includes excellent support for network protocols and its platform independence makes it possible to write network programs that work on many diﬀerent types of computer </s>
<s> you will learn about java’s network support in chapter 11 its association with the internet is not java’s only advantage </s>
<s> but many good programming languages have been invented only to be soon forgotten </s>
<s> java has had the good luck to ride on the coattails of the internet’s immense and increasing popularity ∗ ∗ ∗ as java has matured its applications have reached far beyond the net </s>
<s> the standard version 17 </s>
<s> the internet and beyond 17 of java already comes with support for many technologies such as cryptography and data compression </s>
<s> free extensions are available to support many other technologies such as advanced sound processing and three-dimensional graphics </s>
<s> complex high-performance systems can be developed in java </s>
<s> for example hadoop a system for large scale data processing is written in java </s>
<s> hadoop is used by yahoo facebook and other web sites to process the huge amounts of data generated by their users furthermore java is not restricted to use on traditional computers </s>
<s> java can be used to write programs for many smartphones ( though not for the iphone ) </s>
<s> it is the primary development language for blackberries and android-based phones such as the verizon droid </s>
<s> mobile devices such as smartphones use a version of java called java me ( mobile edition” ) </s>
<s> it’s the same basic language as the standard edition but the set of classes that is included as a standard part of the language is diﬀerent </s>
<s> java me is also the programming language for the amazon kindle ebook reader and for interactive features on blu-ray video disks at this time java certainly ranks as one of the most widely used programming languages it is a good choice for almost any programming project that is meant to run on more than one type of computing device and is a reasonable choice even for many programs that will run on only one device </s>
<s> it is probably the most widely taught language at colleges and universities it is similar enough to other popular languages such as c c++ and c# that knowing it will give you a good start on learning those languages as well </s>
<s> overall learning java is a great starting point on the road to becoming an expert programmer </s>
<s> i hope you enjoy the journey! 18 chapter 1 </s>
<s> the mental landscape quiz on chapter 1 1 </s>
<s> one of the components of a computer is its cpu </s>
<s> what is a cpu and what role does it play in a computer 2 </s>
<s> explain what is meant by an asynchronous event” give some examples 3 </s>
<s> what is the diﬀerence between a compiler” and an interpreter” 4 </s>
<s> explain the diﬀerence between high-level languages and machine language 5 </s>
<s> if you have the source code for a java program and you want to run that program you will need both a compiler and an interpreter </s>
<s> what does the java compiler do and what does the java interpreter do 6 </s>
<s> what is a subroutine 7 </s>
<s> java is an object-oriented programming language </s>
<s> what is an object 8 </s>
<s> what is a variable ( there are four diﬀerent ideas associated with variables in java </s>
<s> try to mention all four aspects in your answer </s>
<s> hint one of the aspects is the variable’s name ) 9 </s>
<s> java is a platform-independent language” what does this mean 10 </s>
<s> what is the internet” give some examples of how it is used ( what kind of services does it provide ) chapter 2 programming in the small i names and things on a basic level ( the level of machine language ) a computer can perform only very simple operations </s>
<s> a computer performs complex tasks by stringing together large numbers of such operations </s>
<s> such tasks must be scripted” in complete and perfect detail by programs </s>
<s> creating complex programs will never be really easy but the diﬃculty can be handled to some extent by giving the program a clear overall structure </s>
<s> the design of the overall structure of a program is what i call programming in the large” programming in the small which is sometimes called coding would then refer to ﬁlling in the details of that design </s>
<s> the details are the explicit step-by-step instructions for performing fairly small-scale tasks </s>
<s> when you do coding you are working fairly close to the machine” with some of the same concepts that you might use in machine language memory locations arithmetic operations loops and branches </s>
<s> in a high-level language such as java you get to work with these concepts on a level several steps above machine language </s>
<s> however you still have to worry about getting all the details exactly right this chapter and the next examine the facilities for programming in the small in the java programming language </s>
<s> don’t be misled by the term programming in the small” into thinking that this material is easy or unimportant </s>
<s> this material is an essential foundation for all types of programming </s>
<s> if you don’t understand it you can’t write programs no matter how good you get at designing their large-scale structure the last section of this chapter discusses programming environments </s>
<s> that section contains information about how to compile and run java programs and you might want to take a look at it before trying to write and use your own programs 21 the basic java application a program is a sequence of instructions that a computer can execute to perform some task </s>
<s> a simple enough idea but for the computer to make any use of the instructions they must be written in a form that the computer can use </s>
<s> this means that programs have to be written in programming languages </s>
<s> programming languages diﬀer from ordinary human languages in being completely unambiguous and very strict about what is and is not allowed in a program </s>
<s> the rules that determine what is allowed are called the syntax of the language syntax rules specify the basic vocabulary of the language and how programs can be constructed using things like loops branches and subroutines </s>
<s> a syntactically correct program is one that 19 20 chapter 2 </s>
<s> names and things can be successfully compiled or interpreted programs that have syntax errors will be rejected ( hopefully with a useful error message that will help you ﬁx the problem ) so to be a successful programmer you have to develop a detailed knowledge of the syntax of the programming language that you are using </s>
<s> however syntax is only part of the story </s>
<s> it’s not enough to write a program that will run—you want a program that will run and produce the correct result! that is the meaning of the program has to be right </s>
<s> the meaning of a program is referred to as its semantics </s>
<s> a semantically correct program is one that does what you want it to furthermore a program can be syntactically and semantically correct but still be a pretty bad program </s>
<s> using the language correctly is not the same as using it well </s>
<s> for example a good program has style” it is written in a way that will make it easy for people to read and to understand </s>
<s> it follows conventions that will be familiar to other programmers </s>
<s> and it has an overall design that will make sense to human readers </s>
<s> the computer is completely oblivious to such things but to a human reader they are paramount </s>
<s> these aspects of programming are sometimes referred to as pragmatics when i introduce a new language feature i will explain the syntax the semantics and some of the pragmatics of that feature </s>
<s> you should memorize the syntax that’s the easy part then you should get a feeling for the semantics by following the examples given making sure that you understand how they work and maybe writing short programs of your own to test your understanding </s>
<s> and you should try to appreciate and absorb the pragmatics—this means learning how to use the language feature well with style that will earn you the admiration of other programmers of course even when you’ve become familiar with all the individual features of the language that doesn’t make you a programmer </s>
<s> you still have to learn how to construct complex programs to solve particular problems </s>
<s> for that you’ll need both experience and taste </s>
<s> you’ll ﬁnd hints about software development throughout this textbook ∗ ∗ ∗ we begin our exploration of java with the problem that has become traditional for such beginnings to write a program that displays the message hello world!” </s>
<s> this might seem like a trivial problem but getting a computer to do this is really a big ﬁrst step in learning a new programming language ( especially if it’s your ﬁrst programming language ) </s>
<s> it means that you understand the basic process of 1 getting the program text into the computer 2 compiling the program and 3 running the compiled program the ﬁrst time through each of these steps will probably take you a few tries to get right </s>
<s> i won’t go into the details here of how you do each of these steps it depends on the particular computer and java programming environment that you are using </s>
<s> see section 26 for information about creating and running java programs in speciﬁc programming environments </s>
<s> but in general you will type the program using some sort of text editor and save the program in a ﬁle then you will use some command to try to compile the ﬁle </s>
<s> you’ll either get a message that the program contains syntax errors or you’ll get a compiled version of the program </s>
<s> in the case of java the program is compiled into java bytecode not into machine language </s>
<s> finally you can run the compiled program by giving some appropriate command </s>
<s> for java you will actually use an interpreter to execute the java bytecode </s>
<s> your programming environment might automate 21 </s>
<s> the basic java application 21 some of the steps for you—for example the compilation step is often done automatically—but you can be sure that the same three steps are being done in the background here is a java program to display the message hello world!” </s>
<s> don’t expect to understand what’s going on here just yet some of it you won’t really understand until a few chapters from now // a program to display the message // hello world! on standard output public class helloworld { public static void main( string[] args ) { systemoutprintln( hello world! ) } } // end of class helloworld the command that actually displays the message is systemoutprintln( hello world! ) this command is an example of a subroutine call statement </s>
<s> it uses a built-in subroutine” named systemoutprintln to do the actual work </s>
<s> recall that a subroutine consists of the instructions for performing some task chunked together and given a name </s>
<s> that name can be used to call” the subroutine whenever that task needs to be performed </s>
<s> a built-in subroutine is one that is already deﬁned as part of the language and therefore automatically available for use in any program when you run this program the message hello world!” ( without the quotes ) will be displayed on standard output </s>
<s> unfortunately i can’t say exactly what that means! java is meant to run on many diﬀerent platforms and standard output will mean diﬀerent things on diﬀerent platforms </s>
<s> however you can expect the message to show up in some convenient place ( if you use a command-line interface like that in oracle’s java development kit you type in a command to tell the computer to run the program </s>
<s> the computer will type the output from the program hello world! on the next line </s>
<s> in an integrated development environment such as eclipse the output might appear somewhere in one of the environment’s windows ) you must be curious about all the other stuﬀ in the above program </s>
<s> part of it consists of comments </s>
<s> comments in a program are entirely ignored by the computer they are there for human readers only </s>
<s> this doesn’t mean that they are unimportant </s>
<s> programs are meant to be read by people as well as by computers and without comments a program can be very diﬃcult to understand </s>
<s> java has two types of comments </s>
<s> the ﬁrst type used in the above program begins with // and extends to the end of a line </s>
<s> the computer ignores the // and everything that follows it on the same line </s>
<s> java has another style of comment that can extend over many lines </s>
<s> that type of comment begins with /* and ends with */ everything else in the program is required by the rules of java syntax </s>
<s> all programming in java is done inside classes” the ﬁrst line in the above program ( not counting the comments ) says that this is a class named helloworld helloworld” the name of the class also serves as the name of the program </s>
<s> not every class is a program </s>
<s> in order to deﬁne a program a class must include a subroutine named main with a deﬁnition that takes the form public static void main( string[] args ) { statements } 22 chapter 2 </s>
<s> names and things when you tell the java interpreter to run the program the interpreter calls this main( ) subroutine and the statements that it contains are executed </s>
<s> these statements make up the script that tells the computer exactly what to do when the program is executed </s>
<s> the main( ) routine can call subroutines that are deﬁned in the same class or even in other classes but it is the main( ) routine that determines how and in what order the other subroutines are used the word public” in the ﬁrst line of main( ) means that this routine can be called from outside the program </s>
<s> this is essential because the main( ) routine is called by the java interpreter which is something external to the program itself </s>
<s> the remainder of the ﬁrst line of the routine is harder to explain at the moment for now just think of it as part of the required syntax the deﬁnition of the subroutine—that is the instructions that say what it does—consists of the sequence of statements” enclosed between braces { and } </s>
<s> here i’ve used statements as a placeholder for the actual statements that make up the program </s>
<s> throughout this textbook i will always use a similar format anything that you see in this style of text ( italic in angle brackets ) is a placeholder that describes something you need to type when you write an actual program as noted above a subroutine can’t exist by itself </s>
<s> it has to be part of a class” </s>
<s> a program is deﬁned by a public class that takes the form public class program-name { optional-variable-declarations-and-subroutines public static void main( string[] args ) { statements } optional-variable-declarations-and-subroutines } the name on the ﬁrst line is the name of the program as well as the name of the class ( remember again that program-name is a placeholder for the actual name! ) if the name of the class is helloworld then the class must be saved in a ﬁle called helloworldjava </s>
<s> when this ﬁle is compiled another ﬁle named helloworldclass will be produced </s>
<s> this class ﬁle helloworldclass contains the translation of the program into java bytecode which can be executed by a java interpreter </s>
<s> helloworldjava is called the source code for the program to execute the program you only need the compiled class ﬁle not the source code the layout of the program on the page such as the use of blank lines and indentation is not part of the syntax or semantics of the language </s>
<s> the computer doesn’t care about layout— you could run the entire program together on one line as far as it is concerned </s>
<s> however layout is important to human readers and there are certain style guidelines for layout that are followed by most programmers </s>
<s> these style guidelines are part of the pragmatics of the java programming language also note that according to the above syntax speciﬁcation a program can contain other subroutines besides main( ) as well as things called variable declarations” you’ll learn more about these later but not until chapter 4 22 variables and the primitive types names are fundamental to programming </s>
<s> in programs names are used to refer to many diﬀerent sorts of things </s>
<s> in order to use those things a programmer must understand the rules 23 22 </s>
<s> variables and types for giving names to things and the rules for using the names to work with those things </s>
<s> that is the programmer must understand the syntax and the semantics of names according to the syntax rules of java a name is a sequence of one or more characters </s>
<s> it must begin with a letter or underscore and must consist entirely of letters digits and underscores ( underscore” refers to the character ’ ’ ) for example here are some legal names n n rate x15 quite a long name helloworld no spaces are allowed in identiﬁers helloworld is a legal identiﬁer but hello world” is not </s>
<s> upper case and lower case letters are considered to be diﬀerent so that helloworld helloworld helloworld and helloworld are all distinct names </s>
<s> certain names are reserved for special uses in java and cannot be used by the programmer for other purposes </s>
<s> these reserved words include class public static if else while and several dozen other words java is actually pretty liberal about what counts as a letter or a digit </s>
<s> java uses the unicode character set which includes thousands of characters from many diﬀerent languages and diﬀerent alphabets and many of these characters count as letters or digits </s>
<s> however i will be sticking to what can be typed on a regular english keyboard the pragmatics of naming includes style guidelines about how to choose names for things for example it is customary for names of classes to begin with upper case letters while names of variables and of subroutines begin with lower case letters you can avoid a lot of confusion by following the same convention in your own programs </s>
<s> most java programmers do not use underscores in names although some do use them at the beginning of the names of certain kinds of variables </s>
<s> when a name is made up of several words such as helloworld or interestrate it is customary to capitalize each word except possibly the ﬁrst this is sometimes referred to as camel case since the upper case letters in the middle of a name are supposed to look something like the humps on a camel’s back finally i’ll note that things are often referred to by compound names which consist of several ordinary names separated by periods ( compound names are also called qualiﬁed names ) you’ve already seen an example systemoutprintln </s>
<s> the idea here is that things in java can contain other things </s>
<s> a compound name is a kind of path to an item through one or more levels of containment </s>
<s> the name systemoutprintln indicates that something called system” contains something called out” which in turn contains something called println” non-compound names are called simple identiﬁers </s>
<s> i’ll use the term identiﬁer to refer to any name—simple or compound—that can be used to refer to something in java ( note that the reserved words are not identiﬁers since they can’t be used as names for things ) 221 variables programs manipulate data that are stored in memory </s>
<s> in machine language data can only be referred to by giving the numerical address of the location in memory where it is stored in a high-level language such as java names are used instead of numbers to refer to data </s>
<s> it is the job of the computer to keep track of where in memory the data is actually stored the programmer only has to remember the name </s>
<s> a name used in this way—to refer to data stored in memory—is called a variable variables are actually rather subtle </s>
<s> properly speaking a variable is not a name for the data itself but for a location in memory that can hold data </s>
<s> you should think of a variable as a container or box where you can store data that you will need to use later </s>
<s> the variable refers directly to the box and only indirectly to the data in the box </s>
<s> since the data in the box can 24 chapter 2 </s>
<s> names and things change a variable can refer to diﬀerent data values at diﬀerent times during the execution of the program but it always refers to the same box </s>
<s> confusion can arise especially for beginning programmers because when a variable is used in a program in certain ways it refers to the container but when it is used in other ways it refers to the data in the container </s>
<s> you’ll see examples of both cases below ( in this way a variable is something like the title the president of the united states” this title can refer to diﬀerent people at diﬀerent times but it always refers to the same oﬃce if i say the president is playing basketball” i mean that barack obama is playing basketball but if i say sarah palin wants to be president” i mean that she wants to ﬁll the oﬃce not that she wants to be barack obama ) in java the only way to get data into a variable—that is into the box that the variable names—is with an assignment statement </s>
<s> an assignment statement takes the form variable = expression where expression represents anything that refers to or computes a data value </s>
<s> when the computer comes to an assignment statement in the course of executing a program it evaluates the expression and puts the resulting data value into the variable </s>
<s> for example consider the simple assignment statement rate = 007 the variable in this assignment statement is rate and the expression is the number 007 the computer executes this assignment statement by putting the number 007 in the variable rate replacing whatever was there before </s>
<s> now consider the following more complicated assignment statement which might come later in the same program interest = rate * principal here the value of the expression rate * principal” is being assigned to the variable interest </s>
<s> in the expression the * is a multiplication operator” that tells the computer to multiply rate times principal </s>
<s> the names rate and principal are themselves variables and it is really the values stored in those variables that are to be multiplied </s>
<s> we see that when a variable is used in an expression it is the value stored in the variable that matters in this case the variable seems to refer to the data in the box rather than to the box itself </s>
<s> when the computer executes this assignment statement it takes the value of rate multiplies it by the value of principal and stores the answer in the box referred to by interest </s>
<s> when a variable is used on the left-hand side of an assignment statement it refers to the box that is named by the variable ( note by the way that an assignment statement is a command that is executed by the computer at a certain time </s>
<s> it is not a statement of fact </s>
<s> for example suppose a program includes the statement rate = 007” </s>
<s> if the statement interest = rate * principal” is executed later in the program can we say that the principal is multiplied by 007 no! the value of rate might have been changed in the meantime by another statement </s>
<s> the meaning of an assignment statement is completely diﬀerent from the meaning of an equation in mathematics even though both use the symbol =” ) 222 types and literals a variable in java is designed to hold only one particular type of data it can legally hold that type of data and no other </s>
<s> the compiler will consider it to be a syntax error if you try to violate this rule </s>
<s> we say that java is a strongly typed language because it enforces this rule 22 </s>
<s> variables and types 25 there are eight so-called primitive types built into java </s>
<s> the primitive types are named byte short int long ﬂoat double char and boolean </s>
<s> the ﬁrst four types hold integers ( whole numbers such as 17 -38477 and 0 ) </s>
<s> the four integer types are distinguished by the ranges of integers they can hold </s>
<s> the ﬂoat and double types hold real numbers ( such as 36 and -14599 ) </s>
<s> again the two real types are distinguished by their range and accuracy </s>
<s> a variable of type char holds a single character from the unicode character set </s>
<s> and a variable of type boolean holds one of the two logical values true or false any data value stored in the computer’s memory must be represented as a binary number that is as a string of zeros and ones </s>
<s> a single zero or one is called a bit </s>
<s> a string of eight bits is called a byte </s>
<s> memory is usually measured in terms of bytes </s>
<s> not surprisingly the byte data type refers to a single byte of memory </s>
<s> a variable of type byte holds a string of eight bits which can represent any of the integers between -128 and 127 inclusive ( there are 256 integers in that range eight bits can represent 256—two raised to the power eight—diﬀerent values ) as for the other integer types • short corresponds to two bytes ( 16 bits ) </s>
<s> variables of type short have values in the range -32768 to 32767 • int corresponds to four bytes ( 32 bits ) </s>
<s> variables of type int have values in the range -2147483648 to 2147483647 • long corresponds to eight bytes ( 64 bits ) </s>
<s> variables of type long have values in the range -9223372036854775808 to 9223372036854775807 you don’t have to remember these numbers but they do give you some idea of the size of integers that you can work with </s>
<s> usually for representing integer data you should just stick to the int data type which is good enough for most purposes the ﬂoat data type is represented in four bytes of memory using a standard method for encoding real numbers </s>
<s> the maximum value for a ﬂoat is about 10 raised to the power 38 a ﬂoat can have about 7 signiﬁcant digits ( so that 323989231134 and 323989234399 would both have to be rounded oﬀ to about 32398923 in order to be stored in a variable of type ﬂoat ) a double takes up 8 bytes can range up to about 10 to the power 308 and has about 15 signiﬁcant digits </s>
<s> ordinarily you should stick to the double type for real values a variable of type char occupies two bytes in memory </s>
<s> the value of a char variable is a single character such as a * x or a space character </s>
<s> the value can also be a special character such a tab or a carriage return or one of the many unicode characters that come from diﬀerent languages </s>
<s> when a character is typed into a program it must be surrounded by single quotes for example ’a’ ’*’ or ’x’ </s>
<s> without the quotes a would be an identiﬁer and * would be a multiplication operator </s>
<s> the quotes are not part of the value and are not stored in the variable they are just a convention for naming a particular character constant in a program a name for a constant value is called a literal </s>
<s> a literal is what you have to type in a program to represent a value ’a’ and ’*’ are literals of type char representing the character values a and * </s>
<s> certain special characters have special literals that use a backslash as an escape character” </s>
<s> in particular a tab is represented as ’t’ a carriage return as ’r’ a linefeed as ’n’ the single quote character as ’ and the backslash itself as </s>
<s> note that even though you type two characters between the quotes in ’t’ the value represented by this literal is a single tab character numeric literals are a little more complicated than you might expect </s>
<s> of course there are the obvious literals such as 317 and 1742 </s>
<s> but there are other possibilities for expressing numbers in a java program </s>
<s> first of all real numbers can be represented in an exponential 26 chapter 2 </s>
<s> names and things form such as 13e12 or 123737e-108 </s>
<s> the e12” and e-108” represent powers of 10 so that 13e12 means 13 times 1012 and 123737e-108 means 123737 times 10−108 </s>
<s> this format can be used to express very large and very small numbers </s>
<s> any numerical literal that contains a decimal point or exponential is a literal of type double </s>
<s> to make a literal of type ﬂoat you have to append an f” or f” to the end of the number </s>
<s> for example 12f” stands for 12 considered as a value of type ﬂoat ( occasionally you need to know this because the rules of java say that you can’t assign a value of type double to a variable of type ﬂoat so you might be confronted with a ridiculous-seeming error message if you try to do something like x = 12” when x is a variable of type ﬂoat </s>
<s> you have to say x = 12f </s>
<s> this is one reason why i advise sticking to type double for real numbers ) even for integer literals there are some complications </s>
<s> ordinary integers such as 177777 and -32 are literals of type byte short or int depending on their size </s>
<s> you can make a literal of type long by adding l” as a suﬃx </s>
<s> for example 17l or 728476874368l </s>
<s> as another complication java allows octal ( base-8 ) and hexadecimal ( base-16 ) literals </s>
<s> i don’t want to cover base-8 and base-16 in detail but in case you run into them in other people’s programs it’s worth knowing a few things octal numbers use only the digits 0 through 7 </s>
<s> in java a numeric literal that begins with a 0 is interpreted as an octal number for example the literal 045 represents the number 37 not the number 45 </s>
<s> hexadecimal numbers use 16 digits the usual digits 0 through 9 and the letters a b c d e and f </s>
<s> upper case and lower case letters can be used interchangeably in this context </s>
<s> the letters represent the numbers 10 through 15 in java a hexadecimal literal begins with 0x or 0x as in 0x45 or 0xff7a hexadecimal numbers are also used in character literals to represent arbitrary unicode characters </s>
<s> a unicode literal consists of u followed by four hexadecimal digits </s>
<s> for example the character literal ’u00e9’ represents the unicode character that is an e” with an acute accent java 7 introduces a couple of minor improvements in numeric literals </s>
<s> first of all numeric literals in java 7 can include the underscore character ( ” ) which can be used to separate groups of digits </s>
<s> for example the integer constant for one billion could be written 1 000 000 000 which is a good deal easier to decipher than 1000000000 </s>
<s> there is no rule about how many digits have to be in each group </s>
<s> java 7 also supports binary numbers using the digits 0 and 1 and the preﬁx 0b ( or ob ) </s>
<s> for example 0b10110 or 0b1010 1100 1011 for the type boolean there are precisely two literals true and false </s>
<s> these literals are typed just as i’ve written them here without quotes but they represent values not variables boolean values occur most often as the values of conditional expressions </s>
<s> for example rate > 005 is a boolean-valued expression that evaluates to true if the value of the variable rate is greater than 005 and to false if the value of rate is not greater than 005 </s>
<s> as you’ll see in chapter 3 boolean-valued expressions are used extensively in control structures </s>
<s> of course boolean values can also be assigned to variables of type boolean java has other types in addition to the primitive types but all the other types represent objects rather than primitive” data values </s>
<s> for the most part we are not concerned with objects for the time being </s>
<s> however there is one predeﬁned object type that is very important the type string </s>
<s> a string is a sequence of characters </s>
<s> you’ve already seen a string literal hello world! </s>
<s> the double quotes are part of the literal they have to be typed in the program </s>
<s> however they are not part of the actual string value which consists of just the characters between the quotes </s>
<s> within a string special characters can be represented using the backslash notation </s>
<s> within this context the double quote is itself a special character </s>
<s> for 22 </s>
<s> variables and types 27 example to represent the string value i said are you listening! with a linefeed at the end you would have to type the string literal i said are you listening!n you can also use t r and unicode sequences such as u00e9 to represent other special characters in string literals </s>
<s> because strings are objects their behavior in programs is peculiar in some respects ( to someone who is not used to objects ) </s>
<s> i’ll have more to say about them in the next section 223 variables in programs a variable can be used in a program only if it has ﬁrst been declared </s>
<s> a variable declaration statement is used to declare one or more variables and to give them names </s>
<s> when the computer executes a variable declaration it sets aside memory for the variable and associates the variable’s name with that memory </s>
<s> a simple variable declaration takes the form type-name variable-name-or-names the variable-name-or-names can be a single variable name or a list of variable names separated by commas ( we’ll see later that variable declaration statements can actually be somewhat more complicated than this ) good programming style is to declare only one variable in a declaration statement unless the variables are closely related in some way </s>
<s> for example int numberofstudents string name double x y boolean isfinished char firstinitial middleinitial lastinitial it is also good style to include a comment with each variable declaration to explain its purpose in the program or to give other information that might be useful to a human reader for example double principal // amount of money invested double interestrate // rate as a decimal not percentage in this chapter we will only use variables declared inside the main( ) subroutine of a program </s>
<s> variables declared inside a subroutine are called local variables for that subroutine they exist only inside the subroutine while it is running and are completely inaccessible from outside </s>
<s> variable declarations can occur anywhere inside the subroutine as long as each variable is declared before it is used in any expression </s>
<s> some people like to declare all the variables at the beginning of the subroutine </s>
<s> others like to wait to declare a variable until it is needed </s>
<s> my preference declare important variables at the beginning of the subroutine and use a comment to explain the purpose of each variable </s>
<s> declare utility variables” which are not important to the overall logic of the subroutine at the point in the subroutine where they are ﬁrst used </s>
<s> here is a simple program using some variables and assignment statements /** * this class implements a simple program that * will compute the amount of interest that is * earned on $17000 invested at an interest * rate of 007 for one year </s>
<s> the interest and 28 chapter 2 </s>
<s> names and things * the value of the investment after one year are * printed to standard output */ public class interest { public static void main( string[] args ) { /* declare the variables */ double principal double rate double interest // the value of the investment // the annual interest rate // interest earned in one year /* do the computations */ principal = 17000 rate = 007 interest = principal * rate // compute the interest principal = principal + interest // compute value of investment after one year with interest // ( note the new value replaces the old value of principal ) /* output the results */ systemoutprint( the interest earned is $ ) systemoutprintln( interest ) systemoutprint( the value of the investment after one year is $ ) systemoutprintln( principal ) } // end of main( ) } // end of class interest this program uses several subroutine call statements to display information to the user of the program </s>
<s> two diﬀerent subroutines are used systemoutprint and systemoutprintln the diﬀerence between these is that systemoutprintln adds a linefeed after the end of the information that it displays while systemoutprint does not </s>
<s> thus the value of interest which is displayed by the subroutine call systemoutprintln( interest )” follows on the same line after the string displayed by the previous systemoutprint statement </s>
<s> note that the value to be displayed by systemoutprint or systemoutprintln is provided in parentheses after the subroutine name </s>
<s> this value is called a parameter to the subroutine </s>
<s> a parameter provides a subroutine with information it needs to perform its task </s>
<s> in a subroutine call statement any parameters are listed in parentheses after the subroutine name </s>
<s> not all subroutines have parameters </s>
<s> if there are no parameters in a subroutine call statement the subroutine name must be followed by an empty pair of parentheses all the sample programs for this textbook are available in separate source code ﬁles in the on-line version of this text at http//mathhwsedu/javanotes/source </s>
<s> they are also included in the downloadable archives of the web site </s>
<s> the source code for the interest program for example can be found in the ﬁle interestjava 23 strings objects enums and subroutines the previous section introduced the eight primitive data types and the type string there is a fundamental diﬀerence between the primitive types and the string type values of type 29 23 </s>
<s> objects and subroutines string are objects </s>
<s> while we will not study objects in detail until chapter 5 it will be useful for you to know a little about them and about a closely related topic classes </s>
<s> this is not just because strings are useful but because objects and classes are essential to understanding another important programming concept subroutines another reason for considering classes and objects at this point is so that we can introduce enums </s>
<s> an enum is a data type that can be created by a java programmer to represent a small collection of possible values </s>
<s> technically an enum is a class and its possible values are objects </s>
<s> enums will be our ﬁrst example of adding a new type to the java language </s>
<s> we will look at them later in this section 231 built-in subroutines and functions recall that a subroutine is a set of program instructions that have been chunked together and given a name </s>
<s> in chapter 4 you’ll learn how to write your own subroutines but you can get a lot done in a program just by calling subroutines that have already been written for you </s>
<s> in java every subroutine is contained in a class or in an object </s>
<s> some classes that are standard parts of the java language contain predeﬁned subroutines that you can use </s>
<s> a value of type string which is an object contains subroutines that can be used to manipulate that string </s>
<s> these subroutines are built into” the java language </s>
<s> you can call all these subroutines without understanding how they were written or how they work </s>
<s> indeed that’s the whole point of subroutines a subroutine is a black box” which can be used without knowing what goes on inside classes in java have two very diﬀerent functions </s>
<s> first of all a class can group together variables and subroutines that are contained in that class </s>
<s> these variables and subroutines are called static members of the class </s>
<s> you’ve seen one example in a class that deﬁnes a program the main( ) routine is a static member of the class </s>
<s> the parts of a class deﬁnition that deﬁne static members are marked with the reserved word static” just like the main( ) routine of a program </s>
<s> however classes have a second function </s>
<s> they are used to describe objects </s>
<s> in this role the class of an object speciﬁes what subroutines and variables are contained in that object </s>
<s> the class is a type—in the technical sense of a speciﬁcation of a certain type of data value—and the object is a value of that type </s>
<s> for example string is actually the name of a class that is included as a standard part of the java language </s>
<s> string is also a type and literal strings such as hello world represent values of type string so every subroutine is contained either in a class or in an object </s>
<s> classes contain subroutines which are called static member subroutines </s>
<s> classes also describe objects and the subroutines that are contained in those objects this dual use can be confusing and in practice most classes are designed to perform primarily or exclusively in only one of the two possible roles </s>
<s> for example although the string class does contain a few rarely-used static member subroutines it exists mainly to specify a large number of subroutines that are contained in objects of type string </s>
<s> another standard class named math exists entirely to group together a number of static member subroutines that compute various common mathematical functions ∗ ∗ ∗ to begin to get a handle on all of this complexity let’s look at the subroutine systemoutprint as an example </s>
<s> as you have seen earlier in this chapter this subroutine is used to display information to the user </s>
<s> for example systemoutprint( hello world ) displays the message hello world 30 chapter 2 </s>
<s> names and things system is one of java’s standard classes </s>
<s> one of the static member variables in this class is named out </s>
<s> since this variable is contained in the class system its full name—which you have to use to refer to it in your programs—is systemout </s>
<s> the variable systemout refers to an object and that object in turn contains a subroutine named print </s>
<s> the compound identiﬁer systemoutprint refers to the subroutine print in the object out in the class system ( as an aside i will note that the object referred to by systemout is an object of the class printstream </s>
<s> printstream is another class that is a standard part of java </s>
<s> any object of type printstream is a destination to which information can be printed any object of type printstream has a print subroutine that can be used to send information to that destination </s>
<s> the object systemout is just one possible destination and systemoutprint is the subroutine that sends information to that particular destination </s>
<s> other objects of type printstream might send information to other destinations such as ﬁles or across a network to other computers </s>
<s> this is object-oriented programming many diﬀerent things which have something in common—they can all be used as destinations for information—can all be used in the same way—through a print subroutine </s>
<s> the printstream class expresses the commonalities among all these objects ) since class names and variable names are used in similar ways it might be hard to tell which is which </s>
<s> remember that all the built-in predeﬁned names in java follow the rule that class names begin with an upper case letter while variable names begin with a lower case letter </s>
<s> while this is not a formal syntax rule i strongly recommend that you follow it in your own programming </s>
<s> subroutine names should also begin with lower case letters </s>
<s> there is no possibility of confusing a variable with a subroutine since a subroutine name in a program is always followed by a left parenthesis as one ﬁnal general note you should be aware that subroutines in java are often referred to as methods </s>
<s> generally the term method” means a subroutine that is contained in a class or in an object </s>
<s> since this is true of every subroutine in java every subroutine in java is a method ( with one very technical exception ) </s>
<s> the same is not true for other programming languages nevertheless the term method” is mostly used in the context of object-oriented programming and until we start doing real object-oriented programming in chapter 5 i will prefer to use the more general term subroutine” however i should note that some people prefer to use the term method” from the beginning ∗ ∗ ∗ classes can contain static member subroutines as well as static member variables </s>
<s> for example the system class contains a subroutine named exit </s>
<s> in a program of course this subroutine must be referred to as systemexit </s>
<s> calling this subroutine will terminate the program </s>
<s> you could use it if you had some reason to terminate the program before the end of the main routine </s>
<s> for historical reasons this subroutine takes an integer as a parameter so the subroutine call statement might look like systemexit( 0 )” or systemexit( 1 )” ( the parameter tells the computer why the program was terminated </s>
<s> a parameter value of 0 indicates that the program ended normally </s>
<s> any other value indicates that the program was terminated because an error was detected </s>
<s> but in practice the value of the parameter is usually ignored ) every subroutine performs some speciﬁc task </s>
<s> for some subroutines that task is to compute or retrieve some data value </s>
<s> subroutines of this type are called functions </s>
<s> we say that a function returns a value </s>
<s> generally the returned value is meant to be used somehow in the program you are familiar with the mathematical function that computes the square root of a number </s>
<s> java has a corresponding function called mathsqrt </s>
<s> this function is a static member 31 23 </s>
<s> objects and subroutines subroutine of the class named math </s>
<s> if x is any numerical value then mathsqrt( x ) computes and returns the square root of that value </s>
<s> since mathsqrt( x ) represents a value it doesn’t make sense to put it on a line by itself in a subroutine call statement such as mathsqrt( x ) // this doesn’t make sense! what after all would the computer do with the value computed by the function in this case you have to tell the computer to do something with the value </s>
<s> you might tell the computer to display it systemoutprint( mathsqrt( x ) ) // display the square root of x or you might use an assignment statement to tell the computer to store that value in a variable lengthofside = mathsqrt( x ) the function call mathsqrt( x ) represents a value of type double and it can be used anyplace where a numeric literal of type double could be used the math class contains many static member functions </s>
<s> here is a list of some of the more important of them • mathabs( x ) which computes the absolute value of x • the usual trigonometric functions mathsin( x ) mathcos( x ) and mathtan( x ) ( for all the trigonometric functions angles are measured in radians not degrees ) • the inverse trigonometric functions arcsin arccos and arctan which are written as mathasin( x ) mathacos( x ) and mathatan( x ) </s>
<s> the return value is expressed in radians not degrees • the exponential function mathexp( x ) for computing the number e raised to the power x and the natural logarithm function mathlog( x ) for computing the logarithm of x in the base e • mathpow( xy ) for computing x raised to the power y • mathfloor( x ) which rounds x down to the nearest integer value that is less than or equal to x </s>
<s> even though the return value is mathematically an integer it is returned as a value of type double rather than of type int as you might expect </s>
<s> for example mathfloor( 376 ) is 30 </s>
<s> the function mathround( x ) returns the integer that is closest to x • mathrandom( ) which returns a randomly chosen double in the range 00 <= mathrandom( ) < 10 ( the computer actually calculates so-called pseudorandom” numbers which are not truly random but are random enough for most purposes ) for these functions the type of the parameter—the x or y inside the parentheses—can be any value of any numeric type </s>
<s> for most of the functions the value returned by the function is of type double no matter what the type of the parameter </s>
<s> however for mathabs( x ) the value returned will be the same type as x if x is of type int then so is mathabs( x ) </s>
<s> so for example while mathsqrt( 9 ) is the double value 30 mathabs( 9 ) is the int value 9 note that mathrandom( ) does not have any parameter </s>
<s> you still need the parentheses even though there’s nothing between them </s>
<s> the parentheses let the computer know that this is a subroutine rather than a variable </s>
<s> another example of a subroutine that has no parameters is the function systemcurrenttimemillis( ) from the system class </s>
<s> when this function is executed it retrieves the current time expressed as the number of milliseconds that have passed since a standardized base time ( the start of the year 1970 in greenwich mean time if you care ) </s>
<s> one 32 chapter 2 </s>
<s> names and things millisecond is one-thousandth of a second </s>
<s> the return value of systemcurrenttimemillis( ) is of type long ( a 64-bit integer ) </s>
<s> this function can be used to measure the time that it takes the computer to perform a task </s>
<s> just record the time at which the task is begun and the time at which it is ﬁnished and take the diﬀerence here is a sample program that performs a few mathematical tasks and reports the time that it takes for the program to run </s>
<s> on some computers the time reported might be zero because it is too small to measure in milliseconds </s>
<s> even if it’s not zero you can be sure that most of the time reported by the computer was spent doing output or working on tasks other than the program since the calculations performed in this program occupy only a tiny fraction of a second of a computer’s time /** * this program performs some mathematical computations and displays * the results </s>
<s> it then reports the number of seconds that the * computer spent on this task */ public class timedcomputation { public static void main( string[] args ) { long starttime // starting time of program in milliseconds long endtime // time when computations are done in milliseconds double time // time difference in seconds starttime = systemcurrenttimemillis( ) double width height hypotenuse // sides of a triangle width = 420 height = 170 hypotenuse = mathsqrt( width*width + height*height ) systemoutprint( a triangle with sides 42 and 17 has hypotenuse ) systemoutprintln( hypotenuse ) systemoutprintln( nmathematically sin( x )*sin( x ) + + cos( x )*cos( x ) - 1 should be 0 ) systemoutprintln( let’s check this for x = 1 ) systemoutprint( sin( 1 )*sin( 1 ) + cos( 1 )*cos( 1 ) - 1 is ) systemoutprintln( mathsin( 1 )*mathsin( 1 ) + mathcos( 1 )*mathcos( 1 ) - 1 ) systemoutprintln( ( there can be round-off errors when + computing with real numbers! ) ) systemoutprint( nhere is a random number systemoutprintln( mathrandom( ) ) ) endtime = systemcurrenttimemillis( ) time = ( endtime - starttime ) / 10000 systemoutprint( nrun time in seconds was systemoutprintln( time ) } // end main( ) } // end class timedcomputation ) 23 </s>
<s> objects and subroutines 232 33 operations on strings a value of type string is an object </s>
<s> that object contains data namely the sequence of characters that make up the string </s>
<s> it also contains subroutines </s>
<s> all of these subroutines are in fact functions </s>
<s> for example every string object contains a function named length that computes the number of characters in that string </s>
<s> suppose that advice is a variable that refers to a string </s>
<s> for example advice might have been declared and assigned a value as follows string advice advice = seize the day! then advicelength( ) is a function call that returns the number of characters in the string seize the day!” </s>
<s> in this case the return value would be 14 </s>
<s> in general for any string variable str the value of strlength( ) is an int equal to the number of characters in the string that is the value of str </s>
<s> note that this function has no parameter the particular string whose length is being computed is the value of str </s>
<s> the length subroutine is deﬁned by the class string and it can be used with any value of type string </s>
<s> it can even be used with string literals which are after all just constant values of type string </s>
<s> for example you could have a program count the characters in hello world” for you by saying systemoutprint( the number of characters in ) systemoutprint( the string hello world is ) systemoutprintln( hello worldlength( ) ) the string class deﬁnes a lot of functions </s>
<s> here are some that you might ﬁnd useful </s>
<s> assume that s1 and s2 refer to values of type string • s1equals( s2 ) is a function that returns a boolean value </s>
<s> it returns true if s1 consists of exactly the same sequence of characters as s2 and returns false otherwise • s1equalsignorecase( s2 ) is another boolean-valued function that checks whether s1 is the same string as s2 but this function considers upper and lower case letters to be equivalent </s>
<s> thus if s1 is cat” then s1equals( cat ) is false while s1equalsignorecase( cat ) is true • s1length( ) as mentioned above is an integer-valued function that gives the number of characters in s1 • s1charat( n ) where n is an integer returns a value of type char </s>
<s> it returns the nth character in the string </s>
<s> positions are numbered starting with 0 so s1charat( 0 ) is actually the ﬁrst character s1charat( 1 ) is the second and so on </s>
<s> the ﬁnal position is s1length( ) - 1 </s>
<s> for example the value of catcharat( 1 ) is ’a’ </s>
<s> an error occurs if the value of the parameter is less than zero or greater than s1length( ) - 1 • s1substring( nm ) where n and m are integers returns a value of type string </s>
<s> the returned value consists of the characters of s1 in positions n n+1 m-1 </s>
<s> note that the character in position m is not included </s>
<s> the returned value is called a substring of s1 </s>
<s> the subroutine s1substring( n ) returns the substring of s1 consisting of characters starting at position n up until the end of the string • s1indexof( s2 ) returns an integer </s>
<s> if s2 occurs as a substring of s1 then the returned value is the starting position of that substring </s>
<s> otherwise the returned value is -1 </s>
<s> you can also use s1indexof( ch ) to search for a particular character ch in s1 </s>
<s> to ﬁnd the ﬁrst occurrence of x at or after position n you can use s1indexof( xn ) 34 chapter 2 </s>
<s> names and things • s1compareto( s2 ) is an integer-valued function that compares the two strings </s>
<s> if the strings are equal the value returned is zero </s>
<s> if s1 is less than s2 the value returned is a number less than zero and if s1 is greater than s2 the value returned is some number greater than zero ( if both of the strings consist entirely of lower case letters or if they consist entirely of upper case letters then less than” and greater than” refer to alphabetical order </s>
<s> otherwise the ordering is more complicated ) • s1touppercase( ) is a string -valued function that returns a new string that is equal to s1 except that any lower case letters in s1 have been converted to upper case </s>
<s> for example cattouppercase( ) is the string cat </s>
<s> there is also a function s1tolowercase( ) • s1trim( ) is a string -valued function that returns a new string that is equal to s1 except that any non-printing characters such as spaces and tabs have been trimmed from the beginning and from the end of the string </s>
<s> thus if s1 has the value fred then s1trim( ) is the string fred with the spaces at the end removed for the functions s1touppercase( ) s1tolowercase( ) and s1trim( ) note that the value of s1 is not modiﬁed </s>
<s> instead a new string is created and returned as the value of the function </s>
<s> the returned value could be used for example in an assignment statement such as smallletters = s1tolowercase( )” </s>
<s> to change the value of s1 you could use an assignment s1 = s1tolowercase( )” ∗ ∗ ∗ here is another extremely useful fact about strings you can use the plus operator + to concatenate two strings </s>
<s> the concatenation of two strings is a new string consisting of all the characters of the ﬁrst string followed by all the characters of the second string </s>
<s> for example hello + world evaluates to helloworld ( gotta watch those spaces of course—if you want a space in the concatenated string it has to be somewhere in the input data as in hello + world ) et’s suppose that name is a variable of type string and that it already refers to the name of the person using the program </s>
<s> then the program could greet the user by executing the statement systemoutprintln( hello + name + pleased to meet you! ) even more surprising is that you can actually concatenate values of any type onto a string using the + operator </s>
<s> the value is converted to a string just as it would be if you printed it to the standard output and then it is concatenated onto the string </s>
<s> for example the expression number + 42 evaluates to the string number42 </s>
<s> and the statements systemoutprint( after ) systemoutprint( years ) systemoutprint( years the value is ) systemoutprint( principal ) can be replaced by the single statement systemoutprint( after + years + years the value is + principal ) obviously this is very convenient </s>
<s> it would have shortened some of the examples presented earlier in this chapter 35 23 </s>
<s> objects and subroutines 233 introduction to enums java comes with eight built-in primitive types and a large set of types that are deﬁned by classes such as string </s>
<s> but even this large collection of types is not suﬃcient to cover all the possible situations that a programmer might have to deal with </s>
<s> so an essential part of java just like almost any other programming language is the ability to create new types </s>
<s> for the most part this is done by deﬁning new classes you will learn how to do that in chapter 5 </s>
<s> but we will look here at one particular case the ability to deﬁne enums ( short for enumerated types ) </s>
<s> enums are a recent addition to java </s>
<s> they were only added in version 50 </s>
<s> many programming languages have something similar and many people believe that enums should have been part of java from the beginning technically an enum is considered to be a special kind of class but that is not important for now </s>
<s> in this section we will look at enums in a simpliﬁed form </s>
<s> in practice most uses of enums will only need the simpliﬁed form that is presented here an enum is a type that has a ﬁxed list of possible values which is speciﬁed when the enum is created </s>
<s> in some ways an enum is similar to the boolean data type which has true and false as its only possible values </s>
<s> however boolean is a primitive type while an enum is not the deﬁnition of an enum type has the ( simpliﬁed ) form enum enum-type-name { list-of-enum-values } this deﬁnition cannot be inside a subroutine </s>
<s> you can place it outside the main( ) routine of the program </s>
<s> the enum-type-name can be any simple identiﬁer </s>
<s> this identiﬁer becomes the name of the enum type in the same way that boolean” is the name of the boolean type and string” is the name of the string type </s>
<s> each value in the list-of-enum-values must be a simple identiﬁer and the identiﬁers in the list are separated by commas </s>
<s> for example here is the deﬁnition of an enum type named season whose values are the names of the four seasons of the year enum season { spring summer fall winter } by convention enum values are given names that are made up of upper case letters but that is a style guideline and not a syntax rule </s>
<s> enum values are not variables </s>
<s> each value is a constant that always has the same value </s>
<s> in fact the possible values of an enum type are usually referred to as enum constants note that the enum constants of type season are considered to be contained in” season which means—following the convention that compound identiﬁers are used for things that are contained in other things—the names that you actually use in your program to refer to them are seasonspring seasonsummer seasonfall and seasonwinter once an enum type has been created it can be used to declare variables in exactly the same ways that other types are used </s>
<s> for example you can declare a variable named vacation of type season with the statement season vacation after declaring the variable you can assign a value to it using an assignment statement </s>
<s> the value on the right-hand side of the assignment can be one of the enum constants of type season remember to use the full name of the constant including season”! for example vacation = seasonsummer you can print out an enum value with an output statement such as systemoutprint( vacation ) the output value will be the name of the enum constant ( without the season” ) </s>
<s> in this case the output would be summer” 36 chapter 2 </s>
<s> names and things because an enum is technically a class the enum values are technically objects </s>
<s> as objects they can contain subroutines </s>
<s> one of the subroutines in every enum value is named ordinal( ) </s>
<s> when used with an enum value it returns the ordinal number of the value in the list of values of the enum </s>
<s> the ordinal number simply tells the position of the value in the list </s>
<s> that is seasonspringordinal( ) is the int value 0 seasonsummerordinal( ) is 1 seasonfallordinal( ) is 2 and seasonwinterordinal( ) is 3 ( you will see over and over again that computer scientists like to start counting at zero! ) you can of course use the ordinal( ) method with a variable of type season such as vacationordinal( ) in our example right now it might not seem to you that enums are all that useful </s>
<s> as you work though the rest of the book you should be convinced that they are </s>
<s> for now you should at least appreciate them as the ﬁrst example of an important concept creating new types </s>
<s> here is a little example that shows enums being used in a complete program public class enumdemo { // define two enum types -- remember that the definitions // go outside the main( ) routine! enum day { sunday monday tuesday wednesday thursday friday saturday } enum month { jan feb mar apr may jun jul aug sep oct nov dec } public static void main( string[] args ) { day tgif month libra // declare a variable of type day // declare a variable of type month tgif = dayfriday libra = monthoct // assign a value of type day to tgif // assign a value of type month to libra systemoutprint( my sign is libra since i was born in ) systemoutprintln( libra ) // output value will be oct systemoutprint( that’s the ) systemoutprint( libraordinal( ) ) systemoutprintln( -th month of the year ) systemoutprintln( ( counting from 0 of course! ) ) systemoutprint( isn’t it nice to get to ) systemoutprintln( tgif ) // output value will be friday systemoutprintln( tgif + is the + tgifordinal( ) + -th day of the week ) // you can concatenate enum values onto strings! } } 24 for text input and output some unfathomable reason java has never made it very easy to read data typed in by the user of a program </s>
<s> you’ve already seen that output can be displayed to the user using the subroutine systemoutprint </s>
<s> this subroutine is part of a pre-deﬁned object called systemout </s>
<s> the purpose of this object is precisely to display output to the user </s>
<s> there is 24 </s>
<s> text input and output 37 a corresponding object called systemin that exists to read data input by the user but it provides only very primitive input facilities and it requires some advanced java programming skills to use it eﬀectively java 50 ﬁnally made input from any source a little easier with a new scanner class </s>
<s> however it requires some knowledge of object-oriented programming to use this class so it’s not appropriate for use here at the beginning of this course </s>
<s> java 6 introduced the console class speciﬁcally for communicating with the user but again using console requires more knowledge about objects than you have at this point ( furthermore in my opinion scanner and console still don’t get things quite right </s>
<s> nevertheless i will introduce scanner brieﬂy at the end of this section in case you want to start using it now ) there is some excuse for this lack of concern with input since java is meant mainly to write programs for graphical user interfaces and those programs have their own style of input/output which is implemented quite well in java </s>
<s> however basic support is needed for input/output in old-fashioned non-gui programs </s>
<s> fortunately it is possible to extend java by creating new classes that provide subroutines that are not available in the standard part of the language </s>
<s> as soon as a new class is available the subroutines that it contains can be used in exactly the same way as built-in routines along these lines i’ve written a class called textio that deﬁnes subroutines for reading values typed by the user of a non-gui program </s>
<s> the subroutines in this class make it possible to get input from the standard input object systemin without knowing about the advanced aspects of java that are needed to use scanner or to use systemin directly </s>
<s> textio also contains a set of output subroutines </s>
<s> the output subroutines are similar to those provided in systemout but they provide a few additional features </s>
<s> for displaying output to the user you can use either systemout or textio and you can even mix them in the same program to use the textio class you must make sure that the class is available to your program what this means depends on the java programming environment that you are using </s>
<s> in general you just have to add the source code ﬁle textiojava to the same directory that contains your main program </s>
<s> see section 26 for more information about how to use textio 241 a first text input example the input routines in the textio class are static member functions ( static member functions were introduced in the previous section ) let’s suppose that you want your program to read an integer typed in by the user </s>
<s> the textio class contains a static member function named getlnint that you can use for this purpose </s>
<s> since this function is contained in the textio class you have to refer to it in your program as textiogetlnint </s>
<s> the function has no parameters so a complete call to the function takes the form textiogetlnint( )” </s>
<s> this function call represents the int value typed by the user and you have to do something with the returned value such as assign it to a variable </s>
<s> for example if userinput is a variable of type int ( created with a declaration statement int userinput” ) then you could use the assignment statement userinput = textiogetlnint( ) when the computer executes this statement it will wait for the user to type in an integer value </s>
<s> that value will then be returned by the function and it will be stored in the variable userinput </s>
<s> here is a complete program that uses textiogetlnint to read a number typed by the user and then prints out the square of the number that the user types 38 chapter 2 </s>
<s> names and things /** * a program that reads an integer that is typed in by the * user and computes and prints the square of that integer */ public class printsquare { public static void main( string[] args ) { int userinput int square // the number input by the user // the userinput multiplied by itself systemoutprint( please type a number ) userinput = textiogetlnint( ) square = userinput * userinput systemoutprint( the square of that number is ) systemoutprintln( square ) } // end of main( ) } //end of class printsquare when you run this program it will display the message please type a number” and will pause until you type a response including a carriage return after the number 242 text output the textio class contains static member subroutines textioput and textioputln that can be used in the same way as systemoutprint and systemoutprintln </s>
<s> for example although there is no particular advantage in doing so in this case you could replace the two lines systemoutprint( the square of that number is ) systemoutprintln( square ) with textioput( the square of that number is ) textioputln( square ) for the next few chapters i will use textio for input in all my examples and i will often use it for output </s>
<s> keep in mind that textio can only be used in a program if it is available to that program </s>
<s> it is not built into java in the way that the system class is et’s look a little more closely at the built-in output subroutines systemoutprint and systemoutprintln </s>
<s> each of these subroutines can be used with one parameter where the parameter can be a value of any of the primitive types byte short int long ﬂoat double char or boolean </s>
<s> the parameter can also be a string a value belonging to an enum type or indeed any object </s>
<s> that is you can say systemoutprint( x )” or systemoutprintln( x )” where x is any expression whose value is of any type whatsoever </s>
<s> the expression can be a constant a variable or even something more complicated such as 2*distance*time </s>
<s> now in fact the system class actually includes several diﬀerent subroutines to handle diﬀerent parameter types </s>
<s> there is one systemoutprint for printing values of type double one for values of type int another for values that are objects and so on </s>
<s> these subroutines can have the same name since the computer can tell which one you mean in a given subroutine call statement depending on the type of parameter that you supply </s>
<s> having several subroutines of the same 39 24 </s>
<s> text input and output name that diﬀer in the types of their parameters is called overloading </s>
<s> many programming languages do not permit overloading but it is common in java programs the diﬀerence between systemoutprint and systemoutprintln is that the println version outputs a carriage return after it outputs the speciﬁed parameter value </s>
<s> there is a version of systemoutprintln that has no parameters </s>
<s> this version simply outputs a carriage return and nothing else </s>
<s> a subroutine call statement for this version of the subroutine looks like systemoutprintln( )” with empty parentheses </s>
<s> note that systemoutprintln( x )” is exactly equivalent to systemoutprint( x ) systemoutprintln( )” the carriage return comes after the value of x ( there is no version of systemoutprint without parameters do you see why ) as mentioned above the textio subroutines textioput and textioputln can be used as replacements for systemoutprint and systemoutprintln </s>
<s> the textio functions work in exactly the same way as the system functions except that as we will see below textio can also be used to write to other destinations 243 textio input functions the textio class is a little more versatile at doing output than is systemout </s>
<s> however it’s input for which we really need it with textio input is done using functions </s>
<s> for example textiogetlnint( ) which was discussed above makes the user type in a value of type int and returns that input value so that you can use it in your program </s>
<s> textio includes several functions for reading diﬀerent types of input values </s>
<s> here are examples of the ones that you are most likely to use j y a c w s = = = = = = textiogetlnint( ) textiogetlndouble( ) textiogetlnboolean( ) textiogetlnchar( ) textiogetlnword( ) textiogetln( ) // // // // // // reads reads reads reads reads reads a value of type a value of type a value of type a value of type one word as a an entire input int double boolean char value of type string line as a string for these statements to be legal the variables on the left side of each assignment statement must already be declared and must be of the same type as that returned by the function on the right side </s>
<s> note carefully that these functions do not have parameters </s>
<s> the values that they return come from outside the program typed in by the user as the program is running to capture” that data so that you can use it in your program you have to assign the return value of the function to a variable </s>
<s> you will then be able to refer to the user’s input value by using the name of the variable when you call one of these functions you are guaranteed that it will return a legal value of the correct type </s>
<s> if the user types in an illegal value as input—for example if you ask for an int and the user types in a non-numeric character or a number that is outside the legal range of values that can be stored in a variable of type int—then the computer will ask the user to re-enter the value and your program never sees the ﬁrst illegal value that the user entered </s>
<s> for textiogetlnboolean( ) the user is allowed to type in any of the following true false t f yes no y n 1 or 0 </s>
<s> furthermore they can use either upper or lower case letters </s>
<s> in any case the user’s input is interpreted as a true/false value </s>
<s> it’s convenient to use textiogetlnboolean( ) to read the user’s response to a yes/no question you’ll notice that there are two input functions that return strings </s>
<s> the ﬁrst getlnword( ) returns a string consisting of non-blank characters only </s>
<s> when it is called it skips over any spaces and carriage returns typed in by the user </s>
<s> then it reads non-blank characters until it gets 40 chapter 2 </s>
<s> names and things to the next space or carriage return </s>
<s> it returns a string consisting of all the non-blank characters that it has read </s>
<s> the second input function getln( ) simply returns a string consisting of all the characters typed in by the user including spaces up to the next carriage return </s>
<s> it gets an entire line of input text </s>
<s> the carriage return itself is not returned as part of the input string but it is read and discarded by the computer </s>
<s> note that the string returned by this function might be the empty string which contains no characters at all </s>
<s> you will get this return value if the user simply presses return without typing anything else ﬁrst all the other input functions listed—getlnint( ) getlndouble( ) getlnboolean( ) and getlnchar( )—behave like getlnword( ) in that they will skip past any blanks and carriage returns in the input before reading a value furthermore if the user types extra characters on the line after the input value all the extra characters will be discarded along with the carriage return at the end of the line </s>
<s> if the program executes another input function the user will have to type in another line of input </s>
<s> it might not sound like a good idea to discard any of the user’s input but it turns out to be the safest thing to do in most programs </s>
<s> sometimes however you do want to read more than one value from the same line of input </s>
<s> textio provides the following alternative input functions to allow you to do this j y a c w = = = = = textiogetint( ) textiogetdouble( ) textiogetboolean( ) textiogetchar( ) textiogetword( ) // // // // // reads reads reads reads reads a value of a value of a value of a value of one word type type type type as a int double boolean char value of type string the names of these functions start with get” instead of getln” getln” is short for get line” and should remind you that the functions whose names begin with getln” will get an entire line of data </s>
<s> a function without the ln” will read an input value in the same way but will then save the rest of the input line in a chunk of internal memory called the input buﬀer the next time the computer wants to read an input value it will look in the input buﬀer before prompting the user for input </s>
<s> this allows the computer to read several values from one line of the user’s input </s>
<s> strictly speaking the computer actually reads only from the input buﬀer the ﬁrst time the program tries to read input from the user the computer will wait while the user types in an entire line of input </s>
<s> textio stores that line in the input buﬀer until the data on the line has been read or discarded ( by one of the getln” functions ) </s>
<s> the user only gets to type when the buﬀer is empty clearly the semantics of input is much more complicated than the semantics of output! fortunately for the majority of applications it’s pretty straightforward in practice </s>
<s> you only need to follow the details if you want to do something fancy </s>
<s> in particular i strongly advise you to use the getln” versions of the input routines rather than the get” versions unless you really want to read several items from the same line of input precisely because the semantics of the getln” versions is much simpler note by the way that although the textio input functions will skip past blank spaces and carriage returns while looking for input they will not skip past other characters </s>
<s> for example if you try to read two ints and the user types 23” the computer will read the ﬁrst number correctly but when it tries to read the second number it will see the comma </s>
<s> it will regard this as an error and will force the user to retype the number </s>
<s> if you want to input several numbers from one line you should make sure that the user knows to separate them with spaces not commas </s>
<s> alternatively if you want to require a comma between the numbers use getchar( ) to read the comma before reading the second number 41 24 </s>
<s> text input and output there is another character input function textiogetanychar( ) which does not skip past blanks or carriage returns </s>
<s> it simply reads and returns the next character typed by the user even if it’s a blank or carriage return </s>
<s> if the user typed a carriage return then the char returned by getanychar( ) is the special linefeed character ’n’ </s>
<s> there is also a function textiopeek( ) that lets you look ahead at the next character in the input without actually reading it </s>
<s> after you peek” at the next character it will still be there when you read the next item from input this allows you to look ahead and see what’s coming up in the input so that you can take diﬀerent actions depending on what’s there the textio class provides a number of other functions </s>
<s> to learn more about them you can look at the comments in the source code ﬁle textiojava ( you might be wondering why there are only two output routines print and println which can output data values of any type while there is a separate input routine for each data type </s>
<s> as noted above in reality there are many print and println routines one for each data type </s>
<s> the computer can tell them apart based on the type of the parameter that you provide however the input routines don’t have parameters so the diﬀerent input routines can only be distinguished by having diﬀerent names ) ∗ ∗ ∗ using textio for input and output we can now improve the program from section 22 for computing the value of an investment </s>
<s> we can have the user type in the initial value of the investment and the interest rate </s>
<s> the result is a much more useful program—for one thing it makes sense to run it more than once! /** * this class implements a simple program that will compute * the amount of interest that is earned on an investment over * a period of one year </s>
<s> the initial amount of the investment * and the interest rate are input by the user </s>
<s> the value of * the investment at the end of the year is output </s>
<s> the * rate must be input as a decimal not a percentage ( for * example 005 rather than 5 ) */ public class interest2 { public static void main( string[] args ) { double principal double rate double interest // the value of the investment // the annual interest rate // the interest earned during the year textioput( enter the initial investment ) principal = textiogetlndouble( ) textioput( enter the annual interest rate ( decimal not percentage! ) ) rate = textiogetlndouble( ) interest = principal * rate principal = principal + interest // compute this year’s interest // add it to principal textioput( the value of the investment after one year is $ ) textioputln( principal ) } // end of main( ) } // end of class interest2 42 244 chapter 2 </s>
<s> names and things formatted output if you ran the preceding interest2 example you might have noticed that the answer is not always written in the format that is usually used for dollar amounts </s>
<s> in general dollar amounts are written with two digits after the decimal point </s>
<s> but the program’s output can be a number like 10500 or 43575 </s>
<s> it would be better if these numbers were printed as 105000 and 4358 java 50 introduced a formatted output capability that makes it much easier than it used to be to control the format of output numbers </s>
<s> a lot of formatting options are available </s>
<s> i will cover just a few of the simplest and most commonly used possibilities here you can use the function systemoutprintf to produce formatted output ( the name printf” which stands for print formatted” is copied from the c and c++ programming languages which have always had a similar formatting capability ) </s>
<s> systemoutprintf takes two or more parameters </s>
<s> the ﬁrst parameter is a string that speciﬁes the format of the output this parameter is called the format string </s>
<s> the remaining parameters specify the values that are to be output </s>
<s> here is a statement that will print a number in the proper format for a dollar amount where amount is a variable of type double systemoutprintf( %12f amount ) textio can also do formatted output the function textioputf has the same functionality as systemoutprintf using textio the above example would be textioputf( %12famount ) and you could say textioputf( %12fprincipal ) instead of textioputln( principal ) in the interest2 program to get the output in the right format the output format of a value is speciﬁed by a format speciﬁer </s>
<s> the format string ( in the simple cases that i cover here ) contains one format speciﬁer for each of the values that is to be output </s>
<s> some typical format speciﬁers are %d %12d %10s %12f %158e and %18g every format speciﬁer begins with a percent sign ( % ) and ends with a letter possibly with some extra formatting information in between </s>
<s> the letter speciﬁes the type of output that is to be produced </s>
<s> for example in %d and %12d the d” speciﬁes that an integer is to be written </s>
<s> the 12” in %12d speciﬁes the minimum number of spaces that should be used for the output </s>
<s> if the integer that is being output takes up fewer than 12 spaces extra blank spaces are added in front of the integer to bring the total up to 12 </s>
<s> we say that the output is right-justiﬁed in a ﬁeld of length 12” the value is not forced into 12 spaces if the value has more than 12 digits all the digits will be printed with no extra spaces </s>
<s> the speciﬁer %d means the same as %1d—that is an integer will be printed using just as many spaces as necessary ( the d” by the way stands for decimal”—that is base-10—numbers </s>
<s> you can replace the d” with an x” to output an integer value in hexadecimal form ) the letter s” at the end of a format speciﬁer can be used with any type of value </s>
<s> it means that the value should be output in its default format just as it would be in unformatted output </s>
<s> a number such as the 10” in %10s can be added to specify the ( minimum ) number of characters </s>
<s> the s” stands for string” meaning that the value is converted into a string value in the usual way the format speciﬁers for values of type double are even more complicated </s>
<s> an f” as in %12f is used to output a number in ﬂoating-point” form that is with digits after the decimal point </s>
<s> in %12f the 2” speciﬁes the number of digits to use after the decimal point the 1” speciﬁes the ( minimum ) number of characters to output which eﬀectively means that just as many characters as are necessary should be used </s>
<s> similarly %123f would specify a ﬂoating-point format with 3 digits after the decimal point right-justiﬁed in a ﬁeld of length 12 24 </s>
<s> text input and output 43 very large and very small numbers should be written in exponential format such as 600221415e23 representing 600221415 times 10 raised to the power 23” a format speciﬁer such as %158e speciﬁes an output in exponential form with the 8” telling how many digits to use after the decimal point </s>
<s> if you use g” instead of e” the output will be in ﬂoating-point form for small values and in exponential form for large values </s>
<s> in %18g the 8 gives the total number of digits in the answer including both the digits before the decimal point and the digits after the decimal point for numeric output the format speciﬁer can include a comma ( ” ) which will cause the digits of the number to be separated into groups to make it easier to read big numbers </s>
<s> in the united states groups of three digits are separated by commas </s>
<s> for example if x is one billion then systemoutprintf( %dx ) will output 1000000000 </s>
<s> in other countries the separator character and the number of digits per group might be diﬀerent </s>
<s> the comma should come at the beginning of the format speciﬁer before the ﬁeld width for example %123f in addition to format speciﬁers the format string in a printf statement can include other characters </s>
<s> these extra characters are just copied to the output </s>
<s> this can be a convenient way to insert values into the middle of an output string </s>
<s> for example if x and y are variables of type int you could say systemoutprintf( the product of %d and %d is %d x y x*y ) when this statement is executed the value of x is substituted for the ﬁrst %d in the string the value of y for the second %d and the value of the expression x*y for the third so the output would be something like the product of 17 and 42 is 714” ( quotation marks not included in output! ) 245 introduction to file i/o systemout sends its output to the output destination known as standard output” but standard output is just one possible output destination </s>
<s> for example data can be written to a ﬁle that is stored on the user’s hard drive </s>
<s> the advantage to this of course is that the data is saved in the ﬁle even after the program ends and the user can print the ﬁle email it to someone else edit it with another program and so on textio has the ability to write data to ﬁles and to read data from ﬁles </s>
<s> when you write output using the put putln or putf method in textio the output is sent to the current output destination </s>
<s> by default the current output destination is standard output </s>
<s> however textio has some subroutines that can be used to change the current output destination </s>
<s> to write to a ﬁle named resulttxt” for example you would use the statement textiowritefile( resulttxt ) after this statement is executed any output from textio output statements will be sent to the ﬁle named resulttxt” instead of to standard output </s>
<s> the ﬁle should be created in the same directory that contains the program </s>
<s> note that if a ﬁle with the same name already exists its previous contents will be erased! in many cases you want to let the user select the ﬁle that will be used for output </s>
<s> the statement textiowriteuserselectedfile( ) will open a typical graphical-user-interface ﬁle selection dialog where the user can specify the output ﬁle </s>
<s> if you want to go back to sending output to standard output you can say textiowritestandardoutput( ) 44 chapter 2 </s>
<s> names and things you can also specify the input source for textio’s various get” functions </s>
<s> the default input source is standard input </s>
<s> you can use the statement textioreadfile( datatxt ) to read from a ﬁle named datatxt” instead or you can let the user select the input ﬁle by saying textioreaduserselectedfile( ) </s>
<s> you can go back to reading from standard input with textioreadstandardinput( ) when your program is reading from standard input the user gets a chance to correct any errors in the input </s>
<s> this is not possible when the program is reading from a ﬁle </s>
<s> if illegal data is found when a program tries to read from a ﬁle an error occurs that will crash the program ( later we will see that it is possible to catch” such errors and recover from them ) errors can also occur though more rarely when writing to ﬁles a complete understanding of ﬁle input/output in java requires a knowledge of object oriented programming </s>
<s> we will return to the topic later in chapter 11 </s>
<s> the ﬁle i/o capabilities in textio are rather primitive by comparison </s>
<s> nevertheless they are suﬃcient for many applications and they will allow you to get some experience with ﬁles sooner rather than later as a simple example here is a program that asks the user some questions and outputs the user’s responses to a ﬁle named proﬁletxt” public class createprofile { public static void main( string[] args ) { string string double string name email salary favcolor // // // // the the the the user’s user’s user’s user’s name email address yearly salary favorite color textioputln( good afternoon! this program will create ) textioputln( your profile file if you will just answer ) textioputln( a few simple questions ) textioputln( ) /* gather responses from the user */ textioput( what is your name name = textiogetln( ) textioput( what is your email address email = textiogetln( ) textioput( what is your yearly income salary = textiogetlndouble( ) textioput( what is your favorite color favcolor = textiogetln( ) ) ) ) ) /* write the user’s information to the file named profiletxt */ textiowritefile( profiletxt ) // subsequent output goes to the file textioputln( name + name ) textioputln( email + email ) textioputln( favorite color + favcolor ) textioputf( yearly income %12fn salary ) // the /n in the previous line is a carriage return and the // comma in %12f adds separators between groups of digits /* print a final message to standard output */ textiowritestandardoutput( ) textioputln( thank you </s>
<s> your profile has been written to profiletxt ) 45 24 </s>
<s> text input and output } } 246 using scanner for input textio makes it easy to get input from the user </s>
<s> however since it is not a standard class you have to remember to add textiojava to a program that uses it </s>
<s> one advantage of using the scanner class for input is that it’s a standard part of java and so is always there when you want it it’s not that hard to use a scanner for user input but doing so requires some syntax that will not be introduced until chapter 4 and chapter 5 </s>
<s> i’ll tell you how to do it here without explaining why it works </s>
<s> you won’t understand all the syntax at this point ( scanners will be covered in more detail in subsection 1115 ) first you should add the following line to your program at the beginning of the source code ﬁle before the public class ” import javautilscanner then include the following statement at the beginning of your main( ) routine scanner stdin = new scanner( systemin ) this creates a variable named stdin of type scanner ( you can use a diﬀerent name for the variable if you want stdin” stands for standard input” ) you can then use stdin in your program to access a variety of subroutines for reading user input </s>
<s> for example the function stdinnextint( ) reads one value of type int from the user and returns it </s>
<s> it is almost the same as textiogetint( ) except for two things if the value entered by the user is not a legal int then stdinnextint( ) will crash rather than prompt the user to re-enter the value </s>
<s> and the integer entered by the user must be followed by a blank space or by an end-of-line whereas textiogetint( ) will stop reading at any character that is not a digit there are corresponding methods for reading other types of data including stdinnextdouble( ) stdinnextlong( ) and stdinnextboolean( ) ( stdinnextboolean( ) will only accept true” or false” as input ) the method stdinnextline( ) is equivalent to textiogetln( ) and stdinnext( ) like textiogetword( ) returns a string of non-blank characters as a simple example here is a version of the sample program interest2java that uses scanner instead of textio for user input import javautilscanner // make the scanner class available public class interest2withscanner { public static void main( string[] args ) { scanner stdin = new scanner( systemin ) double principal double rate double interest // create the scanner // the value of the investment // the annual interest rate // the interest earned during the year systemoutprint( enter the initial investment ) principal = stdinnextdouble( ) systemoutprint( enter the annual interest rate ( decimal not percent! ) ) 46 chapter 2 </s>
<s> names and things rate = stdinnextdouble( ) interest = principal * rate principal = principal + interest // compute this year’s interest // add it to principal systemoutprint( the value of the investment after one year is $ ) systemoutprintln( principal ) } // end of main( ) } // end of class interest2with scanner note the inclusion of the two lines given above and the substitution of stdinnextdouble( ) for textiogetlndouble( ) ( in fact stdinnextdouble( ) is really equivalent to textiogetdouble( ) rather than to the getln” version but this will not aﬀect the behavior of the program as long as the user types just one number on each line of input ) i will continue to use textio for input for the time being but i will give a few more examples of using scanner in the on-line solutions to the end-of-chapter exercises </s>
<s> there will be more detailed coverage of scanner later in the book 25 details of expressions this section takes a closer look at expressions </s>
<s> recall that an expression is a piece of program code that represents or computes a value </s>
<s> an expression can be a literal a variable a function call or several of these things combined with operators such as + and > </s>
<s> the value of an expression can be assigned to a variable used as a parameter in a subroutine call or combined with other values into a more complicated expression ( the value can even in some cases be ignored if that’s what you want to do this is more common than you might think ) expressions are an essential part of programming </s>
<s> so far these notes have dealt only informally with expressions </s>
<s> this section tells you the more-or-less complete story ( leaving out some of the less commonly used operators ) the basic building blocks of expressions are literals ( such as 674 314 true and ’x’ ) variables and function calls </s>
<s> recall that a function is a subroutine that returns a value </s>
<s> you’ve already seen some examples of functions such as the input routines from the textio class and the mathematical functions from the math class the math class also contains a couple of mathematical constants that are useful in mathematical expressions mathpi represents π ( the ratio of the circumference of a circle to its diameter ) and mathe represents e ( the base of the natural logarithms ) </s>
<s> these constants” are actually member variables in math of type double </s>
<s> they are only approximations for the mathematical constants which would require an inﬁnite number of digits to specify exactly iterals variables and function calls are simple expressions </s>
<s> more complex expressions can be built up by using operators to combine simpler expressions </s>
<s> operators include + for adding two numbers > for comparing two values and so on </s>
<s> when several operators appear in an expression there is a question of precedence which determines how the operators are grouped for evaluation </s>
<s> for example in the expression a + b * c” b*c is computed ﬁrst and then the result is added to a </s>
<s> we say that multiplication ( * ) has higher precedence than addition ( + ) </s>
<s> if the default precedence is not what you want you can use parentheses to explicitly specify the grouping you want </s>
<s> for example you could use ( a + b ) * c” if you want to add a to b ﬁrst and then multiply the result by c 25 </s>
<s> details of expressions 47 the rest of this section gives details of operators in java </s>
<s> the number of operators in java is quite large and i will not cover them all here </s>
<s> most of the important ones are here a few will be covered in later chapters as they become relevant 251 arithmetic operators arithmetic operators include addition subtraction multiplication and division </s>
<s> they are indicated by + - * and / </s>
<s> these operations can be used on values of any numeric type byte short int long ﬂoat or double ( they can also be used with values of type char which are treated as integers in this context a char is converted into its unicode code number when it is used with an arithmetic operator ) when the computer actually calculates one of these operations the two values that it combines must be of the same type </s>
<s> if your program tells the computer to combine two values of diﬀerent types the computer will convert one of the values from one type to another </s>
<s> for example to compute 374 + 10 the computer will convert the integer 10 to a real number 100 and will then compute 374 + 100 </s>
<s> this is called a type conversion </s>
<s> ordinarily you don’t have to worry about type conversion in expressions because the computer does it automatically when two numerical values are combined ( after doing type conversion on one of them if necessary ) the answer will be of the same type </s>
<s> if you multiply two ints you get an int if you multiply two doubles you get a double </s>
<s> this is what you would expect but you have to be very careful when you use the division operator / </s>
<s> when you divide two integers the answer will always be an integer if the quotient has a fractional part it is discarded </s>
<s> for example the value of 7/2 is 3 not 35 </s>
<s> if n is an integer variable then n/100 is an integer and 1/n is equal to zero for any n greater than one! this fact is a common source of programming errors </s>
<s> you can force the computer to compute a real number as the answer by making one of the operands real for example when the computer evaluates 10/n it ﬁrst converts n to a real number in order to match the type of 10 so you get a real number as the answer java also has an operator for computing the remainder when one integer is divided by another </s>
<s> this operator is indicated by % </s>
<s> if a and b are integers then a % b represents the remainder when a is divided by b ( however for negative operands % is not quite the same as the usual mathematical modulus” operator since if one of a or b is negative then the value of a % b will be negative ) for example 7 % 2 is 1 while 34577 % 100 is 77 and 50 % 8 is 2 </s>
<s> a common use of % is to test whether a given integer is even or odd n is even if n % 2 is zero and it is odd if n % 2 is 1 </s>
<s> more generally you can check whether an integer n is evenly divisible by an integer m by checking whether n % m is zero finally you might need the unary minus operator which takes the negative of a number for example -x has the same value as ( -1 )*x </s>
<s> for completeness java also has a unary plus operator as in +x even though it doesn’t really do anything by the way recall that the + operator can also be used to concatenate a value of any type onto a string </s>
<s> this is another example of type conversion </s>
<s> in java any type can be automatically converted into type string 252 increment and decrement you’ll ﬁnd that adding 1 to a variable is an extremely common operation in programming subtracting 1 from a variable is also pretty common </s>
<s> you might perform the operation of adding 1 to a variable with assignment statements such as 48 chapter 2 </s>
<s> names and things counter = counter + 1 goalsscored = goalsscored + 1 the eﬀect of the assignment statement x = x + 1 is to take the old value of the variable x compute the result of adding 1 to that value and store the answer as the new value of x </s>
<s> the same operation can be accomplished by writing x++ ( or if you prefer ++x ) </s>
<s> this actually changes the value of x so that it has the same eﬀect as writing x = x + 1” </s>
<s> the two statements above could be written counter++ goalsscored++ similarly you could write x -- ( or -- x ) to subtract 1 from x </s>
<s> that is x -- performs the same computation as x = x - 1 </s>
<s> adding 1 to a variable is called incrementing that variable and subtracting 1 is called decrementing </s>
<s> the operators ++ and -- are called the increment operator and the decrement operator respectively </s>
<s> these operators can be used on variables belonging to any of the numerical types and also on variables of type char usually the operators ++ or -- are used in statements like x++” or x -- ” </s>
<s> these statements are commands to change the value of x </s>
<s> however it is also legal to use x++ ++x x -- or -- x as expressions or as parts of larger expressions </s>
<s> that is you can write things like y = x++ y = ++x textioputln( -- x ) z = ( ++x ) * ( y -- ) the statement y = x++” has the eﬀects of adding 1 to the value of x and in addition assigning some value to y </s>
<s> the value assigned to y is the value of the expression x++ which is deﬁned to be the old value of x before the 1 is added </s>
<s> thus if the value of x is 6 the statement y = x++” will change the value of x to 7 but it will change the value of y to 6 since the value assigned to y is the old value of x </s>
<s> on the other hand the value of ++x is deﬁned to be the new value of x after the 1 is added </s>
<s> so if x is 6 then the statement y = ++x” changes the values of both x and y to 7 </s>
<s> the decrement operator -- works in a similar way this can be confusing </s>
<s> my advice is don’t be confused </s>
<s> use ++ and -- only in stand-alone statements not in expressions </s>
<s> i will follow this advice in almost all examples in these notes 253 relational operators java has boolean variables and boolean-valued expressions that can be used to express conditions that can be either true or false </s>
<s> one way to form a boolean-valued expression is to compare two values using a relational operator </s>
<s> relational operators are used to test whether two values are equal whether one value is greater than another and so forth </s>
<s> the relational operators in java are == != < > <= and >= </s>
<s> the meanings of these operators are a a a a a a == b != b < b > b <= b >= b is is is is is is a a a a a a equal to b not equal to b less than b greater than b less than or equal to b greater than or equal to b these operators can be used to compare values of any of the numeric types </s>
<s> they can also be used to compare values of type char </s>
<s> for characters < and > are deﬁned according the numeric 25 </s>
<s> details of expressions 49 unicode values of the characters ( this might not always be what you want </s>
<s> it is not the same as alphabetical order because all the upper case letters come before all the lower case letters ) when using boolean expressions you should remember that as far as the computer is concerned there is nothing special about boolean values </s>
<s> in the next chapter you will see how to use them in loop and branch statements </s>
<s> but you can also assign boolean-valued expressions to boolean variables just as you can assign numeric values to numeric variables by the way the operators == and != can be used to compare boolean values </s>
<s> this is occasionally useful </s>
<s> for example can you ﬁgure out what this does boolean samesign samesign = ( ( x > 0 ) == ( y > 0 ) ) one thing that you cannot do with the relational operators < > <= and <= is to use them to compare values of type string </s>
<s> you can legally use == and != to compare strings but because of peculiarities in the way objects behave they might not give the results you want ( the == operator checks whether two objects are stored in the same memory location rather than whether they contain the same value </s>
<s> occasionally for some objects you do want to make such a check—but rarely for strings </s>
<s> i’ll get back to this in a later chapter ) instead you should use the subroutines equals( ) equalsignorecase( ) and compareto( ) which were described in section 23 to compare two strings 254 boolean operators in english complicated conditions can be formed using the words and” or” and not” for example if there is a test and you did not study for it ” and” or” and not” are boolean operators and they exist in java as well as in english in java the boolean operator and” is represented by && </s>
<s> the && operator is used to combine two boolean values </s>
<s> the result is also a boolean value </s>
<s> the result is true if both of the combined values are true and the result is false if either of the combined values is false </s>
<s> for example ( x == 0 ) && ( y == 0 )” is true if and only if both x is equal to 0 and y is equal to 0 the boolean operator or” is represented by || ( that’s supposed to be two of the vertical line characters | ) the expression a || b” is true if either a is true or b is true or if both are true a || b” is false only if both a and b are false the operators && and || are said to be short-circuited versions of the boolean operators this means that the second operand of && or || is not necessarily evaluated </s>
<s> consider the test ( x != 0 ) && ( y/x > 1 ) suppose that the value of x is in fact zero </s>
<s> in that case the division y/x is undeﬁned mathematically </s>
<s> however the computer will never perform the division since when the computer evaluates ( x != 0 ) it ﬁnds that the result is false and so it knows that ( ( x != 0 ) && anything ) has to be false </s>
<s> therefore it doesn’t bother to evaluate the second operand ( y/x > 1 ) the evaluation has been short-circuited and the division by zero is avoided </s>
<s> without the shortcircuiting there would have been a division by zero ( this may seem like a technicality and it is </s>
<s> but at times it will make your programming life a little easier ) the boolean operator not” is a unary operator </s>
<s> in java it is indicated by ! and is written in front of its single operand </s>
<s> for example if test is a boolean variable then test = ! test will reverse the value of test changing it from true to false or from false to true 50 255 chapter 2 </s>
<s> names and things conditional operator any good programming language has some nifty little features that aren’t really necessary but that let you feel cool when you use them </s>
<s> java has the conditional operator </s>
<s> it’s a ternary operator—that is it has three operands—and it comes in two pieces and that have to be used together </s>
<s> it takes the form boolean-expression expression1 expression2 the computer tests the value of boolean-expression </s>
<s> if the value is true it evaluates expression1 otherwise it evaluates expression2 </s>
<s> for example next = ( n % 2 == 0 ) ( n/2 ) ( 3*n+1 ) will assign the value n/2 to next if n is even ( that is if n % 2 == 0 is true ) and it will assign the value ( 3*n+1 ) to next if n is odd ( the parentheses in this example are not required but they do make the expression easier to read ) 256 assignment operators and type-casts you are already familiar with the assignment statement which uses the symbol =” to assign the value of an expression to a variable </s>
<s> in fact = is really an operator in the sense that an assignment can itself be used as an expression or as part of a more complex expression </s>
<s> the value of an assignment such as a=b is the same as the value that is assigned to a </s>
<s> so if you want to assign the value of b to a and test at the same time whether that value is zero you could say if ( ( a=b ) == 0 ) usually i would say don’t do things like that! in general the type of the expression on the right-hand side of an assignment statement must be the same as the type of the variable on the left-hand side </s>
<s> however in some cases the computer will automatically convert the value computed by the expression to match the type of the variable </s>
<s> consider the list of numeric types byte short int long ﬂoat double a value of a type that occurs earlier in this list can be converted automatically to a value that occurs later </s>
<s> for example int a double x short b a = 17 x = a // ok a is converted to a double b = a // illegal no automatic conversion // from int to short the idea is that conversion should only be done automatically when it can be done without changing the semantics of the value </s>
<s> any int can be converted to a double with the same numeric value </s>
<s> however there are int values that lie outside the legal range of shorts </s>
<s> there is simply no way to represent the int 100000 as a short for example since the largest value of type short is 32767 in some cases you might want to force a conversion that wouldn’t be done automatically for this you can use what is called a type cast </s>
<s> a type cast is indicated by putting a type name in parentheses in front of the value you want to convert </s>
<s> for example 51 25 </s>
<s> details of expressions int a short b a = 17 b = ( short )a // ok a is explicitly type cast // to a value of type short you can do type casts from any numeric type to any other numeric type </s>
<s> however you should note that you might change the numeric value of a number by type-casting it </s>
<s> for example ( short )100000 is -31072 ( the -31072 is obtained by taking the 4-byte int 100000 and throwing away two of those bytes to obtain a short—you’ve lost the real information that was in those two bytes ) as another example of type casts consider the problem of getting a random integer between 1 and 6 </s>
<s> the function mathrandom( ) gives a real number between 00 and 09999 and so 6*mathrandom( ) is between 00 and 5999 </s>
<s> the type-cast operator ( int ) can be used to convert this to an integer ( int )( 6*mathrandom( ) ) </s>
<s> a real number is cast to an integer by discarding the fractional part </s>
<s> thus ( int )( 6*mathrandom( ) ) is one of the integers 0 1 2 3 4 and 5 </s>
<s> to get a number between 1 and 6 we can add 1 ( int )( 6*mathrandom( ) ) + 1” ( the parentheses around 6*mathrandom( ) are necessary because of precedence rules without the parentheses the type cast operator would apply only to the 6 ) you can also type-cast between the type char and the numeric types </s>
<s> the numeric value of a char is its unicode code number </s>
<s> for example ( char )97 is ’a’ and ( int )’+’ is 43 ( however a type conversion from char to int is automatic and does not have to be indicated with an explicit type cast ) java has several variations on the assignment operator which exist to save typing </s>
<s> for example a += b” is deﬁned to be the same as a = a + b” </s>
<s> every operator in java that applies to two operands gives rise to a similar assignment operator </s>
<s> for example x x x x q -= y *= y /= y %= y &&= p // // // // // same same same same same as as as as as x x x x q = = = = = x x x x q - y * y / y % y && p ( for integers x and y ) ( for booleans q and p ) the combined assignment operator += even works with strings </s>
<s> recall that when the + operator is used with a string as one of the operands it represents concatenation </s>
<s> since str += x is equivalent to str = str + x when += is used with a string on the left-hand side it appends the value on the right-hand side onto the string </s>
<s> for example if str has the value tire” then the statement str += ’d’ changes the value of str to tired” 257 type conversion of strings in addition to automatic type conversions and explicit type casts there are some other cases where you might want to convert a value of one type into a value of a diﬀerent type </s>
<s> one common example is the conversion of a string value into some other type such as converting the string 10 into the int value 10 or the string 1742e-2 into the double value 01742 </s>
<s> in java these conversions are handled by built-in functions there is a standard class named integer that contains several subroutines and variables related to the int data type ( recall that since int is not a class int itself can’t contain any subroutines or variables ) in particular if str is any expression of type string then integerparseint( str ) is a function call that attempts to convert the value of str into a 52 chapter 2 </s>
<s> names and things value of type int </s>
<s> for example the value of integerparseint( 10 ) is the int value 10 </s>
<s> if the parameter to integerparseint does not represent a legal int value then an error occurs similarly the standard class named double includes a function doubleparsedouble that tries to convert a parameter of type string into a value of type double </s>
<s> for example the value of the function call doubleparsedouble( 314 ) is the double value 314 ( of course in practice the parameter used in doubleparsedouble or integerparseint would be a variable or expression rather than a constant string ) type conversion functions also exist for converting strings into enumerated type values ( enumerated types or enums were introduced in subsection 233 ) for any enum type a predeﬁned function named valueof is automatically deﬁned for that type </s>
<s> this is a function that takes a string as parameter and tries to convert it to a value belonging to the enum </s>
<s> the valueof function is part of the enum type so the name of the enum is part of the full name of the function </s>
<s> for example if an enum suit is deﬁned as enum suit { spade diamond club heart } then the name of the type conversion function would be suitvalueof </s>
<s> the value of the function call suitvalueof( club ) would be the enumerated type value suitclub </s>
<s> for the conversion to succeed the string must exactly match the simple name of one of the enumerated type constants ( without the suit” in front ) 258 precedence rules if you use several operators in one expression and if you don’t use parentheses to explicitly indicate the order of evaluation then you have to worry about the precedence rules that determine the order of evaluation ( advice don’t confuse yourself or the reader of your program use parentheses liberally ) here is a listing of the operators discussed in this section listed in order from highest precedence ( evaluated ﬁrst ) to lowest precedence ( evaluated last ) unary operators multiplication and division addition and subtraction relational operators equality and inequality boolean and boolean or conditional operator assignment operators ++ * + < == && || = -- ! unary - and + type-cast / % > <= >= != += -= *= /= %= operators on the same line have the same precedence </s>
<s> when operators of the same precedence are strung together in the absence of parentheses unary operators and assignment operators are evaluated right-to-left while the remaining operators are evaluated left-to-right </s>
<s> for example a*b/c means ( a*b )/c while a=b=c means a=( b=c ) ( can you see how the expression a=b=c might be useful given that the value of b=c as an expression is the same as the value that is assigned to b ) 26 programming environments although the java language is highly standardized the procedures for creating compiling and editing java programs vary widely from one programming environment to another 26 </s>
<s> programming environments 53 there are two basic approaches a command line environment where the user types commands and the computer responds and an integrated development environment ( ide ) where the user uses the keyboard and mouse to interact with a graphical user interface </s>
<s> while there is just one common command line environment for java programming there is a wide variety of ides i cannot give complete or deﬁnitive information on java programming environments in this section but i will try to give enough information to let you compile and run the examples from this textbook at least in a command line environment </s>
<s> there are many ides and i can’t cover them all here </s>
<s> i will concentrate on eclipse one of the most popular ides for java programming but some of the information that is presented will apply to other ides as well one thing to keep in mind is that you do not have to pay any money to do java programming ( aside from buying a computer of course ) </s>
<s> everything that you need can be downloaded for free on the internet 261 java development kit the basic development system for java programming is usually referred to as the jdk ( java development kit ) </s>
<s> it is a part of java se the java standard edition” ( as opposed to java for servers or for mobile devices ) </s>
<s> this book requires java version 50 or higher </s>
<s> confusingly the jdks that are part of java versions 5 6 and 7 are sometimes referred to as jdk 15 16 and 17 </s>
<s> note that java se comes in two versions a development kit version ( the jdk ) and a runtime environment version ( the jre ) </s>
<s> the runtime can be used to run java programs and to view java applets in web pages but it does not allow you to compile your own java programs </s>
<s> the development kit includes the runtime and adds to it the jdk which lets you compile programs </s>
<s> you need a jdk for use with this textbook java was developed by sun microsystems inc which is now a part of the oracle corporation oracle makes the jdk for windows and linux available for free download at its java web site http//wwworaclecom/technetwork/java </s>
<s> if you have a windows computer it might have come with a java runtime but you might still need to download the jdk </s>
<s> some versions of inux come with the jdk either installed by default or on the installation media </s>
<s> if you need to download and install the jdk be sure to get jdk 50 ( or higher ) </s>
<s> as of august 2010 the current version of the jdk is jdk 6 and it can be downloaded from http//wwworaclecom/technetwork/java/javase/downloads/indexhtml mac os comes with java </s>
<s> recent versions of mac os come with java version 5 or version 6 so you will not need to download anything if a jdk is properly installed on your computer you can use the command line environment to compile and run java programs </s>
<s> most ides also require java to be installed so even if you plan to use an ide for programming you probably still need a jdk or at least a jre 262 command line environment many modern computer users ﬁnd the command line environment to be pretty alien and unintuitive </s>
<s> it is certainly very diﬀerent from the graphical user interfaces that most people are used to </s>
<s> however it takes only a little practice to learn the basics of the command line environment and to become productive using it to use a command line programming environment you will have to open a window where you can type in commands </s>
<s> in windows you can open such a command window by running 54 chapter 2 </s>
<s> names and things the program named cmd </s>
<s> in recent versions of windows it can be found in the accessories” submenu of the start menu under the name command prompt” </s>
<s> alternatively you can run cmd by using the run program” feature in the start menu and entering cmd” as the name of the program </s>
<s> in mac os you want to run the terminal program which can be found in the utilities folder inside the applications folder </s>
<s> in linux there are several possibilities including an old program called xterm </s>
<s> in ubuntu linux you can use the terminal” command under accessories” in the applications” menu no matter what type of computer you are using when you open a command window it will display a prompt of some sort </s>
<s> type in a command at the prompt and press return </s>
<s> the computer will carry out the command displaying any output in the command window and will then redisplay the prompt so that you can type another command </s>
<s> one of the central concepts in the command line environment is the current directory which contains the ﬁles to which commands that you type apply ( the words directory” and folder” mean the same thing ) often the name of the current directory is part of the command prompt </s>
<s> you can get a list of the ﬁles in the current directory by typing in the command dir ( on windows ) or ls ( on linux and mac os ) </s>
<s> when the window ﬁrst opens the current directory is your home directory where all your ﬁles are stored </s>
<s> you can change the current directory using the cd command with the name of the directory that you want to use </s>
<s> for example to change into your desktop directory type in the command cd desktop and press return you should create a directory ( that is a folder ) to hold your java work </s>
<s> for example create a directory named javawork in your home directory </s>
<s> you can do this using your computer’s gui another way to do it is to open a command window and enter the command mkdir javawork when you want to work on programming open a command window and enter the command cd javawork to change into your work directory </s>
<s> of course you can have more than one working directory for your java work you can organize your ﬁles any way you like ∗ ∗ ∗ the most basic commands for using java on the command line are javac and java javac is used to compile java source code and java is used to run java stand-alone applications </s>
<s> if a jdk is correctly installed on your computer it should recognize these commands when you type them in on the command line </s>
<s> try typing the commands java -version and javac -version which should tell you which version of java is installed </s>
<s> if you get a message such as command not found” then java is not correctly installed </s>
<s> if the java” command works but javac” does not it means that a java runtime is installed rather than a development kit ( on windows after installing the jdk you need to modify the windows path variable to make this work see the jdk installation instructions for information about how to do this ) to test the javac command place a copy of textiojava into your working directory ( if you downloaded the web site of this book you can ﬁnd it in the directory named source you can use your computer’s gui to copy-and-paste this ﬁle into your working directory </s>
<s> alternatively you can navigate to textiojava on the book’s web site and use the save as” command in your web browser to save a copy of the ﬁle into your working directory ) type the command javac textiojava this will compile textiojava and will create a bytecode ﬁle named textioclass in the same directory </s>
<s> note that if the command succeeds you will not get any response from the computer it will just redisplay the command prompt to tell you it’s ready for another command to test the java command copy sample program interest2java from this book’s source directory into your working directory </s>
<s> first compile the program with the command 26 </s>
<s> programming environments javac 55 interest2java remember that for this to succeed textio must already be in the same directory </s>
<s> then you can execute the program using the command java interest2 be careful to use just the name of the program interest2 with the java command not the name of the java source code ﬁle or the name of the compiled class ﬁle </s>
<s> when you give this command the program will run </s>
<s> you will be asked to enter some information and you will respond by typing your answers into the command window pressing return at the end of the line </s>
<s> when the program ends you will see the command prompt and you can enter another command you can follow the same procedure to run all of the examples in the early sections of this book </s>
<s> when you start work with applets you will need a diﬀerent way to run the applets that will be discussed later in the book ∗ ∗ ∗ to create your own programs you will need a text editor </s>
<s> a text editor is a computer program that allows you to create and save documents that contain plain text </s>
<s> it is important that the documents be saved as plain text that is without any special encoding or formatting information </s>
<s> word processor documents are not appropriate unless you can get your word processor to save as plain text </s>
<s> a good text editor can make programming a lot more pleasant inux comes with several text editors </s>
<s> on windows you can use notepad in a pinch but you will probably want something better </s>
<s> for mac os you might download the free textwrangler application </s>
<s> one possibility that will work on any platform is to use jedit a good programmer’s text editor that is itself written in java and that can be downloaded for free from wwwjeditorg to create your own programs you should open a command line window and cd into the working directory where you will store your source code ﬁles </s>
<s> start up your text editor program such as by double-clicking its icon or selecting it from a start menu </s>
<s> type your code into the editor window or open an existing source code ﬁle that you want to modify </s>
<s> save the ﬁle remember that the name of a java source code ﬁle must end in java” and the rest of the ﬁle name must match the name of the class that is deﬁned in the ﬁle </s>
<s> once the ﬁle is saved in your working directory go to the command window and use the javac command to compile it as discussed above </s>
<s> if there are syntax errors in the code they will be listed in the command window </s>
<s> each error message contains the line number in the ﬁle where the computer found the error </s>
<s> go back to the editor and try to ﬁx the errors save your changes and then try the javac command again ( it’s usually a good idea to just work on the ﬁrst few errors sometimes ﬁxing those will make other errors go away ) remember that when the javac command ﬁnally succeeds you will get no message at all </s>
<s> then you can use the java command to run your program as described above </s>
<s> once you’ve compiled the program you can run it as many times as you like without recompiling it that’s really all there is to it keep both editor and command-line window open </s>
<s> edit save and compile until you have eliminated all the syntax errors ( always remember to save the ﬁle before compiling it—the compiler only sees the saved ﬁle not the version in the editor window ) when you run the program you might ﬁnd that it has semantic errors that cause it to run incorrectly </s>
<s> in that case you have to go back to the edit/save/compile loop to try to ﬁnd and ﬁx the problem 56 263 chapter 2 </s>
<s> names and things ides and eclipse in an integrated development environment everything you need to create compile and run programs is integrated into a single package with a graphical user interface that will be familiar to most computer users </s>
<s> there are many diﬀerent ides for java program development ranging from fairly simple wrappers around the jdk to highly complex applications with a multitude of features </s>
<s> for a beginning programmer there is a danger in using an ide since the diﬃculty of learning to use the ide on top of the diﬃculty of learning to program can be overwhelming however for my own programming i generally use the eclipse ide and i introduce my students to it after they have had some experience with the command line </s>
<s> eclipse has a variety of features that are very useful for a beginning programmer </s>
<s> and even though it has many advanced features its design makes it possible to use eclipse without understanding its full complexity </s>
<s> eclipse is used by many professional programmers and is probably the most commonly used java ide eclipse is itself written in java </s>
<s> it requires java 14 or higher to run and java 50 or higher is recommended </s>
<s> for use with this book you should be running eclipse with java 50 or higher </s>
<s> eclipse requires a java runtime environment not necessarily a jdk </s>
<s> you should make sure that the jre or jdk version 50 or higher is installed on your computer as described above before you install eclipse </s>
<s> eclipse can be downloaded for free from eclipseorg </s>
<s> you can download the eclipse ide for java developers” another popular choice of ide is netbeans which provides many of the same capabilities as eclipse </s>
<s> netbeans can be downloaded from netbeansorg and oracle oﬀers downloads of netbeans on its java web site </s>
<s> i like netbeans a little less than eclipse and i won’t say much about it here </s>
<s> it is however quite similar to eclipse the ﬁrst time you start eclipse you will be asked to specify a workspace which is the directory where all your work will be stored </s>
<s> you can accept the default name or provide one of your own </s>
<s> when startup is complete the eclipse window will be ﬁlled by a large welcome” screen that includes links to extensive documentation and tutorials </s>
<s> you can close this screen by clicking the x” next to the word welcome” you can get back to it later by choosing welcome” from the help” menu the eclipse gui consists of one large window that is divided into several sections </s>
<s> each section contains one or more views </s>
<s> if there are several views in one section then there will be tabs at the top of the section to select the view that is displayed in that section </s>
<s> each view displays a diﬀerent type of information </s>
<s> the whole set of views is called a perspective </s>
<s> eclipse uses diﬀerent perspectives that is diﬀerent sets of views of diﬀerent types of information for diﬀerent tasks </s>
<s> for compiling and running programs the only perspective that you will need is the java perspective” which is the default </s>
<s> as you become more experiences you might want to the use the debug perspective” which has features designed to help you ﬁnd semantic errors in programs the java perspective includes a large area in the center of the window where you will create and edit your java programs </s>
<s> to the left of this is the package explorer view which will contain a list of your java projects and source code ﬁles </s>
<s> to the right are some other views that i don’t ﬁnd very useful and i suggest that you close them by clicking the small x” next to the name of each view </s>
<s> several other views that will be useful while you are compiling and running programs appear in a section of the window below the editing area </s>
<s> if you accidently close one of the important views such as the package explorer you can get it back by selecting it from the show view” submenu of the window” menu ∗ ∗ ∗ 26 </s>
<s> programming environments 57 to do any work in eclipse you need a project </s>
<s> to start a java project go to the new” submenu in the file” menu and select the java project” command </s>
<s> in the window that pops up it is only necessary to ﬁll in a project name” for the project and click the finish” button </s>
<s> the project name can be anything you like </s>
<s> the project should appear in the package explorer” view </s>
<s> click on the small triangle next to the project name to see the contents of the project </s>
<s> assuming that you use the default settings there should be a directory named src” which is where your java source code ﬁles will go </s>
<s> it also contains the jre system library” this is the collection of standard built-in classes that come with java to run the textio based examples from this textbook you must add the source code ﬁle textiojava to your project </s>
<s> if you have downloaded the web site of this book you can ﬁnd a copy of textiojava in the source directory </s>
<s> alternatively you can navigate to the ﬁle online and use the save as” command of your web browser to save a copy of the ﬁle onto your computer </s>
<s> the easiest way to get textio into your project is to locate the source code ﬁle on your computer and drag the ﬁle icon onto the project name in the eclipse window if that doesn’t work you can try using copy-and-paste right-click the ﬁle icon ( or controlclick on mac os ) select copy” from the pop-up menu right-click the project name in the eclipse window and select paste” </s>
<s> if you also have trouble with that you can try using the import” command in eclipse’s file” menu select file system” ( under general” ) in the window that pops up click next” and provide the necessary information in the next window ( unfortunately using the ﬁle import window is rather complicated </s>
<s> if you ﬁnd that you have to use it you should consult the eclipse documentation about it ) in any case textio should appear in the src directory of your project inside a package named default package” </s>
<s> once a ﬁle is in this list you can open it by double-clicking it it will appear in the editing area of the eclipse window to run any of the java programs from this textbook copy the source code ﬁle into your eclipse java project in the same way that you did for textiojava </s>
<s> to run the program rightclick the ﬁle name in the package explorer view ( or control-click in mac os ) </s>
<s> in the menu that pops up go to the run as” submenu and select java application” </s>
<s> the program will be executed </s>
<s> if the program writes to standard output the output will appear in the console” view in the area of the eclipse window below the editing area </s>
<s> if the program uses textio for input you will have to type the required input into the console” view—click the console” view before you start typing so that the characters that you type will be sent to the correct part of the window ( note that if you don’t like doing i/o in the console” view you can use an alternative version of textiojava that opens a separate window for i/o </s>
<s> you can ﬁnd this gui” version of textio in a directory named textio-gui inside this textbook’s source directory ) you can have more than one program in the same eclipse project or you can create additional projects to organize your work better </s>
<s> remember to place a copy of textiojava in any project that requires it ∗ ∗ ∗ to create your own java program you must create a new java class </s>
<s> to do this right-click the java project name in the project explorer” view </s>
<s> go to the new” submenu of the popup menu and select class” ( alternatively there is a small icon at the top of the eclipse window that you can click to create a new java class ) in the window that opens type in the name of the class and click the finish” button </s>
<s> the class name must be a legal java identiﬁer </s>
<s> note that you want the name of the class not the name of the source code ﬁle so don’t add java” at the end of the name </s>
<s> the class should appear inside the default package” and it should 58 chapter 2 </s>
<s> names and things automatically open in the editing area so that you can start typing in your program eclipse has several features that aid you as you type your code </s>
<s> it will underline any syntax error with a jagged red line and in some cases will place an error marker in the left border of the edit window </s>
<s> if you hover the mouse cursor over the error marker or over the error itself a description of the error will appear </s>
<s> note that you do not have to get rid of every error immediately as you type some errors will go away as you type in more of the program </s>
<s> if an error marker displays a small light bulb” eclipse is oﬀering to try to ﬁx the error for you click the light bulb to get a list of possible ﬁxes then double click the ﬁx that you want to apply </s>
<s> for example if you use an undeclared variable in your program eclipse will oﬀer to declare it for you </s>
<s> you can actually use this error-correcting feature to get eclipse to write certain types of code for you! unfortunately you’ll ﬁnd that you won’t understand a lot of the proposed ﬁxes until you learn more about the java language and it is not a good idea to apply a ﬁx that you don’t understand—often that will just make things worse in the end eclipse will also look for spelling errors in comments and will underline them with jagged red lines </s>
<s> hover your mouse over the error to get a list of possible correct spellings another essential eclipse feature is content assist </s>
<s> content assist can be invoked by typing control-space </s>
<s> it will oﬀer possible completions of whatever you are typing at the moment </s>
<s> for example if you type part of an identiﬁer and hit control-space you will get a list of identiﬁers that start with the characters that you have typed use the up and down arrow keys to select one of the items in the list and press return or enter ( or hit escape to dismiss the list ) if there is only one possible completion when you hit control-space it will be inserted automatically by default content assist will also pop up automatically after a short delay when you type a period or certain other characters </s>
<s> for example if you type textio” and pause for just a fraction of a second you will get a list of all the subroutines in the textio class </s>
<s> personally i ﬁnd this auto-activation annoying </s>
<s> you can disable it in the eclipse preferences ( look under java / editor / content assist and turn oﬀ the enable auto activation” option ) you can still call up code assist manually with control-space once you have an error-free program you can run it as described above by right-clicking its name in the package explorer and using run as / java application” </s>
<s> you can also right-click on the program itself in an editor window </s>
<s> if you ﬁnd a problem when you run it it’s very easy to go back to the editor make changes and run it again </s>
<s> note that using eclipse there is no explicit compile” command </s>
<s> the source code ﬁles in your project are automatically compiled and are re-compiled whenever you modify them if you use netbeans instead of eclipse the procedures are similar </s>
<s> you still have to create new project ( of type java application” ) </s>
<s> you can add an existing source code ﬁle to a project by dragging the ﬁle onto the source packages” folder in the project and you can create your own classes by right-clicking the project name and selecting new/java class </s>
<s> to run a program right-click the ﬁle that contains the main routine and select the run file” command netbeans has a code completion” feature that is similar to eclipse’s content assist” one thing that you have to watch with netbeans is that it might want to create classes in ( nondefault ) packages when you create a new java class make sure that the package” input box is left blank 264 the problem of packages every class in java is contained in something called a package </s>
<s> classes that are not explicitly put into a diﬀerent package are in the default” package </s>
<s> almost all the examples in this 26 </s>
<s> programming environments 59 textbook are in the default package and i will not even discuss packages in any depth until section 45 </s>
<s> however some ides might force you to pay attention to packages when you create a class in eclipse you might notice a message that says that the use of the default package is discouraged” although this is true i have chosen to use it anyway since it seems easier for beginning programmers to avoid the whole issue of packages at least at ﬁrst </s>
<s> some ides like netbeans are even less willing than eclipse to use the default package netbeans inserts a package name automatically in the class creation dialog and you have to delete that name if you want to create the class in the default package </s>
<s> if you do create a class in a package the source code starts with a line that speciﬁes which package the class is in </s>
<s> for example if the class is in a package named testpkg then the ﬁrst line of the source code will be package testpkg in an ide this will not cause any problem unless the program you are writing depends on textio </s>
<s> you will not be able to use textio in a program unless textio is in the same package as the program </s>
<s> you can put textio in a named non-default package but you have to modify the source code ﬁle textiojava to specify the package just add a package statement like the one shown above to the very beginning of the ﬁle with the appropriate package name ( the ide might do this for you if you copy textiojava into a non-default package ) once you’ve done this the example should run in the same way as if it were in the default package by the way if you use packages in a command-line environment other complications arise for example if a class is in a package named testpkg then the source code ﬁle must be in a subdirectory named pkg” inside a directory named test” that is in turn inside your main java working directory </s>
<s> nevertheless when you compile or execute the program you should be in the main directory not in a subdirectory </s>
<s> when you compile the source code ﬁle you have to include the name of the directory in the command use javac test/pkg/classnamejava” on linux or mac os or javac testpkgclassnamejava” on windows </s>
<s> the command for executing the program is then java testpkgclassname” with a period separating the package name from the class name </s>
<s> however you will not need to worry about any of that when working with almost all of the examples in this book 60 chapter 2 </s>
<s> names and things exercises for chapter 2 1 </s>
<s> write a program that will print your initials to standard output in letters that are nine lines tall </s>
<s> each big letter should be made up of a bunch of *’s </s>
<s> for example if your initials were dje” then the output would look something like ****** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ***** ************* ** ** ** ** ** ** ** ** ** ** **** ********** ** ** ** ******** ** ** ** ********** 2 </s>
<s> write a program that simulates rolling a pair of dice </s>
<s> you can simulate rolling one die by choosing one of the integers 1 2 3 4 5 or 6 at random </s>
<s> the number you pick represents the number on the die after it is rolled </s>
<s> as pointed out in section 25 the expression ( int )( mathrandom( )*6 ) + 1 does the computation you need to select a random integer between 1 and 6 </s>
<s> you can assign this value to a variable to represent one of the dice that are being rolled </s>
<s> do this twice and add the results together to get the total roll </s>
<s> your program should report the number showing on each die as well as the total roll </s>
<s> for example the first die comes up 3 the second die comes up 5 your total roll is 8 3 </s>
<s> write a program that asks the user’s name and then greets the user by name </s>
<s> before outputting the user’s name convert it to upper case letters </s>
<s> for example if the user’s name is fred then the program should respond hello fred nice to meet you!” 4 </s>
<s> write a program that helps the user count his change </s>
<s> the program should ask how many quarters the user has then how many dimes then how many nickels then how many pennies </s>
<s> then the program should tell the user how much money he has expressed in dollars 5 </s>
<s> if you have n eggs then you have n/12 dozen eggs with n%12 eggs left over ( this is essentially the deﬁnition of the / and % operators for integers ) write a program that asks the user how many eggs she has and then tells the user how many dozen eggs she has and how many extra eggs are left over a gross of eggs is equal to 144 eggs </s>
<s> extend your program so that it will tell the user how many gross how many dozen and how many left over eggs she has </s>
<s> for example if the user says that she has 1342 eggs then your program would respond with your number of eggs is 9 gross 3 dozen and 10 exercises 61 since 1342 is equal to 9*144 + 3*12 + 10 6 </s>
<s> suppose that a ﬁle named testdatatxt” contains the following information the ﬁrst line of the ﬁle is the name of a student </s>
<s> each of the next three lines contains an integer the integers are the student’s scores on three exams </s>
<s> write a program that will read the information in the ﬁle and display ( on standard output ) a message the contains the name of the student and the student’s average grade on the three exams </s>
<s> the average is obtained by adding up the individual exam grades and then dividing by the number of exams 62 chapter 2 </s>
<s> names and things quiz on chapter 2 1 </s>
<s> brieﬂy explain what is meant by the syntax and the semantics of a programming language give an example to illustrate the diﬀerence between a syntax error and a semantics error 2 </s>
<s> what does the computer do when it executes a variable declaration statement </s>
<s> give an example 3 </s>
<s> what is a type as this term relates to programming 4 </s>
<s> one of the primitive types in java is boolean </s>
<s> what is the boolean type where are boolean values used what are its possible values 5 </s>
<s> give the meaning of each of the following java operators a ) ++ b ) && c ) != 6 </s>
<s> explain what is meant by an assignment statement and give an example </s>
<s> what are assignment statements used for 7 </s>
<s> what is meant by precedence of operators 8 </s>
<s> what is a literal 9 </s>
<s> in java classes have two fundamentally diﬀerent purposes </s>
<s> what are they 10 </s>
<s> what is the diﬀerence between the statement x = textiogetdouble( )” and the statement x = textiogetlndouble( )” 11 </s>
<s> explain why the value of the expression 2 + 3 + test is the string 5test while the value of the expression test + 2 + 3 is the string test23 </s>
<s> what is the value of test + 2 * 3 12 </s>
<s> integrated development environments such as eclipse often use syntax coloring which assigns various colors to the characters in a program to reﬂect the syntax of the language a student notices that eclipse colors the word string diﬀerently from int double and boolean </s>
<s> the student asks why string should be a diﬀerent color since all these words are names of types </s>
<s> what’s the answer to the student’s question chapter 3 programming in the small ii control the basic building blocks of programs—variables expressions assignment statements and subroutine call statements—were covered in the previous chapter </s>
<s> starting with this chapter we look at how these building blocks can be put together to build complex programs with more interesting behavior since we are still working on the level of programming in the small” in this chapter we are interested in the kind of complexity that can occur within a single subroutine </s>
<s> on this level complexity is provided by control structures </s>
<s> the two types of control structures loops and branches can be used to repeat a sequence of statements over and over or to choose among two or more possible courses of action </s>
<s> java includes several control structures of each type and we will look at each of them in some detail this chapter will also begin the study of program design </s>
<s> given a problem how can you come up with a program to solve that problem we’ll look at a partial answer to this question in section 32 31 blocks loops and branches the ability of a computer to perform complex tasks is built on just a few ways of combining simple commands into control structures </s>
<s> in java there are just six such structures that are used to determine the normal ﬂow of control in a program—and in fact just three of them would be enough to write programs to perform any task </s>
<s> the six control structures are the block the while loop the dowhile loop the for loop the if statement and the switch statement </s>
<s> each of these structures is considered to be a single statement” but each is in fact a structured statement that can contain one or more other statements inside itself 311 blocks the block is the simplest type of structured statement </s>
<s> its purpose is simply to group a sequence of statements into a single statement </s>
<s> the format of a block is { statements } 63 64 chapter 3 </s>
<s> control that is it consists of a sequence of statements enclosed between a pair of braces {” and }” in fact it is possible for a block to contain no statements at all such a block is called an empty block and can actually be useful at times </s>
<s> an empty block consists of nothing but an empty pair of braces </s>
<s> block statements usually occur inside other statements where their purpose is to group together several statements into a unit </s>
<s> however a block can be legally used wherever a statement can occur </s>
<s> there is one place where a block is required as you might have already noticed in the case of the main subroutine of a program the deﬁnition of a subroutine is a block since it is a sequence of statements enclosed inside a pair of braces i should probably note again at this point that java is what is called a free-format language there are no syntax rules about how the language has to be arranged on a page </s>
<s> so for example you could write an entire block on one line if you want </s>
<s> but as a matter of good programming style you should lay out your program on the page in a way that will make its structure as clear as possible </s>
<s> in general this means putting one statement per line and using indentation to indicate statements that are contained inside control structures </s>
<s> this is the format that i will generally use in my examples here are two examples of blocks { systemoutprint( the answer is ) systemoutprintln( ans ) } { // this block exchanges the values of x and y int temp // a temporary variable for use in this block temp = x // save a copy of the value of x in temp x = y // copy the value of y into x y = temp // copy the value of temp into y } in the second example a variable temp is declared inside the block </s>
<s> this is perfectly legal and it is good style to declare a variable inside a block if that variable is used nowhere else but inside the block </s>
<s> a variable declared inside a block is completely inaccessible and invisible from outside that block </s>
<s> when the computer executes the variable declaration statement it allocates memory to hold the value of the variable </s>
<s> when the block ends that memory is discarded ( that is made available for reuse ) </s>
<s> the variable is said to be local to the block there is a general concept called the scope” of an identiﬁer </s>
<s> the scope of an identiﬁer is the part of the program in which that identiﬁer is valid </s>
<s> the scope of a variable deﬁned inside a block is limited to that block and more speciﬁcally to the part of the block that comes after the declaration of the variable 312 the basic while loop the block statement by itself really doesn’t aﬀect the ﬂow of control in a program </s>
<s> the ﬁve remaining control structures do </s>
<s> they can be divided into two classes loop statements and branching statements </s>
<s> you really just need one control structure from each category in order to have a completely general-purpose programming language </s>
<s> more than that is just convenience in this section i’ll introduce the while loop and the if statement </s>
<s> i’ll give the full details of these statements and of the other three control structures in later sections a while loop is used to repeat a given statement over and over </s>
<s> of course it’s not likely that you would want to keep repeating it forever </s>
<s> that would be an inﬁnite loop which is 31 </s>
<s> blocks loops and branches 65 generally a bad thing ( there is an old story about computer pioneer grace murray hopper who read instructions on a bottle of shampoo telling her to lather rinse repeat” as the story goes she claims that she tried to follow the directions but she ran out of shampoo ( in case you don’t get it this is a joke about the way that computers mindlessly follow instructions ) ) to be more speciﬁc a while loop will repeat a statement over and over but only so long as a speciﬁed condition remains true </s>
<s> a while loop has the form while ( boolean-expression ) statement since the statement can be and usually is a block many while loops have the form while ( boolean-expression ) { statements } some programmers think that the braces should always be included as a matter of style even when there is only one statement between them but i don’t always follow that advice myself the semantics of the while statement go like this when the computer comes to a while statement it evaluates the boolean-expression which yields either true or false as its value if the value is false the computer skips over the rest of the while loop and proceeds to the next command in the program </s>
<s> if the value of the expression is true the computer executes the statement or block of statements inside the loop </s>
<s> then it returns to the beginning of the while loop and repeats the process </s>
<s> that is it re-evaluates the boolean-expression ends the loop if the value is false and continues it if the value is true </s>
<s> this will continue over and over until the value of the expression is false if that never happens then there will be an inﬁnite loop here is an example of a while loop that simply prints out the numbers 1 2 3 4 5 int number // the number to be printed number = 1 // start with 1 while ( number < 6 ) { // keep going as long as number is < 6 systemoutprintln( number ) number = number + 1 // go on to the next number } systemoutprintln( done! ) the variable number is initialized with the value 1 </s>
<s> so the ﬁrst time through the while loop when the computer evaluates the expression number < 6” it is asking whether 1 is less than 6 which is true </s>
<s> the computer therefore proceeds to execute the two statements inside the loop </s>
<s> the ﬁrst statement prints out 1” </s>
<s> the second statement adds 1 to number and stores the result back into the variable number the value of number has been changed to 2 </s>
<s> the computer has reached the end of the loop so it returns to the beginning and asks again whether number is less than 6 </s>
<s> once again this is true so the computer executes the loop again this time printing out 2 as the value of number and then changing the value of number to 3 </s>
<s> it continues in this way until eventually number becomes equal to 6 </s>
<s> at that point the expression number < 6” evaluates to false </s>
<s> so the computer jumps past the end of the loop to the next statement and prints out the message done!” </s>
<s> note that when the loop ends the value of number is 6 but the last value that was printed was 5 by the way you should remember that you’ll never see a while loop standing by itself in a real program </s>
<s> it will always be inside a subroutine which is itself deﬁned inside some class </s>
<s> as an example of a while loop used inside a complete program here is a little program 66 chapter 3 </s>
<s> control that computes the interest on an investment over several years </s>
<s> this is an improvement over examples from the previous chapter that just reported the results for one year /** * * * * */ this class implements a simple program that will compute the amount of interest that is earned on an investment over a period of 5 years </s>
<s> the initial amount of the investment and the interest rate are input by the user </s>
<s> the value of the investment at the end of each year is output public class interest3 { public static void main( string[] args ) { double principal double rate // the value of the investment // the annual interest rate /* get the initial investment and interest rate from the user */ systemoutprint( enter the initial investment ) principal = textiogetlndouble( ) systemoutprintln( ) systemoutprintln( enter the annual interest rate ) systemoutprint( enter a decimal not a percentage ) rate = textiogetlndouble( ) systemoutprintln( ) /* simulate the investment for 5 years */ int years // counts the number of years that have passed years = 0 while ( years < 5 ) { double interest // interest for this year interest = principal * rate principal = principal + interest // add it to principal years = years + 1 // count the current year systemoutprint( the value of the investment after ) systemoutprint( years ) systemoutprint( years is $ ) systemoutprintf( %12f principal ) systemoutprintln( ) } // end of while loop } // end of main( ) } // end of class interest3 you should study this program and make sure that you understand what the computer does step-by-step as it executes the while loop 313 the basic if statement an if statement tells the computer to take one of two alternative courses of action depending on whether the value of a given boolean-valued expression is true or false </s>
<s> it is an example of a branching” or decision” statement </s>
<s> an if statement has the form 31 </s>
<s> blocks loops and branches if ( boolean-expression statement else statement 67 ) when the computer executes an if statement it evaluates the boolean expression </s>
<s> if the value is true the computer executes the ﬁrst statement and skips the statement that follows the else” </s>
<s> if the value of the expression is false then the computer skips the ﬁrst statement and executes the second one </s>
<s> note that in any case one and only one of the two statements inside the if statement is executed </s>
<s> the two statements represent alternative courses of action the computer decides between these courses of action based on the value of the boolean expression in many cases you want the computer to choose between doing something and not doing it </s>
<s> you can do this with an if statement that omits the else part if ( boolean-expression statement ) to execute this statement the computer evaluates the expression </s>
<s> if the value is true the computer executes the statement that is contained inside the if statement if the value is false the computer skips over that statement of course either or both of the statements in an if statement can be a block and again many programmers prefer to add the braces even when they contain just a single statement so an if statement often looks like if ( boolean-expression statements } else { statements } ) { if ( boolean-expression statements } ) { or as an example here is an if statement that exchanges the value of two variables x and y but only if x is greater than y to begin with </s>
<s> after this if statement has been executed we can be sure that the value of x is deﬁnitely less than or equal to the value of y if ( x > y ) { int temp temp = x x = y y = temp } // // // // a temporary variable for use in this block save a copy of the value of x in temp copy the value of y into x copy the value of temp into y finally here is an example of an if statement that includes an else part </s>
<s> see if you can ﬁgure out what it does and why it would be used if ( years > 1 ) { // handle case for 2 or more years systemoutprint( the value of the investment after ) systemoutprint( years ) systemoutprint( years is $ ) } 68 chapter 3 </s>
<s> control else { // handle case for 1 year systemoutprint( the value of the investment after 1 year is $ ) } // end of if statement systemoutprintf( %12f principal ) // this is done in any case i’ll have more to say about control structures later in this chapter </s>
<s> but you already know the essentials </s>
<s> if you never learned anything more about control structures you would already know enough to perform any possible computing task </s>
<s> simple looping and branching are all you really need! 32 algorithm development programming is difficult ( like many activities that are useful and worthwhile—and like most of those activities it can also be rewarding and a lot of fun ) </s>
<s> when you write a program you have to tell the computer every small detail of what to do </s>
<s> and you have to get everything exactly right since the computer will blindly follow your program exactly as written </s>
<s> how then do people write any but the most simple programs it’s not a big mystery actually </s>
<s> it’s a matter of learning to think in the right way a program is an expression of an idea </s>
<s> a programmer starts with a general idea of a task for the computer to perform </s>
<s> presumably the programmer has some idea of how to perform the task by hand at least in general outline </s>
<s> the problem is to ﬂesh out that outline into a complete unambiguous step-by-step procedure for carrying out the task </s>
<s> such a procedure is called an algorithm” ( technically an algorithm is an unambiguous step-by-step procedure that terminates after a ﬁnite number of steps we don’t want to count procedures that go on forever ) an algorithm is not the same as a program </s>
<s> a program is written in some particular programming language </s>
<s> an algorithm is more like the idea behind the program but it’s the idea of the steps the program will take to perform its task not just the idea of the task itself </s>
<s> when describing an algorithm the steps don’t necessarily have to be speciﬁed in complete detail as long as the steps are unambiguous and it’s clear that carrying out the steps will accomplish the assigned task </s>
<s> an algorithm can be expressed in any language including english </s>
<s> of course an algorithm can only be expressed as a program if all the details have been ﬁlled in so where do algorithms come from usually they have to be developed often with a lot of thought and hard work </s>
<s> skill at algorithm development is something that comes with practice but there are techniques and guidelines that can help </s>
<s> i’ll talk here about some techniques and guidelines that are relevant to programming in the small” and i will return to the subject several times in later chapters 321 pseudocode and stepwise reﬁnement when programming in the small you have a few basics to work with variables assignment statements and input/output routines </s>
<s> you might also have some subroutines objects or other building blocks that have already been written by you or someone else ( input/output routines fall into this class ) you can build sequences of these basic instructions and you can also combine them into more complex control structures such as while loops and if statements suppose you have a task in mind that you want the computer to perform </s>
<s> one way to proceed is to write a description of the task and take that description as an outline of the algorithm you want to develop </s>
<s> then you can reﬁne and elaborate that description gradually adding steps and detail until you have a complete algorithm that can be translated directly 32 </s>
<s> algorithm development 69 into programming language </s>
<s> this method is called stepwise reﬁnement and it is a type of top-down design </s>
<s> as you proceed through the stages of stepwise reﬁnement you can write out descriptions of your algorithm in pseudocode—informal instructions that imitate the structure of programming languages without the complete detail and perfect syntax of actual program code as an example let’s see how one might develop the program from the previous section which computes the value of an investment over ﬁve years </s>
<s> the task that you want the program to perform is compute and display the value of an investment for each of the next ﬁve years where the initial investment and interest rate are to be speciﬁed by the user” you might then write—or at least think—that this can be expanded as get the compute display compute display compute display compute display compute display user’s input the value of the investment after 1 year the value the value after 2 years the value the value after 3 years the value the value after 4 years the value the value after 5 years the value this is correct but rather repetitive </s>
<s> and seeing that repetition you might notice an opportunity to use a loop </s>
<s> a loop would take less typing </s>
<s> more important it would be more general essentially the same loop will work no matter how many years you want to process so you might rewrite the above sequence of steps as get the user’s input while there are more years to process compute the value after the next year display the value following this algorithm would certainly solve the problem but for a computer we’ll have to be more explicit about how to get the user’s input” how to compute the value after the next year” and what it means to say there are more years to process” we can expand the step get the user’s input” into ask the user for the initial investment read the user’s response ask the user for the interest rate read the user’s response to ﬁll in the details of the step compute the value after the next year” you have to know how to do the computation yourself ( maybe you need to ask your boss or professor for clariﬁcation ) let’s say you know that the value is computed by adding some interest to the previous value </s>
<s> then we can reﬁne the while loop to while there compute add the display are more years to process the interest interest to the value the value 70 chapter 3 </s>
<s> control as for testing whether there are more years to process the only way that we can do that is by counting the years ourselves </s>
<s> this displays a very common pattern and you should expect to use something similar in a lot of programs we have to start with zero years add one each time we process a year and stop when we reach the desired number of years </s>
<s> so the while loop becomes years = 0 while years years = compute add the display < 5 years + 1 the interest interest to the value the value we still have to know how to compute the interest </s>
<s> let’s say that the interest is to be computed by multiplying the interest rate by the current value of the investment </s>
<s> putting this together with the part of the algorithm that gets the user’s inputs we have the complete algorithm ask the user for the initial investment read the user’s response ask the user for the interest rate read the user’s response years = 0 while years < 5 years = years + 1 compute interest = value * interest rate add the interest to the value display the value finally we are at the point where we can translate pretty directly into proper programminglanguage syntax </s>
<s> we still have to choose names for the variables decide exactly what we want to say to the user and so forth </s>
<s> having done this we could express our algorithm in java as double principal rate interest // declare the variables int years systemoutprint( type initial investment ) principal = textiogetlndouble( ) systemoutprint( type interest rate ) rate = textiogetlndouble( ) years = 0 while ( years < 5 ) { years = years + 1 interest = principal * rate principal = principal + interest systemoutprintln( principal ) } this still needs to be wrapped inside a complete program it still needs to be commented and it really needs to print out more information in a nicer format for the user </s>
<s> but it’s essentially the same program as the one in the previous section ( note that the pseudocode algorithm uses indentation to show which statements are inside the loop </s>
<s> in java indentation is completely ignored by the computer so you need a pair of braces to tell the computer which statements are in the loop </s>
<s> if you leave out the braces the only statement inside the loop would be years = years + 1 </s>
<s> the other statements would only be executed once after the loop 32 </s>
<s> algorithm development 71 ends </s>
<s> the nasty thing is that the computer won’t notice this error for you like it would if you left out the parentheses around ( years < 5 )” </s>
<s> the parentheses are required by the syntax of the while statement </s>
<s> the braces are only required semantically </s>
<s> the computer can recognize syntax errors but not semantic errors ) one thing you should have noticed here is that my original speciﬁcation of the problem— compute and display the value of an investment for each of the next ﬁve years”—was far from being complete </s>
<s> before you start writing a program you should make sure you have a complete speciﬁcation of exactly what the program is supposed to do </s>
<s> in particular you need to know what information the program is going to input and output and what computation it is going to perform </s>
<s> here is what a reasonably complete speciﬁcation of the problem might look like in this example write a program that will compute and display the value of an investment for each of the next ﬁve years </s>
<s> each year interest is added to the value </s>
<s> the interest is computed by multiplying the current value by a ﬁxed interest rate </s>
<s> assume that the initial value and the rate of interest are to be input by the user when the program is run” 322 the 3n+1 problem et’s do another example working this time with a program that you haven’t already seen </s>
<s> the assignment here is an abstract mathematical problem that is one of my favorite programming exercises </s>
<s> this time we’ll start with a more complete speciﬁcation of the task to be performed given a positive integer n deﬁne the ’3n+1’ sequence starting from n as follows if n is an even number then divide n by two but if n is odd then multiply n by 3 and add 1 </s>
<s> continue to generate numbers in this way until n becomes equal to 1 </s>
<s> for example starting from n = 3 which is odd we multiply by 3 and add 1 giving n = 3*3+1 = 10 </s>
<s> then since n is even we divide by 2 giving n = 10/2 = 5 </s>
<s> we continue in this way stopping when we reach 1 giving the complete sequence 3 10 5 16 8 4 2 1 write a program that will read a positive integer from the user and will print out the 3n+1 sequence starting from that integer </s>
<s> the program should also count and print out the number of terms in the sequence” a general outline of the algorithm for the program we want is get a positive integer n from the user compute print and count each number in the sequence output the number of terms the bulk of the program is in the second step </s>
<s> we’ll need a loop since we want to keep computing numbers until we get 1 </s>
<s> to put this in terms appropriate for a while loop we need to know when to continue the loop rather than when to stop it we want to continue as long as the number is not 1 </s>
<s> so we can expand our pseudocode algorithm to 72 chapter 3 </s>
<s> control get a positive integer n from the user while n is not 1 compute n = next term output n count this term output the number of terms in order to compute the next term the computer must take diﬀerent actions depending on whether n is even or odd </s>
<s> we need an if statement to decide between the two cases get a positive integer n from the user while n is not 1 if n is even compute n = n/2 else compute n = 3 * n + 1 output n count this term output the number of terms we are almost there </s>
<s> the one problem that remains is counting </s>
<s> counting means that you start with zero and every time you have something to count you add one </s>
<s> we need a variable to do the counting ( again this is a common pattern that you should expect to see over and over ) with the counter added we get get a positive integer n from the user et counter = 0 while n is not 1 if n is even compute n = n/2 else compute n = 3 * n + 1 output n add 1 to counter output the counter we still have to worry about the very ﬁrst step </s>
<s> how can we get a positive integer from the user if we just read in a number it’s possible that the user might type in a negative number or zero </s>
<s> if you follow what happens when the value of n is negative or zero you’ll see that the program will go on forever since the value of n will never become equal to 1 </s>
<s> this is bad </s>
<s> in this case the problem is probably no big deal but in general you should try to write programs that are foolproof </s>
<s> one way to ﬁx this is to keep reading in numbers until the user types in a positive number ask user to input a positive number et n be the user’s response while n is not positive print an error message read another value for n et counter = 0 while n is not 1 if n is even compute n = n/2 else compute n = 3 * n + 1 32 </s>
<s> algorithm development 73 output n add 1 to counter output the counter the ﬁrst while loop will end only when n is a positive number as required ( a common beginning programmer’s error is to use an if statement instead of a while statement here if n is not positive ask the user to input another value” the problem arises if the second number input by the user is also non-positive </s>
<s> the if statement is only executed once so the second input number is never tested and the program proceeds into an inﬁnite loop </s>
<s> with the while loop after the second number is input the computer jumps back to the beginning of the loop and tests whether the second number is positive </s>
<s> if not it asks the user for a third number and it will continue asking for numbers until the user enters an acceptable input ) here is a java program implementing this algorithm </s>
<s> it uses the operators <= to mean is less than or equal to” and != to mean is not equal to” to test whether n is even it uses n % 2 == 0” </s>
<s> all the operators used here were discussed in section 25 /** * this program prints out a 3n+1 sequence starting from a positive * integer specified by the user </s>
<s> it also counts the number of * terms in the sequence and prints out that number */ public class threen1 { public static void main( string[] args ) { int n // for computing terms in the sequence int counter // for counting the terms textioput( starting point for sequence ) n = textiogetlnint( ) while ( n <= 0 ) { textioput( the starting point must be positive </s>
<s> please try again ) n = textiogetlnint( ) } // at this point we know that n > 0 counter = 0 while ( n != 1 ) { if ( n % 2 == 0 ) n = n / 2 else n = 3 * n + 1 textioputln( n ) counter = counter + 1 } textioputln( ) textioput( there were ) textioput( counter ) textioputln( terms in the sequence ) } } // end of main( ) // end of class threen1 74 chapter 3 </s>
<s> control two ﬁnal notes on this program first you might have noticed that the ﬁrst term of the sequence—the value of n input by the user—is not printed or counted by this program </s>
<s> is this an error it’s hard to say </s>
<s> was the speciﬁcation of the program careful enough to decide this is the type of thing that might send you back to the boss/professor for clariﬁcation </s>
<s> the problem ( if it is one! ) can be ﬁxed easily enough </s>
<s> just replace the line counter = 0” before the while loop with the two lines textioputln( n ) counter = 1 // print out initial term // and count it second there is the question of why this problem is at all interesting </s>
<s> well it’s interesting to mathematicians and computer scientists because of a simple question about the problem that they haven’t been able to answer will the process of computing the 3n+1 sequence ﬁnish after a ﬁnite number of steps for all possible starting values of n although individual sequences are easy to compute no one has been able to answer the general question </s>
<s> to put this another way no one knows whether the process of computing 3n+1 sequences can properly be called an algorithm since an algorithm is required to terminate after a ﬁnite number of steps! ( this discussion assumes that the value of n can take on arbitrarily large integer values which is not true for a variable of type int in a java program </s>
<s> when the value of n in the program becomes too large to be represented as a 32-bit int the values output by the program are no longer mathematically correct </s>
<s> see exercise 82 ) 323 coding testing debugging it would be nice if having developed an algorithm for your program you could relax press a button and get a perfectly working program </s>
<s> unfortunately the process of turning an algorithm into java source code doesn’t always go smoothly </s>
<s> and when you do get to the stage of a working program it’s often only working in the sense that it does something </s>
<s> unfortunately not what you want it to do after program design comes coding translating the design into a program written in java or some other language </s>
<s> usually no matter how careful you are a few syntax errors will creep in from somewhere and the java compiler will reject your program with some kind of error message </s>
<s> unfortunately while a compiler will always detect syntax errors it’s not very good about telling you exactly what’s wrong </s>
<s> sometimes it’s not even good about telling you where the real error is </s>
<s> a spelling error or missing {” on line 45 might cause the compiler to choke on line 105 </s>
<s> you can avoid lots of errors by making sure that you really understand the syntax rules of the language and by following some basic programming guidelines </s>
<s> for example i never type a {” without typing the matching }” </s>
<s> then i go back and ﬁll in the statements between the braces </s>
<s> a missing or extra brace can be one of the hardest errors to ﬁnd in a large program </s>
<s> always always indent your program nicely </s>
<s> if you change the program change the indentation to match </s>
<s> it’s worth the trouble </s>
<s> use a consistent naming scheme so you don’t have to struggle to remember whether you called that variable interestrate or interestrate in general when the compiler gives multiple error messages don’t try to ﬁx the second error message from the compiler until you’ve ﬁxed the ﬁrst one </s>
<s> once the compiler hits an error in your program it can get confused and the rest of the error messages might just be guesses maybe the best advice is take the time to understand the error before you try to ﬁx it programming is not an experimental science when your program compiles without error you are still not done </s>
<s> you have to test the program to make sure it works correctly </s>
<s> remember that the goal is not to get the right output 32 </s>
<s> algorithm development 75 for the two sample inputs that the professor gave in class </s>
<s> the goal is a program that will work correctly for all reasonable inputs </s>
<s> ideally when faced with an unreasonable input it should respond by gently chiding the user rather than by crashing </s>
<s> test your program on a wide variety of inputs </s>
<s> try to ﬁnd a set of inputs that will test the full range of functionality that you’ve coded into your program </s>
<s> as you begin writing larger programs write them in stages and test each stage along the way </s>
<s> you might even have to write some extra code to do the testing—for example to call a subroutine that you’ve just written </s>
<s> you don’t want to be faced if you can avoid it with 500 newly written lines of code that have an error in there somewhere the point of testing is to ﬁnd bugs—semantic errors that show up as incorrect behavior rather than as compilation errors </s>
<s> and the sad fact is that you will probably ﬁnd them </s>
<s> again you can minimize bugs by careful design and careful coding but no one has found a way to avoid them altogether </s>
<s> once you’ve detected a bug it’s time for debugging </s>
<s> you have to track down the cause of the bug in the program’s source code and eliminate it </s>
<s> debugging is a skill that like other aspects of programming requires practice to master </s>
<s> so don’t be afraid of bugs </s>
<s> learn from them </s>
<s> one essential debugging skill is the ability to read source code—the ability to put aside preconceptions about what you think it does and to follow it the way the computer does—mechanically step-by-step—to see what it really does </s>
<s> this is hard </s>
<s> i can still remember the time i spent hours looking for a bug only to ﬁnd that a line of code that i had looked at ten times had a 1” where it should have had an i” or the time when i wrote a subroutine named windowclosing which would have done exactly what i wanted except that the computer was looking for windowclosing ( with a lower case w” ) </s>
<s> sometimes it can help to have someone who doesn’t share your preconceptions look at your code often it’s a problem just to ﬁnd the part of the program that contains the error </s>
<s> most programming environments come with a debugger which is a program that can help you ﬁnd bugs </s>
<s> typically your program can be run under the control of the debugger </s>
<s> the debugger allows you to set breakpoints” in your program </s>
<s> a breakpoint is a point in the program where the debugger will pause the program so you can look at the values of the program’s variables the idea is to track down exactly when things start to go wrong during the program’s execution the debugger will also let you execute your program one line at a time so that you can watch what happens in detail once you know the general area in the program where the bug is lurking i will confess that i only occasionally use debuggers myself </s>
<s> a more traditional approach to debugging is to insert debugging statements into your program </s>
<s> these are output statements that print out information about the state of the program </s>
<s> typically a debugging statement would say something like systemoutprintln( at start of while loop n = + n ) you need to be able to tell from the output where in your program the output is coming from and you want to know the value of important variables </s>
<s> sometimes you will ﬁnd that the computer isn’t even getting to a part of the program that you think it should be executing remember that the goal is to ﬁnd the ﬁrst point in the program where the state is not what you expect it to be </s>
<s> that’s where the bug is and ﬁnally remember the golden rule of debugging if you are absolutely sure that everything in your program is right and if it still doesn’t work then one of the things that you are absolutely sure of is wrong 76 33 chapter 3 </s>
<s> control the while and dowhile statements statements in java can be either simple statements or compound statements </s>
<s> simple statements such as assignment statements and subroutine call statements are the basic building blocks of a program </s>
<s> compound statements such as while loops and if statements are used to organize simple statements into complex structures which are called control structures because they control the order in which the statements are executed </s>
<s> the next ﬁve sections explore the details of control structures that are available in java starting with the while statement and the dowhile statement in this section </s>
<s> at the same time we’ll look at examples of programming with each control structure and apply the techniques for designing algorithms that were introduced in the previous section 331 the while statement the while statement was already introduced in section 31 </s>
<s> a while loop has the form while ( boolean-expression statement ) the statement can of course be a block statement consisting of several statements grouped together between a pair of braces </s>
<s> this statement is called the body of the loop </s>
<s> the body of the loop is repeated as long as the boolean-expression is true </s>
<s> this boolean expression is called the continuation condition or more simply the test of the loop </s>
<s> there are a few points that might need some clariﬁcation </s>
<s> what happens if the condition is false in the ﬁrst place before the body of the loop is executed even once in that case the body of the loop is never executed at all </s>
<s> the body of a while loop can be executed any number of times including zero </s>
<s> what happens if the condition is true but it becomes false somewhere in the middle of the loop body does the loop end as soon as this happens it doesn’t because the computer continues executing the body of the loop until it gets to the end </s>
<s> only then does it jump back to the beginning of the loop and test the condition and only then can the loop end et’s look at a typical problem that can be solved using a while loop ﬁnding the average of a set of positive integers entered by the user </s>
<s> the average is the sum of the integers divided by the number of integers </s>
<s> the program will ask the user to enter one integer at a time </s>
<s> it will keep count of the number of integers entered and it will keep a running total of all the numbers it has read so far </s>
<s> here is a pseudocode algorithm for the program et sum = 0 // the sum of the integers entered by the user et count = 0 // the number of integers entered by the user while there are more integers to process read an integer add it to the sum count it divide sum by count to get the average print out the average but how can we test whether there are more integers to process a typical solution is to tell the user to type in zero after all the data have been entered </s>
<s> this will work because we are assuming that all the data are positive numbers so zero is not a legal data value </s>
<s> the zero is not itself part of the data to be averaged </s>
<s> it’s just there to mark the end of the real data a data value used in this way is sometimes called a sentinel value </s>
<s> so now the test in the while loop becomes while the input integer is not zero” </s>
<s> but there is another problem! the 33 </s>
<s> while and dowhile 77 ﬁrst time the test is evaluated before the body of the loop has ever been executed no integer has yet been read </s>
<s> there is no input integer” yet so testing whether the input integer is zero doesn’t make sense </s>
<s> so we have to do something before the while loop to make sure that the test makes sense </s>
<s> setting things up so that the test in a while loop makes sense the ﬁrst time it is executed is called priming the loop </s>
<s> in this case we can simply read the ﬁrst integer before the beginning of the loop </s>
<s> here is a revised algorithm et sum = 0 et count = 0 read an integer while the integer is not zero add the integer to the sum count it read an integer divide sum by count to get the average print out the average notice that i’ve rearranged the body of the loop </s>
<s> since an integer is read before the loop the loop has to begin by processing that integer </s>
<s> at the end of the loop the computer reads a new integer </s>
<s> the computer then jumps back to the beginning of the loop and tests the integer that it has just read </s>
<s> note that when the computer ﬁnally reads the sentinel value the loop ends before the sentinel value is processed </s>
<s> it is not added to the sum and it is not counted </s>
<s> this is the way it’s supposed to work </s>
<s> the sentinel is not part of the data </s>
<s> the original algorithm even if it could have been made to work without priming was incorrect since it would have summed and counted all the integers including the sentinel ( since the sentinel is zero the sum would still be correct but the count would be oﬀ by one </s>
<s> such so-called oﬀ-by-one errors are very common </s>
<s> counting turns out to be harder than it looks! ) we can easily turn the algorithm into a complete program </s>
<s> note that the program cannot use the statement average = sum/count” to compute the average </s>
<s> since sum and count are both variables of type int the value of sum/count is an integer </s>
<s> the average should be a real number </s>
<s> we’ve seen this problem before we have to convert one of the int values to a double to force the computer to compute the quotient as a real number </s>
<s> this can be done by type-casting one of the variables to type double </s>
<s> the type cast ( double )sum” converts the value of sum to a real number so in the program the average is computed as average = ( ( double )sum ) / count” </s>
<s> another solution in this case would have been to declare sum to be a variable of type double in the ﬁrst place one other issue is addressed by the program if the user enters zero as the ﬁrst input value there are no data to process </s>
<s> we can test for this case by checking whether count is still equal to zero after the while loop </s>
<s> this might seem like a minor point but a careful programmer should cover all the bases here is the program /** * this program reads a sequence of positive integers input * by the user and it will print out the average of those * integers </s>
<s> the user is prompted to enter one integer at a * time </s>
<s> the user must enter a 0 to mark the end of the * data ( the zero is not counted as part of the data to * be averaged ) the program does not check whether the * user’s input is positive so it will actually add up * both positive and negative input values 78 chapter 3 </s>
<s> control */ public class computeaverage { public static void main( string[] args ) { int inputnumber int sum int count double average // // // // one the the the of the integers input by the user sum of the positive integers number of positive integers average of the positive integers /* initialize the summation and counting variables */ sum = 0 count = 0 /* read and process the user’s input */ textioput( enter your first positive integer ) inputnumber = textiogetlnint( ) while ( inputnumber != 0 ) { sum += inputnumber // add inputnumber to running sum count++ // count the input by adding 1 to count textioput( enter your next positive integer or 0 to end ) inputnumber = textiogetlnint( ) } /* display the result */ if ( count == 0 ) { textioputln( you didn’t enter any data! ) } else { average = ( ( double )sum ) / count textioputln( ) textioputln( you entered + count + positive integers ) textioputf( their average is %13fn average ) } } // end main( ) } // end class computeaverage 332 the dowhile statement sometimes it is more convenient to test the continuation condition at the end of a loop instead of at the beginning as is done in the while loop </s>
<s> the dowhile statement is very similar to the while statement except that the word while” along with the condition that it tests has been moved to the end </s>
<s> the word do” is added to mark the beginning of the loop </s>
<s> a dowhile statement has the form do statement while ( boolean-expression ) or since as usual the statement can be a block 79 33 </s>
<s> while and dowhile do { statements } while ( boolean-expression ) note the semicolon at the very end </s>
<s> this semicolon is part of the statement just as the semicolon at the end of an assignment statement or declaration is part of the statement omitting it is a syntax error ( more generally every statement in java ends either with a semicolon or a right brace ’}’ ) to execute a do loop the computer ﬁrst executes the body of the loop—that is the statement or statements inside the loop—and then it evaluates the boolean expression </s>
<s> if the value of the expression is true the computer returns to the beginning of the do loop and repeats the process if the value is false it ends the loop and continues with the next part of the program since the condition is not tested until the end of the loop the body of a do loop is always executed at least once for example consider the following pseudocode for a game-playing program </s>
<s> the do loop makes sense here instead of a while loop because with the do loop you know there will be at least one game </s>
<s> also the test that is used at the end of the loop wouldn’t even make sense at the beginning do { play a game ask user if he wants to play another game read the user’s response } while ( the user’s response is yes ) et’s convert this into proper java code </s>
<s> since i don’t want to talk about game playing at the moment let’s say that we have a class named checkers and that the checkers class contains a static member subroutine named playgame( ) that plays one game of checkers against the user </s>
<s> then the pseudocode play a game” can be expressed as the subroutine call statement checkersplaygame( )” </s>
<s> we need a variable to store the user’s response </s>
<s> the textio class makes it convenient to use a boolean variable to store the answer to a yes/no question </s>
<s> the input function textiogetlnboolean( ) allows the user to enter the value as yes” or no” yes” is considered to be true and no” is considered to be false </s>
<s> so the algorithm can be coded as boolean wantstocontinue // true if user wants to play again do { checkersplaygame( ) textioput( do you want to play again ) wantstocontinue = textiogetlnboolean( ) } while ( wantstocontinue == true ) when the value of the boolean variable is set to false it is a signal that the loop should end when a boolean variable is used in this way—as a signal that is set in one part of the program and tested in another part—it is sometimes called a ﬂag or ﬂag variable ( in the sense of a signal ﬂag ) by the way a more-than-usually-pedantic programmer would sneer at the test while ( wantstocontinue == true )” this test is exactly equivalent to while ( wantstocontinue )” </s>
<s> testing whether wantstocontinue == true” is true amounts to the same thing as testing whether wantstocontinue” is true </s>
<s> a little less oﬀensive is an expression of the form flag == false” where flag is a boolean variable </s>
<s> the value of flag == false” is exactly the same as the value of !flag” where ! is the boolean negation operator </s>
<s> so 80 chapter 3 </s>
<s> control you can write while ( !flag )” instead of while ( flag == false )” and you can write if ( !flag )” instead of if ( flag == false )” although a dowhile statement is sometimes more convenient than a while statement having two kinds of loops does not make the language more powerful </s>
<s> any problem that can be solved using dowhile loops can also be solved using only while statements and vice versa in fact if dosomething represents any block of program code then do { dosomething } while ( boolean-expression ) has exactly the same eﬀect as dosomething while ( boolean-expression dosomething } ) { similarly while ( boolean-expression dosomething } ) { can be replaced by if ( boolean-expression ) { do { dosomething } while ( boolean-expression } ) without changing the meaning of the program in any way 333 break and continue the syntax of the while and dowhile loops allows you to test the continuation condition at either the beginning of a loop or at the end </s>
<s> sometimes it is more natural to have the test in the middle of the loop or to have several tests at diﬀerent places in the same loop </s>
<s> java provides a general method for breaking out of the middle of any loop </s>
<s> it’s called the break statement which takes the form break when the computer executes a break statement in a loop it will immediately jump out of the loop </s>
<s> it then continues on to whatever follows the loop in the program </s>
<s> consider for example while ( true ) { // looks like it will run forever! textioput( enter a positive number ) n = textiogetlnint( ) if ( n > 0 ) // input is ok jump out of loop break textioputln( your answer must be > 0 ) } // continue here after break 33 </s>
<s> while and dowhile 81 if the number entered by the user is greater than zero the break statement will be executed and the computer will jump out of the loop </s>
<s> otherwise the computer will print out your answer must be > 0” and will jump back to the start of the loop to read another input value the ﬁrst line of this loop while ( true )” might look a bit strange but it’s perfectly legitimate </s>
<s> the condition in a while loop can be any boolean-valued expression </s>
<s> the computer evaluates this expression and checks whether the value is true or false </s>
<s> the boolean literal true” is just a boolean expression that always evaluates to true </s>
<s> so while ( true )” can be used to write an inﬁnite loop or one that will be terminated by a break statement a break statement terminates the loop that immediately encloses the break statement </s>
<s> it is possible to have nested loops where one loop statement is contained inside another </s>
<s> if you use a break statement inside a nested loop it will only break out of that loop not out of the loop that contains the nested loop </s>
<s> there is something called a labeled break statement that allows you to specify which loop you want to break </s>
<s> this is not very common so i will go over it quickly </s>
<s> labels work like this you can put a label in front of any loop </s>
<s> a label consists of a simple identiﬁer followed by a colon </s>
<s> for example a while with a label might look like mainloop while” </s>
<s> inside this loop you can use the labeled break statement break mainloop” to break out of the labeled loop </s>
<s> for example here is a code segment that checks whether two strings s1 and s2 have a character in common </s>
<s> if a common character is found the value of the ﬂag variable nothingincommon is set to false and a labeled break is used to end the processing at that point boolean nothingincommon nothingincommon = true // assume s1 and s2 have no chars in common int ij // variables for iterating through the chars in s1 and s2 i = 0 bigloop while ( i < s1length( ) ) { j = 0 while ( j < s2length( ) ) { if ( s1charat( i ) == s2charat( j ) ) { // s1 and s2 have a common char nothingincommon = false break bigloop // break out of both loops } j++ // go on to the next char in s2 } i++ //go on to the next char in s1 } the continue statement is related to break but less commonly used </s>
<s> a continue statement tells the computer to skip the rest of the current iteration of the loop </s>
<s> however instead of jumping out of the loop altogether it jumps back to the beginning of the loop and continues with the next iteration ( including evaluating the loop’s continuation condition to see whether any further iterations are required ) </s>
<s> as with break when a continue is in a nested loop it will continue the loop that directly contains it a labeled continue” can be used to continue the containing loop instead break and continue can be used in while loops and dowhile loops </s>
<s> they can also be used in for loops which are covered in the next section </s>
<s> in section 36 we’ll see that break can also be used to break out of a switch statement </s>
<s> a break can occur inside an if statement but in that case it does not mean to break out of the if </s>
<s> instead it breaks out of the loop or switch statement that contains the if statement </s>
<s> if the if statement is not contained inside a 82 chapter 3 </s>
<s> control loop or switch then the if statement cannot legally contain a break </s>
<s> a similar consideration applies to continue statements inside ifs 34 the for statement we turn in this section to another type of loop the for statement </s>
<s> any for loop is equivalent to some while loop so the language doesn’t get any additional power by having for statements </s>
<s> but for a certain type of problem a for loop can be easier to construct and easier to read than the corresponding while loop </s>
<s> it’s quite possible that in real programs for loops actually outnumber while loops 341 for loops the for statement makes a common type of while loop easier to write </s>
<s> many while loops have the general form initialization while ( continuation-condition statements update } ) { for example consider this example copied from an example in section 32 years = 0 // initialize the variable years while ( years < 5 ) { // condition for continuing loop interest = principal * rate principal += interest systemoutprintln( principal ) years++ // // do three statements // // update the value of the variable years } this loop can be written as the following equivalent for statement for ( years = 0 years < 5 years++ ) { interest = principal * rate principal += interest systemoutprintln( principal ) } the initialization continuation condition and updating have all been combined in the ﬁrst line of the for loop </s>
<s> this keeps everything involved in the control” of the loop in one place which helps make the loop easier to read and understand </s>
<s> the for loop is executed in exactly the same way as the original code the initialization part is executed once before the loop begins the continuation condition is executed before each execution of the loop and the loop ends when this condition is false </s>
<s> the update part is executed at the end of each execution of the loop just before jumping back to check the condition the formal syntax of the for statement is as follows for ( initialization continuation-condition update statement or using a block statement ) 83 34 </s>
<s> the for statement for ( initialization continuation-condition update statements } ) { the continuation-condition must be a boolean-valued expression </s>
<s> the initialization is usually a declaration or an assignment statement but it can be any expression that would be allowed as a statement in a program </s>
<s> the update can be any expression statement but is usually an increment a decrement or an assignment statement </s>
<s> any of the three can be empty if the continuation condition is empty it is treated as if it were true” so the loop will be repeated forever or until it ends for some other reason such as a break statement ( some people like to begin an inﬁnite loop with for ( )” instead of while ( true )” ) usually the initialization part of a for statement assigns a value to some variable and the update changes the value of that variable with an assignment statement or with an increment or decrement operation </s>
<s> the value of the variable is tested in the continuation condition and the loop ends when this condition evaluates to false </s>
<s> a variable used in this way is called a loop control variable </s>
<s> in the for statement given above the loop control variable is years certainly the most common type of for loop is the counting loop where a loop control variable takes on all integer values between some minimum and some maximum value </s>
<s> a counting loop has the form for ( variable = min statements } variable <= max variable ++ ) { where min and max are integer-valued expressions ( usually constants ) </s>
<s> the variable takes on the values min min +1 min +2 max </s>
<s> the value of the loop control variable is often used in the body of the loop </s>
<s> the for loop at the beginning of this section is a counting loop in which the loop control variable years takes on the values 1 2 3 4 5 </s>
<s> here is an even simpler example in which the numbers 1 2 10 are displayed on standard output for ( n = 1 n <= 10 n++ ) systemoutprintln( n ) for various reasons java programmers like to start counting at 0 instead of 1 and they tend to use a <” in the condition rather than a <=” </s>
<s> the following variation of the above loop prints out the ten numbers 0 1 2 9 for ( n = 0 n < 10 n++ ) systemoutprintln( n ) using < instead of <= in the test or vice versa is a common source of oﬀ-by-one errors in programs </s>
<s> you should always stop and think do i want the ﬁnal value to be processed or not it’s easy to count down from 10 to 1 instead of counting up </s>
<s> just start with 10 decrement the loop control variable instead of incrementing it and continue as long as the variable is greater than or equal to one for ( n = 10 n >= 1 n -- ) systemoutprintln( n ) now in fact the oﬃcial syntax of a for statement actually allows both the initialization part and the update part to consist of several expressions separated by commas </s>
<s> so we can even count up from 1 to 10 and count down from 10 to 1 at the same time! 84 chapter 3 </s>
<s> control for ( i=1 j=10 i <= 10 i++ j -- ) { systemoutprintf( %5d i ) // output i in a 5-character wide column systemoutprintf( %5d j ) // output j in a 5-character column systemoutprintln( ) // and end the line } as a ﬁnal introductory example let’s say that we want to use a for loop that prints out just the even numbers between 2 and 20 that is 2 4 6 8 10 12 14 16 18 20 </s>
<s> there are several ways to do this </s>
<s> just to show how even a very simple problem can be solved in many ways here are four diﬀerent solutions ( three of which would get full credit ) ( 1 ) // // // // there are 10 numbers to print use a for loop to count 1 2 10 </s>
<s> the numbers we want to print are 2*1 2*2 2*10 for ( n = 1 n <= 10 n++ ) { systemoutprintln( 2*n ) } ( 2 ) // // // // use a for loop that counts 2 4 20 directly by adding 2 to n each time through the loop for ( n = 2 n <= 20 n = n + 2 ) { systemoutprintln( n ) } ( 3 ) // // // // count off all the numbers 2 3 4 19 20 but only print out the numbers that are even for ( n = 2 n <= 20 n++ ) { if ( n % 2 == 0 ) // is n even systemoutprintln( n ) } ( 4 ) // // // // irritate the professor with a solution that follows the letter of this silly assignment while making fun of it for ( n = 1 n <= 1 n++ ) { systemoutprintln( 2 4 6 8 10 12 14 16 18 20 ) } perhaps it is worth stressing one more time that a for statement like any statement never occurs on its own in a real program </s>
<s> a statement must be inside the main routine of a program or inside some other subroutine </s>
<s> and that subroutine must be deﬁned inside a class </s>
<s> i should also remind you that every variable must be declared before it can be used and that includes the loop control variable in a for statement </s>
<s> in all the examples that you have seen so far in this section the loop control variables should be declared to be of type int </s>
<s> it is not required 34 </s>
<s> the for statement 85 that a loop control variable be an integer </s>
<s> here for example is a for loop in which the variable ch is of type char using the fact that the ++ operator can be applied to characters as well as to numbers // print out the alphabet on one line of output char ch // the loop control variable // one of the letters to be printed for ( ch = ’a’ ch <= ’z’ ch++ ) systemoutprint( ch ) systemoutprintln( ) 342 example counting divisors et’s look at a less trivial problem that can be solved with a for loop </s>
<s> if n and d are positive integers we say that d is a divisor of n if the remainder when d is divided into n is zero ( equivalently we could say that n is an even multiple of d ) in terms of java programming d is a divisor of n if n % d is zero et’s write a program that inputs a positive integer n from the user and computes how many diﬀerent divisors n has </s>
<s> the numbers that could possibly be divisors of n are 1 2 n to compute the number of divisors of n we can just test each possible divisor of n and count the ones that actually do divide n evenly </s>
<s> in pseudocode the algorithm takes the form get a positive integer n from the user et divisorcount = 0 for each number testdivisor in the range from 1 to n if testdivisor is a divisor of n count it by adding 1 to divisorcount output the count this algorithm displays a common programming pattern that is used when some but not all of a sequence of items are to be processed </s>
<s> the general pattern is for each item in the sequence if the item passes the test process it the for loop in our divisor-counting algorithm can be translated into java code as for ( testdivisor = 1 testdivisor <= n testdivisor++ ) { if ( n % testdivisor == 0 ) divisorcount++ } on a modern computer this loop can be executed very quickly </s>
<s> it is not impossible to run it even for the largest legal int value 2147483647 ( if you wanted to run it for even larger values you could use variables of type long rather than int ) however it does take a signiﬁcant amount of time for very large numbers </s>
<s> so when i implemented this algorithm i decided to output a dot every time the computer has tested one million possible divisors </s>
<s> in the improved version of the program there are two types of counting going on </s>
<s> we have to count the number of divisors and we also have to count the number of possible divisors that have been tested so the program needs two counters </s>
<s> when the second counter reaches 1000000 the program outputs a and resets the counter to zero so that we can start counting the next group of one million </s>
<s> reverting to pseudocode the algorithm now looks like 86 chapter 3 </s>
<s> control get a positive integer n from the user et divisorcount = 0 // number of divisors found et numbertested = 0 // number of possible divisors tested // since the last period was output for each number testdivisor in the range from 1 to n if testdivisor is a divisor of n count it by adding 1 to divisorcount add 1 to numbertested if numbertested is 1000000 print out a reset numbertested to 0 output the count finally we can translate the algorithm into a complete java program /** * this program reads a positive integer from the user * it counts how many divisors that number has and * then it prints the result */ public class countdivisors { public static void main( string[] args ) { int n // a positive integer entered by the user // divisors of this number will be counted int testdivisor // a number between 1 and n that is a // possible divisor of n int divisorcount // number of divisors of n that have been found int numbertested // // // // used to count how many possible divisors of n have been tested </s>
<s> when the number reaches 1000000 a period is output and the value of numbertested is reset to zero /* get a positive integer from the user */ while ( true ) { systemoutprint( enter a positive integer ) n = textiogetlnint( ) if ( n > 0 ) break systemoutprintln( that number is not positive } please try again ) /* count the divisors printing a after every 1000000 tests */ divisorcount = 0 numbertested = 0 for ( testdivisor = 1 testdivisor <= n testdivisor++ ) { if ( n % testdivisor == 0 ) divisorcount++ numbertested++ if ( numbertested == 1000000 ) { systemoutprint( ) 87 34 </s>
<s> the for statement numbertested = 0 } } /* display the result */ systemoutprintln( ) systemoutprintln( the number of divisors of + n + is + divisorcount ) } // end main( ) } // end class countdivisors 343 nested for loops control structures in java are statements that contain statements </s>
<s> in particular control structures can contain control structures </s>
<s> you’ve already seen several examples of if statements inside loops and one example of a while loop inside another while but any combination of one control structure inside another is possible </s>
<s> we say that one structure is nested inside another you can even have multiple levels of nesting such as a while loop inside an if statement inside another while loop </s>
<s> the syntax of java does not set a limit on the number of levels of nesting as a practical matter though it’s diﬃcult to understand a program that has more than a few levels of nesting nested for loops arise naturally in many algorithms and it is important to understand how they work </s>
<s> let’s look at a couple of examples </s>
<s> first consider the problem of printing out a multiplication table like this one 1 2 3 4 5 6 7 8 9 10 11 12 2 4 6 8 10 12 14 16 18 20 22 24 3 6 9 12 15 18 21 24 27 30 33 36 4 8 12 16 20 24 28 32 36 40 44 48 5 10 15 20 25 30 35 40 45 50 55 60 6 12 18 24 30 36 42 48 54 60 66 72 7 14 21 28 35 42 49 56 63 70 77 84 8 9 10 11 12 16 18 20 22 24 24 27 30 33 36 32 36 40 44 48 40 45 50 55 60 48 54 60 66 72 56 63 70 77 84 64 72 80 88 96 72 81 90 99 108 80 90 100 110 120 88 99 110 121 132 96 108 120 132 144 the data in the table are arranged into 12 rows and 12 columns </s>
<s> the process of printing them out can be expressed in a pseudocode algorithm as for each rownumber = 1 2 3 12 print the first twelve multiples of rownumber on one line output a carriage return the ﬁrst step in the for loop can itself be expressed as a for loop </s>
<s> we can expand print the ﬁrst twelve multiples of rownumber on one line” as for n = 1 2 3 12 print n * rownumber so a reﬁned algorithm for printing the table has one for loop nested inside another 88 chapter 3 </s>
<s> control for each rownumber = 1 2 3 12 for n = 1 2 3 12 print n * rownumber output a carriage return we want to print the output in neat columns with each output number taking up four spaces this can be done using formatted output with format speciﬁer %4d </s>
<s> assuming that rownumber and n have been declared to be variables of type int the algorithm can be expressed in java as for ( rownumber = 1 rownumber <= 12 rownumber++ ) { for ( n = 1 n <= 12 n++ ) { // print in 4-character columns systemoutprintf( %4d n * rownumber ) // no carriage return ! } systemoutprintln( ) // add a carriage return at end of the line } this section has been weighed down with lots of examples of numerical processing </s>
<s> for our next example let’s do some text processing </s>
<s> consider the problem of ﬁnding which of the 26 letters of the alphabet occur in a given string </s>
<s> for example the letters that occur in hello world” are d e h l o r and w </s>
<s> more speciﬁcally we will write a program that will list all the letters contained in a string and will also count the number of diﬀerent letters </s>
<s> the string will be input by the user </s>
<s> let’s start with a pseudocode algorithm for the program ask the user to input a string read the response into a variable str et count = 0 ( for counting the number of different letters ) for each letter of the alphabet if the letter occurs in str print the letter add 1 to count output the count since we want to process the entire line of text that is entered by the user we’ll use textiogetln( ) to read it </s>
<s> the line of the algorithm that reads for each letter of the alphabet” can be expressed as for ( letter=’a’ letter<=’z’ letter++ )” </s>
<s> but the body of this for loop needs more thought </s>
<s> how do we check whether the given letter letter occurs in str one idea is to look at each character in the string in turn and check whether that character is equal to letter </s>
<s> we can get the i-th character of str with the function call strcharat( i ) where i ranges from 0 to strlength( ) - 1 one more diﬃculty a letter such as ’a’ can occur in str in either upper or lower case ’a’ or ’a’ </s>
<s> we have to check for both of these </s>
<s> but we can avoid this diﬃculty by converting str to upper case before processing it </s>
<s> then we only have to check for the upper case letter </s>
<s> we can now ﬂesh out the algorithm fully ask the user to input a string read the response into a variable str convert str to upper case et count = 0 for letter = ’a’ ’b’ ’z’ for i = 0 1 strlength( )-1 if letter == strcharat( i ) print letter add 1 to count 34 </s>
<s> the for statement break output the count 89 // jump out of the loop to avoid counting letter twice note the use of break in the nested for loop </s>
<s> it is required to avoid printing or counting a given letter more than once ( in the case where it occurs more than once in the string ) </s>
<s> the break statement breaks out of the inner for loop but not the outer for loop </s>
<s> upon executing the break the computer continues the outer loop with the next value of letter </s>
<s> you should try to ﬁgure out exactly what count would be at the end of this program if the break statement were omitted here is the complete program /** * this program reads a line of text entered by the user * it prints a list of the letters that occur in the text * and it reports how many different letters were found */ public class listletters { public static void main( string[] args ) { string str // line of text entered by the user int count // number of different letters found in str char letter // a letter of the alphabet textioputln( please type in a line of text ) str = textiogetln( ) str = strtouppercase( ) count = 0 textioputln( your input contains the following letters ) textioputln( ) textioput( ) for ( letter = ’a’ letter <= ’z’ letter++ ) { int i // position of a character in str for ( i = 0 i < strlength( ) i++ ) { if ( letter == strcharat( i ) ) { textioput( letter ) textioput( ’ ’ ) count++ break } } } textioputln( ) textioputln( ) textioputln( there were + count + different letters ) } // end main( ) } // end class listletters 90 chapter 3 </s>
<s> control in fact there is actually an easier way to determine whether a given letter occurs in a string str </s>
<s> the built-in function strindexof( letter ) will return -1 if letter does not occur in the string </s>
<s> it returns a number greater than or equal to zero if it does occur </s>
<s> so we could check whether letter occurs in str simply by checking if ( strindexof( letter ) >= 0 )” if we used this technique in the above program we wouldn’t need a nested for loop </s>
<s> this gives you a preview of how subroutines can be used to deal with complexity 344 enums and for-each loops java 50 introduced a new enhanced” form of the for loop that is designed to be convenient for processing data structures </s>
<s> a data structure is a collection of data items considered as a unit </s>
<s> for example a list is a data structure that consists simply of a sequence of items the enhanced for loop makes it easy to apply the same processing to every element of a list or other data structure </s>
<s> data structures are a major topic in computer science but we won’t encounter them in any serious way until chapter 7 </s>
<s> however one of the applications of the enhanced for loop is to enum types and so we consider it brieﬂy here ( enums were introduced in subsection 233 ) the enhanced for loop can be used to perform the same processing on each of the enum constants that are the possible values of an enumerated type </s>
<s> the syntax for doing this is for ( enum-type-name statement variable-name enum-type-name values( ) ) for ( enum-type-name statements } variable-name enum-type-name values( ) ) { or if myenum is the name of any enumerated type then myenumvalues( ) is a function call that returns a list containing all of the values of the enum ( values( ) is a static member function in myenum and of any other enum ) for this enumerated type the for loop would have the form for ( myenum statement variable-name myenumvalues( ) ) the intent of this is to execute the statement once for each of the possible values of the myenum type </s>
<s> the variable-name is the loop control variable </s>
<s> in the statement it represents the enumerated type value that is currently being processed </s>
<s> this variable should not be declared before the for loop it is essentially being declared in the loop itself to give a concrete example suppose that the following enumerated type has been deﬁned to represent the days of the week enum day { monday tuesday wednesday thursday friday saturday sunday } then we could write for ( day d dayvalues( ) ) { systemoutprint( d ) systemoutprint( is day number ) systemoutprintln( dordinal( ) ) } 35 </s>
<s> the if statement 91 dayvalues( ) represents the list containing the seven constants that make up the enumerated type </s>
<s> the ﬁrst time through this loop the value of d would be the ﬁrst enumerated type value daymonday which has ordinal number 0 so the output would be monday is day number 0” the second time through the loop the value of d would be daytuesday and so on through daysunday </s>
<s> the body of the loop is executed once for each item in the list dayvalues( ) with d taking on each of those values in turn </s>
<s> the full output from this loop would be monday is day number 0 tuesday is day number 1 wednesday is day number 2 thursday is day number 3 friday is day number 4 saturday is day number 5 sunday is day number 6 since the intent of the enhanced for loop is to do something for each” item in a data structure it is often called a for-each loop </s>
<s> the syntax for this type of loop is unfortunate </s>
<s> it would be better if it were written something like foreach day d in dayvalues( )” which conveys the meaning much better and is similar to the syntax used in other programming languages for similar types of loops </s>
<s> it’s helpful to think of the colon ( ) in the loop as meaning in” 35 the if statement the first of the two branching statements in java is the if statement which you have already seen in section 31 </s>
<s> it takes the form if ( boolean-expression ) statement-1 else statement-2 as usual the statements inside an if statement can be blocks </s>
<s> the if statement represents a two-way branch </s>
<s> the else part of an if statement—consisting of the word else” and the statement that follows it—can be omitted 351 the dangling else problem now an if statement is in particular a statement </s>
<s> this means that either statement-1 or statement-2 in the above if statement can itself be an if statement </s>
<s> a problem arises however if statement-1 is an if statement that has no else part </s>
<s> this special case is eﬀectively forbidden by the syntax of java </s>
<s> suppose for example that you type if ( x > 0 ) if ( y > 0 ) systemoutprintln( first case ) else systemoutprintln( second case ) now remember that the way you’ve indented this doesn’t mean anything at all to the computer you might think that the else part is the second half of your if ( x > 0 )” statement but the rule that the computer follows attaches the else to if ( y > 0 )” which is closer </s>
<s> that is the computer reads your statement as if it were formatted 92 chapter 3 </s>
<s> control if ( x > 0 ) if ( y > 0 ) systemoutprintln( first case ) else systemoutprintln( second case ) you can force the computer to use the other interpretation by enclosing the nested if in a block if ( x > 0 ) { if ( y > 0 ) systemoutprintln( first case ) } else systemoutprintln( second case ) these two if statements have diﬀerent meanings in the case when x <= 0 the ﬁrst statement doesn’t print anything but the second statement prints second case” 352 the ifelse if construction much more interesting than this technicality is the case where statement-2 the else part of the if statement is itself an if statement </s>
<s> the statement would look like this ( perhaps without the ﬁnal else part ) if ( boolean-expression-1 ) statement-1 else if ( boolean-expression-2 ) statement-2 else statement-3 however since the computer doesn’t care how a program is laid out on the page this is almost always written in the format if ( boolean-expression-1 ) statement-1 else if ( boolean-expression-2 ) statement-2 else statement-3 you should think of this as a single statement representing a three-way branch </s>
<s> when the computer executes this one and only one of the three statements— statement-1 statement2 or statement-3 —will be executed </s>
<s> the computer starts by evaluating boolean-expression1 </s>
<s> if it is true the computer executes statement-1 and then jumps all the way to the end of the outer if statement skipping the other two statement s </s>
<s> if boolean-expression-1 is false the computer skips statement-1 and executes the second nested if statement </s>
<s> to do this it tests the value of boolean-expression-2 and uses it to decide between statement-2 and statement-3 here is an example that will print out one of three diﬀerent messages depending on the value of a variable named temperature 35 </s>
<s> the if statement 93 if ( temperature < 50 ) systemoutprintln( it’s cold ) else if ( temperature < 80 ) systemoutprintln( it’s nice ) else systemoutprintln( it’s hot ) if temperature is say 42 the ﬁrst test is true </s>
<s> the computer prints out the message it’s cold” and skips the rest—without even evaluating the second condition </s>
<s> for a temperature of 75 the ﬁrst test is false so the computer goes on to the second test </s>
<s> this test is true so the computer prints it’s nice” and skips the rest </s>
<s> if the temperature is 173 both of the tests evaluate to false so the computer says it’s hot” ( unless its circuits have been fried by the heat that is ) you can go on stringing together else-if’s” to make multi-way branches with any number of cases if ( boolean-expression-1 ) statement-1 else if ( boolean-expression-2 ) statement-2 else if ( boolean-expression-3 ) statement-3 // ( more cases ) else if ( boolean-expression-n ) statement-n else statement-( n+1 ) the computer evaluates boolean expressions one after the other until it comes to one that is true </s>
<s> it executes the associated statement and skips the rest </s>
<s> if none of the boolean expressions evaluate to true then the statement in the else part is executed </s>
<s> this statement is called a multi-way branch because only one of the statements will be executed </s>
<s> the ﬁnal else part can be omitted </s>
<s> in that case if all the boolean expressions are false none of the statements are executed </s>
<s> of course each of the statements can be a block consisting of a number of statements enclosed between { and } ( admittedly there is lot of syntax here as you study and practice you’ll become comfortable with it ) 353 if statement examples as an example of using if statements lets suppose that x y and z are variables of type int and that each variable has already been assigned a value </s>
<s> consider the problem of printing out the values of the three variables in increasing order </s>
<s> for examples if the values are 42 17 and 20 then the output should be in the order 17 20 42 one way to approach this is to ask where does x belong in the list it comes ﬁrst if it’s less than both y and z </s>
<s> it comes last if it’s greater than both y and z </s>
<s> otherwise it comes in the middle </s>
<s> we can express this with a 3-way if statement but we still have to worry about the order in which y and z should be printed </s>
<s> in pseudocode if ( x < y && x < z ) { output x followed by y and z in their correct order 94 chapter 3 </s>
<s> control } else if ( x > y && x > z ) { output y and z in their correct order followed by x } else { output x in between y and z in their correct order } determining the relative order of y and z requires another if statement so this becomes if ( x < y && x < z ) { if ( y < z ) systemoutprintln( else systemoutprintln( } else if ( x > y && x > z ) { if ( y < z ) systemoutprintln( else systemoutprintln( } else { if ( y < z ) systemoutprintln( else systemoutprintln( } // x comes first x + + y + + z ) x + + z + + y ) // x comes last y + + z + + x ) z + + y + + x ) // x in the middle y + + x + + z ) z + + x + + y ) you might check that this code will work correctly even if some of the values are the same </s>
<s> if the values of two variables are the same it doesn’t matter which order you print them in note by the way that even though you can say in english if x is less than y and z” you can’t say in java if ( x < y && z )” </s>
<s> the && operator can only be used between boolean values so you have to make separate tests x<y and x<z and then combine the two tests with && there is an alternative approach to this problem that begins by asking which order should x and y be printed in” once that’s known you only have to decide where to stick in z </s>
<s> this line of thought leads to diﬀerent java code if ( x < y ) { // x comes before y if ( z < x ) // z comes first systemoutprintln( z + + x + else if ( z > y ) // z comes last systemoutprintln( x + + y + else // z is in the middle systemoutprintln( x + + z + } else { // y comes before x if ( z < y ) // z comes first systemoutprintln( z + + y + else if ( z > x ) // z comes last systemoutprintln( y + + x + else // z is in the middle systemoutprintln( y + + z + } + y ) + z ) + y ) + x ) + z ) + x ) 95 35 </s>
<s> the if statement once again we see how the same problem can be solved in many diﬀerent ways </s>
<s> the two approaches to this problem have not exhausted all the possibilities </s>
<s> for example you might start by testing whether x is greater than y </s>
<s> if so you could swap their values </s>
<s> once you’ve done that you know that x should be printed before y ∗ ∗ ∗ finally let’s write a complete program that uses an if statement in an interesting way </s>
<s> i want a program that will convert measurements of length from one unit of measurement to another such as miles to yards or inches to feet </s>
<s> so far the problem is extremely underspeciﬁed </s>
<s> let’s say that the program will only deal with measurements in inches feet yards and miles </s>
<s> it would be easy to extend it later to deal with other units </s>
<s> the user will type in a measurement in one of these units such as 17 feet” or 273 miles” </s>
<s> the output will show the length in terms of each of the four units of measure ( this is easier than asking the user which units to use in the output ) an outline of the process is read the user’s input measurement and units of measure express the measurement in inches feet yards and miles display the four results the program can read both parts of the user’s input from the same line by using textiogetdouble( ) to read the numerical measurement and textiogetlnword( ) to read the unit of measure </s>
<s> the conversion into diﬀerent units of measure can be simpliﬁed by ﬁrst converting the user’s input into inches </s>
<s> from there the number of inches can easily be converted into feet yards and miles </s>
<s> before converting into inches we have to test the input to determine which unit of measure the user has speciﬁed et measurement = textiogetdouble( ) et units = textiogetlnword( ) if the units are inches et inches = measurement else if the units are feet et inches = measurement * 12 // 12 inches per foot else if the units are yards et inches = measurement * 36 // 36 inches per yard else if the units are miles et inches = measurement * 12 * 5280 // 5280 feet per mile else the units are illegal! print an error message and stop processing et feet = inches / 120 et yards = inches / 360 et miles = inches / ( 120 * 52800 ) display the results since units is a string we can use unitsequals( inches ) to check whether the speciﬁed unit of measure is inches” </s>
<s> however it would be nice to allow the units to be speciﬁed as inch” or abbreviated to in” </s>
<s> to allow these three possibilities we can check if ( unitsequals( inches ) || unitsequals( inch ) || unitsequals( in ) ) </s>
<s> it would also be nice to allow upper case letters as in inches” or in” </s>
<s> we can do this by converting units to lower case before testing it or by substituting the function unitsequalsignorecase for unitsequals in my ﬁnal program i decided to make things more interesting by allowing the user to repeat the process of entering a measurement and seeing the results of the conversion for each 96 chapter 3 </s>
<s> control measurement </s>
<s> the program will end only when the user inputs 0 </s>
<s> to do this i just have to wrap the above algorithm inside a while loop and make sure that the loop ends when the user inputs a 0 </s>
<s> here’s the complete program /** * this program will convert measurements expressed in inches * feet yards or miles into each of the possible units of * measure </s>
<s> the measurement is input by the user followed by * the unit of measure </s>
<s> for example 17 feet 1 inch or * 273 mi </s>
<s> abbreviations in ft yd and mi are accepted * the program will continue to read and convert measurements * until the user enters an input of 0 */ public class lengthconverter { public static void main( string[] args ) { double measurement string units // numerical measurement input by user // the unit of measure for the input also // specified by the user double inches feet yards miles // measurement expressed in // each possible unit of // measure textioputln( enter measurements in inches feet yards or miles ) textioputln( for example 1 inch 17 feet 273 miles ) textioputln( you can use abbreviations in ft yd mi ) textioputln( i will convert your input into the other units ) textioputln( of measure ) textioputln( ) while ( true ) { /* get the user’s input and convert units to lower case */ textioput( enter your measurement or 0 to end measurement = textiogetdouble( ) if ( measurement == 0 ) break // terminate the while loop units = textiogetlnword( ) units = unitstolowercase( ) ) /* convert the input measurement to inches */ if ( unitsequals( inch ) || unitsequals( inches ) || unitsequals( in ) ) { inches = measurement } else if ( unitsequals( foot ) || unitsequals( feet ) || unitsequals( ft ) ) { inches = measurement * 12 } else if ( unitsequals( yard ) || unitsequals( yards ) || unitsequals( yd ) ) { inches = measurement * 36 } 97 35 </s>
<s> the if statement else if ( unitsequals( mile ) || unitsequals( miles ) || unitsequals( mi ) ) { inches = measurement * 12 * 5280 } else { textioputln( sorry but i don’t understand + units + ) continue // back to start of while loop } /* convert measurement in inches to feet yards and miles */ feet = inches / 12 yards = inches / 36 miles = inches / ( 12*5280 ) /* output measurement in terms of each unit of measure */ textioputln( ) textioputln( that’s equivalent to ) textioputf( %125g inches ) textioputln( inches ) textioputf( %125g feet ) textioputln( feet ) textioputf( %125g yards ) textioputln( yards ) textioputf( %125g miles ) textioputln( miles ) textioputln( ) } // end while textioputln( ) textioputln( ok! bye for now ) } // end main( ) } // end class lengthconverter ( note that this program uses formatted output with the g” format speciﬁer </s>
<s> in this program we have no control over how large or how small the numbers might be </s>
<s> it could easily make sense for the user to enter very large or very small measurements </s>
<s> the g” format will print a real number in exponential form if it is very large or very small and in the usual decimal form otherwise </s>
<s> remember that in the format speciﬁcation %125g the 5 is the total number of signiﬁcant digits that are to be printed so we will always get the same number of signiﬁcant digits in the output no matter what the size of the number </s>
<s> if we had used an f” format speciﬁer such as %125f the output would be in decimal form with 5 digits after the decimal point </s>
<s> this would print the number 0000000000745482 as 000000 with no signiﬁcant digits at all! with the g” format speciﬁer the output would be 74549e-10 ) 354 the empty statement as a ﬁnal note in this section i will mention one more type of statement in java the empty statement </s>
<s> this is a statement that consists simply of a semicolon and which tells the computer 98 chapter 3 </s>
<s> control to do nothing </s>
<s> the existence of the empty statement makes the following legal even though you would not ordinarily see a semicolon after a } if ( x < 0 ) { x = -x } the semicolon is legal after the } but the computer considers it to be an empty statement not part of the if statement </s>
<s> occasionally you might ﬁnd yourself using the empty statement when what you mean is in fact do nothing” for example the rather contrived if statement if ( done ) // empty statement else systemoutprintln( not done yet ) does nothing when the boolean variable done is true and prints out not done yet” when it is false </s>
<s> you can’t just leave out the semicolon in this example since java syntax requires an actual statement between the if and the else </s>
<s> i prefer though to use an empty block consisting of { and } with nothing between for such cases occasionally stray empty statements can cause annoying hard-to-ﬁnd errors in a program for example the following program segment prints out hello” just once not ten times for ( int i = 0 i < 10 i++ ) systemoutprintln( hello ) why because the ” at the end of the ﬁrst line is a statement and it is this statement that is executed ten times </s>
<s> the systemoutprintln statement is not really inside the for statement at all so it is executed just once after the for loop has completed 36 the switch statement the second branching statement in java is the switch statement which is introduced in this section </s>
<s> the switch statement is used far less often than the if statement but it is sometimes useful for expressing a certain type of multi-way branch 361 the basic switch statement a switch statement allows you to test the value of an expression and depending on that value to jump directly to some location within the switch statement </s>
<s> only expressions of certain types can be used </s>
<s> the value of the expression can be one of the primitive integer types int short or byte </s>
<s> it can be the primitive char type </s>
<s> or as we will see later in this section it can be an enumerated type </s>
<s> in java 7 strings are also allowed </s>
<s> in particular the expression cannot be a real number and prior to java 7 it cannot be a string </s>
<s> the positions that you can jump to are marked with case labels that take the form case constant ” </s>
<s> this marks the position the computer jumps to when the expression evaluates to the given constant </s>
<s> as the ﬁnal case in a switch statement you can optionally use the label default” which provides a default jump point that is used when the value of the expression is not listed in any case label a switch statement as it is most often used has the form 36 </s>
<s> the switch statement 99 switch ( expression ) { case constant-1 statements-1 break case constant-2 statements-2 break // ( more cases ) case constant-n statements-n break default // optional default case statements-( n+1 ) } // end of switch statement the break statements are technically optional </s>
<s> the eﬀect of a break is to make the computer jump to the end of the switch statement </s>
<s> if you leave out the break statement the computer will just forge ahead after completing one case and will execute the statements associated with the next case label </s>
<s> this is rarely what you want but it is legal ( i will note here—although you won’t understand it until you get to the next chapter—that inside a subroutine the break statement is sometimes replaced by a return statement ) note that you can leave out one of the groups of statements entirely ( including the break ) you then have two case labels in a row containing two diﬀerent constants </s>
<s> this just means that the computer will jump to the same place and perform the same action for each of the two constants here is an example of a switch statement </s>
<s> this is not a useful example but it should be easy for you to follow </s>
<s> note by the way that the constants in the case labels don’t have to be in any particular order as long as they are all diﬀerent switch ( n ) { // ( assume n is an integer variable ) case 1 systemoutprintln( the number is 1 ) break case 2 case 4 case 8 systemoutprintln( the number is 2 4 or 8 ) systemoutprintln( ( that’s a power of 2! ) ) break case 3 case 6 case 9 systemoutprintln( the number is 3 6 or 9 ) systemoutprintln( ( that’s a multiple of 3! ) ) break case 5 systemoutprintln( the number is 5 ) break default systemoutprintln( the number is 7 or is outside the range 1 to 9 ) } 100 chapter 3 </s>
<s> control the switch statement is pretty primitive as control structures go and it’s easy to make mistakes when you use it </s>
<s> java takes all its control structures directly from the older programming languages c and c++ </s>
<s> the switch statement is certainly one place where the designers of java should have introduced some improvements 362 menus and switch statements one application of switch statements is in processing menus </s>
<s> a menu is a list of options the user selects one of the options </s>
<s> the computer has to respond to each possible choice in a diﬀerent way </s>
<s> if the options are numbered 1 2 then the number of the chosen option can be used in a switch statement to select the proper response in a textio-based program the menu can be presented as a numbered list of options and the user can choose an option by typing in its number </s>
<s> here is an example that could be used in a variation of the lengthconverter example from the previous section int optionnumber // option number from menu selected by user double measurement // a numerical measurement input by the user // the unit of measurement depends on which // option the user has selected double inches // the same measurement converted into inches /* display menu and get user’s selected option number */ textioputln( what unit of measurement does your input use ) textioputln( ) textioputln( 1 inches ) textioputln( 2 feet ) textioputln( 3 yards ) textioputln( 4 miles ) textioputln( ) textioputln( enter the number of your choice ) optionnumber = textiogetlnint( ) /* read user’s measurement and convert to inches */ switch ( optionnumber ) { case 1 textioputln( enter the number of inches ) measurement = textiogetlndouble( ) inches = measurement break case 2 textioputln( enter the number of feet ) measurement = textiogetlndouble( ) inches = measurement * 12 break case 3 textioputln( enter the number of yards ) measurement = textiogetlndouble( ) inches = measurement * 36 break case 4 textioputln( enter the number of miles ) measurement = textiogetlndouble( ) 101 36 </s>
<s> the switch statement inches = measurement * 12 * 5280 break default textioputln( error! illegal option number! systemexit( 1 ) } // end switch i quit! ) /* now go on to convert inches to feet yards and miles */ in java 7 this example might be rewritten using a string in the switch statement string units // unit of measurement entered by user double measurement // a numerical measurement input by the user double inches // the same measurement converted into inches /* read the user’s unit of measurement */ textioputln( what unit of measurement does your input use ) textioput( inches feet yards or miles ) units = textiogetln( )tolowercase( ) /* read user’s measurement and convert to inches */ textioput( enter the number of + units + measurement = textiogetlndouble( ) ) switch ( units ) { // requires java 7 or higher! case inches inches = measurement break case feet inches = measurement * 12 break case yards inches = measurement * 36 break case miles inches = measurement * 12 * 5280 break default textioputln( wait a minute! illegal unit of measure! systemexit( 1 ) } // end switch 363 i quit! ) enums in switch statements the type of the expression in a switch can be an enumerated type </s>
<s> in that case the constants in the case labels must be values from the enumerated type </s>
<s> for example if the type of the expression is the enumerated type season deﬁned by enum season { spring summer fall winter } then the constants in the case label must be chosen from among the values seasonspring seasonsummer seasonfall or seasonwinter </s>
<s> however there is another quirk in the syntax when an enum constant is used in a case label only the simple name such as spring” can be used not the full name seasonspring” </s>
<s> of course the computer already knows that the value in the case label must belong to the enumerated type since it can tell that from the 102 chapter 3 </s>
<s> control type of expression used so there is really no need to specify the type name in the constant </s>
<s> as an example suppose that currentseason is a variable of type season </s>
<s> then we could have the switch statement switch ( currentseason ) { case winter // ( not seasonwinter ! ) systemoutprintln( december january february ) break case spring systemoutprintln( march april may ) break case summer systemoutprintln( june july august ) break case fall systemoutprintln( september october november ) break } 364 deﬁnite assignment as a somewhat more realistic example the following switch statement makes a random choice among three possible alternatives </s>
<s> recall that the value of the expression ( int )( 3*mathrandom( ) ) is one of the integers 0 1 or 2 selected at random with equal probability so the switch statement below will assign one of the values rock scissors paper to computermove with probability 1/3 for each case </s>
<s> although the switch statement in this example is correct this code segment as a whole illustrates a subtle syntax error that sometimes comes up string computermove switch ( ( int )( 3*mathrandom( ) ) ) { case 0 computermove = rock break case 1 computermove = scissors break case 2 computermove = paper break } systemoutprintln( computer’s move is + computermove ) // error! you probably haven’t spotted the error since it’s not an error from a human point of view the computer reports the last line to be an error because the variable computermove might not have been assigned a value </s>
<s> in java it is only legal to use the value of a variable if a value has already been deﬁnitely assigned to that variable </s>
<s> this means that the computer must be able to prove just from looking at the code when the program is compiled that the variable must have been assigned a value </s>
<s> unfortunately the computer only has a few simple rules that it can apply to make the determination </s>
<s> in this case it sees a switch statement in which the type of expression is int and in which the cases that are covered are 0 1 and 2 </s>
<s> for other values of the expression computermove is never assigned a value </s>
<s> so the computer thinks 103 37 </s>
<s> exceptions and trycatch computermove might still be undeﬁned after the switch statement </s>
<s> now in fact this isn’t true 0 1 and 2 are actually the only possible values of the expression ( int )( 3*mathrandom( ) ) but the computer isn’t smart enough to ﬁgure that out </s>
<s> the easiest way to ﬁx the problem is to replace the case label case 2 with default </s>
<s> the computer can then see that a value is assigned to computermove in all cases more generally we say that a value has been deﬁnitely assigned to a variable at a given point in a program if every execution path leading from the declaration of the variable to that point in the code includes an assignment to the variable </s>
<s> this rule takes into account loops and if statements as well as switch statements </s>
<s> for example the following two if statements both do the same thing as the switch statement given above but only the one on the right deﬁnitely assigns a value to computermove string computermove int rand rand = ( int )( 3*mathrandom( ) ) if ( rand == 0 ) computermove = rock else if ( rand == 1 ) computermove = scissors else if ( rand == 2 ) computermove = paper string computermove int rand rand = ( int )( 3*mathrandom( ) ) if ( rand == 0 ) computermove = rock else if ( rand == 1 ) computermove = scissors else computermove = paper in the code on the left the test if ( rand == 2 )” in the ﬁnal else clause is unnecessary because if rand is not 0 or 1 the only remaining possibility is that rand == 2 </s>
<s> the computer however can’t ﬁgure that out 37 introduction to exceptions and trycatch in addition to the control structures that determine the normal ﬂow of control in a program java has a way to deal with exceptional” cases that throw the ﬂow of control oﬀ its normal track </s>
<s> when an error occurs during the execution of a program the default behavior is to terminate the program and to print an error message </s>
<s> however java makes it possible to catch” such errors and program a response diﬀerent from simply letting the program crash this is done with the trycatch statement </s>
<s> in this section we will take a preliminary incomplete look at using trycatch to handle errors </s>
<s> error handling is a complex topic which we will return to in chapter 8 371 exceptions the term exception is used to refer to the type of error that one might want to handle with a trycatch </s>
<s> an exception is an exception to the normal ﬂow of control in the program the term is used in preference to error” because in some cases an exception might not be considered to be an error at all </s>
<s> you can sometimes think of an exception as just another way to organize a program exceptions in java are represented as objects of type exception </s>
<s> actual exceptions are deﬁned by subclasses of exception </s>
<s> diﬀerent subclasses represent diﬀerent types of exceptions we will look at only two types of exception in this section numberformatexception and illegalargumentexception a numberformatexception can occur when an attempt is made to convert a string into a number such conversions are done by the functions integerparseint 104 chapter 3 </s>
<s> control and doubleparsedouble ( see subsection 257 ) consider the function call integerparseint( str ) where str is a variable of type string </s>
<s> if the value of str is the string 42 then the function call will correctly convert the string into the int 42 </s>
<s> however if the value of str is say fred the function call will fail because fred is not a legal string representation of an int value </s>
<s> in this case an exception of type numberformatexception occurs </s>
<s> if nothing is done to handle the exception the program will crash an illegalargumentexception can occur when an illegal value is passed as a parameter to a subroutine </s>
<s> for example if a subroutine requires that a parameter be greater than or equal to zero an illegalargumentexception might occur when a negative value is passed to the subroutine how to respond to the illegal value is up to the person who wrote the subroutine so we can’t simply say that every illegal parameter value will result in an illegalargumentexception however it is a common response one case where an illegalargumentexception can occur is in the valueof function of an enumerated type </s>
<s> recall from subsection 233 that this function tries to convert a string into one of the values of the enumerated type </s>
<s> if the string that is passed as a parameter to valueof is not the name of one of the enumerated type’s values then an illegalargumentexception occurs for example given the enumerated type enum toss { heads tails } tossvalueof( heads ) correctly returns the value tossheads while tossvalueof( feet ) results in an illegalargumentexception 372 trycatch when an exception occurs we say that the exception is thrown” </s>
<s> for example we say that integerparseint( str ) throws an exception of type numberformatexception when the value of str is illegal </s>
<s> when an exception is thrown it is possible to catch” the exception and prevent it from crashing the program </s>
<s> this is done with a trycatch statement </s>
<s> in somewhat simpliﬁed form the syntax for a trycatch is try { statements-1 } catch ( exception-class-name statements-2 } variable-name ) { the exception-class-name could be numberformatexception illegalargumentexception or some other exception class </s>
<s> when the computer executes this statement it executes the statements in the try part </s>
<s> if no error occurs during the execution of statements-1 then the computer just skips over the catch part and proceeds with the rest of the program </s>
<s> however if an exception of type exception-class-name occurs during the execution of statements-1 the computer immediately jumps to the catch part and executes statements-2 skipping any remaining statements in statements-1 </s>
<s> during the execution of statements-2 the variablename represents the exception object so that you can for example print it out </s>
<s> at the end of the catch part the computer proceeds with the rest of the program the exception has been caught and handled and does not crash the program </s>
<s> note that only one type of exception is caught if some other type of exception occurs during the execution of statements-1 it will crash the program as usual 37 </s>
<s> exceptions and trycatch 105 by the way note that the braces { and } are part of the syntax of the trycatch statement </s>
<s> they are required even if there is only one statement between the braces </s>
<s> this is diﬀerent from the other statements we have seen where the braces around a single statement are optional as an example suppose that str is a variable of type string whose value might or might not represent a legal real number </s>
<s> then we could say try { double x x = doubleparsedouble( str ) systemoutprintln( the number is + x ) } catch ( numberformatexception e ) { systemoutprintln( not a legal number ) } if an error is thrown by the call to doubleparsedouble( str ) then the output statement in the try part is skipped and the statement in the catch part is executed it’s not always a good idea to catch exceptions and continue with the program </s>
<s> often that can just lead to an even bigger mess later on and it might be better just to let the exception crash the program at the point where it occurs </s>
<s> however sometimes it’s possible to recover from an error </s>
<s> for example suppose that we have the enumerated type enum day { monday tuesday wednesday thursday friday saturday sunday } and we want the user to input a value belonging to this type </s>
<s> textio does not know about this type so we can only read the user’s response as a string </s>
<s> the function dayvalueof can be used to convert the user’s response to a value of type day </s>
<s> this will throw an exception of type illegalargumentexception if the user’s response is not the name of one of the values of type day but we can recover from the error easily enough by asking the user to enter another response here is a code segment that does this ( converting the user’s response to upper case will allow responses such as monday” or monday” in addition to monday” ) day weekday // user’s response as a value of type day while ( true ) { string response // user’s response as a string systemoutprint( please enter a day of the week ) response = textiogetln( ) response = responsetouppercase( ) try { weekday = dayvalueof( response ) break } catch ( illegalargumentexception e ) { systemoutprintln( response + is not the name of a day of the week ) } } // at this point a legal value has definitely been assigned to weekday the break statement will be reached only if the user’s response is acceptable and so the loop will end only when a legal value has been assigned to weekday 106 373 chapter 3 </s>
<s> control exceptions in textio when textio reads a numeric value from the user it makes sure that the user’s response is legal using a technique similar to the while loop and trycatch in the previous example however textio can read data from other sources besides the user ( see subsection 245 ) when it is reading from a ﬁle there is no reasonable way for textio to recover from an illegal value in the input so it responds by throwing an exception </s>
<s> to keep things simple textio only throws exceptions of type illegalargumentexception no matter what type of error it encounters for example an exception will occur if an attempt is made to read from a ﬁle after all the data in the ﬁle has already been read </s>
<s> in textio the exception is of type illegalargumentexception </s>
<s> if you have a better response to ﬁle errors than to let the program crash you can use a trycatch to catch exceptions of type illegalargumentexception for example suppose that a ﬁle contains nothing but real numbers and we want a program that will read the numbers and ﬁnd their sum and their average </s>
<s> since it is unknown how many numbers are in the ﬁle there is the question of when to stop reading </s>
<s> one approach is simply to try to keep reading indeﬁnitely </s>
<s> when the end of the ﬁle is reached an exception occurs this exception is not really an error—it’s just a way of detecting the end of the data so we can catch the exception and ﬁnish up the program </s>
<s> we can read the data in a while ( true ) loop and break out of the loop when an exception occurs </s>
<s> this is an example of the somewhat unusual technique of using an exception as part of the expected ﬂow of control in a program to read from the ﬁle we need to know the ﬁle’s name </s>
<s> to make the program more general we can let the user enter the ﬁle name instead of hard-coding a ﬁxed ﬁle name in the program however it is possible that the user will enter the name of a ﬁle that does not exist </s>
<s> when we use textioreadfile to open a ﬁle that does not exist an exception of type illegalargumentexception occurs </s>
<s> we can catch this exception and ask the user to enter a diﬀerent ﬁle name </s>
<s> here is a complete program that uses all these ideas /** * this program reads numbers from a file </s>
<s> it computes the sum and * the average of the numbers that it reads </s>
<s> the file should contain * nothing but numbers of type double if this is not the case the * output will be the sum and average of however many numbers were * successfully read from the file </s>
<s> the name of the file will be * input by the user */ public class readnumbersfromfile { public static void main( string[] args ) { while ( true ) { string filename // the name of the file to be input by the user textioput( enter the name of the file ) filename = textiogetln( ) try { textioreadfile( filename ) // try to open the file for input break // if that succeeds break out of the loop } catch ( illegalargumentexception e ) { textioputln( can’t read from the file + filename + ) textioputln( please try againn ) } 107 38 </s>
<s> gui programming } // at this point textio is reading from the file double number double sum int count // a number read from the data file // the sum of all the numbers read so far // the number of numbers that were read sum = 0 count = 0 try { while ( true ) { // loop ends when an exception occurs number = textiogetdouble( ) count++ // this is skipped when the exception occurs sum += number } } catch ( illegalargumentexception e ) { // we expect this to occur when the end-of-file is encountered // we don’t consider this to be an error so there is nothing to do // in this catch clause </s>
<s> just proceed with the rest of the program } // at this point we’ve read the entire file textioputln( ) textioputln( number of data values read + count ) textioputln( the sum of the data values + sum ) if ( count == 0 ) textioputln( can’t compute an average of 0 values ) else textioputln( the average of the values + ( sum/count ) ) } } 38 for introduction to gui programming the past two chapters you’ve been learning the sort of programming that is done inside a single subroutine </s>
<s> in the rest of the text we’ll be more concerned with the larger scale structure of programs but the material that you’ve already learned will be an important foundation for everything to come in this section before moving on to programming-in-the-large we’ll take a look at how programming-in-the-small can be used in other contexts besides text-based command-linestyle programs </s>
<s> we’ll do this by taking a short introductory look at applets and graphical programming </s>
<s> the point here is not so much to understand gui programming as it is to illustrate that a knowledge of programming-in-the-small applies to writing the guts of any subroutine not just main( ) an applet is a java program that runs on a web page </s>
<s> an applet is not a stand-alone application and it does not have a main( ) routine </s>
<s> in fact an applet is an object rather than a class </s>
<s> when java ﬁrst appeared on the scene applets were one of its major appeals </s>
<s> since then they have become much less important although they can still be very useful </s>
<s> when 108 chapter 3 </s>
<s> control we study gui programming in chapter 6 we will concentrate on stand-alone gui programs rather than on applets but applets are a good place to start for our ﬁrst look at the subject when an applet is placed on a web page it is assigned a rectangular area on the page </s>
<s> it is the job of the applet to draw the contents of that rectangle </s>
<s> when the region needs to be drawn the web page calls a subroutine in the applet to do so </s>
<s> this is not so diﬀerent from what happens with stand-alone programs </s>
<s> when such a program needs to be run the system calls the main( ) routine of the program </s>
<s> similarly when an applet needs to be drawn the web page calls a subroutine in the applet </s>
<s> the programmer speciﬁes what happens when this routine is called by ﬁlling in the body of the routine </s>
<s> programming in the small! applets can do other things besides draw themselves such as responding when the user clicks the mouse on the applet </s>
<s> each of the applet’s behaviors is deﬁned by a subroutine </s>
<s> the programmer speciﬁes how the applet behaves by ﬁlling in the bodies of the appropriate subroutines to deﬁne an applet you need a class that is a subclass of the built-in class named applet to avoid some technicalities in this section as well as to make things a little more interesting we will not work with the applet class directly </s>
<s> instead we will work with a class that i wrote named animationbase which is itself a subclass of applet </s>
<s> animationbase makes it easy to write simple animations </s>
<s> a computer animation is really just a sequence of still images which are called the frames of the animation </s>
<s> the computer displays the images one after the other </s>
<s> each image diﬀers a bit from the preceding image in the sequence </s>
<s> if the diﬀerences are not too big and if the sequence is displayed quickly enough the eye is tricked into perceiving continuous motion </s>
<s> to create the animation you just have to say how to draw each individual frame </s>
<s> when using animationbase you do that by ﬁlling in the inside of a subroutine named drawframe( ) </s>
<s> more speciﬁcally to create an animation using animationbase you have write a class of the form import javaawt* public class name-of-class extends animationbase { public void drawframe( graphics g ) { statements } } where name-of-class is an identiﬁer that names the class and the statements are the code that actually draws the content of one of the frames of the animation </s>
<s> this looks similar to the deﬁnition of a stand-alone program but there are a few things here that need to be explained starting with the ﬁrst line when you write a program there are certain built-in classes that are available for you to use these built-in classes include system and math </s>
<s> if you want to use one of these classes you don’t have to do anything special </s>
<s> you just go ahead and use it </s>
<s> but java also has a large number of standard classes that are there if you want them but that are not automatically available to your program ( there are just too many of them ) if you want to use these classes in your program you have to ask for them ﬁrst </s>
<s> the standard classes are grouped into so-called packages” one of these packages is called javaawt” </s>
<s> the directive import javaawt*” makes all the classes from the package javaawt available for use in your program </s>
<s> the javaawt package contains classes related to graphical user interface programming including a class called graphics </s>
<s> the graphics class is referred to in the drawframe( ) routine above and will be used for drawing the frame 109 38 </s>
<s> gui programming the deﬁnition of the class above says that the class extends animationbase” the animationbase class includes all the basic properties and behaviors of applet objects ( since it is a subclass of applet ) </s>
<s> it also deﬁnes the basic properties and behaviors of animations—it extends” class applet by adding in this extra stuﬀ </s>
<s> when you extend animationbase you inherit all these properties and behaviors and you can add even more stuﬀ in particular the drawing commands that you want to use to create your animation ( one more thing needs to be mentioned—and this is a point where java’s syntax gets unfortunately confusing </s>
<s> you can skip this explanation until chapter 5 if you want </s>
<s> applets are objects not classes </s>
<s> instead of being static members of a class the subroutines that deﬁne the applet’s behavior are part of the applet object </s>
<s> we say that they are non-static” subroutines of course objects are related to classes because every object is described by a class </s>
<s> now here is the part that can get confusing even though a non-static subroutine is not actually part of a class ( in the sense of being part of the behavior of the class itself ) it is nevertheless deﬁned in a class ( in the sense that the java code that deﬁnes the subroutine is part of the java code that deﬁnes the class ) </s>
<s> many objects can be described by the same class </s>
<s> each object has its own non-static subroutine </s>
<s> but the common deﬁnition of those subroutines—the actual java source code—is physically part of the class that describes all the objects </s>
<s> to put it brieﬂy static subroutines in a class deﬁnition say what the class does non-static subroutines say what all the objects described by the class do </s>
<s> the drawframe( ) routine is an example of a nonstatic subroutine </s>
<s> a stand-alone program’s main( ) routine is an example of a static subroutine the distinction doesn’t really matter too much at this point when working with stand-alone programs mark everything with the reserved word static” leave it out when working with applets </s>
<s> however the distinction between static and non-static will become more important later in the course ) ∗ ∗ ∗ et’s write an applet based on animationbase </s>
<s> in order to draw the content we’ll need to know some basic subroutines that are already available for drawing just as in writing textoriented programs we need to know what subroutines are available for reading and writing text in java the built-in drawing subroutines are found in objects of the class graphics one of the classes in the javaawt package </s>
<s> in our applet’s drawframe( ) routine we can use the graphics object g for drawing ( this object is provided as a parameter to the drawframe( ) routine when that routine is called ) graphics objects contain many subroutines </s>
<s> i’ll mention just three of them here </s>
<s> you’ll encounter more of them in chapter 6 • gsetcolor( c ) is called to set the color that is used for drawing </s>
<s> the parameter c is an object belonging to a class named color another one of the classes in the javaawt package </s>
<s> about a dozen standard colors are available as static member variables in the color class </s>
<s> these standard colors include colorblack colorwhite colorred colorgreen and colorblue </s>
<s> for example if you want to draw in red you would say gsetcolor( colorred )” </s>
<s> the speciﬁed color is used for all subsequent drawing operations up until the next time setcolor( ) is called • gdrawrect( xywh ) draws the outline of a rectangle </s>
<s> the parameters x y w and h must be integers or integer-valued expressions </s>
<s> this subroutine draws the outline of the rectangle whose top-left corner is x pixels from the left edge of the applet and y pixels down from the top of the applet </s>
<s> the width of the rectangle is w pixels and the height is h pixels </s>
<s> the color that is used is black unless a diﬀerent color has been set by calling setcolor( ) 110 chapter 3 </s>
<s> control • gfillrect( xywh ) is similar to drawrect except that it ﬁlls in the inside of the rectangle instead of just drawing an outline this is enough information to write an applet that will draw the following image on a web page although the applet is deﬁned as an animation you don’t see any movement because all the frames that are drawn are identical! this is rather silly and we will ﬁx it in the next example but for now we are just interested in seeing how to use drawing routines to draw a picture the applet ﬁrst ﬁlls its entire rectangular area with red </s>
<s> then it changes the drawing color to black and draws a sequence of rectangles where each rectangle is nested inside the previous one </s>
<s> the rectangles can be drawn with a while loop which draws the rectangles starting from the outside and moving in </s>
<s> each time through the loop the rectangle that is drawn is smaller than the previous one and is moved down and over a bit </s>
<s> we’ll need variables to hold the width and height of the rectangle and a variable to record how far the top-left corner of the rectangle is inset from the edges of the applet </s>
<s> the while loop ends when the rectangle shrinks to nothing </s>
<s> in general outline the algorithm for drawing the applet is set the drawing color to red ( using the gsetcolor subroutine ) fill in the entire applet ( using the gfillrect subroutine ) set the drawing color to black set the top-left corner inset to be 0 set the rectangle width and height to be as big as the applet while the width and height are greater than zero draw a rectangle ( using the gdrawrect subroutine ) increase the inset decrease the width and the height in my applet each rectangle is 15 pixels away from the rectangle that surrounds it so the inset is increased by 15 each time through the while loop </s>
<s> the rectangle shrinks by 15 pixels on the left and by 15 pixels on the right so the width of the rectangle shrinks by 30 each time through the loop </s>
<s> the height also shrinks by 30 pixels each time through the loop it is not hard to code this algorithm into java and use it to deﬁne the drawframe( ) method of the applet </s>
<s> i’ve assumed that the applet has a height of 160 pixels and a width of 300 pixels the size is actually set in the source code of the web page where the applet appears </s>
<s> in order for an applet to appear on a page the source code for the page must include a command that speciﬁes which applet to run and how big it should be ( we’ll see how to do that later see exercise 36 and section 62 ) it’s not a great idea to assume that we know how big the applet is going to be as i do here i’ll address that issue before the end of this section </s>
<s> but for now here is the source code for the applet 111 38 </s>
<s> gui programming import javaawt* public class staticrects extends animationbase { public void drawframe( graphics g ) { // // // // draw set of nested black rectangles on a red background each nested rectangle is separated by 15 pixels on all sides from the rectangle that encloses it </s>
<s> the applet is assumed to be 300 pixels wide and 160 pixels high int inset // gap between borders of applet and one of the rectangles int rectwidth rectheight // the size of one of the rectangles gsetcolor( colorred ) gfillrect( 00300160 ) // fill the entire applet with red gsetcolor( colorblack ) // draw the rectangles in black inset = 0 rectwidth = 299 rectheight = 159 // set size of the first rect to size of applet while ( rectwidth >= 0 && rectheight >= 0 ) { gdrawrect( inset inset rectwidth rectheight ) inset += 15 // rects are 15 pixels apart rectwidth -= 30 // width decreases by 15 pixels on left and 15 on right rectheight -= 30 // height decreases by 15 pixels on top and 15 on bottom } } } // end paint( ) // end class staticrects ( you might wonder why the initial rectwidth is set to 299 instead of to 300 since the width of the applet is 300 pixels </s>
<s> it’s because rectangles are drawn as if with a pen whose nib hangs below and to the right of the point where the pen is placed </s>
<s> if you run the pen exactly along the right edge of the applet the line it draws is actually outside the applet and therefore is not seen </s>
<s> so instead we run the pen along a line one pixel to the left of the edge of the applet </s>
<s> the same reasoning applies to rectheight </s>
<s> careful graphics programming demands attention to details like these ) ∗ ∗ ∗ when you write an animation applet you get to build on animationbase which in turn builds on the work of the people who wrote the applet class </s>
<s> the animationbase class provides a framework on which you can hang your own work </s>
<s> any programmer can create additional frameworks that can be used by other programmers as a basis for writing speciﬁc types of applets or stand-alone programs </s>
<s> this makes it possible for other programmers to build on their work even without understanding in detail what goes on inside” the code that they wrote </s>
<s> this type of thing is the key to building complex systems! et’s continue our example by animating the rectangles in our applet </s>
<s> you can see the animation in action at the bottom of the on-line version of this section in the animation rectangles shrink continually towards the center of the applet while new rectangles appear at the edge </s>
<s> the perpetual motion is of course an illusion </s>
<s> if you think about it you’ll see that the animation loops through the same set of images over and over 112 chapter 3 </s>
<s> control in each image there is a gap between the borders of the applet and the outermost rectangle this gap gets wider and wider until a new rectangle appears at the border </s>
<s> only it’s not a new rectangle </s>
<s> you are seeing a picture that is identical to the ﬁrst picture that was drawn </s>
<s> what has really happened is that the animation has started over again with the ﬁrst image in the sequence in order to create motion in the animation drawframe( ) will have to draw a diﬀerent picture each time it is called </s>
<s> how can it do that the picture that should be drawn will depend on the frame number that is how many frames have been drawn so far </s>
<s> to ﬁnd out the current frame number we can use a function that is built into the animationbase class </s>
<s> this class provides the function named getframenumber( ) that you can call to ﬁnd out the current frame number </s>
<s> this function returns the current frame number as an integer value </s>
<s> if the value returned is 0 you are supposed to draw the ﬁrst frame if the value is 1 you are supposed to draw the second frame and so on </s>
<s> depending on the frame number the drawframe( ) method will draw diﬀerent pictures in the animation that we are writing the thing that diﬀers from one frame to another is the distance between the edges of the applet and the outermost rectangle </s>
<s> since the rectangles are 15 pixels apart this distance increases from 0 to 14 and then jumps back to 0 when a new” rectangle appears </s>
<s> the appropriate value can be computed very simply from the frame number with the statement inset = getframenumber( ) % 15” </s>
<s> the value of the expression getframenumber( ) % 15 is always between 0 and 14 </s>
<s> when the frame number reaches 15 or any multiple of 15 the value of getframenumber( ) % 15 jumps back to 0 drawing one frame in the sample animated applet is very similar to drawing the single image of the original staticrects applet </s>
<s> we only have to make a few changes to the drawframe( ) method </s>
<s> i’ve chosen to make one additional improvement the staticrects applet assumes that the applet is exactly 300 by 160 pixels </s>
<s> the new version movingrects will work for any applet size </s>
<s> to implement this the drawframe( ) routine has to know how big the applet is </s>
<s> there are two functions that can be called to get this information </s>
<s> the function getwidth( ) returns an integer value representing the width of the applet and the function getheight( ) returns the height </s>
<s> these functions are inherited from the applet class </s>
<s> the width and height together with the frame number are used to compute the size of the ﬁrst rectangle that is drawn </s>
<s> here is the complete source code import javaawt* public class movingrects extends animationbase { public void init( ) { // the init( ) method is called when the applet is first // created and can be used to initialize the applet // here it is used to change the number of milliseconds // per frame from the default 100 to 30 </s>
<s> the faster // animation looks better setmillisecondsperframe( 30 ) } public void drawframe( graphics g ) { // // // // draw one frame in the animation by filling in the background with a solid red and then drawing a set of nested black rectangles </s>
<s> the frame number tells how much the first rectangle is to be inset from the borders of the applet 113 38 </s>
<s> gui programming int width int height // width of the applet in pixels // height of the applet in pixels int inset // gap between borders of applet and a rectangle // the inset for the outermost rectangle goes from 0 to // 14 then back to 0 and so on as the framenumber varies int rectwidth rectheight // the size of one of the rectangles width = getwidth( ) height = getheight( ) // find out the size of the drawing area gsetcolor( colorred ) gfillrect( 00widthheight ) // fill the frame with red gsetcolor( colorblack ) // switch color to black inset = getframenumber( ) % 15 // get the inset for the outermost rect rectwidth = width - 2*inset - 1 rectheight = height - 2*inset - 1 // set size of the outermost rect while ( rectwidth >= 0 && rectheight >= 0 ) { gdrawrect( insetinsetrectwidthrectheight ) inset += 15 // rects are 15 pixels apart rectwidth -= 30 // width decreases by 15 pixels on left and 15 on right rectheight -= 30 // height decreases by 15 pixels on top and 15 on bottom } } } // end drawframe( ) // end class movingrects the main point here is that by building on an existing framework you can do interesting things using the type of local inside-a-subroutine programming that was covered in chapter 2 and chapter 3 </s>
<s> as you learn more about programming and more about java you’ll be able to do more on your own—but no matter how much you learn you’ll always be dependent on other people’s work to some extent 114 chapter 3 </s>
<s> control exercises for chapter 3 1 </s>
<s> how many times do you have to roll a pair of dice before they come up snake eyes you could do the experiment by rolling the dice by hand </s>
<s> write a computer program that simulates the experiment </s>
<s> the program should report the number of rolls that it makes before the dice come up snake eyes ( note snake eyes” means that both dice show a value of 1 ) exercise 22 explained how to simulate rolling a pair of dice 2 </s>
<s> which integer between 1 and 10000 has the largest number of divisors and how many divisors does it have write a program to ﬁnd the answers and print out the results </s>
<s> it is possible that several integers in this range have the same maximum number of divisors your program only has to print out one of them </s>
<s> an example in subsection 342 discussed divisors </s>
<s> the source code for that example is countdivisorsjava you might need some hints about how to ﬁnd a maximum value </s>
<s> the basic idea is to go through all the integers keeping track of the largest number of divisors that you’ve seen so far </s>
<s> also keep track of the integer that had that number of divisors 3 </s>
<s> write a program that will evaluate simple expressions such as 17 + 3 and 314159 * 47 the expressions are to be typed in by the user </s>
<s> the input always consist of a number followed by an operator followed by another number </s>
<s> the operators that are allowed are + - * and / </s>
<s> you can read the numbers with textiogetdouble( ) and the operator with textiogetchar( ) </s>
<s> your program should read an expression print its value read another expression print its value and so on </s>
<s> the program should end when the user enters 0 as the ﬁrst number on the line 4 </s>
<s> write a program that reads one line of input text and breaks it up into words </s>
<s> the words should be output one per line </s>
<s> a word is deﬁned to be a sequence of letters </s>
<s> any characters in the input that are not letters should be discarded </s>
<s> for example if the user inputs the line he said that’s not a good idea then the output of the program should be he said that s not a good idea an improved version of the program would list that’s” as a single word </s>
<s> an apostrophe can be considered to be part of a word if there is a letter on each side of the apostrophe to test whether a character is a letter you might use ( ch >= ’a’ && ch <= ’z’ ) || ( ch >= ’a’ && ch <= ’z’ ) </s>
<s> however this only works in english and similar languages a better choice is to call the standard function characterisletter( ch ) which returns a boolean value of true if ch is a letter and false if it is not </s>
<s> this works for any unicode character 115 exercises 5 </s>
<s> suppose that a ﬁle contains information about sales ﬁgures for a company in various cities each line of the ﬁle contains a city name followed by a colon ( ) followed by the data for that city </s>
<s> the data is a number of type double </s>
<s> however for some cities no data was available </s>
<s> in these lines the data is replaced by a comment explaining why the data is missing </s>
<s> for example several lines from the ﬁle might look like san francisco 1988732 chicago no report received new york 29873412 write a program that will compute and print the total sales from all the cities together the program should also report the number of cities for which data was not available the name of the ﬁle is salesdat” to complete this program you’ll need one fact about ﬁle input with textio that was not covered in subsection 245 </s>
<s> since you don’t know in advance how many lines there are in the ﬁle you need a way to tell when you have gotten to the end of the ﬁle </s>
<s> when textio is reading from a ﬁle the function textioeof( ) can be used to test for end of ﬁle </s>
<s> this boolean-valued function returns true if the ﬁle has been entirely read and returns false if there is more data to read in the ﬁle </s>
<s> this means that you can read the lines of the ﬁle in a loop while ( textioeof( ) == false ) </s>
<s> the loop will end when all the lines of the ﬁle have been read suggestion for each line read and ignore characters up to the colon </s>
<s> then read the rest of the line into a variable of type string </s>
<s> try to convert the string into a number and use trycatch to test whether the conversion succeeds 6 </s>
<s> write an applet that draws a checkerboard </s>
<s> write your solution as a subclass of animationbase even though all the frames that it draws will be the same </s>
<s> assume that the size of the applet is 160 by 160 pixels </s>
<s> each square in the checkerboard is 20 by 20 pixels </s>
<s> the checkerboard contains 8 rows of squares and 8 columns </s>
<s> the squares are red and black here is a tricky way to determine whether a given square should be red or black if the row number and the column number are either both even or both odd then the square is red </s>
<s> otherwise it is black </s>
<s> note that a square is just a rectangle in which the height is equal to the width so you can use the subroutine gfillrect( ) to draw the squares here is an image of the checkerboard 116 chapter 3 </s>
<s> control ( to run an applet you need a web page to display it </s>
<s> a very simple page will do assume that your applet class is called checkerboard so that when you compile it you get a class ﬁle named checkerboardclass make a ﬁle that contains only the lines <applet code=checkerboardclass width=160 height=160> </applet> call this ﬁle checkerboardhtml </s>
<s> this is the source code for a simple web page that shows nothing but your applet </s>
<s> the compiled class ﬁle checkerboardclass must be in the same directory with the web-page ﬁle checkerboardhtml </s>
<s> furthermore since your program depends on the non-standard class animationbase you also have to make that class available to your program </s>
<s> to do this you should compile the source code animationbasejava </s>
<s> you can ﬁnd a copy on the source code page of the on-line version of this book the result will be two class ﬁles animationbaseclass and animationbase$1class place both of these class ﬁles in the same directory together with checkerboardhtml and checkerboardclass </s>
<s> now to run the applet simply open checkerboardhtml in a web browser </s>
<s> alternatively on the command line you can use the command appletviewer checkerboardhtml the appletviewer command like java and javac is part of a standard installation of the jdk if you are using the eclipse integrated development environment you should add animationbasejava to the project where you want to write checkerboardjava </s>
<s> you can then simply right-click the name of the source code ﬁle in the package explorer </s>
<s> in the pop-up menu go to run as” then to java applet” </s>
<s> this will open the window in which the applet appears </s>
<s> the default size for the window is bigger than 160-by-160 so the drawing of the checkerboard will not ﬁll the entire window ) 7 </s>
<s> write an animation applet that shows a checkerboard pattern in which the even numbered rows slide to the left while the odd numbered rows slide to the right </s>
<s> you can assume that the applet is 160 by 160 pixels </s>
<s> each row can be oﬀset towards the left or right from its usual position by the amount getframenumber( ) % 40 </s>
<s> hints anything you draw outside the boundaries of the applet will be invisible so you can draw more than 8 squares in a row </s>
<s> you can use negative values of x in gfillrect( xywh ) ( before trying to do this exercise it would be a good idea to look at a working applet which can be found in the on-line version of this book ) as with exercise 36 you can write your class as a subclass of animationbase </s>
<s> compile and run the program in the same way as described in that exercise </s>
<s> assuming that the name of your class is slidingcheckerboard then the source ﬁle for the web page this time should contain the lines <applet code=slidingcheckerboardclass width=160 height=160> </applet> 117 quiz quiz on chapter 3 1 </s>
<s> what is an algorithm 2 </s>
<s> explain brieﬂy what is meant by pseudocode” and how is it useful in the development of algorithms 3 </s>
<s> what is a block statement how are block statements used in java programs 4 </s>
<s> what is the main diﬀerence between a while loop and a dowhile loop 5 </s>
<s> what does it mean to prime a loop 6 </s>
<s> explain what is meant by an animation and how a computer displays an animation 7 </s>
<s> write a for loop that will print out all the multiples of 3 from 3 to 36 that is 3 6 9 12 15 18 21 24 27 30 33 36 8 </s>
<s> fill in the following main( ) routine so that it will ask the user to enter an integer read the user’s response and tell the user whether the number entered is even or odd ( you can use textiogetint( ) to read the integer </s>
<s> recall that an integer n is even if n % 2 == 0 ) public static void main( string[] args ) { // fill in the body of this subroutine! } 9 </s>
<s> suppose that s1 and s2 are variables of type string whose values are expected to be string representations of values of type int </s>
<s> write a code segment that will compute and print the integer sum of those values or will print an error message if the values cannot successfully be converted into integers ( use a trycatch statement ) 10 </s>
<s> show the exact output that would be produced by the following main( ) routine public static void main( string[] args ) { int n n = 1 while ( n <= 32 ) { n = 2 * n systemoutprintln( n ) } } 11 </s>
<s> show the exact output produced by the following main( ) routine public static void main( string[] args ) { int xy x = 5 y = 1 while ( x > 0 ) { x = x - 1 y = y * x systemoutprintln( y ) } } 118 chapter 3 </s>
<s> control 12 </s>
<s> what output is produced by the following program segment namecharat( i ) is the i-th character in the string name ) string name int i boolean startword name = richard m </s>
<s> nixon startword = true for ( i = 0 i < namelength( ) i++ ) { if ( startword ) systemoutprintln( namecharat( i ) ) if ( namecharat( i ) == ’ ’ ) startword = true else startword = false } why ( recall that chapter 4 programming in the large i subroutines one way to break up a complex program into manageable pieces is to use subroutines a subroutine consists of the instructions for carrying out a certain task grouped together and given a name </s>
<s> elsewhere in the program that name can be used as a stand-in for the whole set of instructions </s>
<s> as a computer executes a program whenever it encounters a subroutine name it executes all the instructions necessary to carry out the task associated with that subroutine subroutines can be used over and over at diﬀerent places in the program </s>
<s> a subroutine can even be used inside another subroutine </s>
<s> this allows you to write simple subroutines and then use them to help write more complex subroutines which can then be used in turn in other subroutines </s>
<s> in this way very complex programs can be built up step-by-step where each step in the construction is reasonably simple as mentioned in section 38 subroutines in java can be either static or non-static </s>
<s> this chapter covers static subroutines only </s>
<s> non-static subroutines which are used in true objectoriented programming will be covered in the next chapter 41 black boxes a subroutine consists of instructions for performing some task chunked together and given a name chunking” allows you to deal with a potentially very complicated task as a single concept </s>
<s> instead of worrying about the many many steps that the computer might have to go though to perform that task you just need to remember the name of the subroutine whenever you want your program to perform the task you just call the subroutine </s>
<s> subroutines are a major tool for dealing with complexity a subroutine is sometimes said to be a black box” because you can’t see what’s inside” it ( or to be more precise you usually don’t want to see inside it because then you would have to deal with all the complexity that the subroutine is meant to hide ) </s>
<s> of course a black box that has no way of interacting with the rest of the world would be pretty useless </s>
<s> a black box needs some kind of interface with the rest of the world which allows some interaction between what’s inside the box and what’s outside </s>
<s> a physical black box might have buttons on the outside that you can push dials that you can set and slots that can be used for passing information back and forth </s>
<s> since we are trying to hide complexity not create it we have the ﬁrst rule of black boxes 119 120 chapter 4 </s>
<s> subroutines the interface of a black box should be fairly straightforward well-deﬁned and easy to understand are there any examples of black boxes in the real world yes in fact you are surrounded by them </s>
<s> your television your car your mobile phone your refrigerator </s>
<s> you can turn your television on and oﬀ change channels and set the volume by using elements of the television’s interface—dials remote control don’t forget to plug in the power—without understanding anything about how the thing actually works </s>
<s> the same goes for a mobile phone although the interface in that case is a lot more complicated now a black box does have an inside—the code in a subroutine that actually performs the task all the electronics inside your television set </s>
<s> the inside of a black box is called its implementation </s>
<s> the second rule of black boxes is that to use a black box you shouldn’t need to know anything about its implementation all you need to know is its interface in fact it should be possible to change the implementation as long as the behavior of the box as seen from the outside remains unchanged </s>
<s> for example when the insides of tv sets went from using vacuum tubes to using transistors the users of the sets didn’t even need to know about it—or even know what it means </s>
<s> similarly it should be possible to rewrite the inside of a subroutine to use more eﬃcient code for example without aﬀecting the programs that use that subroutine of course to have a black box someone must have designed and built the implementation in the ﬁrst place </s>
<s> the black box idea works to the advantage of the implementor as well as the user of the black box </s>
<s> after all the black box might be used in an unlimited number of diﬀerent situations </s>
<s> the implementor of the black box doesn’t need to know about any of that the implementor just needs to make sure that the box performs its assigned task and interfaces correctly with the rest of the world </s>
<s> this is the third rule of black boxes the implementor of a black box should not need to know anything about the larger systems in which the box will be used in a way a black box divides the world into two parts the inside ( implementation ) and the outside </s>
<s> the interface is at the boundary connecting those two parts ∗ ∗ ∗ by the way you should not think of an interface as just the physical connection between the box and the rest of the world </s>
<s> the interface also includes a speciﬁcation of what the box does and how it can be controlled by using the elements of the physical interface </s>
<s> it’s not enough to say that a tv set has a power switch you need to specify that the power switch is used to turn the tv on and oﬀ! to put this in computer science terms the interface of a subroutine has a semantic as well as a syntactic component </s>
<s> the syntactic part of the interface tells you just what you have to type in order to call the subroutine </s>
<s> the semantic component speciﬁes exactly what task the subroutine will accomplish </s>
<s> to write a legal program you need to know the syntactic speciﬁcation of the subroutine </s>
<s> to understand the purpose of the subroutine and to use it eﬀectively you need to know the subroutine’s semantic speciﬁcation </s>
<s> i will refer to both parts of the interface—syntactic and semantic—collectively as the contract of the subroutine 121 42 </s>
<s> static subroutines and variables the contract of a subroutine says essentially here is what you have to do to use me and here is what i will do for you guaranteed” when you write a subroutine the comments that you write for the subroutine should make the contract very clear ( i should admit that in practice subroutines’ contracts are often inadequately speciﬁed much to the regret and annoyance of the programmers who have to use them ) for the rest of this chapter i turn from general ideas about black boxes and subroutines in general to the speciﬁcs of writing and using subroutines in java </s>
<s> but keep the general ideas and principles in mind </s>
<s> they are the reasons that subroutines exist in the ﬁrst place and they are your guidelines for using them </s>
<s> this should be especially clear in section 46 where i will discuss subroutines as a tool in program development ∗ ∗ ∗ you should keep in mind that subroutines are not the only example of black boxes in programming </s>
<s> for example a class is also a black box </s>
<s> we’ll see that a class can have a public” part representing its interface and a private” part that is entirely inside its hidden implementation </s>
<s> all the principles of black boxes apply to classes as well as to subroutines 42 static subroutines and static variables every subroutine in java must be deﬁned inside some class </s>
<s> this makes java rather unusual among programming languages since most languages allow free-ﬂoating independent subroutines </s>
<s> one purpose of a class is to group together related subroutines and variables perhaps the designers of java felt that everything must be related to something </s>
<s> as a less philosophical motivation java’s designers wanted to place ﬁrm controls on the ways things are named since a java program potentially has access to a huge number of subroutines created by many diﬀerent programmers </s>
<s> the fact that those subroutines are grouped into named classes ( and classes are grouped into named packages” ) helps control the confusion that might result from so many diﬀerent names a subroutine that is a member of a class is often called a method and method” is the term that most people prefer for subroutines in java </s>
<s> i will start using the term method” occasionally however i will continue to prefer the more general term subroutine” in this chapter at least for static subroutines </s>
<s> this chapter will deal with static subroutines almost exclusively </s>
<s> we’ll turn to non-static methods and object-oriented programming in the next chapter 421 subroutine deﬁnitions a subroutine deﬁnition in java takes the form modifiers return-type statements } subroutine-name ( parameter-list ) { it will take us a while—most of the chapter—to get through what all this means in detail </s>
<s> of course you’ve already seen examples of subroutines in previous chapters such as the main( ) routine of a program and the drawframe( ) routine of the animation applets in section 38 </s>
<s> so you are familiar with the general format the statements between the braces { and } in a subroutine deﬁnition make up the body of the subroutine </s>
<s> these statements are the inside or implementation part of the black box” 122 chapter 4 </s>
<s> subroutines as discussed in the previous section </s>
<s> they are the instructions that the computer executes when the method is called </s>
<s> subroutines can contain any of the statements discussed in chapter 2 and chapter 3 the modiﬁers that can occur at the beginning of a subroutine deﬁnition are words that set certain characteristics of the subroutine such as whether it is static or not </s>
<s> the modiﬁers that you’ve seen so far are static” and public” </s>
<s> there are only about a half-dozen possible modiﬁers altogether if the subroutine is a function whose job is to compute some value then the return-type is used to specify the type of value that is returned by the function </s>
<s> we’ll be looking at functions and return types in some detail in section 44 </s>
<s> if the subroutine is not a function then the return-type is replaced by the special value void which indicates that no value is returned the term void” is meant to indicate that the return value is empty or non-existent finally we come to the parameter-list of the method </s>
<s> parameters are part of the interface of a subroutine </s>
<s> they represent information that is passed into the subroutine from outside to be used by the subroutine’s internal computations </s>
<s> for a concrete example imagine a class named television that includes a method named changechannel( ) </s>
<s> the immediate question is what channel should it change to a parameter can be used to answer this question </s>
<s> since the channel number is an integer the type of the parameter would be int and the declaration of the changechannel( ) method might look like public void changechannel( int channelnum ) { } this declaration speciﬁes that changechannel( ) has a parameter named channelnum of type int </s>
<s> however channelnum does not yet have any particular value </s>
<s> a value for channelnum is provided when the subroutine is called for example changechannel( 17 ) the parameter list in a subroutine can be empty or it can consist of one or more parameter declarations of the form type parameter-name </s>
<s> if there are several declarations they are separated by commas </s>
<s> note that each declaration can name only one parameter </s>
<s> for example if you want two parameters of type double you have to say double x double y” rather than double x y” parameters are covered in more detail in the next section here are a few examples of subroutine deﬁnitions leaving out the statements that deﬁne what the subroutines do public static void playgame( ) { // public and static are modifiers void is the // return-type playgame is the subroutine-name // the parameter-list is empty // statements that define what playgame does go here } int getnextn( int n ) { // there are no modifiers int in the return-type // getnextn is the subroutine-name the parameter-list // includes one parameter whose name is n and whose // type is int // statements that define what getnextn does go here } static boolean lessthan( double x double y ) { // static is a modifier boolean is the // return-type lessthan is the subroutine-name 42 </s>
<s> static subroutines and variables 123 // the parameter-list includes two parameters whose names are // x and y and the type of each of these parameters // is double // statements that define what lessthan does go here } in the second example given here getnextn is a non-static method since its deﬁnition does not include the modiﬁer static”—and so it’s not an example that we should be looking at in this chapter! the other modiﬁer shown in the examples is public” </s>
<s> this modiﬁer indicates that the method can be called from anywhere in a program even from outside the class where the method is deﬁned </s>
<s> there is another modiﬁer private” which indicates that the method can be called only from inside the same class </s>
<s> the modiﬁers public and private are called access speciﬁers </s>
<s> if no access speciﬁer is given for a method then by default that method can be called from anywhere in the package” that contains the class but not from outside that package ( packages were introduced in subsection 264 and you’ll learn more about them later in this chapter in section 45 ) there is one other access modiﬁer protected which will only become relevant when we turn to object-oriented programming in chapter 5 note by the way that the main( ) routine of a program follows the usual syntax rules for a subroutine </s>
<s> in public static void main( string[] args ) { } the modiﬁers are public and static the return type is void the subroutine name is main and the parameter list is string[] args” </s>
<s> the only question might be about string[]” which has to be a type if it is to match the syntax of a parameter list </s>
<s> in fact string[] represents a so-called array type” so the syntax is valid </s>
<s> we will cover arrays in chapter 7 ( the parameter args represents information provided to the program when the main( ) routine is called by the system </s>
<s> in case you know the term the information consists of any command-line arguments” speciﬁed in the command that the user typed to run the program ) you’ve already had some experience with ﬁlling in the implementation of a subroutine </s>
<s> in this chapter you’ll learn all about writing your own complete subroutine deﬁnitions including the interface part 422 calling subroutines when you deﬁne a subroutine all you are doing is telling the computer that the subroutine exists and what it does </s>
<s> the subroutine doesn’t actually get executed until it is called ( this is true even for the main( ) routine in a class—even though you don’t call it it is called by the system when the system runs your program ) for example the playgame( ) method given as an example above could be called using the following subroutine call statement playgame( ) this statement could occur anywhere in the same class that includes the deﬁnition of playgame( ) whether in a main( ) method or in some other subroutine </s>
<s> since playgame( ) is a public method it can also be called from other classes but in that case you have to tell the computer which class it comes from </s>
<s> since playgame( ) is a static method its full name includes the name of the class in which it is deﬁned </s>
<s> let’s say for example that playgame( ) is deﬁned in a class named poker </s>
<s> then to call playgame( ) from outside the poker class you would have to say pokerplaygame( ) 124 chapter 4 </s>
<s> subroutines the use of the class name here tells the computer which class to look in to ﬁnd the method </s>
<s> it also lets you distinguish between pokerplaygame( ) and other potential playgame( ) methods deﬁned in other classes such as rouletteplaygame( ) or blackjackplaygame( ) more generally a subroutine call statement for a static subroutine takes the form subroutine-name ( parameters ) if the subroutine that is being called is in the same class or class-name subroutine-name ( parameters ) if the subroutine is deﬁned elsewhere in a diﬀerent class ( non-static methods belong to objects rather than classes and they are called using object names instead of class names </s>
<s> more on that later ) note that the parameter list can be empty as in the playgame( ) example but the parentheses must be there even if there is nothing between them </s>
<s> the number of parameters that you provide when you call a subroutine must match the number listed in the parameter list in the subroutine deﬁnition and the types of the parameters in the call statement must match the types in the subroutine deﬁnition 423 subroutines in programs it’s time to give an example of what a complete program looks like when it includes other subroutines in addition to the main( ) routine </s>
<s> let’s write a program that plays a guessing game with the user </s>
<s> the computer will choose a random number between 1 and 100 and the user will try to guess it </s>
<s> the computer tells the user whether the guess is high or low or correct if the user gets the number after six guesses or fewer the user wins the game </s>
<s> after each game the user has the option of continuing with another game since playing one game can be thought of as a single coherent task it makes sense to write a subroutine that will play one guessing game with the user </s>
<s> the main( ) routine will use a loop to call the playgame( ) subroutine over and over as many times as the user wants to play we approach the problem of designing the playgame( ) subroutine the same way we write a main( ) routine start with an outline of the algorithm and apply stepwise reﬁnement </s>
<s> here is a short pseudocode algorithm for a guessing game routine pick a random number while the game is not over get the user’s guess tell the user whether the guess is high low or correct the test for whether the game is over is complicated since the game ends if either the user makes a correct guess or the number of guesses is six </s>
<s> as in many cases the easiest thing to do is to use a while ( true )” loop and use break to end the loop whenever we ﬁnd a reason to do so </s>
<s> also if we are going to end the game after six guesses we’ll have to keep track of the number of guesses that the user has made </s>
<s> filling out the algorithm gives et computersnumber be a random number between 1 and 100 et guesscount = 0 while ( true ) get the user’s guess count the guess by adding 1 to guess count if the user’s guess equals computersnumber tell the user he won break out of the loop if the number of guesses is 6 42 </s>
<s> static subroutines and variables tell the user he lost break out of the loop if the user’s guess is less tell the user the guess else if the user’s guess is tell the user the guess 125 than computersnumber was low higher than computersnumber was high with variable declarations added and translated into java this becomes the deﬁnition of the playgame( ) routine </s>
<s> a random integer between 1 and 100 can be computed as ( int )( 100 * mathrandom( ) ) + 1 </s>
<s> i’ve cleaned up the interaction with the user to make it ﬂow better static void playgame( ) { int computersnumber // a random number picked by the computer int usersguess // a number entered by user as a guess int guesscount // number of guesses the user has made computersnumber = ( int )( 100 * mathrandom( ) ) + 1 // the value assigned to computersnumber is a randomly // chosen integer between 1 and 100 inclusive guesscount = 0 textioputln( ) textioput( what is your first guess ) while ( true ) { usersguess = textiogetint( ) // get the user’s guess guesscount++ if ( usersguess == computersnumber ) { textioputln( you got it in + guesscount + guesses! my number was + computersnumber ) break // the game is over the user has won } if ( guesscount == 6 ) { textioputln( you didn’t get the number in 6 guesses ) textioputln( you lose </s>
<s> my number was + computersnumber ) break // the game is over the user has lost } // if we get to this point the game continues // tell the user if the guess was too high or too low if ( usersguess < computersnumber ) textioput( that’s too low </s>
<s> try again ) else if ( usersguess > computersnumber ) textioput( that’s too high </s>
<s> try again ) } textioputln( ) } // end of playgame( ) now where exactly should you put this it should be part of the same class as the main( ) routine but not inside the main routine </s>
<s> it is not legal to have one subroutine physically nested inside another </s>
<s> the main( ) routine will call playgame( ) but not contain it physically you can put the deﬁnition of playgame( ) either before or after the main( ) routine </s>
<s> java is not very picky about having the members of a class in any particular order it’s pretty easy to write the main routine </s>
<s> you’ve done things like this before </s>
<s> here’s what the complete program looks like ( except that a serious program needs more comments than i’ve included here ) 126 chapter 4 </s>
<s> subroutines public class guessinggame { public static void main( string[] args ) { textioputln( let’s play a game </s>
<s> i’ll pick a number between ) textioputln( 1 and 100 and you try to guess it ) boolean playagain do { playgame( ) // call subroutine to play one game textioput( would you like to play again ) playagain = textiogetlnboolean( ) } while ( playagain ) textioputln( thanks for playing </s>
<s> goodbye ) } // end of main( ) static void playgame( ) { int computersnumber // a random number picked by the computer int usersguess // a number entered by user as a guess int guesscount // number of guesses the user has made computersnumber = ( int )( 100 * mathrandom( ) ) + 1 // the value assigned to computersnumber is a randomly // chosen integer between 1 and 100 inclusive guesscount = 0 textioputln( ) textioput( what is your first guess ) while ( true ) { usersguess = textiogetint( ) // get the user’s guess guesscount++ if ( usersguess == computersnumber ) { textioputln( you got it in + guesscount + guesses! my number was + computersnumber ) break // the game is over the user has won } if ( guesscount == 6 ) { textioputln( you didn’t get the number in 6 guesses ) textioputln( you lose </s>
<s> my number was + computersnumber ) break // the game is over the user has lost } // if we get to this point the game continues // tell the user if the guess was too high or too low if ( usersguess < computersnumber ) textioput( that’s too low </s>
<s> try again ) else if ( usersguess > computersnumber ) textioput( that’s too high </s>
<s> try again ) } textioputln( ) } // end of playgame( ) } // end of class guessinggame take some time to read the program carefully and ﬁgure out how it works </s>
<s> and try to convince yourself that even in this relatively simple case breaking up the program into two methods makes the program easier to understand and probably made it easier to write each piece 42 </s>
<s> static subroutines and variables 424 127 member variables a class can include other things besides subroutines </s>
<s> in particular it can also include variable declarations </s>
<s> of course you can declare variables inside subroutines </s>
<s> those are called local variables </s>
<s> however you can also have variables that are not part of any subroutine </s>
<s> to distinguish such variables from local variables we call them member variables since they are members of a class just as with subroutines member variables can be either static or non-static </s>
<s> in this chapter we’ll stick to static variables </s>
<s> a static member variable belongs to the class itself and it exists as long as the class exists </s>
<s> memory is allocated for the variable when the class is ﬁrst loaded by the java interpreter </s>
<s> any assignment statement that assigns a value to the variable changes the content of that memory no matter where that assignment statement is located in the program </s>
<s> any time the variable is used in an expression the value is fetched from that same memory no matter where the expression is located in the program </s>
<s> this means that the value of a static member variable can be set in one subroutine and used in another subroutine static member variables are shared” by all the static subroutines in the class </s>
<s> a local variable in a subroutine on the other hand exists only while that subroutine is being executed and is completely inaccessible from outside that one subroutine the declaration of a member variable looks just like the declaration of a local variable except for two things the member variable is declared outside any subroutine ( although it still has to be inside a class ) and the declaration can be marked with modiﬁers such as static public and private </s>
<s> since we are only working with static member variables for now every declaration of a member variable in this chapter will include the modiﬁer static </s>
<s> they might also be marked as public or private </s>
<s> for example static string usersname public static int numberofplayers private static double velocity time a static member variable that is not declared to be private can be accessed from outside the class where it is deﬁned as well as inside </s>
<s> when it is used in some other class it must be referred to with a compound identiﬁer of the form class-name variable-name </s>
<s> for example the system class contains the public static member variable named out and you use this variable in your own classes by referring to systemout </s>
<s> similarly mathpi is a public member variable in the math whose value is the mathematical constant π </s>
<s> if numberofplayers is a public static member variable in a class named poker then subroutines in the poker class would refer to it simply as numberofplayers while subroutines in another class would refer to it as pokernumberofplayers as an example let’s add a static member variable to the guessinggame class that we wrote earlier in this section </s>
<s> this variable will be used to keep track of how many games the user wins we’ll call the variable gameswon and declare it with the statement static int gameswon” in the playgame( ) routine we add 1 to gameswon if the user wins the game </s>
<s> at the end of the main( ) routine we print out the value of gameswon </s>
<s> it would be impossible to do the same thing with a local variable since we need access to the same variable from both subroutines when you declare a local variable in a subroutine you have to assign a value to that variable before you can do anything with it </s>
<s> member variables on the other hand are automatically initialized with a default value </s>
<s> for numeric variables the default value is zero </s>
<s> for boolean variables the default is false </s>
<s> and for char variables it’s the unprintable character that has unicode code number zero ( for objects such as strings the default initial value is a special 128 chapter 4 </s>
<s> subroutines value called null which we won’t encounter oﬃcially until later ) since it is of type int the static member variable gameswon automatically gets assigned an initial value of zero </s>
<s> this happens to be the correct initial value for a variable that is being used as a counter </s>
<s> you can of course assign a diﬀerent value to the variable at the beginning of the main( ) routine if you are not satisﬁed with the default initial value here’s a revised version of guessinggamejava that includes the gameswon variable </s>
<s> the changes from the above version are shown in italic public class guessinggame2 { static int gameswon // the number of games won by // the user public static void main( string[] args ) { gameswon = 0 // this is actually redundant since 0 is // the default initial value textioputln( let’s play a game </s>
<s> i’ll pick a number between ) textioputln( 1 and 100 and you try to guess it ) boolean playagain do { playgame( ) // call subroutine to play one game textioput( would you like to play again ) playagain = textiogetlnboolean( ) } while ( playagain ) textioputln( ) textioputln( you won + gameswon + games ) textioputln( thanks for playing </s>
<s> goodbye ) } // end of main( ) static void playgame( ) { int computersnumber // a random number picked by the computer int usersguess // a number entered by user as a guess int guesscount // number of guesses the user has made computersnumber = ( int )( 100 * mathrandom( ) ) + 1 // the value assigned to computersnumber is a randomly // chosen integer between 1 and 100 inclusive guesscount = 0 textioputln( ) textioput( what is your first guess ) while ( true ) { usersguess = textiogetint( ) // get the user’s guess guesscount++ if ( usersguess == computersnumber ) { textioputln( you got it in + guesscount + guesses! my number was + computersnumber ) gameswon++ // count this game by incrementing gameswon break // the game is over the user has won } if ( guesscount == 6 ) { textioputln( you didn’t get the number in 6 guesses ) textioputln( you lose </s>
<s> my number was + computersnumber ) break // the game is over the user has lost } // if we get to this point the game continues 129 43 </s>
<s> parameters // tell the user if the guess was too high or too low if ( usersguess < computersnumber ) textioput( that’s too low </s>
<s> try again ) else if ( usersguess > computersnumber ) textioput( that’s too high </s>
<s> try again ) } textioputln( ) } // end of playgame( ) } // end of class guessinggame2 43 parameters if a subroutine is a black box then a parameter is something that provides a mechanism for passing information from the outside world into the box </s>
<s> parameters are part of the interface of a subroutine </s>
<s> they allow you to customize the behavior of a subroutine to adapt it to a particular situation as an analogy consider a thermostat—a black box whose task it is to keep your house at a certain temperature </s>
<s> the thermostat has a parameter namely the dial that is used to set the desired temperature </s>
<s> the thermostat always performs the same task maintaining a constant temperature </s>
<s> however the exact task that it performs—that is which temperature it maintains—is customized by the setting on its dial 431 using parameters as an example let’s go back to the 3n+1” problem that was discussed in subsection 322 ( recall that a 3n+1 sequence is computed according to the rule if n is odd multiply it by 3 and add 1 if n is even divide it by 2 continue until n is equal to 1” for example starting from n=3 we get the sequence 3 10 5 16 8 4 2 1 ) suppose that we want to write a subroutine to print out such sequences </s>
<s> the subroutine will always perform the same task print out a 3n+1 sequence </s>
<s> but the exact sequence it prints out depends on the starting value of n </s>
<s> so the starting value of n would be a parameter to the subroutine </s>
<s> the subroutine could be written like this /** * this subroutine prints a 3n+1 sequence to standard output using * startingvalue as the initial value of n </s>
<s> it also prints the number * of terms in the sequence </s>
<s> the value of the parameter startingvalue * must be a positive integer */ static void print3nsequence( int startingvalue ) { int n int count // one of the terms in the sequence // the number of terms n = startingvalue // the first term is whatever value // is passed to the subroutine as // a parameter count = 1 // we have one term the starting value so far systemoutprintln( the 3n+1 sequence starting from + n ) 130 chapter 4 </s>
<s> subroutines systemoutprintln( ) systemoutprintln( n ) // print initial term of sequence while ( n > 1 ) { if ( n % 2 == 1 ) // is n odd n = 3 * n + 1 else n = n / 2 count++ // count this term systemoutprintln( n ) // print this term } systemoutprintln( ) systemoutprintln( there were + count + terms in the sequence ) } // end print3nsequence the parameter list of this subroutine ( int startingvalue )” speciﬁes that the subroutine has one parameter of type int </s>
<s> within the body of the subroutine the parameter name can be used in the same way as a variable name </s>
<s> however the parameter gets its initial value from outside the subroutine </s>
<s> when the subroutine is called a value must be provided for this parameter in the subroutine call statement </s>
<s> this value will be assigned to the parameter startingvalue before the body of the subroutine is executed </s>
<s> for example the subroutine could be called using the subroutine call statement print3nsequence( 17 )” </s>
<s> when the computer executes this statement the computer ﬁrst assigns the value 17 to startingvalue and then executes the statements in the subroutine </s>
<s> this prints the 3n+1 sequence starting from 17 </s>
<s> if k is a variable of type int then when the computer executes the subroutine call statement print3nsequence( k )” it will take the value of the variable k assign that value to startingvalue and execute the body of the subroutine the class that contains print3nsequence can contain a main( ) routine ( or other subroutines ) that call print3nsequence </s>
<s> for example here is a main( ) program that prints out 3n+1 sequences for various starting values speciﬁed by the user public static void main( string[] args ) { systemoutprintln( this program will print out 3n+1 sequences ) systemoutprintln( for starting values that you specify ) systemoutprintln( ) int k // input from user loop ends when k < 0 do { systemoutprintln( enter a starting value ) systemoutprint( to end the program enter 0 ) k = textiogetint( ) // get starting value from user if ( k > 0 ) // print sequence but only if k is > 0 print3nsequence( k ) } while ( k > 0 ) // continue only if k > 0 } // end main remember that before you can use this program the deﬁnitions of main and of print3nsequence must both be wrapped inside a class deﬁnition 432 formal and actual parameters note that the term parameter” is used to refer to two diﬀerent but related concepts </s>
<s> there are parameters that are used in the deﬁnitions of subroutines such as startingvalue in the 43 </s>
<s> parameters 131 above example </s>
<s> and there are parameters that are used in subroutine call statements such as the k in the statement print3nsequence( k )” </s>
<s> parameters in a subroutine deﬁnition are called formal parameters or dummy parameters </s>
<s> the parameters that are passed to a subroutine when it is called are called actual parameters or arguments </s>
<s> when a subroutine is called the actual parameters in the subroutine call statement are evaluated and the values are assigned to the formal parameters in the subroutine’s deﬁnition </s>
<s> then the body of the subroutine is executed a formal parameter must be a name that is a simple identiﬁer </s>
<s> a formal parameter is very much like a variable and—like a variable—it has a speciﬁed type such as int boolean or string </s>
<s> an actual parameter is a value and so it can be speciﬁed by any expression provided that the expression computes a value of the correct type </s>
<s> the type of the actual parameter must be one that could legally be assigned to the formal parameter with an assignment statement for example if the formal parameter is of type double then it would be legal to pass an int as the actual parameter since ints can legally be assigned to doubles </s>
<s> when you call a subroutine you must provide one actual parameter for each formal parameter in the subroutine’s deﬁnition consider for example a subroutine static void dotask( int n double x boolean test ) { // statements to perform the task go here } this subroutine might be called with the statement dotask( 17 mathsqrt( z+1 ) z >= 10 ) when the computer executes this statement it has essentially the same eﬀect as the block of statements { int n // allocate memory locations for the formal parameters double x boolean test n = 17 // assign 17 to the first formal parameter n x = mathsqrt( z+1 ) // compute mathsqrt( z+1 ) and assign it to // the second formal parameter x test = ( z >= 10 ) // evaluate z >= 10 and assign the resulting // true/false value to the third formal // parameter test // statements to perform the task go here } ( there are a few technical diﬀerences between this and dotask( 17mathsqrt( z+1 )z>=10 )” —besides the amount of typing—because of questions about scope of variables and what happens when several variables or parameters have the same name ) beginning programming students often ﬁnd parameters to be surprisingly confusing </s>
<s> calling a subroutine that already exists is not a problem—the idea of providing information to the subroutine in a parameter is clear enough </s>
<s> writing the subroutine deﬁnition is another matter a common beginner’s mistake is to assign values to the formal parameters at the beginning of the subroutine or to ask the user to input their values </s>
<s> this represents a fundamental misunderstanding </s>
<s> when the statements in the subroutine are executed the formal parameters have already been assigned initial values! the values come from the subroutine call statement remember that a subroutine is not independent </s>
<s> it is called by some other routine and it is the calling routine’s responsibility to provide appropriate values for the parameters 132 433 chapter 4 </s>
<s> subroutines overloading in order to call a subroutine legally you need to know its name you need to know how many formal parameters it has and you need to know the type of each parameter </s>
<s> this information is called the subroutine’s signature </s>
<s> the signature of the subroutine dotask used as an example above can be expressed as dotask( intdoubleboolean ) </s>
<s> note that the signature does not include the names of the parameters in fact if you just want to use the subroutine you don’t even need to know what the formal parameter names are so the names are not part of the interface java is somewhat unusual in that it allows two diﬀerent subroutines in the same class to have the same name provided that their signatures are diﬀerent ( the language c++ on which java is based also has this feature ) when this happens we say that the name of the subroutine is overloaded because it has several diﬀerent meanings </s>
<s> the computer doesn’t get the subroutines mixed up </s>
<s> it can tell which one you want to call by the number and types of the actual parameters that you provide in the subroutine call statement </s>
<s> you have already seen overloading used with systemout </s>
<s> this object includes many diﬀerent methods named println for example </s>
<s> these methods all have diﬀerent signatures such as println( int ) println( string ) println( boolean ) println( double ) println( char ) println( ) the computer knows which of these subroutines you want to use based on the type of the actual parameter that you provide </s>
<s> systemoutprintln( 17 ) calls the subroutine with signature println( int ) while systemoutprintln( hello ) calls the subroutine with signature println( string ) </s>
<s> of course all these diﬀerent subroutines are semantically related which is why it is acceptable programming style to use the same name for them all </s>
<s> but as far as the computer is concerned printing out an int is very diﬀerent from printing out a string which is diﬀerent from printing out a boolean and so forth—so that each of these operations requires a diﬀerent method note by the way that the signature does not include the subroutine’s return type </s>
<s> it is illegal to have two subroutines in the same class that have the same signature but that have diﬀerent return types </s>
<s> for example it would be a syntax error for a class to contain two methods deﬁned as int getln( ) { } double getln( ) { } so it should be no surprise that in the textio class the methods for reading diﬀerent types are not all named getln( ) </s>
<s> in a given class there can only be one routine that has the name getln and has no parameters </s>
<s> so the input routines in textio are distinguished by having diﬀerent names such as getlnint( ) and getlndouble( ) java 50 introduced another complication it is possible to have a single subroutine that takes a variable number of actual parameters </s>
<s> you have already used subroutines that do this—the formatted output routines systemoutprintf and textioputf </s>
<s> when you call these subroutines the number of parameters in the subroutine call can be arbitrarily large so it would be impossible to have diﬀerent subroutines to handle each case </s>
<s> unfortunately writing the deﬁnition of such a subroutine requires some knowledge of arrays which will not be covered until chapter 7 </s>
<s> when we get to that chapter you’ll learn how to write subroutines with a variable number of parameters </s>
<s> for now we will ignore this complication 133 43 </s>
<s> parameters 434 subroutine examples et’s do a few examples of writing small subroutines to perform assigned tasks </s>
<s> of course this is only one side of programming with subroutines </s>
<s> the task performed by a subroutine is always a subtask in a larger program </s>
<s> the art of designing those programs—of deciding how to break them up into subtasks—is the other side of programming with subroutines </s>
<s> we’ll return to the question of program design in section 46 as a ﬁrst example let’s write a subroutine to compute and print out all the divisors of a given positive integer </s>
<s> the integer will be a parameter to the subroutine </s>
<s> remember that the syntax of any subroutine is modifiers return-type statements } subroutine-name ( parameter-list ) { writing a subroutine always means ﬁlling out this format </s>
<s> in this case the statement of the problem tells us that there is one parameter of type int and it tells us what the statements in the body of the subroutine should do </s>
<s> since we are only working with static subroutines for now we’ll need to use static as a modiﬁer </s>
<s> we could add an access modiﬁer ( public or private ) but in the absence of any instructions i’ll leave it out </s>
<s> since we are not told to return a value the return type is void </s>
<s> since no names are speciﬁed we’ll have to make up names for the formal parameter and for the subroutine itself </s>
<s> i’ll use n for the parameter and printdivisors for the subroutine name </s>
<s> the subroutine will look like static void printdivisors( int n ) { statements } and all we have left to do is to write the statements that make up the body of the routine </s>
<s> this is not diﬃcult </s>
<s> just remember that you have to write the body assuming that n already has a value! the algorithm is for each possible divisor d in the range from 1 to n if d evenly divides n then print d” written in java this becomes /** * print all the divisors of n * we assume that n is a positive integer */ static void printdivisors( int n ) { int d // one of the possible divisors of n systemoutprintln( the divisors of + n + are ) for ( d = 1 d <= n d++ ) { if ( n % d == 0 ) // dose d evenly divide n systemoutprintln( d ) } } i’ve added a comment before the subroutine deﬁnition indicating the contract of the subroutine—that is what it does and what assumptions it makes </s>
<s> the contract includes the assumption that n is a positive integer </s>
<s> it is up to the caller of the subroutine to make sure that this assumption is satisﬁed as a second short example consider the problem write a subroutine named printrow </s>
<s> it should have a parameter ch of type char and a parameter n of type int </s>
<s> the subroutine should print out a line of text containing n copies of the character ch 134 chapter 4 </s>
<s> subroutines here we are told the name of the subroutine and the names of the two parameters so we don’t have much choice about the ﬁrst line of the subroutine deﬁnition </s>
<s> the task in this case is pretty simple so the body of the subroutine is easy to write </s>
<s> the complete subroutine is given by /** * write one line of output containing n copies of the * character ch </s>
<s> if n <= 0 an empty line is output */ static void printrow( char ch int n ) { int i // loop-control variable for counting off the copies for ( i = 1 i <= n i++ ) { systemoutprint( ch ) } systemoutprintln( ) } note that in this case the contract makes no assumption about n but it makes it clear what will happen in all cases including the unexpected case that n < 0 finally let’s do an example that shows how one subroutine can build on another </s>
<s> let’s write a subroutine that takes a string as a parameter </s>
<s> for each character in the string it should print a line of output containing 25 copies of that character </s>
<s> it should use the printrow( ) subroutine to produce the output again we get to choose a name for the subroutine and a name for the parameter </s>
<s> i’ll call the subroutine printrowsfromstring and the parameter str </s>
<s> the algorithm is pretty clear for each position i in the string str call printrow( strcharat( i )25 ) to print one line of the output </s>
<s> so we get /** * for each character in str write a line of output * containing 25 copies of that character */ static void printrowsfromstring( string str ) { int i // loop-control variable for counting off the chars for ( i = 0 i < strlength( ) i++ ) { printrow( strcharat( i ) 25 ) } } we could use printrowsfromstring in a main( ) routine such as public static void main( string[] args ) { string inputline // line of text input by user textioput( enter a line of text ) inputline = textiogetln( ) textioputln( ) printrowsfromstring( inputline ) } of course the three routines main( ) printrowsfromstring( ) and printrow( ) would have to be collected together inside the same class </s>
<s> the program is rather useless but it does demonstrate the use of subroutines </s>
<s> you’ll ﬁnd the program in the ﬁle rowsofcharsjava if you want to take a look 135 43 </s>
<s> parameters 435 throwing exceptions i have been talking about the contract” of a subroutine </s>
<s> the contract says what the subroutine will do provided that the caller of the subroutine provides acceptable values for subroutine’s parameters </s>
<s> the question arises though what should the subroutine do when the caller violates the contract by providing bad parameter values we’ve already seen that some subroutines respond to bad parameter values by throwing exceptions ( see section 37 ) for example the contract of the built-in subroutine doubleparsedouble says that the parameter should be a string representation of a number of type double if this is true then the subroutine will convert the string into the equivalent numeric value </s>
<s> if the caller violates the contract by passing an invalid string as the actual parameter the subroutine responds by throwing an exception of type numberformatexception many subroutines throw illegalargumentexceptions in response to bad parameter values you might want to take this response in your own subroutines </s>
<s> this can be done with a throw statement </s>
<s> an exception is an object and in order to throw an exception you must create an exception object </s>
<s> you won’t oﬃcially learn how to do this until chapter 5 but for now you can use the following syntax for a throw statement that throws an illegalargumentexception throw new illegalargumentexception( error-message ) where error-message is a string that describes the error that has been detected ( the word new” in this statement is what creates the object ) to use this statement in a subroutine you would check whether the values of the parameters are legal </s>
<s> if not you would throw the exception </s>
<s> for example consider the print3nsequence subroutine from the beginning of this section </s>
<s> the parameter of print3nsequence is supposed to be a positive integer </s>
<s> we can modify the subroutine deﬁnition to make it throw an exception when this condition is violated static void print3nsequence( int startingvalue ) { if ( startingvalue <= 0 ) // the contract is violated! throw new illegalargumentexception( starting value must be positive ) // ( the rest of the subroutine is the same as before ) if the start value is bad the computer executes the throw statement </s>
<s> this will immediately terminate the subroutine without executing the rest of the body of the subroutine </s>
<s> furthermore the program as a whole will crash unless the exception is caught” and handled elsewhere in the program by a trycatch statement as discussed in section 37 436 global and local variables i’ll ﬁnish this section on parameters by noting that we now have three diﬀerent sorts of variables that can be used inside a subroutine local variables declared in the subroutine formal parameter names and static member variables that are declared outside the subroutine but inside the same class as the subroutine ocal variables have no connection to the outside world they are purely part of the internal working of the subroutine </s>
<s> parameters are used to drop” values into the subroutine when it is called but once the subroutine starts executing parameters act much like local variables changes made inside a subroutine to a formal parameter have no eﬀect on the rest of the program ( at least if the type of the parameter is one of the primitive types—things are more complicated in the case of objects as we’ll see later ) 136 chapter 4 </s>
<s> subroutines things are diﬀerent when a subroutine uses a variable that is deﬁned outside the subroutine that variable exists independently of the subroutine and it is accessible to other parts of the program as well as to the subroutine </s>
<s> such a variable is said to be global to the subroutine as opposed to the local variables deﬁned inside the subroutine </s>
<s> the scope of a global variable includes the entire class in which it is deﬁned </s>
<s> changes made to a global variable can have eﬀects that extend outside the subroutine where the changes are made </s>
<s> you’ve seen how this works in the last example in the previous section where the value of the global variable gameswon is computed inside a subroutine and is used in the main( ) routine it’s not always bad to use global variables in subroutines but you should realize that the global variable then has to be considered part of the subroutine’s interface </s>
<s> the subroutine uses the global variable to communicate with the rest of the program </s>
<s> this is a kind of sneaky back-door communication that is less visible than communication done through parameters and it risks violating the rule that the interface of a black box should be straightforward and easy to understand </s>
<s> so before you use a global variable in a subroutine you should consider whether it’s really necessary i don’t advise you to take an absolute stand against using global variables inside subroutines there is at least one good reason to do it if you think of the class as a whole as being a kind of black box it can be very reasonable to let the subroutines inside that box be a little sneaky about communicating with each other if that will make the class as a whole look simpler from the outside 44 return values a subroutine that returns a value is called a function </s>
<s> a given function can only return a value of a speciﬁed type called the return type of the function </s>
<s> a function call generally occurs in a position where the computer is expecting to ﬁnd a value such as the right side of an assignment statement as an actual parameter in a subroutine call or in the middle of some larger expression </s>
<s> a boolean-valued function can even be used as the test condition in an if while for or dowhile statement ( it is also legal to use a function call as a stand-alone statement just as if it were a regular subroutine </s>
<s> in this case the computer ignores the value computed by the subroutine </s>
<s> sometimes this makes sense </s>
<s> for example the function textiogetln( ) with a return type of string reads and returns a line of input typed in by the user </s>
<s> usually the line that is returned is assigned to a variable to be used later in the program as in the statement name = textiogetln( )” </s>
<s> however this function is also useful as a subroutine call statement textiogetln( )” which still reads all input up to and including the next carriage return </s>
<s> since the return value is not assigned to a variable or used in an expression it is simply discarded </s>
<s> so the eﬀect of the subroutine call is to read and discard some input </s>
<s> sometimes discarding unwanted input is exactly what you need to do ) 441 the return statement you’ve already seen how functions such as mathsqrt( ) and textiogetint( ) can be used what you haven’t seen is how to write functions of your own </s>
<s> a function takes the same form as a regular subroutine except that you have to specify the value that is to be returned by the subroutine </s>
<s> this is done with a return statement which has the following syntax return expression 44 </s>
<s> return values 137 such a return statement can only occur inside the deﬁnition of a function and the type of the expression must match the return type that was speciﬁed for the function ( more exactly it must be legal to assign the expression to a variable whose type is speciﬁed by the return type ) when the computer executes this return statement it evaluates the expression terminates execution of the function and uses the value of the expression as the returned value of the function for example consider the function deﬁnition static double pythagoras( double x double y ) { // computes the length of the hypotenuse of a right // triangle where the sides of the triangle are x and y return mathsqrt( x*x + y*y ) } suppose the computer executes the statement totallength = 17 + pythagoras( 125 )” when it gets to the term pythagoras( 125 ) it assigns the actual parameters 12 and 5 to the formal parameters x and y in the function </s>
<s> in the body of the function it evaluates mathsqrt( 120*120 + 50*50 ) which works out to 130 </s>
<s> this value is returned” by the function so the 130 essentially replaces the function call in the assignment statement which then has the same eﬀect as the statement totallength = 17+130 ” </s>
<s> the return value is added to 17 and the result 300 is stored in the variable totallength note that a return statement does not have to be the last statement in the function deﬁnition </s>
<s> at any point in the function where you know the value that you want to return you can return it </s>
<s> returning a value will end the function immediately skipping any subsequent statements in the function </s>
<s> however it must be the case that the function deﬁnitely does return some value no matter what path the execution of the function takes through the code you can use a return statement inside an ordinary subroutine one with declared return type void” </s>
<s> since a void subroutine does not return a value the return statement does not include an expression it simply takes the form return” </s>
<s> the eﬀect of this statement is to terminate execution of the subroutine and return control back to the point in the program from which the subroutine was called </s>
<s> this can be convenient if you want to terminate execution somewhere in the middle of the subroutine but return statements are optional in non-function subroutines </s>
<s> in a function on the other hand a return statement with expression is always required 442 function examples here is a very simple function that could be used in a program to compute 3n+1 sequences ( the 3n+1 sequence problem is one we’ve looked at several times already including in the previous section ) given one term in a 3n+1 sequence this function computes the next term of the sequence static int nextn( int currentn ) { if ( currentn % 2 == 1 ) // test if current n is odd return 3*currentn + 1 // if so return this value else return currentn / 2 // if not return this instead } this function has two return statements </s>
<s> exactly one of the two return statements is executed to give the value of the function </s>
<s> some people prefer to use a single return statement at the 138 chapter 4 </s>
<s> subroutines very end of the function when possible </s>
<s> this allows the reader to ﬁnd the return statement easily </s>
<s> you might choose to write nextn( ) like this for example static int nextn( int currentn ) { int answer // answer will be the value returned if ( currentn % 2 == 1 ) // test if current n is odd answer = 3*currentn+1 // if so this is the answer else answer = currentn / 2 // if not this is the answer return answer // ( don’t forget to return the answer! ) } here is a subroutine that uses this nextn function </s>
<s> in this case the improvement from the version of this subroutine in section 43 is not great but if nextn( ) were a long function that performed a complex computation then it would make a lot of sense to hide that complexity inside a function static void print3nsequence( int startingvalue ) { int n int count // one of the terms in the sequence // the number of terms found n = startingvalue count = 1 // start the sequence with startingvalue systemoutprintln( the 3n+1 sequence starting from + n ) systemoutprintln( ) systemoutprintln( n ) // print initial term of sequence while ( n > 1 ) { n = nextn( n ) // compute next term using the function nextn count++ // count this term systemoutprintln( n ) // print this term } systemoutprintln( ) systemoutprintln( there were + count + terms in the sequence ) } ∗ ∗ ∗ here are a few more examples of functions </s>
<s> the ﬁrst one computes a letter grade corresponding to a given numerical grade on a typical grading scale /** * returns the letter grade corresponding to the numerical * grade that is passed to this function as a parameter */ static char lettergrade( int numgrade ) { if ( numgrade >= 90 ) return ’a’ // 90 or above gets an a else if ( numgrade >= 80 ) return ’b’ // 80 to 89 gets a b else if ( numgrade >= 65 ) return ’c’ // 65 to 79 gets a c else if ( numgrade >= 50 ) 139 44 </s>
<s> return values return ’d’ else return ’f’ } // 50 to 64 gets a d // anything else gets an f // end of function lettergrade the type of the return value of lettergrade( ) is char </s>
<s> functions can return values of any type at all </s>
<s> here’s a function whose return value is of type boolean </s>
<s> it demonstrates some interesting programming points so you should read the comments /** * the function returns true if n is a prime number </s>
<s> a prime number * is an integer greater than 1 that is not divisible by any positive * integer except itself and 1 </s>
<s> if n has any divisor d in the range * 1 < d < n then it has a divisor in the range 2 to mathsqrt( n ) namely * either d itself or n/d </s>
<s> so we only test possible divisors from 2 to * mathsqrt( n ) */ static boolean isprime( int n ) { int divisor // a number we will test to see whether it evenly divides n if ( n <= 1 ) return false int maxtotry // no number <= 1 is a prime // the largest divisor that we need to test maxtotry = ( int )mathsqrt( n ) // we will try to divide n by numbers between 2 and maxtotry // if n is not evenly divisible by any of these numbers then // n is prime ( note that since mathsqrt( n ) is defined to // return a value of type double the value must be typecast // to type int before it can be assigned to maxtotry ) for ( divisor = 2 divisor <= maxtotry divisor++ ) { if ( n % divisor == 0 ) // test if divisor evenly divides n return false // if so we know n is not prime // no need to continue testing! } // if we get to this point n must be prime </s>
<s> otherwise // the function would already have been terminated by // a return statement in the previous loop return true } // yes n is prime // end of function isprime finally here is a function with return type string </s>
<s> this function has a string as parameter the returned value is a reversed copy of the parameter </s>
<s> for example the reverse of hello world” is dlrow olleh” </s>
<s> the algorithm for computing the reverse of a string str is to start with an empty string and then to append each character from str starting from the last character of str and working backwards to the ﬁrst static string reverse( string str ) { string copy // the reversed copy int i // one of the positions in str // from strlength( ) - 1 down to 0 140 chapter 4 </s>
<s> subroutines copy = // start with an empty string for ( i = strlength( ) - 1 i >= 0 i -- ) { // append i-th char of str to copy copy = copy + strcharat( i ) } return copy } a palindrome is a string that reads the same backwards and forwards such as radar” </s>
<s> the reverse( ) function could be used to check whether a string word is a palindrome by testing if ( wordequals( reverse( word ) ) )” by the way a typical beginner’s error in writing functions is to print out the answer instead of returning it </s>
<s> this represents a fundamental misunderstanding </s>
<s> the task of a function is to compute a value and return it to the point in the program where the function was called that’s where the value is used </s>
<s> maybe it will be printed out </s>
<s> maybe it will be assigned to a variable </s>
<s> maybe it will be used in an expression </s>
<s> but it’s not for the function to decide 443 3n+1 revisited i’ll ﬁnish this section with a complete new version of the 3n+1 program </s>
<s> this will give me a chance to show the function nextn( ) which was deﬁned above used in a complete program i’ll also take the opportunity to improve the program by getting it to print the terms of the sequence in columns with ﬁve terms on each line </s>
<s> this will make the output more presentable the idea is this keep track of how many terms have been printed on the current line when that number gets up to 5 start a new line of output </s>
<s> to make the terms line up into neat columns i use formatted output /** * a program that computes and displays several 3n+1 sequences </s>
<s> starting * values for the sequences are input by the user </s>
<s> terms in the sequence * are printed in columns with five terms on each line of output * after a sequence has been displayed the number of terms in that * sequence is reported to the user */ public class threen2 { public static void main( string[] args ) { textioputln( this program will print out 3n+1 sequences ) textioputln( for starting values that you specify ) textioputln( ) int k // starting point for sequence specified by the user do { textioputln( enter a starting value ) textioput( to end the program enter 0 ) k = textiogetint( ) // get starting value from user if ( k > 0 ) // print sequence but only if k is > 0 print3nsequence( k ) } while ( k > 0 ) // continue only if k > 0 } // end main 141 44 </s>
<s> return values /** * print3nsequence prints a 3n+1 sequence to standard output using * startingvalue as the initial value of n </s>
<s> it also prints the number * of terms in the sequence </s>
<s> the value of the parameter startingvalue * must be a positive integer */ static void print3nsequence( int startingvalue ) { int n int count int online // one of the terms in the sequence // the number of terms found // the number of terms that have been output // so far on the current line n = startingvalue count = 1 // start the sequence with startingvalue // we have one term so far textioputln( the 3n+1 sequence starting from + n ) textioputln( ) textioput( n 8 ) // print initial term using 8 characters online = 1 // there’s now 1 term on current output line while ( n > 1 ) { n = nextn( n ) // compute next term count++ // count this term if ( online == 5 ) { // if current output line is full textioputln( ) // then output a carriage return online = 0 // and note that there are no terms // on the new line } textioputf( %8d n ) // print this term in an 8-char column online++ // add 1 to the number of terms on this line } textioputln( ) // end current line of output textioputln( ) // and then add a blank line textioputln( there were + count + terms in the sequence ) } // end of print3nsequence /** * nextn computes and returns the next term in a 3n+1 sequence * given that the current term is currentn */ static int nextn( int currentn ) { if ( currentn % 2 == 1 ) return 3 * currentn + 1 else return currentn / 2 } // end of nextn( ) } // end of class threen2 you should read this program carefully and try to understand how it works ( try using 27 for the starting value! ) 142 45 chapter 4 </s>
<s> subroutines apis packages and javadoc as computers and their user interfaces have become easier to use they have also become more complex for programmers to deal with </s>
<s> you can write programs for a simple console-style user interface using just a few subroutines that write output to the console and read the user’s typed replies </s>
<s> a modern graphical user interface with windows buttons scroll bars menus text-input boxes and so on might make things easier for the user but it forces the programmer to cope with a hugely expanded array of possibilities </s>
<s> the programmer sees this increased complexity in the form of great numbers of subroutines that are provided for managing the user interface as well as for other purposes 451 toolboxes someone who wanted to program for macintosh computers—and to produce programs that look and behave the way users expect them to—had to deal with the macintosh toolbox a collection of well over a thousand diﬀerent subroutines </s>
<s> there are routines for opening and closing windows for drawing geometric ﬁgures and text to windows for adding buttons to windows and for responding to mouse clicks on the window </s>
<s> there are other routines for creating menus and for reacting to user selections from menus </s>
<s> aside from the user interface there are routines for opening ﬁles and reading data from them for communicating over a network for sending output to a printer for handling communication between programs and in general for doing all the standard things that a computer has to do </s>
<s> microsoft windows provides its own set of subroutines for programmers to use and they are quite a bit diﬀerent from the subroutines used on the mac </s>
<s> linux has several diﬀerent gui toolboxes for the programmer to choose from the analogy of a toolbox” is a good one to keep in mind </s>
<s> every programming project involves a mixture of innovation and reuse of existing tools </s>
<s> a programmer is given a set of tools to work with starting with the set of basic tools that are built into the language things like variables assignment statements if statements and loops </s>
<s> to these the programmer can add existing toolboxes full of routines that have already been written for performing certain tasks </s>
<s> these tools if they are well-designed can be used as true black boxes they can be called to perform their assigned tasks without worrying about the particular steps they go through to accomplish those tasks </s>
<s> the innovative part of programming is to take all these tools and apply them to some particular project or problem ( word-processing keeping track of bank accounts processing image data from a space probe web browsing computer games ) </s>
<s> this is called applications programming a software toolbox is a kind of black box and it presents a certain interface to the programmer </s>
<s> this interface is a speciﬁcation of what routines are in the toolbox what parameters they use and what tasks they perform </s>
<s> this information constitutes the api or applications programming interface associated with the toolbox </s>
<s> the macintosh api is a speciﬁcation of all the routines available in the macintosh toolbox </s>
<s> a company that makes some hardware device—say a card for connecting a computer to a network—might publish an api for that device consisting of a list of routines that programmers can call in order to communicate with and control the device </s>
<s> scientists who write a set of routines for doing some kind of complex computation—such as solving diﬀerential equations” say—would provide an api to allow others to use those routines without understanding the details of the computations they perform ∗ ∗ ∗ 45 </s>
<s> apis packages and javadoc 143 the java programming language is supplemented by a large standard api </s>
<s> you’ve seen part of this api already in the form of mathematical subroutines such as mathsqrt( ) the string data type and its associated routines and the systemoutprint( ) routines </s>
<s> the standard java api includes routines for working with graphical user interfaces for network communication for reading and writing ﬁles and more </s>
<s> it’s tempting to think of these routines as being built into the java language but they are technically subroutines that have been written and made available for use in java programs java is platform-independent </s>
<s> that is the same program can run on platforms as diverse as mac os windows linux and others </s>
<s> the same java api must work on all these platforms but notice that it is the interface that is platform-independent the implementation varies from one platform to another </s>
<s> a java system on a particular computer includes implementations of all the standard api routines </s>
<s> a java program includes only calls to those routines </s>
<s> when the java interpreter executes a program and encounters a call to one of the standard routines it will pull up and execute the implementation of that routine which is appropriate for the particular platform on which it is running </s>
<s> this is a very powerful idea </s>
<s> it means that you only need to learn one api to program for a wide variety of platforms 452 java’s standard packages ike all subroutines in java the routines in the standard api are grouped into classes </s>
<s> to provide larger-scale organization classes in java can be grouped into packages which were introduced brieﬂy in subsection 264 </s>
<s> you can have even higher levels of grouping since packages can also contain other packages </s>
<s> in fact the entire standard java api is implemented in several packages </s>
<s> one of these which is named java” contains several non-gui packages as well as the original awt graphics user interface classes </s>
<s> another package javax” was added in java version 12 and contains the classes used by the swing graphical user interface and other additions to the api a package can contain both classes and other packages </s>
<s> a package that is contained in another package is sometimes called a sub-package” both the java package and the javax package contain sub-packages </s>
<s> one of the sub-packages of java for example is called awt” since awt is contained within java its full name is actually javaawt </s>
<s> this package contains classes that represent gui components such as buttons and menus in the awt </s>
<s> awt is the older of the two java gui toolboxes and is no longer widely used </s>
<s> however javaawt also contains a number of classes that form the foundation for all gui programming such as the graphics class which provides routines for drawing on the screen the color class which represents colors and the font class which represents the fonts that are used to display characters on the screen </s>
<s> since these classes are contained in the package javaawt their full names are actually javaawtgraphics javaawtcolor and javaawtfont ( i hope that by now you’ve gotten the hang of how this naming thing works in java ) similarly javax contains a sub-package named javaxswing which includes such gui classes as javaxswingjbutton javaxswingjmenu and javaxswingjframe </s>
<s> the gui classes in javaxswing together with the foundational classes in javaawt are all part of the api that makes it possible to program graphical user interfaces in java the java package includes several other sub-packages such as javaio which provides facilities for input/output javanet which deals with network communication and javautil which provides a variety of utility” classes </s>
<s> the most basic package is called javalang </s>
<s> this package contains fundamental classes such as string math integer and double it might be helpful to look at a graphical representation of the levels of nesting in the 144 chapter 4 </s>
<s> subroutines java package its sub-packages the classes in those sub-packages and the subroutines in those classes </s>
<s> this is not a complete picture since it shows only a very few of the many items in each element the oﬃcial documentation for the standard java 6 api lists 203 diﬀerent packages including sub-packages and it lists 3793 classes in these packages </s>
<s> many of these are rather obscure or very specialized but you might want to browse through the documentation to see what is available </s>
<s> as i write this the documentation for the complete api can be found at http//downloadoraclecom/javase/6/docs/api/ even an expert programmer won’t be familiar with the entire api or even a majority of it </s>
<s> in this book you’ll only encounter several dozen classes and those will be suﬃcient for writing a wide variety of programs 453 using classes from packages et’s say that you want to use the class javaawtcolor in a program that you are writing ike any class javaawtcolor is a type which means that you can use it to declare variables and parameters and to specify the return type of a function </s>
<s> one way to do this is to use the full name of the class as the name of the type </s>
<s> for example suppose that you want to declare a variable named rectcolor of type javaawtcolor </s>
<s> you could say javaawtcolor rectcolor this is just an ordinary variable declaration of the form type-name variable-name ” </s>
<s> of course using the full name of every class can get tiresome so java makes it possible to avoid using the full name of a class by importing the class </s>
<s> if you put import javaawtcolor at the beginning of a java source code ﬁle then in the rest of the ﬁle you can abbreviate the full name javaawtcolor to just the simple name of the class color </s>
<s> note that the import 45 </s>
<s> apis packages and javadoc 145 line comes at the start of a ﬁle and is not inside any class </s>
<s> although it is sometimes referred to as a statement it is more properly called an import directive since it is not a statement in the usual sense </s>
<s> the import directive import javaawtcolor” would allow you to say color rectcolor to declare the variable </s>
<s> note that the only eﬀect of the import directive is to allow you to use simple class names instead of full packageclass” names </s>
<s> you aren’t really importing anything substantial if you leave out the import directive you can still access the class—you just have to use its full name </s>
<s> there is a shortcut for importing all the classes from a given package </s>
<s> you can import all the classes from javaawt by saying import javaawt* the *” is a wildcard that matches every class in the package ( however it does not match sub-packages you cannot import the entire contents of all the sub-packages of the java package by saying import java* ) some programmers think that using a wildcard in an import statement is bad style since it can make a large number of class names available that you are not going to use and might not even know about </s>
<s> they think it is better to explicitly import each individual class that you want to use </s>
<s> in my own programming i often use wildcards to import all the classes from the most relevant packages and use individual imports when i am using just one or two classes from a given package in fact any java program that uses a graphical user interface is likely to use many classes from the javaawt and javaxswing packages as well as from another package named javaawtevent and i often begin such programs with import javaawt* import javaawtevent* import javaxswing* a program that works with networking might include the line import javanet*” while one that reads or writes ﬁles might use import javaio*” ( but when you start importing lots of packages in this way you have to be careful about one thing it’s possible for two classes that are in diﬀerent packages to have the same name </s>
<s> for example both the javaawt package and the javautil package contain classes named list </s>
<s> if you import both javaawt* and javautil* the simple name list will be ambiguous </s>
<s> if you try to declare a variable of type ist you will get a compiler error message about an ambiguous class name </s>
<s> the solution is simple use the full name of the class either javaawtlist or javautillist </s>
<s> another solution of course is to use import to import the individual classes you need instead of importing entire packages ) because the package javalang is so fundamental all the classes in javalang are automatically imported into every program </s>
<s> it’s as if every program began with the statement import javalang*” </s>
<s> this is why we have been able to use the class name string instead of javalangstring and mathsqrt( ) instead of javalangmathsqrt( ) </s>
<s> it would still however be perfectly legal to use the longer forms of the names programmers can create new packages </s>
<s> suppose that you want some classes that you are writing to be in a package named utilities </s>
<s> then the source code ﬁle that deﬁnes those classes must begin with the line package utilities 146 chapter 4 </s>
<s> subroutines this would come even before any import directive in that ﬁle </s>
<s> furthermore as mentioned in subsection 264 the source code ﬁle would be placed in a folder with the same name as the package </s>
<s> a class that is in a package automatically has access to other classes in the same package that is a class doesn’t have to import the package in which it is deﬁned in projects that deﬁne large numbers of classes it makes sense to organize those classes into packages </s>
<s> it also makes sense for programmers to create new packages as toolboxes that provide functionality and apis for dealing with areas not covered in the standard java api ( and in fact such toolmaking” programmers often have more prestige than the applications programmers who use their tools ) however with just a couple of exceptions i will not be creating packages in this textbook for the purposes of this book you need to know about packages mainly so that you will be able to import the standard packages </s>
<s> these packages are always available to the programs that you write </s>
<s> you might wonder where the standard classes are actually located </s>
<s> again that can depend to some extent on the version of java that you are using but in recent standard versions they are stored in jar ﬁles in a subdirectory named lib inside the java runtime environment installation directory </s>
<s> a jar ( or java archive” ) ﬁle is a single ﬁle that can contain many classes most of the standard classes can be found in a jar ﬁle named rtjar </s>
<s> in fact java programs are generally distributed in the form of jar ﬁles instead of as individual class ﬁles although we won’t be creating packages explicitly every class is actually part of a package if a class is not speciﬁcally placed in a package then it is put in something called the default package which has no name </s>
<s> almost all the examples that you see in this book are in the default package 454 javadoc to use an api eﬀectively you need good documentation for it </s>
<s> the documentation for most java apis is prepared using a system called javadoc </s>
<s> for example this system is used to prepare the documentation for java’s standard packages </s>
<s> and almost everyone who creates a toolbox in java publishes javadoc documentation for it javadoc documentation is prepared from special comments that are placed in the java source code ﬁle </s>
<s> recall that one type of java comment begins with /* and ends with */ </s>
<s> a javadoc comment takes the same form but it begins with /** rather than simply /* </s>
<s> you have already seen comments of this form in some of the examples in this book such as this subroutine from section 43 /** * this subroutine prints a 3n+1 sequence to standard output using * startingvalue as the initial value of n </s>
<s> it also prints the number * of terms in the sequence </s>
<s> the value of the parameter startingvalue * must be a positive integer */ static void print3nsequence( int startingvalue ) { note that the javadoc comment must be placed just before the subroutine that it is commenting on </s>
<s> this rule is always followed </s>
<s> you can have javadoc comments for subroutines for member variables and for classes </s>
<s> the javadoc comment always immediately precedes the thing it is commenting on ike any comment a javadoc comment is ignored by the computer when the ﬁle is compiled but there is a tool called javadoc that reads java source code ﬁles extracts any javadoc 147 45 </s>
<s> apis packages and javadoc comments that it ﬁnds and creates a set of web pages containing the comments in a nicely formatted interlinked form </s>
<s> by default javadoc will only collect information about public classes subroutines and member variables but it allows the option of creating documentation for non-public things as well </s>
<s> if javadoc doesn’t ﬁnd any javadoc comment for something it will construct one but the comment will contain only basic information such as the name and type of a member variable or the name return type and parameter list of a subroutine </s>
<s> this is syntactic information </s>
<s> to add information about semantics and pragmatics you have to write a javadoc comment as an example you can look at the documentation web page for textio </s>
<s> the documentation page was created by applying the javadoc tool to the source code ﬁle textiojava </s>
<s> if you have downloaded the on-line version of this book the documentation can be found in the textio javadoc directory or you can ﬁnd a link to it in the on-line version of this section in a javadoc comment the *’s at the start of each line are optional </s>
<s> the javadoc tool will remove them </s>
<s> in addition to normal text the comment can contain certain special codes </s>
<s> for one thing the comment can contain html mark-up commands </s>
<s> html is the language that is used to create web pages and javadoc comments are meant to be shown on web pages </s>
<s> the javadoc tool will copy any html commands in the comments to the web pages that it creates you’ll learn some basic html in section 62 but as an example you can add <p> to indicate the start of a new paragraph ( generally in the absence of html commands blank lines and extra spaces in the comment are ignored </s>
<s> furthermore the characters & and < have special meaning in html and should not be used in javadoc comments except with those meanings they can be written as &amp and &lt ) in addition to html commands javadoc comments can include doc tags which are processed as commands by the javadoc tool </s>
<s> a doc tag has a name that begins with the character @ </s>
<s> i will only discuss three tags @param @return and @throws </s>
<s> these tags are used in javadoc comments for subroutines to provide information about its parameters its return value and the exceptions that it might throw </s>
<s> these tags must be placed at the end of the comment after any description of the subroutine itself </s>
<s> the syntax for using them is @param parameter-name description-of-parameter @return description-of-return-value @throws exception-class-name description-of-exception the descriptions can extend over several lines </s>
<s> the description ends at the next doc tag or at the end of the comment </s>
<s> you can include a @param tag for every parameter of the subroutine and a @throws for as many types of exception as you want to document </s>
<s> you should have a @return tag only for a non-void subroutine </s>
<s> these tags do not have to be given in any particular order here is an example that doesn’t do anything exciting but that does use all three types of doc tag /** * this subroutine computes the area of a rectangle given its width * and its height </s>
<s> the length and the width should be positive numbers * @param width the length of one side of the rectangle * @param height the length the second side of the rectangle * @return the area of the rectangle * @throws illegalargumentexception if either the width or the height * is a negative number 148 chapter 4 </s>
<s> subroutines */ public static double areaofrectangle( double length double width ) { if ( width < 0 || height < 0 ) throw new illegalargumentexception( sides must have positive length ) double area area = width * height return area } i will use javadoc comments for many of my examples </s>
<s> i encourage you to use them in your own code even if you don’t plan to generate web page documentation of your work since it’s a standard format that other java programmers will be familiar with if you do want to create web-page documentation you need to run the javadoc tool </s>
<s> this tool is available as a command in the java development kit that was discussed in section 26 you can use javadoc in a command line interface similarly to the way that the javac and java commands are used </s>
<s> javadoc can also be applied in the eclipse integrated development environment that was also discussed in section 26 just right-click the class package or entire project that you want to document in the package explorer select export” and select javadoc” in the window that pops up </s>
<s> i won’t go into any of the details here see the documentation 46 more on program design understanding how programs work is one thing designing a program to perform some particular task is another thing altogether </s>
<s> in section 32 i discussed how pseudocode and stepwise reﬁnement can be used to methodically develop an algorithm </s>
<s> we can now see how subroutines can ﬁt into the process stepwise reﬁnement is inherently a top-down process but the process does have a bottom” that is a point at which you stop reﬁning the pseudocode algorithm and translate what you have directly into proper program code </s>
<s> in the absence of subroutines the process would not bottom out until you get down to the level of assignment statements and very primitive input/output operations </s>
<s> but if you have subroutines lying around to perform certain useful tasks you can stop reﬁning as soon as you’ve managed to express your algorithm in terms of those tasks this allows you to add a bottom-up element to the top-down approach of stepwise reﬁnement </s>
<s> given a problem you might start by writing some subroutines that perform tasks relevant to the problem domain </s>
<s> the subroutines become a toolbox of ready-made tools that you can integrate into your algorithm as you develop it ( alternatively you might be able to buy or ﬁnd a software toolbox written by someone else containing subroutines that you can use in your project as black boxes ) subroutines can also be helpful even in a strict top-down approach </s>
<s> as you reﬁne your algorithm you are free at any point to take any sub-task in the algorithm and make it into a subroutine </s>
<s> developing that subroutine then becomes a separate problem which you can work on separately </s>
<s> your main algorithm will merely call the subroutine </s>
<s> this of course is just a way of breaking your problem down into separate smaller problems </s>
<s> it is still a top-down approach because the top-down analysis of the problem tells you what subroutines to write in the bottom-up approach you start by writing or obtaining subroutines that are relevant to the problem domain and you build your solution to the problem on top of that foundation of subroutines 46 </s>
<s> more on program design 461 149 preconditions and postconditions when working with subroutines as building blocks it is important to be clear about how a subroutine interacts with the rest of the program </s>
<s> this interaction is speciﬁed by the contract of the subroutine as discussed in section 41 </s>
<s> a convenient way to express the contract of a subroutine is in terms of preconditions and postconditions a precondition of a subroutine is something that must be true when the subroutine is called if the subroutine is to work correctly </s>
<s> for example for the built-in function mathsqrt( x ) a precondition is that the parameter x is greater than or equal to zero since it is not possible to take the square root of a negative number </s>
<s> in terms of a contract a precondition represents an obligation of the caller of the subroutine </s>
<s> if you call a subroutine without meeting its precondition then there is no reason to expect it to work properly </s>
<s> the program might crash or give incorrect results but you can only blame yourself not the subroutine a postcondition of a subroutine represents the other side of the contract </s>
<s> it is something that will be true after the subroutine has run ( assuming that its preconditions were met—and that there are no bugs in the subroutine ) </s>
<s> the postcondition of the function mathsqrt( ) is that the square of the value that is returned by this function is equal to the parameter that is provided when the subroutine is called </s>
<s> of course this will only be true if the precondition— that the parameter is greater than or equal to zero—is met </s>
<s> a postcondition of the built-in subroutine systemoutprint( x ) is that the value of the parameter has been displayed on the screen preconditions most often give restrictions on the acceptable values of parameters as in the example of mathsqrt( x ) </s>
<s> however they can also refer to global variables that are used in the subroutine </s>
<s> the postcondition of a subroutine speciﬁes the task that it performs </s>
<s> for a function the postcondition should specify the value that the function returns subroutines are sometimes described by comments that explicitly specify their preconditions and postconditions </s>
<s> when you are given a pre-written subroutine a statement of its preconditions and postconditions tells you how to use it and what it does </s>
<s> when you are assigned to write a subroutine the preconditions and postconditions give you an exact speciﬁcation of what the subroutine is expected to do </s>
<s> i will use this approach in the example that constitutes the rest of this section </s>
<s> the comments are given in the form of javadoc comments but i will explicitly label the preconditions and postconditions ( many computer scientists think that new doc tags @precondition and @postcondition should be added to the javadoc system for explicit labeling of preconditions and postconditions but that has not yet been done ) 462 a design example et’s work through an example of program design using subroutines </s>
<s> in this example we will use pre-written subroutines as building blocks and we will also design new subroutines that we need to complete the project suppose that i have found an already-written class called mosaic </s>
<s> this class allows a program to work with a window that displays little colored rectangles arranged in rows and columns </s>
<s> the window can be opened closed and otherwise manipulated with static member subroutines deﬁned in the mosaic class </s>
<s> in fact the class deﬁnes a toolbox or api that can be used for working with such windows </s>
<s> here are some of the available routines in the api with javadoc-style comments /** * opens a mosaic window on the screen 150 chapter 4 </s>
<s> subroutines * * precondition * postcondition * * * * * note the rows * numbered from 0 */ public static void the parameters rows cols w and h are positive integers a window is open on the screen that can display rows and columns of colored rectangles </s>
<s> each rectangle is w pixels wide and h pixels high </s>
<s> the number of rows is given by the first parameter and the number of columns by the second </s>
<s> initially all rectangles are black are numbered from 0 to rows - 1 and the columns are to cols - 1 open( int rows int cols int w int h ) /** * sets the color of one of the rectangles in the window * * precondition row and col are in the valid range of row and column numbers * and r g and b are in the range 0 to 255 inclusive * postcondition the color of the rectangle in row number row and column * number col has been set to the color specified by r g * and b r gives the amount of red in the color with 0 * representing no red and 255 representing the maximum * possible amount of red </s>
<s> the larger the value of r the * more red in the color g and b work similarly for the * green and blue color components */ public static void setcolor( int row int col int r int g int b ) /** * gets the red component of the color of one of the rectangles * * precondition row and col are in the valid range of row and column numbers * postcondition the red component of the color of the specified rectangle is * returned as an integer in the range 0 to 255 inclusive */ public static int getred( int row int col ) /** * like getred but returns the green component of the color */ public static int getgreen( int row int col ) /** * like getred but returns the blue component of the color */ public static int getblue( int row int col ) /** * tests whether the mosaic window is currently open * * precondition none * postcondition the return value is true if the window is open when this * function is called and it is false if the window is * closed 151 46 </s>
<s> more on program design */ public static boolean isopen( ) /** * inserts a delay in the program ( to regulate the speed at which the colors * are changed for example ) * * precondition milliseconds is a positive integer * postcondition the program has paused for at least the specified number * of milliseconds where one second is equal to 1000 * milliseconds */ public static void delay( int milliseconds ) remember that these subroutines are members of the mosaic class so when they are called from outside mosaic the name of the class must be included as part of the name of the routine for example we’ll have to use the name mosaicisopen( ) rather than simply isopen( ) you’ll notice that the comments on the subroutine don’t specify what happens when the preconditions are not met </s>
<s> although a subroutine is not really obligated by its contract to do anything particular in that case it would be good to know what happens </s>
<s> for example if the precondition row and col are in the valid range of row and column numbers” on the setcolor( ) or getred( ) routine is violated an illegalargumentexception will be thrown knowing that fact would allow you to write programs that catch and handle the exception other questions remain about the behavior of the subroutines </s>
<s> for example what happens if you call mosaicopen( ) and there is already a mosaic window open on the screen ( in fact the old one will be closed and a new one will be created ) it’s diﬃcult to fully document the behavior of a piece of software—sometimes you just have to experiment or look at the full source code ∗ ∗ ∗ my idea for a program is to use the mosaic class as the basis for a neat animation </s>
<s> i want to ﬁll the window with randomly colored squares and then randomly change the colors in a loop that continues as long as the window is open randomly change the colors” could mean a lot of diﬀerent things but after thinking for a while i decide it would be interesting to have a disturbance” that wanders randomly around the window changing the color of each square that it encounters </s>
<s> here’s a picture showing what the contents of the window might look like at one point in time with basic routines for manipulating the window as a foundation i can turn to the speciﬁc problem at hand </s>
<s> a basic outline for my program is open a mosaic window fill window with random colors move around changing squares at random 152 chapter 4 </s>
<s> subroutines filling the window with random colors seems like a nice coherent task that i can work on separately so let’s decide to write a separate subroutine to do it </s>
<s> the third step can be expanded a bit more into the steps start in the middle of the window then keep moving to new squares and changing the color of those squares </s>
<s> this should continue as long as the mosaic window is still open </s>
<s> thus we can reﬁne the algorithm to open a mosaic window fill window with random colors set the current position to the middle square in the window as long as the mosaic window is open randomly change color of the square at the current position move current position up down left or right at random i need to represent the current position in some way </s>
<s> that can be done with two int variables named currentrow and currentcolumn that hold the row number and the column number of the square where the disturbance is currently located </s>
<s> i’ll use 10 rows and 20 columns of squares in my mosaic so setting the current position to be in the center means setting currentrow to 5 and currentcolumn to 10 </s>
<s> i already have a subroutine mosaicopen( ) to open the window and i have a function mosaicisopen( ) to test whether the window is open </s>
<s> to keep the main routine simple i decide that i will write two more subroutines of my own to carry out the two tasks in the while loop </s>
<s> the algorithm can then be written in java as mosaicopen( 10201515 ) fillwithrandomcolors( ) currentrow = 5 // middle row halfway down the window currentcolumn = 10 // middle column while ( mosaicisopen( ) ) { changetorandomcolor( currentrow currentcolumn ) randommove( ) } with the proper wrapper this is essentially the main( ) routine of my program </s>
<s> it turns out i have to make one small modiﬁcation to prevent the animation from running too fast the line mosaicdelay( 20 )” is added to the while loop the main( ) routine is taken care of but to complete the program i still have to write the subroutines fillwithrandomcolors( ) changetorandomcolor( intint ) and randommove( ) writing each of these subroutines is a separate small task </s>
<s> the fillwithrandomcolors( ) routine is deﬁned by the postcondition that each of the rectangles in the mosaic has been changed to a random color” pseudocode for an algorithm to accomplish this task can be given as for each row for each column set the square in that row and column to a random color for each row” and for each column” can be implemented as for loops </s>
<s> we’ve already planned to write a subroutine changetorandomcolor that can be used to set the color ( the possibility of reusing subroutines in several places is one of the big payoﬀs of using them! ) so fillwithrandomcolors( ) can be written in proper java as static void fillwithrandomcolors( ) { for ( int row = 0 row < 10 row++ ) for ( int column = 0 column < 20 column++ ) changetorandomcolor( rowcolumn ) } 46 </s>
<s> more on program design 153 turning to the changetorandomcolor subroutine we already have a method in the mosaic class mosaicsetcolor( ) that can be used to change the color of a square </s>
<s> if we want a random color we just have to choose random values for r g and b </s>
<s> according to the precondition of the mosaicsetcolor( ) subroutine these random values must be integers in the range from 0 to 255 </s>
<s> a formula for randomly selecting such an integer is ( int )( 256*mathrandom( ) )” so the random color subroutine becomes static void changetorandomcolor( int rownum int colnum ) { int red = ( int )( 256*mathrandom( ) ) int green = ( int )( 256*mathrandom( ) ) int blue = ( int )( 256*mathrandom( ) ) mosaicsetcolor( rownumcolnumredgreenblue ) } finally consider the randommove subroutine which is supposed to randomly move the disturbance up down left or right </s>
<s> to make a random choice among four directions we can choose a random integer in the range 0 to 3 </s>
<s> if the integer is 0 move in one direction if it is 1 move in another direction and so on </s>
<s> the position of the disturbance is given by the variables currentrow and currentcolumn </s>
<s> to move up” means to subtract 1 from currentrow </s>
<s> this leaves open the question of what to do if currentrow becomes -1 which would put the disturbance above the window ( which would violate the precondition of several of the mosaic subroutines that the row and column numbers must be in the valid range ) </s>
<s> rather than let this happen i decide to move the disturbance to the opposite edge of the applet by setting currentrow to 9 ( remember that the 10 rows are numbered from 0 to 9 ) an alternative to jumping to the opposite edge would be to simply do nothing in this case </s>
<s> moving the disturbance down left or right is handled similarly </s>
<s> if we use a switch statement to decide which direction to move the code for randommove becomes int directionnum directionnum = ( int )( 4*mathrandom( ) ) switch ( directionnum ) { case 0 // move up currentrow -- if ( currentrow < 0 ) // currentrow is outside the mosaic currentrow = 9 // move it to the opposite edge break case 1 // move right currentcolumn++ if ( currentcolumn >= 20 ) currentcolumn = 0 break case 2 // move down currentrow++ if ( currentrow >= 10 ) currentrow = 0 break case 3 // move left currentcolumn -- if ( currentcolumn < 0 ) currentcolumn = 19 break } 154 463 chapter 4 </s>
<s> subroutines the program putting this all together we get the following complete program </s>
<s> note that i’ve added javadocstyle comments for the class itself and for each of the subroutines </s>
<s> the variables currentrow and currentcolumn are deﬁned as static members of the class rather than local variables because each of them is used in several diﬀerent subroutines </s>
<s> this program actually depends on two other classes mosaic and another class called mosaiccanvas that is used by mosaic if you want to compile and run this program both of these classes must be available to the program /** * this program opens a window full of randomly colored squares </s>
<s> a disturbance * moves randomly around in the window randomly changing the color of each * square that it visits </s>
<s> the program runs until the user closes the window */ public class randommosaicwalk { static int currentrow // row currently containing the disturbance static int currentcolumn // column currently containing disturbance /** * the main program creates the window fills it with random colors * and then moves the disturbance in a random walk around the window * as long as the window is open */ public static void main( string[] args ) { mosaicopen( 10201515 ) fillwithrandomcolors( ) currentrow = 5 // start at center of window currentcolumn = 10 while ( mosaicisopen( ) ) { changetorandomcolor( currentrow currentcolumn ) randommove( ) mosaicdelay( 20 ) } } // end main /** * fills the window with randomly colored squares * precondition the mosaic window is open * postcondition each square has been set to a random color */ static void fillwithrandomcolors( ) { for ( int row=0 row < 10 row++ ) { for ( int column=0 column < 20 column++ ) { changetorandomcolor( row column ) } } } // end fillwithrandomcolors /** * changes one square to a new randomly selected color * precondition the specified rownum and colnum are in the valid range * of row and column numbers * postcondition the square in the specified row and column has 46 </s>
<s> more on program design 155 * been set to a random color * @param rownum the row number of the square counting rows down * from 0 at the top * @param colnum the column number of the square counting columns over * from 0 at the left */ static void changetorandomcolor( int rownum int colnum ) { int red green blue red = ( int )( 256*mathrandom( ) ) // choose random levels in range green = ( int )( 256*mathrandom( ) ) // 0 to 255 for red green blue = ( int )( 256*mathrandom( ) ) // and blue color components mosaicsetcolor( rownumcolnumredgreenblue ) } // end of changetorandomcolor( ) /** * move the disturbance * precondition the global variables currentrow and currentcolumn * are within the legal range of row and column numbers * postcondition currentrow or currentcolumn is changed to one of the * neighboring positions in the grid -- up down left or * right from the current position </s>
<s> if this moves the * position outside of the grid then it is moved to the * opposite edge of the grid */ static void randommove( ) { int directionnum // randomly set to 0 1 2 or 3 to choose direction directionnum = ( int )( 4*mathrandom( ) ) switch ( directionnum ) { case 0 // move up currentrow -- if ( currentrow < 0 ) currentrow = 9 break case 1 // move right currentcolumn++ if ( currentcolumn >= 20 ) currentcolumn = 0 break case 2 // move down currentrow++ if ( currentrow >= 10 ) currentrow = 0 break case 3 // move left currentcolumn -- if ( currentcolumn < 0 ) currentcolumn = 19 break } } // end randommove } // end class randommosaicwalk 156 47 chapter 4 </s>
<s> subroutines the truth about declarations names are fundamental to programming as i said a few chapters ago there are a lot of details involved in declaring and using names </s>
<s> i have been avoiding some of those details in this section i’ll reveal most of the truth ( although still not the full truth ) about declaring and using variables in java </s>
<s> the material in the subsections initialization in declarations” and named constants” is particularly important since i will be using it regularly in future chapters 471 initialization in declarations when a variable declaration is executed memory is allocated for the variable </s>
<s> this memory must be initialized to contain some deﬁnite value before the variable can be used in an expression </s>
<s> in the case of a local variable the declaration is often followed closely by an assignment statement that does the initialization </s>
<s> for example int count count = 0 // declare a variable named count // give count its initial value however the truth about declaration statements is that it is legal to include the initialization of the variable in the declaration statement </s>
<s> the two statements above can therefore be abbreviated as int count = 0 // declare count and give it an initial value the computer still executes this statement in two steps declare the variable count then assign the value 0 to the newly created variable </s>
<s> the initial value does not have to be a constant </s>
<s> it can be any expression </s>
<s> it is legal to initialize several variables in one declaration statement for example char firstinitial = ’d’ secondinitial = ’e’ int x y = 1 // ok but only y has been initialized! int n = 3 m = n+2 // ok n is initialized // before its value is used this feature is especially common in for loops since it makes it possible to declare a loop control variable at the same point in the loop where it is initialized </s>
<s> since the loop control variable generally has nothing to do with the rest of the program outside the loop it’s reasonable to have its declaration in the part of the program where it’s actually used </s>
<s> for example for ( int i = 0 i < 10 systemoutprintln( i ) } i++ ) { again you should remember that this is simply an abbreviation for the following where i’ve added an extra pair of braces to show that i is considered to be local to the for statement and no longer exists after the for loop ends { int i for ( i = 0 i < 10 i++ ) { systemoutprintln( i ) } } 47 </s>
<s> the truth about declarations 157 ( you might recall by the way that for for-each” loops the special type of for statement that is used with enumerated types declaring the variable in the for is required </s>
<s> see subsection 344 ) a member variable can also be initialized at the point where it is declared just as for a local variable </s>
<s> for example public class bank { static double interestrate = 005 static int maxwithdrawal = 200 // more variables and subroutines } a static member variable is created as soon as the class is loaded by the java interpreter and the initialization is also done at that time </s>
<s> in the case of member variables this is not simply an abbreviation for a declaration followed by an assignment statement </s>
<s> declaration statements are the only type of statement that can occur outside of a subroutine </s>
<s> assignment statements cannot so the following is illegal public class bank { static double interestrate interestrate = 005 // illegal // can’t be outside a subroutine! because of this declarations of member variables often include initial values </s>
<s> in fact as mentioned in subsection 424 if no initial value is provided for a member variable then a default initial value is used </s>
<s> for example when declaring an integer member variable count static int count” is equivalent to static int count = 0” 472 named constants sometimes the value of a variable is not supposed to change after it is initialized </s>
<s> for example in the above example where interestrate is initialized to the value 005 it’s quite possible that 005 is meant to be the value throughout the entire program </s>
<s> in this case the programmer is probably deﬁning the variable interestrate to give a meaningful name to the otherwise meaningless number 005 </s>
<s> it’s easier to understand what’s going on when a program says principal += principal*interestrate” rather than principal += principal*005” in java the modiﬁer final” can be applied to a variable declaration to ensure that the value stored in the variable cannot be changed after the variable has been initialized </s>
<s> for example if the member variable interestrate is declared with final static double interestrate = 005 then it would be impossible for the value of interestrate to change anywhere else in the program </s>
<s> any assignment statement that tries to assign a value to interestrate will be rejected by the computer as a syntax error when the program is compiled it is legal to apply the final modiﬁer to local variables and even to formal parameters but it is most useful for member variables </s>
<s> i will often refer to a static member variable that is declared to be final as a named constant since its value remains constant for the whole time that the program is running </s>
<s> the readability of a program can be greatly enhanced by 158 chapter 4 </s>
<s> subroutines using named constants to give meaningful names to important quantities in the program </s>
<s> a recommended style rule for named constants is to give them names that consist entirely of upper case letters with underscore characters to separate words if necessary </s>
<s> for example the preferred style for the interest rate constant would be final static double interest rate = 005 this is the style that is generally used in java’s standard classes which deﬁne many named constants </s>
<s> for example we have already seen that the math class contains a variable mathpi this variable is declared in the math class as a public ﬁnal static” variable of type double similarly the color class contains named constants such as colorred and coloryellow which are public ﬁnal static variables of type color </s>
<s> many named constants are created just to give meaningful names to be used as parameters in subroutine calls </s>
<s> for example the standard class named font contains named constants fontplain fontbold and fontitalic </s>
<s> these constants are used for specifying diﬀerent styles of text when calling various subroutines in the font class enumerated type constants ( see subsection 233 ) are also examples of named constants the enumerated type deﬁnition enum alignment { left right center } deﬁnes the constants alignmentleft alignmentright and alignmentcenter </s>
<s> technically alignment is a class and the three constants are public ﬁnal static members of that class deﬁning the enumerated type is similar to deﬁning three constants of type say int public static final int alignment left = 0 public static final int alignmnent right = 1 public static final int alignment center = 2 in fact this is how things were generally done before the introduction of enumerated types and it is what is done with the constants fontplain fontbold and fontitalic mentioned above </s>
<s> using the integer constants you could deﬁne a variable of type int and assign it the values alignment left alignment right or alignment center to represent diﬀerent types of alignment </s>
<s> the only problem with this is that the computer has no way of knowing that you intend the value of the variable to represent an alignment and it will not raise any objection if the value that is assigned to the variable is not one of the three valid alignment values with the enumerated type on the other hand the only values that can be assigned to a variable of type alignment are the constant values that are listed in the deﬁnition of the enumerated type </s>
<s> any attempt to assign an invalid value to the variable is a syntax error which the computer will detect when the program is compiled </s>
<s> this extra safety is one of the major advantages of enumerated types ∗ ∗ ∗ curiously enough one of the major reasons to use named constants is that it’s easy to change the value of a named constant </s>
<s> of course the value can’t change while the program is running </s>
<s> but between runs of the program it’s easy to change the value in the source code and recompile the program </s>
<s> consider the interest rate example </s>
<s> it’s quite possible that the value of the interest rate is used many times throughout the program </s>
<s> suppose that the bank changes the interest rate and the program has to be modiﬁed </s>
<s> if the literal number 005 were used throughout the program the programmer would have to track down each place where the interest rate is used in the program and change the rate to the new value ( this is made even harder by the fact that the number 005 might occur in the program with other meanings 47 </s>
<s> the truth about declarations 159 besides the interest rate as well as by the fact that someone might have say used 0025 to represent half the interest rate ) on the other hand if the named constant interest rate is declared and used consistently throughout the program then only the single line where the constant is initialized needs to be changed as an extended example i will give a new version of the randommosaicwalk program from the previous section </s>
<s> this version uses named constants to represent the number of rows in the mosaic the number of columns and the size of each little square </s>
<s> the three constants are declared as final static member variables with the lines final static int rows = 30 // number of rows in mosaic final static int columns = 30 // number of columns in mosaic final static int square size = 15 // size of each square in mosaic the rest of the program is carefully modiﬁed to use the named constants </s>
<s> for example in the new version of the program the mosaic window is opened with the statement mosaicopen( rows columns square size square size ) sometimes it’s not easy to ﬁnd all the places where a named constant needs to be used </s>
<s> if you don’t use the named constant consistently you’ve more or less defeated the purpose </s>
<s> it’s always a good idea to run a program using several diﬀerent values for any named constant to test that it works properly in all cases here is the complete new program randommosaicwalk2 with all modiﬁcations from the previous version shown in italic </s>
<s> i’ve left out some of the comments to save space public class randommosaicwalk2 { final static int rows = 30 // number of rows in mosaic final static int columns = 30 // number of columns in mosaic final static int square size = 15 // size of each square in mosaic static int currentrow // row currently containing the disturbance static int currentcolumn // column currently containing the disturbance public static void main( string[] args ) { mosaicopen( rows columns square size square size ) fillwithrandomcolors( ) currentrow = rows / 2 // start at center of window currentcolumn = columns / 2 while ( mosaicisopen( ) ) { changetorandomcolor( currentrow currentcolumn ) randommove( ) mosaicdelay( 20 ) } } // end main static void fillwithrandomcolors( ) { for ( int row=0 row < rows row++ ) { for ( int column=0 column < columns column++ ) { changetorandomcolor( row column ) } } } // end fillwithrandomcolors static void changetorandomcolor( int rownum int colnum ) { int red = ( int )( 256*mathrandom( ) ) // choose random levels in range 160 chapter 4 </s>
<s> subroutines } int green = ( int )( 256*mathrandom( ) ) // 0 to 255 for red green int blue = ( int )( 256*mathrandom( ) ) // and blue color components mosaicsetcolor( rownumcolnumredgreenblue ) // end changetorandomcolor static void randommove( ) { int directionnum // randomly set to 0 1 2 or 3 to choose direction directionnum = ( int )( 4*mathrandom( ) ) switch ( directionnum ) { case 0 // move up currentrow -- if ( currentrow < 0 ) currentrow = rows - 1 break case 1 // move right currentcolumn++ if ( currentcolumn >= columns ) currentcolumn = 0 break case 2 // move down currentrow ++ if ( currentrow >= rows ) currentrow = 0 break case 3 // move left currentcolumn -- if ( currentcolumn < 0 ) currentcolumn = columns - 1 break } } // end randommove } // end class randommosaicwalk2 473 naming and scope rules when a variable declaration is executed memory is allocated for that variable </s>
<s> the variable name can be used in at least some part of the program source code to refer to that memory or to the data that is stored in the memory </s>
<s> the portion of the program source code where the variable name is valid is called the scope of the variable </s>
<s> similarly we can refer to the scope of subroutine names and formal parameter names for static member subroutines scope is straightforward </s>
<s> the scope of a static subroutine is the entire source code of the class in which it is deﬁned </s>
<s> that is it is possible to call the subroutine from any point in the class including at a point in the source code before the point where the deﬁnition of the subroutine appears </s>
<s> it is even possible to call a subroutine from within itself </s>
<s> this is an example of something called recursion” a fairly advanced topic that we will return to in chapter 9 for a variable that is declared as a static member variable in a class the situation is similar but with one complication </s>
<s> it is legal to have a local variable or a formal parameter that has the same name as a member variable </s>
<s> in that case within the scope of the local variable or parameter the member variable is hidden </s>
<s> consider for example a class named game that has the form 47 </s>
<s> the truth about declarations 161 public class game { static int count // member variable static void playgame( ) { int count // local variable // some statements to define playgame( ) } } // more variables and subroutines // end game in the statements that make up the body of the playgame( ) subroutine the name count” refers to the local variable </s>
<s> in the rest of the game class count” refers to the member variable ( unless hidden by other local variables or parameters named count ) </s>
<s> however there is one further complication </s>
<s> the member variable named count can also be referred to by the full name gamecount </s>
<s> usually the full name is only used outside the class where count is deﬁned however there is no rule against using it inside the class </s>
<s> the full name gamecount can be used inside the playgame( ) subroutine to refer to the member variable instead of the local variable </s>
<s> so the full scope rule is that the scope of a static member variable includes the entire class in which it is deﬁned but where the simple name of the member variable is hidden by a local variable or formal parameter name the member variable must be referred to by its full name of the form classname variablename ( scope rules for non-static members are similar to those for static members except that as we shall see non-static members cannot be used in static subroutines ) the scope of a formal parameter of a subroutine is the block that makes up the body of the subroutine </s>
<s> the scope of a local variable extends from the declaration statement that deﬁnes the variable to the end of the block in which the declaration occurs </s>
<s> as noted above it is possible to declare a loop control variable of a for loop in the for statement as in for ( int i=0 i < 10 i++ )” </s>
<s> the scope of such a declaration is considered as a special case it is valid only within the for statement and does not extend to the remainder of the block that contains the for statement it is not legal to redeﬁne the name of a formal parameter or local variable within its scope even in a nested block </s>
<s> for example this is not allowed void badsub( int y ) { int x while ( y > 0 ) { int x // error } x is already defined } in many languages this would be legal the declaration of x in the while loop would hide the original declaration </s>
<s> it is not legal in java however once the block in which a variable is declared ends its name does become available for reuse in java </s>
<s> for example 162 chapter 4 </s>
<s> subroutines void goodsub( int y ) { while ( y > 10 ) { int x // the scope of x ends here } while ( y > 0 ) { int x // ok previous declaration of x has expired } } you might wonder whether local variable names can hide subroutine names </s>
<s> this can’t happen for a reason that might be surprising </s>
<s> there is no rule that variables and subroutines have to have diﬀerent names </s>
<s> the computer can always tell whether a name refers to a variable or to a subroutine because a subroutine name is always followed by a left parenthesis </s>
<s> it’s perfectly legal to have a variable called count and a subroutine called count in the same class ( this is one reason why i often write subroutine names with parentheses as when i talk about the main( ) routine </s>
<s> it’s a good idea to think of the parentheses as part of the name ) even more is true it’s legal to reuse class names to name variables and subroutines </s>
<s> the syntax rules of java guarantee that the computer can always tell when a name is being used as a class name </s>
<s> a class name is a type and so it can be used to declare variables and formal parameters and to specify the return type of a function </s>
<s> this means that you could legally have a class called insanity in which you declare a function static insanity insanity( insanity insanity ) { } the ﬁrst insanity is the return type of the function </s>
<s> the second is the function name the third is the type of the formal parameter and the fourth is the name of the formal parameter however please remember that not everything that is possible is a good idea! 163 exercises exercises for chapter 4 1 </s>
<s> to capitalize” a string means to change the ﬁrst letter of each word in the string to upper case ( if it is not already upper case ) </s>
<s> for example a capitalized version of now is the time to act!” is now is the time to act!” </s>
<s> write a subroutine named printcapitalized that will print a capitalized version of a string to standard output </s>
<s> the string to be printed should be a parameter to the subroutine </s>
<s> test your subroutine with a main( ) routine that gets a line of input from the user and applies the subroutine to it note that a letter is the ﬁrst letter of a word if it is not immediately preceded in the string by another letter </s>
<s> recall that there is a standard boolean-valued function characterisletter( char ) that can be used to test whether its parameter is a letter there is another standard char-valued function charactertouppercase( char ) that returns a capitalized version of the single character passed to it as a parameter </s>
<s> that is if the parameter is a letter it returns the upper-case version </s>
<s> if the parameter is not a letter it just returns a copy of the parameter 2 </s>
<s> the hexadecimal digits are the ordinary base-10 digits ’0’ through ’9’ plus the letters ’a’ through ’f’ </s>
<s> in the hexadecimal system these digits represent the values 0 through 15 respectively </s>
<s> write a function named hexvalue that uses a switch statement to ﬁnd the hexadecimal value of a given character </s>
<s> the character is a parameter to the function and its hexadecimal value is the return value of the function </s>
<s> you should count lower case letters ’a’ through ’f’ as having the same value as the corresponding upper case letters if the parameter is not one of the legal hexadecimal digits return -1 as the value of the function a hexadecimal integer is a sequence of hexadecimal digits such as 34a7 ff8 174204 or fade </s>
<s> if str is a string containing a hexadecimal integer then the corresponding base-10 integer can be computed as follows value = 0 for ( i = 0 i < strlength( ) i++ ) value = value*16 + hexvalue( strcharat( i ) ) of course this is not valid if str contains any characters that are not hexadecimal digits write a program that reads a string from the user </s>
<s> if all the characters in the string are hexadecimal digits print out the corresponding base-10 value </s>
<s> if not print out an error message 3 </s>
<s> write a function that simulates rolling a pair of dice until the total on the dice comes up to be a given number </s>
<s> the number that you are rolling for is a parameter to the function the number of times you have to roll the dice is the return value of the function </s>
<s> the parameter should be one of the possible totals 2 3 12 </s>
<s> the function should throw an illegalargumentexception if this is not the case </s>
<s> use your function in a program that computes and prints the number of rolls it takes to get snake eyes ( snake eyes means that the total showing on the dice is 2 ) 4 </s>
<s> this exercise builds on exercise 43 </s>
<s> every time you roll the dice repeatedly trying to get a given total the number of rolls it takes can be diﬀerent </s>
<s> the question naturally arises what’s the average number of rolls to get a given total write a function that performs the experiment of rolling to get a given total 10000 times </s>
<s> the desired total is 164 chapter 4 </s>
<s> subroutines a parameter to the subroutine </s>
<s> the average number of rolls is the return value </s>
<s> each individual experiment should be done by calling the function you wrote for exercise 43 now write a main program that will call your function once for each of the possible totals ( 2 3 12 ) </s>
<s> it should make a table of the results something like total on dice -- -- -- -- -- -- 2 3 average number of rolls -- -- -- -- -- -- -- -- -- -- -- 358382 180607 5 </s>
<s> the sample program randommosaicwalkjava from section 46 shows a disturbance” that wanders around a grid of colored squares </s>
<s> when the disturbance visits a square the color of that square is changed </s>
<s> the applet at the bottom of section 47 in the on-line version of this book shows a variation on this idea </s>
<s> in this applet all the squares start out with the default color black </s>
<s> every time the disturbance visits a square a small amount is added to the green component of the color of that square </s>
<s> write a subroutine that will add 25 to the green component of one of the squares in the mosaic </s>
<s> the row and column numbers of the square should be given as parameters to the subroutine </s>
<s> recall that you can discover the current green component of the square in row r and column c with the function call mosaicgetgreen( rc ) </s>
<s> use your subroutine as a substitute for the changetorandomcolor( ) subroutine in the program randommosaicwalk2java ( this is the improved version of the program from section 47 that uses named constants for the number of rows number of columns and square size ) set the number of rows and the number of columns to 80 </s>
<s> set the square size to 5 don’t forget that you will need mosaicjava and mosaiccanvasjava to compile and run your program since they deﬁne non-standard classes that are required by the program 6 </s>
<s> for this exercise you will do something even more interesting with the mosaic class that was discussed in section 46 ( again don’t forget that you will need mosaicjava and mosaiccanvasjava ) the program that you write for this exercise should start by ﬁlling a mosaic with random colors </s>
<s> then repeat the following until the user closes the mosaic window select one of the rectangles in the mosaic at random </s>
<s> then select one of the neighboring rectangles—above it below it to the left of it or to the right of it </s>
<s> copy the color of the originally selected rectangle to the selected neighbor so that the two rectangles now have the same color as this process is repeated over and over it becomes more and more likely that neighboring squares will have the same color </s>
<s> the result is to build up larger color patches </s>
<s> on the other hand once the last square of a given color disappears there is no way for that color to ever reappear ( extinction is forever! ) </s>
<s> if you let the program run long enough eventually the entire mosaic will be one uniform color you can ﬁnd an applet version of the program in the on-line version of this page </s>
<s> here is a picture of what the mosaic looks like after the program has been running for a while 165 exercises after doing each color conversion your program should insert a very short delay </s>
<s> you can try running the program without the delay it will work but it might be a little glitchy 7 </s>
<s> this is another mosaic exercise ( using mosaicjava and mosaiccanvasjava as discussed in section 46 ) </s>
<s> while the program does not do anything particularly interesting it’s interesting as a programming problem </s>
<s> an applet that does the same thing as the program can be seen in the on-line version of this book </s>
<s> here is a picture showing what it looks like at several diﬀerent times the program will show a square that grows from the center of the applet to the edges as it grows the part added around the edges gets brighter so that in the end the color of the square fades from white at the edges to dark gray at the center the whole picture is made up of the little rectangles of a mosaic </s>
<s> you should ﬁrst write a subroutine that draws the outline of a rectangle on a mosaic window </s>
<s> more speciﬁcally write a subroutine named outlinerectangle such that the subroutine call statement outlinerectangle( topleftheightwidthrgb ) will call mosaicsetcolor( rowcolrgb ) for each little square that lies on the outline of a rectangle </s>
<s> the topmost row of the rectangle is speciﬁed by top </s>
<s> the number of rows in the rectangle is speciﬁed by height ( so the bottommost row is top+height-1 ) the leftmost column of the rectangle is speciﬁed by left </s>
<s> the number of columns in the rectangle is speciﬁed by width ( so the rightmost column is left+width-1 ) for the speciﬁc program that you are writing the width and the height of the rectangle will always be equal but it’s nice to have the more general-purpose routine the animation loops through the same sequence of steps over and over </s>
<s> in each step the outline of a rectangle is drawn in gray ( that is with all three color components having the same value ) </s>
<s> there is a pause of 200 milliseconds so the user can see the picture then the variables giving the top row left column size and color level of the rectangle are adjusted to get ready for the next step </s>
<s> in my applet the color level starts at 50 and increases by 10 after each step </s>
<s> when the rectangle gets to the outer edge of the applet the loop ends and the picture is erased by ﬁlling the mosaic with black </s>
<s> then after a delay of one second the animation starts again at the beginning of the loop </s>
<s> you 166 chapter 4 </s>
<s> subroutines might want to make an additional subroutine to do one loop through the steps of the basic animation the main( ) routine simply opens a mosaic window and then does the animation loop over and over until the user closes the window </s>
<s> there is a 1000 millisecond delay between one animation loop and the next </s>
<s> use a mosaic window that has 41 rows and 41 columns ( i advise you not to use named constants for the numbers of rows and columns since the problem is complicated enough already ) 167 quiz quiz on chapter 4 1 </s>
<s> a black box” has an interface and an implementation </s>
<s> explain what is meant by the terms interface and implementation 2 </s>
<s> a subroutine is said to have a contract </s>
<s> what is meant by the contract of a subroutine when you want to use a subroutine why is it important to understand its contract the contract has both syntactic” and semantic” aspects </s>
<s> what is the syntactic aspect what is the semantic aspect 3 </s>
<s> brieﬂy explain how subroutines can be useful in the top-down design of programs 4 </s>
<s> discuss the concept of parameters </s>
<s> what are parameters for what is the diﬀerence between formal parameters and actual parameters 5 </s>
<s> give two diﬀerent reasons for using named constants ( declared with the final modiﬁer ) 6 </s>
<s> what is an api give an example 7 </s>
<s> write a subroutine named stars” that will output a line of stars to standard output ( a star is the character *” ) the number of stars should be given as a parameter to the subroutine </s>
<s> use a for loop </s>
<s> for example the command stars( 20 )” would output ******************** 8 </s>
<s> write a main( ) routine that uses the subroutine that you wrote for question 7 to output 10 lines of stars with 1 star in the ﬁrst line 2 stars in the second line and so on as shown below * ** *** **** ***** ****** ******* ******** ********* ********** 9 </s>
<s> write a function named countchars that has a string and a char as parameters </s>
<s> the function should count the number of times the character occurs in the string and it should return the result as the value of the function 10 </s>
<s> write a subroutine with three parameters of type int </s>
<s> the subroutine should determine which of its parameters is smallest </s>
<s> the value of the smallest parameter should be returned as the value of the subroutine 168 chapter 4 </s>
<s> subroutines chapter 5 programming in the large ii objects and classes whereas a subroutine represents a single task an object can encapsulate both data ( in the form of instance variables ) and a number of diﬀerent tasks or behaviors” related to that data ( in the form of instance methods ) </s>
<s> therefore objects provide another more sophisticated type of structure that can be used to help manage the complexity of large programs this chapter covers the creation and use of objects in java </s>
<s> section 55 covers the central ideas of object-oriented programming inheritance and polymorphism </s>
<s> however in this textbook we will generally use these ideas in a limited form by creating independent classes and building on existing classes rather than by designing entire hierarchies of classes from scratch section 56 and section 57 cover some of the many details of object oriented programming in java </s>
<s> although these details are used occasionally later in the book you might want to skim through them now and return to them later when they are actually needed 51 objects instance methods and instance variables object-oriented programming ( oop ) represents an attempt to make programs more closely model the way people think about and deal with the world </s>
<s> in the older styles of programming a programmer who is faced with some problem must identify a computing task that needs to be performed in order to solve the problem </s>
<s> programming then consists of ﬁnding a sequence of instructions that will accomplish that task </s>
<s> but at the heart of objectoriented programming instead of tasks we ﬁnd objects—entities that have behaviors that hold information and that can interact with one another </s>
<s> programming consists of designing a set of objects that somehow model the problem at hand </s>
<s> software objects in the program can represent real or abstract entities in the problem domain </s>
<s> this is supposed to make the design of the program more natural and hence easier to get right and easier to understand to some extent oop is just a change in point of view </s>
<s> we can think of an object in standard programming terms as nothing more than a set of variables together with some subroutines for manipulating those variables </s>
<s> in fact it is possible to use object-oriented techniques in any programming language </s>
<s> however there is a big diﬀerence between a language that makes oop possible and one that actively supports it </s>
<s> an object-oriented programming language such as java includes a number of features that make it very diﬀerent from a standard language </s>
<s> in order to make eﬀective use of those features you have to orient” your thinking correctly 169 170 511 chapter 5 </s>
<s> objects and classes objects classes and instances objects are closely related to classes </s>
<s> we have already been working with classes for several chapters and we have seen that a class can contain variables and subroutines </s>
<s> if an object is also a collection of variables and subroutines how do they diﬀer from classes and why does it require a diﬀerent type of thinking to understand and use them eﬀectively in the one section where we worked with objects rather than classes section 38 it didn’t seem to make much diﬀerence we just left the word static” out of the subroutine deﬁnitions! i have said that classes describe” objects or more exactly that the non-static portions of classes describe objects </s>
<s> but it’s probably not very clear what this means </s>
<s> the more usual terminology is to say that objects belong to classes but this might not be much clearer ( there is a real shortage of english words to properly distinguish all the concepts involved </s>
<s> an object certainly doesn’t belong” to a class in the same way that a member variable belongs” to a class ) from the point of view of programming it is more exact to say that classes are used to create objects </s>
<s> a class is a kind of factory—or blueprint—for constructing objects </s>
<s> the non-static parts of the class specify or describe what variables and subroutines the objects will contain </s>
<s> this is part of the explanation of how objects diﬀer from classes objects are created and destroyed as the program runs and there can be many objects with the same structure if they are created using the same class consider a simple class whose job is to group together a few static member variables </s>
<s> for example the following class could be used to store information about the person who is using the program class userdata { static string name static int age } in a program that uses this class there is only one copy of each of the variables userdataname and userdataage </s>
<s> there can only be one user” since we only have memory space to store data about one user </s>
<s> the class userdata and the variables it contains exist as long as the program runs ( that is essentially what it means to be static” ) now consider a similar class that includes non-static variables class playerdata { string name int age } in this case there is no such variable as playerdataname or playerdataage since name and age are not static members of playerdata </s>
<s> so there is nothing much in the class at all— except the potential to create objects </s>
<s> but it’s a lot of potential since it can be used to create any number of objects! each object will have its own variables called name and age </s>
<s> there can be many players” because we can make new objects to represent new players on demand a program might use this class to store information about multiple players in a game </s>
<s> each player has a name and an age </s>
<s> when a player joins the game a new playerdata object can be created to represent that player </s>
<s> if a player leaves the game the playerdata object that represents that player can be destroyed </s>
<s> a system of objects in the program is being used to dynamically model what is happening in the game </s>
<s> you can’t do this with static variables! in section 38 we worked with applets which are objects </s>
<s> the reason they didn’t seem to be any diﬀerent from classes is because we were only working with one applet in each class that 51 </s>
<s> objects and instance methods 171 we looked at </s>
<s> but one class can be used to make many applets </s>
<s> think of an applet that scrolls a message across a web page </s>
<s> there could be several such applets on the same page all created from the same class </s>
<s> if the scrolling message in the applet is stored in a non-static variable then each applet will have its own variable and each applet can show a diﬀerent message </s>
<s> the situation is even clearer if you think about windows on the screen which like applets are objects </s>
<s> as a program runs many windows might be opened and closed but all those windows can belong to the same class </s>
<s> here again we have a dynamic situation where multiple objects are created and destroyed as a program runs ∗ ∗ ∗ an object that belongs to a class is said to be an instance of that class </s>
<s> the variables that the object contains are called instance variables </s>
<s> the subroutines that the object contains are called instance methods ( recall that in the context of object-oriented programming method is a synonym for subroutine” </s>
<s> from now on since we are doing object-oriented programming i will prefer the term method” ) for example if the playerdata class as deﬁned above is used to create an object then that object is an instance of the playerdata class and name and age are instance variables in the object </s>
<s> it is important to remember that the class of an object determines the types of the instance variables however the actual data is contained inside the individual objects not the class </s>
<s> thus each object has its own set of data an applet that scrolls a message across a web page might include a subroutine named scroll( ) </s>
<s> since the applet is an object this subroutine is an instance method of the applet the source code for the method is in the class that is used to create the applet </s>
<s> still it’s better to think of the instance method as belonging to the object not to the class </s>
<s> the non-static subroutines in the class merely specify the instance methods that every object created from the class will contain </s>
<s> the scroll( ) methods in two diﬀerent applets do the same thing in the sense that they both scroll messages across the screen </s>
<s> but there is a real diﬀerence between the two scroll( ) methods </s>
<s> the messages that they scroll can be diﬀerent </s>
<s> you might say that the method deﬁnition in the class speciﬁes what type of behavior the objects will have but the speciﬁc behavior can vary from object to object depending on the values of their instance variables as you can see the static and the non-static portions of a class are very diﬀerent things and serve very diﬀerent purposes </s>
<s> many classes contain only static members or only non-static however it is possible to mix static and non-static members in a single class and we’ll see a few examples later in this chapter where it is reasonable to do so </s>
<s> you should distinguish between the source code for the class and the class itself </s>
<s> the source code determines both the class and the objects that are created from that class </s>
<s> the static” deﬁnitions in the source code specify the things that are part of the class itself whereas the non-static deﬁnitions in the source code specify things that will become part of every instance object that is created from the class </s>
<s> by the way static member variables and static member subroutines in a class are sometimes called class variables and class methods since they belong to the class itself rather than to instances of that class 512 fundamentals of objects so far i’ve been talking mostly in generalities and i haven’t given you much of an idea about what you have to put in a program if you want to work with objects </s>
<s> let’s look at a speciﬁc example to see how it works </s>
<s> consider this extremely simpliﬁed version of a student class 172 chapter 5 </s>
<s> objects and classes which could be used to store information about students taking a course public class student { public string name // student’s name public double test1 test2 test3 // grades on three tests public double getaverage( ) { // compute average test grade return ( test1 + test2 + test3 ) / 3 } } // end of class student none of the members of this class are declared to be static so the class exists only for creating objects </s>
<s> this class deﬁnition says that any object that is an instance of the student class will include instance variables named name test1 test2 and test3 and it will include an instance method named getaverage( ) </s>
<s> the names and tests in diﬀerent objects will generally have diﬀerent values </s>
<s> when called for a particular student the method getaverage( ) will compute an average using that student’s test grades </s>
<s> diﬀerent students can have diﬀerent averages ( again this is what it means to say that an instance method belongs to an individual object not to the class ) in java a class is a type similar to the built-in types such as int and boolean </s>
<s> so a class name can be used to specify the type of a variable in a declaration statement the type of a formal parameter or the return type of a function </s>
<s> for example a program could deﬁne a variable named std of type student with the statement student std however declaring a variable does not create an object! this is an important point which is related to this very important fact in java no variable can ever hold an object a variable can only hold a reference to an object you should think of objects as ﬂoating around independently in the computer’s memory </s>
<s> in fact there is a special portion of memory called the heap where objects live </s>
<s> instead of holding an object itself a variable holds the information necessary to ﬁnd the object in memory </s>
<s> this information is called a reference or pointer to the object </s>
<s> in eﬀect a reference to an object is the address of the memory location where the object is stored </s>
<s> when you use a variable of object type the computer uses the reference in the variable to ﬁnd the actual object in a program objects are created using an operator called new which creates an object and returns a reference to that object </s>
<s> for example assuming that std is a variable of type student declared as above the assignment statement std = new student( ) would create a new object which is an instance of the class student and it would store a reference to that object in the variable std </s>
<s> the value of the variable is a reference or pointer to the object not the object itself </s>
<s> it is not quite true then to say that the object is the value of the variable std” ( though sometimes it is hard to avoid using this terminology ) </s>
<s> it is certainly not at all true to say that the object is stored in the variable std” the proper terminology is that the variable std refers to or points to the object” and i will try to stick to that terminology as much as possible 173 51 </s>
<s> objects and instance methods so suppose that the variable std refers to an object belonging to the class student </s>
<s> that object has instance variables name test1 test2 and test3 </s>
<s> these instance variables can be referred to as stdname stdtest1 stdtest2 and stdtest3 </s>
<s> this follows the usual naming convention that when b is part of a then the full name of b is ab </s>
<s> for example a program might include the lines systemoutprintln( hello + systemoutprintln( stdtest1 ) systemoutprintln( stdtest2 ) systemoutprintln( stdtest3 ) stdname + your test grades are ) this would output the name and test grades from the object to which std refers </s>
<s> similarly std can be used to call the getaverage( ) instance method in the object by saying stdgetaverage( ) </s>
<s> to print out the student’s average you could say systemoutprintln( your average is + stdgetaverage( ) ) more generally you could use stdname any place where a variable of type string is legal you can use it in expressions </s>
<s> you can assign a value to it </s>
<s> you can even use it to call subroutines from the string class </s>
<s> for example stdnamelength( ) is the number of characters in the student’s name it is possible for a variable like std whose type is given by a class to refer to no object at all </s>
<s> we say in this case that std holds a null pointer or null reference </s>
<s> the null pointer is written in java as null” </s>
<s> you can store a null reference in the variable std by saying std = null null is an actual value that is stored in the variable not a pointer to something else </s>
<s> you could test whether the value of std is null by testing if ( std == null ) if the value of a variable is null then it is of course illegal to refer to instance variables or instance methods through that variable—since there is no object and hence no instance variables to refer to! for example if the value of the variable std is null then it would be illegal to refer to stdtest1 </s>
<s> if your program attempts to use a null pointer illegally in this way the result is an error called a null pointer exception </s>
<s> when this happens while the program is running an exception of type nullpointerexception is thrown et’s look at a sequence of statements that work with objects student std std1 std2 std3 std = new student( ) std1 = new student( ) std2 = std1 std3 = null // // // // // // // // // // // // // declare four variables of type student create a new object belonging to the class student and store a reference to that object in the variable std create a second student object and store a reference to it in the variable std1 copy the reference value in std1 into the variable std2 store a null reference in the variable std3 stdname = john smith // set values of some instance variables std1name = mary jones 174 chapter 5 </s>
<s> objects and classes // ( other instance variables have default // initial values of zero ) after the computer executes these statements the situation in the computer’s memory looks like this std std1 std2 std3 null object ( class student ) name object ( class student ) name test1 test2 0 0 0 test1 test2 test3 0 test3 0 ( getaverage( ) ) object ( class string ) mary jones 0 ( getaverage( ) ) object ( class string ) john smith this picture shows variables as little boxes labeled with the names of the variables </s>
<s> objects are shown as boxes with round corners </s>
<s> when a variable contains a reference to an object the value of that variable is shown as an arrow pointing to the object </s>
<s> the variable std3 with a value of null doesn’t point anywhere </s>
<s> the arrows from std1 and std2 both point to the same object </s>
<s> this illustrates a very important point when one object variable is assigned to another only a reference is copied the object referred to is not copied when the assignment std2 = std1” was executed no new object was created </s>
<s> instead std2 was set to refer to the very same object that std1 refers to </s>
<s> this is to be expected since the assignment statement just copies the value that is stored in std1 into std2 and that value is a pointer not an object </s>
<s> but this has some consequences that might be surprising </s>
<s> for example std1name and std2name are two diﬀerent names for the same variable namely the instance variable in the object that both std1 and std2 refer to </s>
<s> after the string mary jones is assigned to the variable std1name it is also true that the value of std2name is mary jones </s>
<s> there is a potential for a lot of confusion here but you can help protect yourself from it if you keep telling yourself the object is not in the variable </s>
<s> the variable just holds a pointer to the object” 175 51 </s>
<s> objects and instance methods you can test objects for equality and inequality using the operators == and != but here again the semantics are diﬀerent from what you are used to </s>
<s> when you make a test if ( std1 == std2 )” you are testing whether the values stored in std1 and std2 are the same </s>
<s> but the values are references to objects not objects </s>
<s> so you are testing whether std1 and std2 refer to the same object that is whether they point to the same location in memory </s>
<s> this is ﬁne if its what you want to do </s>
<s> but sometimes what you want to check is whether the instance variables in the objects have the same values </s>
<s> to do that you would need to ask whether std1test1 == std2test1 && std1test2 == std2test2 && std1test3 == std2test3 && std1nameequals( std2name )” i’ve remarked previously that strings are objects and i’ve shown the strings mary jones and john smith as objects in the above illustration </s>
<s> a variable of type string can only hold a reference to a string not the string itself </s>
<s> this explains why using the == operator to test strings for equality is not a good idea </s>
<s> suppose that greeting is a variable of type string and that it refers to the string hello </s>
<s> then would the test greeting == hello be true well maybe maybe not </s>
<s> the variable greeting and the string literal hello each refer to a string that contains the characters h-e-l-l-o </s>
<s> but the strings could still be diﬀerent objects that just happen to contain the same characters and in that case greeting == hello would be false </s>
<s> the function greetingequals( hello ) tests whether greeting and hello contain the same characters which is almost certainly the question you want to ask </s>
<s> the expression greeting == hello tests whether greeting and hello contain the same characters stored in the same memory location ( of course a string variable such as greeting can also contain the special value null and it would make sense to use the == operator to test whether greeting == null” ) ∗ ∗ ∗ the fact that variables hold references to objects not objects themselves has a couple of other consequences that you should be aware of </s>
<s> they follow logically if you just keep in mind the basic fact that the object is not stored in the variable </s>
<s> the object is somewhere else the variable points to it suppose that a variable that refers to an object is declared to be final </s>
<s> this means that the value stored in the variable can never be changed once the variable has been initialized the value stored in the variable is a reference to the object </s>
<s> so the variable will continue to refer to the same object as long as the variable exists </s>
<s> however this does not prevent the data in the object from changing </s>
<s> the variable is final not the object </s>
<s> it’s perfectly legal to say final student stu = new student( ) stuname = john doe // change data in the object // the value stored in stu is not changed! // it still refers to the same object next suppose that obj is a variable that refers to an object </s>
<s> let’s consider what happens when obj is passed as an actual parameter to a subroutine </s>
<s> the value of obj is assigned to a formal parameter in the subroutine and the subroutine is executed </s>
<s> the subroutine has no power to change the value stored in the variable obj </s>
<s> it only has a copy of that value </s>
<s> however that value is a reference to an object </s>
<s> since the subroutine has a reference to the object it can change the data stored in the object </s>
<s> after the subroutine ends obj still points to the same object but the data stored in the object might have changed </s>
<s> suppose x is a variable of type int and stu is a variable of type student </s>
<s> compare void dontchange( int z ) { void change( student s ) { 176 chapter 5 </s>
<s> objects and classes z = 42 sname = fred } } the lines the lines x = 17 dontchange( x ) systemoutprintln( x ) stuname = jane change( stu ) systemoutprintln( stuname ) output the value 17 output the value fred the value of x is not changed by the subroutine which is equivalent to the value of stu is not changed but stuname is this is equivalent to z = x z = 42 513 s = stu sname = fred getters and setters when writing new classes it’s a good idea to pay attention to the issue of access control </s>
<s> recall that making a member of a class public makes it accessible from anywhere including from other classes </s>
<s> on the other hand a private member can only be used in the class where it is deﬁned in the opinion of many programmers almost all member variables should be declared private </s>
<s> this gives you complete control over what can be done with the variable </s>
<s> even if the variable itself is private you can allow other classes to ﬁnd out what its value is by providing a public accessor method that returns the value of the variable </s>
<s> for example if your class contains a private member variable title of type string you can provide a method public string gettitle( ) { return title } that returns the value of title </s>
<s> by convention the name of an accessor method for a variable is obtained by capitalizing the name of variable and adding get” in front of the name </s>
<s> so for the variable title we get an accessor method named get” + title” or gettitle( ) </s>
<s> because of this naming convention accessor methods are more often referred to as getter methods </s>
<s> a getter method provides read access” to a variable you might also want to allow write access” to a private variable </s>
<s> that is you might want to make it possible for other classes to specify a new value for the variable </s>
<s> this is done with a setter method ( if you don’t like simple anglo-saxon words you can use the fancier term mutator method ) the name of a setter method should consist of set” followed by a capitalized copy of the variable’s name and it should have a parameter with the same type as the variable </s>
<s> a setter method for the variable title could be written public void settitle( string newtitle ) { title = newtitle } it is actually very common to provide both a getter and a setter method for a private member variable </s>
<s> since this allows other classes both to see and to change the value of the variable you might wonder why not just make the variable public the reason is that getters and setters are not restricted to simply reading and writing the variable’s value </s>
<s> in fact they 52 </s>
<s> constructors and object initialization 177 can take any action at all </s>
<s> for example a getter method might keep track of the number of times that the variable has been accessed public string gettitle( ) { titleaccesscount++ // increment member variable titleaccesscount return title } and a setter method might check that the value that is being assigned to the variable is legal public void settitle( string newtitle ) { if ( newtitle == null ) // don’t allow null strings as titles! title = ( untitled ) // use an appropriate default value instead else title = newtitle } even if you can’t think of any extra chores to do in a getter or setter method you might change your mind in the future when you redesign and improve your class </s>
<s> if you’ve used a getter and setter from the beginning you can make the modiﬁcation to your class without aﬀecting any of the classes that use your class </s>
<s> the private member variable is not part of the public interface of your class only the public getter and setter methods are and you are free to change their implementations without changing the public interface of your class </s>
<s> if you haven’t used get and set from the beginning you’ll have to contact everyone who uses your class and tell them sorry guys you’ll have to track down every use that you’ve made of this variable and change your code to use my new get and set methods instead” a couple of ﬁnal notes some advanced aspects of java rely on the naming convention for getter and setter methods so it’s a good idea to follow the convention rigorously </s>
<s> and though i’ve been talking about using getter and setter methods for a variable you can deﬁne get and set methods even if there is no variable </s>
<s> a getter and/or setter method deﬁnes a property of the class that might or might not correspond to a variable </s>
<s> for example if a class includes a public void instance method with signature setvalue( double ) then the class has a property” named value of type double and it has this property whether or not the class has a member variable named value 52 constructors and object initialization object types in java are very diﬀerent from the primitive types simply declaring a variable whose type is given as a class does not automatically create an object of that class </s>
<s> objects must be explicitly constructed </s>
<s> for the computer the process of constructing an object means ﬁrst ﬁnding some unused memory in the heap that can be used to hold the object and second ﬁlling in the object’s instance variables </s>
<s> as a programmer you don’t care where in memory the object is stored but you will usually want to exercise some control over what initial values are stored in a new object’s instance variables </s>
<s> in many cases you will also want to do more complicated initialization or bookkeeping every time an object is created 521 initializing instance variables an instance variable can be assigned an initial value in its declaration just like any other variable </s>
<s> for example consider a class named pairofdice </s>
<s> an object of this class will represent 178 chapter 5 </s>
<s> objects and classes a pair of dice </s>
<s> it will contain two instance variables to represent the numbers showing on the dice and an instance method for rolling the dice public class pairofdice { public int die1 = 3 public int die2 = 4 // number showing on the first die // number showing on the second die public void roll( ) { // roll the dice by setting each of the dice to be // a random number between 1 and 6 die1 = ( int )( mathrandom( )*6 ) + 1 die2 = ( int )( mathrandom( )*6 ) + 1 } } // end class pairofdice the instance variables die1 and die2 are initialized to the values 3 and 4 respectively </s>
<s> these initializations are executed whenever a pairofdice object is constructed </s>
<s> it’s important to understand when and how this happens </s>
<s> there can be many pairofdice objects </s>
<s> each time one is created it gets its own instance variables and the assignments die1 = 3” and die2 = 4” are executed to ﬁll in the values of those variables </s>
<s> to make this clearer consider a variation of the pairofdice class public class pairofdice { public int die1 = ( int )( mathrandom( )*6 ) + 1 public int die2 = ( int )( mathrandom( )*6 ) + 1 public void roll( ) { die1 = ( int )( mathrandom( )*6 ) + 1 die2 = ( int )( mathrandom( )*6 ) + 1 } } // end class pairofdice here the dice are initialized to random values as if a new pair of dice were being thrown onto the gaming table </s>
<s> since the initialization is executed for each new object a set of random initial values will be computed for each new pair of dice </s>
<s> diﬀerent pairs of dice can have diﬀerent initial values </s>
<s> for initialization of static member variables of course the situation is quite diﬀerent </s>
<s> there is only one copy of a static variable and initialization of that variable is executed just once when the class is ﬁrst loaded if you don’t provide any initial value for an instance variable a default initial value is provided automatically </s>
<s> instance variables of numerical type ( int double etc ) are automatically initialized to zero if you provide no other values boolean variables are initialized to false and char variables to the unicode character with code number zero </s>
<s> an instance variable can also be a variable of object type </s>
<s> for such variables the default initial value is null ( in particular since strings are objects the default initial value for string variables is null ) 522 constructors objects are created with the operator new </s>
<s> for example a program that wants to use a pairofdice object could say 52 </s>
<s> constructors and object initialization pairofdice dice 179 // declare a variable of type pairofdice dice = new pairofdice( ) // construct a new object and store a // reference to it in the variable in this example new pairofdice( )” is an expression that allocates memory for the object initializes the object’s instance variables and then returns a reference to the object </s>
<s> this reference is the value of the expression and that value is stored by the assignment statement in the variable dice so that after the assignment statement is executed dice refers to the newly created object </s>
<s> part of this expression pairofdice( )” looks like a subroutine call and that is no accident </s>
<s> it is in fact a call to a special type of subroutine called a constructor </s>
<s> this might puzzle you since there is no such subroutine in the class deﬁnition </s>
<s> however every class has at least one constructor </s>
<s> if the programmer doesn’t write a constructor deﬁnition in a class then the system will provide a default constructor for that class </s>
<s> this default constructor does nothing beyond the basics allocate memory and initialize instance variables </s>
<s> if you want more than that to happen when an object is created you can include one or more constructors in the class deﬁnition the deﬁnition of a constructor looks much like the deﬁnition of any other subroutine with three exceptions </s>
<s> a constructor does not have any return type ( not even void ) </s>
<s> the name of the constructor must be the same as the name of the class in which it is deﬁned </s>
<s> and the only modiﬁers that can be used on a constructor deﬁnition are the access modiﬁers public private and protected ( in particular a constructor can’t be declared static ) however a constructor does have a subroutine body of the usual form a block of statements there are no restrictions on what statements can be used </s>
<s> and it can have a list of formal parameters </s>
<s> in fact the ability to include parameters is one of the main reasons for using constructors </s>
<s> the parameters can provide data to be used in the construction of the object for example a constructor for the pairofdice class could provide the values that are initially showing on the dice </s>
<s> here is what the class would look like in that case public class pairofdice { public int die1 public int die2 // number showing on the first die // number showing on the second die public pairofdice( int val1 int val2 ) { // constructor </s>
<s> creates a pair of dice that // are initially showing the values val1 and val2 die1 = val1 // assign specified values die2 = val2 // to the instance variables } public void roll( ) { // roll the dice by setting each of the dice to be // a random number between 1 and 6 die1 = ( int )( mathrandom( )*6 ) + 1 die2 = ( int )( mathrandom( )*6 ) + 1 } } // end class pairofdice the constructor is declared as public pairofdice( int val1 int val2 ) ” with no return type and with the same name as the name of the class </s>
<s> this is how the java compiler recognizes a constructor </s>
<s> the constructor has two parameters and values for these parameters must be provided when the constructor is called </s>
<s> for example the expression 180 chapter 5 </s>
<s> objects and classes new pairofdice( 34 )” would create a pairofdice object in which the values of the instance variables die1 and die2 are initially 3 and 4 </s>
<s> of course in a program the value returned by the constructor should be used in some way as in pairofdice dice // declare a variable of type pairofdice dice = new pairofdice( 11 ) // let dice refer to a new pairofdice // object that initially shows 1 1 now that we’ve added a constructor to the pairofdice class we can no longer create an object by saying new pairofdice( )”! the system provides a default constructor for a class only if the class deﬁnition does not already include a constructor so there is only one constructor in the class and it requires two actual parameters </s>
<s> however this is not a big problem since we can add a second constructor to the class one that has no parameters </s>
<s> in fact you can have as many diﬀerent constructors as you want as long as their signatures are diﬀerent that is as long as they have diﬀerent numbers or types of formal parameters </s>
<s> in the pairofdice class we might have a constructor with no parameters which produces a pair of dice showing random numbers public class pairofdice { public int die1 public int die2 // number showing on the first die // number showing on the second die public pairofdice( ) { // constructor </s>
<s> rolls the dice so that they initially // show some random values roll( ) // call the roll( ) method to roll the dice } public pairofdice( int val1 int val2 ) { // constructor </s>
<s> creates a pair of dice that // are initially showing the values val1 and val2 die1 = val1 // assign specified values die2 = val2 // to the instance variables } public void roll( ) { // roll the dice by setting each of the dice to be // a random number between 1 and 6 die1 = ( int )( mathrandom( )*6 ) + 1 die2 = ( int )( mathrandom( )*6 ) + 1 } } // end class pairofdice now we have the option of constructing a pairofdice object either with new pairofdice( )” or with new pairofdice( xy )” where x and y are int-valued expressions this class once it is written can be used in any program that needs to work with one or more pairs of dice </s>
<s> none of those programs will ever have to use the obscure incantation ( int )( mathrandom( )*6 )+1” because it’s done inside the pairofdice class </s>
<s> and the programmer having once gotten the dice-rolling thing straight will never have to worry about it again </s>
<s> here for example is a main program that uses the pairofdice class to count how many times two pairs of dice are rolled before the two pairs come up showing the same value </s>
<s> this illustrates once again that you can create several instances of the same class 52 </s>
<s> constructors and object initialization 181 public class rolltwopairs { public static void main( string[] args ) { pairofdice firstdice // refers to the first pair of dice firstdice = new pairofdice( ) pairofdice seconddice // refers to the second pair of dice seconddice = new pairofdice( ) int countrolls // counts how many times the two pairs of // dice have been rolled int total1 int total2 // total showing on first pair of dice // total showing on second pair of dice countrolls = 0 do { // roll the two pairs of dice until totals are the same firstdiceroll( ) // roll the first pair of dice total1 = firstdicedie1 + firstdicedie2 // get total systemoutprintln( first pair comes up + total1 ) seconddiceroll( ) // roll the second pair of dice total2 = seconddicedie1 + seconddicedie2 // get total systemoutprintln( second pair comes up + total2 ) countrolls++ // count this roll systemoutprintln( ) // blank line } while ( total1 != total2 ) systemoutprintln( it took + countrolls + rolls until the totals were the same ) } // end main( ) } // end class rolltwopairs ∗ ∗ ∗ constructors are subroutines but they are subroutines of a special type </s>
<s> they are certainly not instance methods since they don’t belong to objects </s>
<s> since they are responsible for creating objects they exist before any objects have been created </s>
<s> they are more like static member subroutines but they are not and cannot be declared to be static </s>
<s> in fact according to the java language speciﬁcation they are technically not members of the class at all! in particular constructors are not referred to as methods” unlike other subroutines a constructor can only be called using the new operator in an expression that has the form new class-name ( parameter-list ) where the parameter-list is possibly empty </s>
<s> i call this an expression because it computes and returns a value namely a reference to the object that is constructed </s>
<s> most often you will store the returned reference in a variable but it is also legal to use a constructor call in other ways for example as a parameter in a subroutine call or as part of a more complex expression </s>
<s> of course if you don’t save the reference in a variable you won’t have any way of referring to the object that was just created 182 chapter 5 </s>
<s> objects and classes a constructor call is more complicated than an ordinary subroutine or function call </s>
<s> it is helpful to understand the exact steps that the computer goes through to execute a constructor call 1 </s>
<s> first the computer gets a block of unused memory in the heap large enough to hold an object of the speciﬁed type 2 </s>
<s> it initializes the instance variables of the object </s>
<s> if the declaration of an instance variable speciﬁes an initial value then that value is computed and stored in the instance variable otherwise the default initial value is used 3 </s>
<s> the actual parameters in the constructor if any are evaluated and the values are assigned to the formal parameters of the constructor 4 </s>
<s> the statements in the body of the constructor if any are executed 5 </s>
<s> a reference to the object is returned as the value of the constructor call the end result of this is that you have a reference to a newly constructed object </s>
<s> you can use this reference to get at the instance variables in that object or to call its instance methods ∗ ∗ ∗ for another example let’s rewrite the student class that was used in section 1 </s>
<s> i’ll add a constructor and i’ll also take the opportunity to make the instance variable name private public class student { private string name public double test1 test2 test3 // student’s name // grades on three tests student( string thename ) { // constructor for student objects // provides a name for the student name = thename } public string getname( ) { // getter method for reading the value of the private // instance variable name return name } public double getaverage( ) { // compute average test grade return ( test1 + test2 + test3 ) / 3 } } // end of class student an object of type student contains information about some particular student </s>
<s> the constructor in this class has a parameter of type string which speciﬁes the name of that student objects of type student can be created with statements such as std = new student( john smith ) std1 = new student( mary jones ) in the original version of this class the value of name had to be assigned by a program after it created the object of type student </s>
<s> there was no guarantee that the programmer would always remember to set the name properly </s>
<s> in the new version of the class there is no way to 52 </s>
<s> constructors and object initialization 183 create a student object except by calling the constructor and that constructor automatically sets the name </s>
<s> the programmer’s life is made easier and whole hordes of frustrating bugs are squashed before they even have a chance to be born another type of guarantee is provided by the private modiﬁer </s>
<s> since the instance variable name is private there is no way for any part of the program outside the student class to get at the name directly </s>
<s> the program sets the value of name indirectly when it calls the constructor i’ve provided a getter function getname( ) that can be used from outside the class to ﬁnd out the name of the student </s>
<s> but i haven’t provided any setter method or other way to change the name </s>
<s> once a student object is created it keeps the same name as long as it exists ( it would be legal to declare the variable name to be final” in this class </s>
<s> an instance variable can be final provided it is either assigned a value in its declaration or is assigned a value in every constructor in the class </s>
<s> it is illegal to assign a value to a final instance variable except inside a constructor ) 523 garbage collection so far this section has been about creating objects </s>
<s> what about destroying them in java the destruction of objects takes place automatically an object exists in the heap and it can be accessed only through variables that hold references to the object </s>
<s> what should be done with an object if there are no variables that refer to it such things can happen </s>
<s> consider the following two statements ( though in reality you’d never do anything like this in consecutive statements ) student std = new student( john smith ) std = null in the ﬁrst line a reference to a newly created student object is stored in the variable std but in the next line the value of std is changed and the reference to the student object is gone </s>
<s> in fact there are now no references whatsoever to that object in any variable </s>
<s> so there is no way for the program ever to use the object again! it might as well not exist </s>
<s> in fact the memory occupied by the object should be reclaimed to be used for another purpose java uses a procedure called garbage collection to reclaim memory occupied by objects that are no longer accessible to a program </s>
<s> it is the responsibility of the system not the programmer to keep track of which objects are garbage” in the above example it was very easy to see that the student object had become garbage </s>
<s> usually it’s much harder </s>
<s> if an object has been used for a while there might be several references to the object stored in several variables </s>
<s> the object doesn’t become garbage until all those references have been dropped in many other programming languages it’s the programmer’s responsibility to delete the garbage </s>
<s> unfortunately keeping track of memory usage is very error-prone and many serious program bugs are caused by such errors </s>
<s> a programmer might accidently delete an object even though there are still references to that object </s>
<s> this is called a dangling pointer error and it leads to problems when the program tries to access an object that is no longer there </s>
<s> another type of error is a memory leak where a programmer neglects to delete objects that are no longer in use </s>
<s> this can lead to ﬁlling memory with objects that are completely inaccessible and the program might run out of memory even though in fact large amounts of memory are being wasted because java uses garbage collection such errors are simply impossible </s>
<s> garbage collection is an old idea and has been used in some programming languages since the 1960s </s>
<s> you might wonder why all languages don’t use garbage collection </s>
<s> in the past it was considered too slow 184 chapter 5 </s>
<s> objects and classes and wasteful </s>
<s> however research into garbage collection techniques combined with the incredible speed of modern computers have combined to make garbage collection feasible </s>
<s> programmers should rejoice 53 programming with objects there are several ways in which object-oriented concepts can be applied to the process of designing and writing programs </s>
<s> the broadest of these is object-oriented analysis and design which applies an object-oriented methodology to the earliest stages of program development during which the overall design of a program is created </s>
<s> here the idea is to identify things in the problem domain that can be modeled as objects </s>
<s> on another level object-oriented programming encourages programmers to produce generalized software components that can be used in a wide variety of programming projects of course for the most part you will experience generalized software components” by using the standard classes that come along with java </s>
<s> we begin this section by looking at some built-in classes that are used for creating objects </s>
<s> at the end of the section we will get back to generalities 531 some built-in classes although the focus of object-oriented programming is generally on the design and implementation of new classes it’s important not to forget that the designers of java have already provided a large number of reusable classes </s>
<s> some of these classes are meant to be extended to produce new classes while others can be used directly to create useful objects </s>
<s> a true mastery of java requires familiarity with a large number of built-in classes—something that takes a lot of time and experience to develop </s>
<s> in the next chapter we will begin the study of java’s gui classes and you will encounter other built-in classes throughout the remainder of this book </s>
<s> but let’s take a moment to look at a few built-in classes that you might ﬁnd useful a string can be built up from smaller pieces using the + operator but this is not always eﬃcient </s>
<s> if str is a string and ch is a character then executing the command str = str + ch” involves creating a whole new string that is a copy of str with the value of ch appended onto the end </s>
<s> copying the string takes some time </s>
<s> building up a long string letter by letter would require a surprising amount of processing </s>
<s> the class stringbuﬀer makes it possible to be eﬃcient about building up a long string from a number of smaller pieces </s>
<s> to do this you must make an object belonging to the stringbuﬀer class </s>
<s> for example stringbuffer buffer = new stringbuffer( ) ( this statement both declares the variable buffer and initializes it to refer to a newly created stringbuﬀer object </s>
<s> combining declaration with initialization was covered in subsection 471 and works for objects just as it does for primitive types ) ike a string a stringbuﬀer contains a sequence of characters </s>
<s> however it is possible to add new characters onto the end of a stringbuffer without making a copy of the data that it already contains </s>
<s> if x is a value of any type and buffer is the variable deﬁned above then the command bufferappend( x ) will add x converted into a string representation onto the end of the data that was already in the buﬀer </s>
<s> this command actually modiﬁes the buﬀer rather than making a copy and that can be done eﬃciently </s>
<s> a long string can be built up in a stringbuﬀer using a sequence of append( ) commands </s>
<s> when the string is complete the function buffertostring( ) will return a copy of the string in the buﬀer as an ordinary value 53 </s>
<s> programming with objects 185 of type string </s>
<s> the stringbuﬀer class is in the standard package javalang so you can use its simple name without importing it a number of useful classes are collected in the package javautil </s>
<s> for example this package contains classes for working with collections of objects </s>
<s> we will encounter an example in section 55 and we will study the collection classes extensively in chapter 10 </s>
<s> another class in this package javautildate is used to represent times </s>
<s> when a date object is constructed without parameters the result represents the current date and time so an easy way to display this information is systemoutprintln( new date( ) ) of course since it is in the package javautil in order to use the date class in your program you must make it available by importing it with one of the statements import javautildate” or import javautil*” at the beginning of your program ( see subsection 453 for a discussion of packages and import ) i will also mention the class javautilrandom </s>
<s> an object belonging to this class is a source of random numbers ( or more precisely pseudorandom numbers ) </s>
<s> the standard function mathrandom( ) uses one of these objects behind the scenes to generate its random numbers an object of type random can generate random integers as well as random real numbers </s>
<s> if randgen is created with the command random randgen = new random( ) and if n is a positive integer then randgennextint( n ) generates a random integer in the range from 0 to n-1 </s>
<s> for example this makes it a little easier to roll a pair of dice </s>
<s> instead of saying die1 = ( int )( 6*mathrandom( ) )+1” one can say die1 = randgennextint( 6 )+1” ( since you also have to import the class javautilrandom and create the random object you might not agree that it is actually easier ) an object of type random can also be used to generate so-called gaussian distributed random real numbers the main point here again is that many problems have already been solved and the solutions are available in java’s standard classes </s>
<s> if you are faced with a task that looks like it should be fairly common it might be worth looking through a java reference to see whether someone has already written a class that you can use 532 wrapper classes and autoboxing we have already encountered the classes double and integer in subsection 257 </s>
<s> these classes contain the static methods doubleparsedouble and integerparseinteger that are used to convert strings to numerical values </s>
<s> we have also encountered the character class in some examples with static methods such as characterisletter which can be used to test whether a given value of type char is a letter </s>
<s> there is a similar class for each of the other primitive types ong short byte float and boolean </s>
<s> these classes are called wrapper classes </s>
<s> although they contain useful static members they have another use as well they are used for creating objects that represent primitive type values remember that the primitive types are not classes and values of primitive type are not objects </s>
<s> however sometimes it’s useful to treat a primitive value as if it were an object </s>
<s> you can’t do that literally but you can wrap” the primitive type value in an object belonging to one of the wrapper classes for example an object of type double contains a single instance variable of type double the object is a wrapper for the double value </s>
<s> for example you can create an object that wraps the double value 60221415e23 with 186 chapter 5 </s>
<s> objects and classes double d = new double( 60221415e23 ) the value of d contains the same information as the value of type double but it is an object </s>
<s> if you want to retrieve the double value that is wrapped in the object you can call the function ddoublevalue( ) </s>
<s> similarly you can wrap an int in an object of type integer a boolean value in an object of type boolean and so on ( as an example of where this would be useful the collection classes that will be studied in chapter 10 can only hold objects </s>
<s> if you want to add a primitive type value to a collection it has to be put into a wrapper object ﬁrst ) since java 50 wrapper classes have been even easier to use </s>
<s> java 50 introduced automatic conversion between a primitive type and the corresponding wrapper class </s>
<s> for example if you use a value of type int in a context that requires an object of type integer the int will automatically be wrapped in an integer object </s>
<s> for example you can say integer answer = 42 and the computer will silently read this as if it were integer answer = new integer( 42 ) this is called autoboxing </s>
<s> it works in the other direction too </s>
<s> for example if d refers to an object of type double you can use d in a numerical expression such as 2*d </s>
<s> the double value inside d is automatically unboxed and multiplied by 2 </s>
<s> autoboxing and unboxing also apply to subroutine calls </s>
<s> for example you can pass an actual parameter of type int to a subroutine that has a formal parameter of type integer </s>
<s> in fact autoboxing and unboxing make it possible in many circumstances to ignore the diﬀerence between primitive types and objects ∗ ∗ ∗ the wrapper classes contain a few other things that deserve to be mentioned </s>
<s> integer for example contains constants integermin value and integermax value which are equal to the largest and smallest possible values of type int that is to -2147483648 and 2147483647 respectively </s>
<s> it’s certainly easier to remember the names than the numerical values </s>
<s> there are similar named constants in long short and byte </s>
<s> double and float also have constants named min value and max value </s>
<s> max value still gives the largest number that can be represented in the given type but min value represents the smallest possible positive value </s>
<s> for type double doublemin value is 49 times 10−324 </s>
<s> since double values have only a ﬁnite accuracy they can’t get arbitrarily close to zero </s>
<s> this is the closest they can get without actually being equal to zero the class double deserves special mention since doubles are so much more complicated than integers </s>
<s> the encoding of real numbers into values of type double has room for a few special values that are not real numbers at all in the mathematical sense </s>
<s> these values are given by named constants in class double doublepositive infinity doublenegative infinity and doublenan </s>
<s> the inﬁnite values can occur as the values of certain mathematical expressions </s>
<s> for example dividing a positive number by zero will give the result doublepositive infinity ( it’s even more complicated than this actually because the double type includes a value called negative zero” written -00 </s>
<s> dividing a positive number by negative zero gives doublenegative infinity ) you also get doublepositive infinity whenever the mathematical value of an expression is greater than doublemax value </s>
<s> for example 1e200*1e200 is considered to be inﬁnite </s>
<s> the value doublenan is even more interesting nan” stands for not a number and it represents an undeﬁned value such as the square root of a negative number or the result of dividing zero by zero </s>
<s> because of the existence of doublenan no mathematical operation on real numbers will ever throw an exception it simply gives doublenan as the result 53 </s>
<s> programming with objects 187 you can test whether a value x of type double is inﬁnite or undeﬁned by calling the boolean-valued static functions doubleisinfinite( x ) and doubleisnan( x ) ( it’s especially important to use doubleisnan( ) to test for undeﬁned values because doublenan has really weird behavior when used with relational operators such as == </s>
<s> in fact the values of x == doublenan and x != doublenan are always both false—no matter what the value of x is—so you can’t use these expressions to test whether x is doublenan ) 533 the class object” we have already seen that one of the major features of object-oriented programming is the ability to create subclasses of a class </s>
<s> the subclass inherits all the properties or behaviors of the class but can modify and add to what it inherits </s>
<s> in section 55 you’ll learn how to create subclasses </s>
<s> what you don’t know yet is that every class in java ( with just one exception ) is a subclass of some other class </s>
<s> if you create a class and don’t explicitly make it a subclass of some other class then it automatically becomes a subclass of the special class named object ( object is the one class that is not a subclass of any other class ) class object deﬁnes several instance methods that are inherited by every other class </s>
<s> these methods can be used with any object whatsoever </s>
<s> i will mention just one of them here </s>
<s> you will encounter more of them later in the book the instance method tostring( ) in class object returns a value of type string that is supposed to be a string representation of the object </s>
<s> you’ve already used this method implicitly any time you’ve printed out an object or concatenated an object onto a string </s>
<s> when you use an object in a context that requires a string the object is automatically converted to type string by calling its tostring( ) method the version of tostring that is deﬁned in object just returns the name of the class that the object belongs to concatenated with a code number called the hash code of the object this is not very useful </s>
<s> when you create a class you can write a new tostring( ) method for it which will replace the inherited version </s>
<s> for example we might add the following method to any of the pairofdice classes from the previous section /** * return a string representation of a pair of dice where die1 * and die2 are instance variables containing the numbers that are * showing on the two dice */ public string tostring( ) { if ( die1 == die2 ) return double + die1 else return die1 + and + die2 } if dice refers to a pairofdice object then dicetostring( ) will return strings such as 3 and 6” 5 and 1” and double 2” depending on the numbers showing on the dice </s>
<s> this method would be used automatically to convert dice to type string in a statement such as systemoutprintln( the dice came up + dice ) so this statement might output the dice came up 5 and 1” or the dice came up double 2” you’ll see another example of a tostring( ) method in the next section 188 534 chapter 5 </s>
<s> objects and classes object-oriented analysis and design every programmer builds up a stock of techniques and expertise expressed as snippets of code that can be reused in new programs using the tried-and-true method of cut-and-paste the old code is physically copied into the new program and then edited to customize it as necessary the problem is that the editing is error-prone and time-consuming and the whole enterprise is dependent on the programmer’s ability to pull out that particular piece of code from last year’s project that looks like it might be made to ﬁt ( on the level of a corporation that wants to save money by not reinventing the wheel for each new project just keeping track of all the old wheels becomes a major task ) well-designed classes are software components that can be reused without editing </s>
<s> a welldesigned class is not carefully crafted to do a particular job in a particular program </s>
<s> instead it is crafted to model some particular type of object or a single coherent concept </s>
<s> since objects and concepts can recur in many problems a well-designed class is likely to be reusable without modiﬁcation in a variety of projects furthermore in an object-oriented programming language it is possible to make subclasses of an existing class </s>
<s> this makes classes even more reusable </s>
<s> if a class needs to be customized a subclass can be created and additions or modiﬁcations can be made in the subclass without making any changes to the original class </s>
<s> this can be done even if the programmer doesn’t have access to the source code of the class and doesn’t know any details of its internal hidden implementation ∗ ∗ ∗ the pairofdice class in the previous section is already an example of a generalized software component although one that could certainly be improved </s>
<s> the class represents a single coherent concept a pair of dice” the instance variables hold the data relevant to the state of the dice that is the number showing on each of the dice </s>
<s> the instance method represents the behavior of a pair of dice that is the ability to be rolled </s>
<s> this class would be reusable in many diﬀerent programming projects on the other hand the student class from the previous section is not very reusable </s>
<s> it seems to be crafted to represent students in a particular course where the grade will be based on three tests </s>
<s> if there are more tests or quizzes or papers it’s useless </s>
<s> if there are two people in the class who have the same name we are in trouble ( one reason why numerical student id’s are often used ) </s>
<s> admittedly it’s much more diﬃcult to develop a general-purpose student class than a general-purpose pair-of-dice class </s>
<s> but this particular student class is good mostly as an example in a programming textbook ∗ ∗ ∗ a large programming project goes through a number of stages starting with speciﬁcation of the problem to be solved followed by analysis of the problem and design of a program to solve it </s>
<s> then comes coding in which the program’s design is expressed in some actual programming language </s>
<s> this is followed by testing and debugging of the program </s>
<s> after that comes a long period of maintenance which means ﬁxing any new problems that are found in the program and modifying it to adapt it to changing requirements </s>
<s> together these stages form what is called the software life cycle ( in the real world the ideal of consecutive stages is seldom if ever achieved </s>
<s> during the analysis stage it might turn out that the speciﬁcations are incomplete or inconsistent </s>
<s> a problem found during testing requires at least a brief return to the coding stage </s>
<s> if the problem is serious enough it might even require a new design maintenance usually involves redoing some of the work from previous stages ) 54 </s>
<s> programming example card hand deck 189 arge complex programming projects are only likely to succeed if a careful systematic approach is adopted during all stages of the software life cycle </s>
<s> the systematic approach to programming using accepted principles of good design is called software engineering </s>
<s> the software engineer tries to eﬃciently construct programs that veriﬁably meet their speciﬁcations and that are easy to modify if necessary </s>
<s> there is a wide range of methodologies” that can be applied to help in the systematic design of programs ( most of these methodologies seem to involve drawing little boxes to represent program components with labeled arrows to represent relationships among the boxes ) we have been discussing object orientation in programming languages which is relevant to the coding stage of program development </s>
<s> but there are also object-oriented methodologies for analysis and design </s>
<s> the question in this stage of the software life cycle is how can one discover or invent the overall structure of a program as an example of a rather simple object-oriented approach to analysis and design consider this advice write down a description of the problem underline all the nouns in that description </s>
<s> the nouns should be considered as candidates for becoming classes or objects in the program design </s>
<s> similarly underline all the verbs </s>
<s> these are candidates for methods </s>
<s> this is your starting point </s>
<s> further analysis might uncover the need for more classes and methods and it might reveal that subclassing can be used to take advantage of similarities among classes this is perhaps a bit simple-minded but the idea is clear and the general approach can be eﬀective analyze the problem to discover the concepts that are involved and create classes to represent those concepts </s>
<s> the design should arise from the problem itself and you should end up with a program whose structure reﬂects the structure of the problem in a natural way 54 programming example card hand deck in this section we look at some speciﬁc examples of object-oriented design in a domain that is simple enough that we have a chance of coming up with something reasonably reusable consider card games that are played with a standard deck of playing cards ( a so-called poker” deck since it is used in the game of poker ) 541 designing the classes in a typical card game each player gets a hand of cards </s>
<s> the deck is shuﬄed and cards are dealt one at a time from the deck and added to the players’ hands </s>
<s> in some games cards can be removed from a hand and new cards can be added </s>
<s> the game is won or lost depending on the value ( ace 2 king ) and suit ( spades diamonds clubs hearts ) of the cards that a player receives </s>
<s> if we look for nouns in this description there are several candidates for objects game player hand card deck value and suit </s>
<s> of these the value and the suit of a card are simple values and they might just be represented as instance variables in a card object </s>
<s> in a complete program the other ﬁve nouns might be represented by classes </s>
<s> but let’s work on the ones that are most obviously reusable card hand and deck if we look for verbs in the description of a card game we see that we can shuﬄe a deck and deal a card from a deck </s>
<s> this gives use us two candidates for instance methods in a deck class shuffle( ) and dealcard( ) </s>
<s> cards can be added to and removed from hands </s>
<s> this gives two candidates for instance methods in a hand class addcard( ) and removecard( ) </s>
<s> cards are relatively passive things but we need to be able to determine their suits and values </s>
<s> we will discover more instance methods as we go along 190 chapter 5 </s>
<s> objects and classes first we’ll design the deck class in detail </s>
<s> when a deck of cards is ﬁrst created it contains 52 cards in some standard order </s>
<s> the deck class will need a constructor to create a new deck the constructor needs no parameters because any new deck is the same as any other </s>
<s> there will be an instance method called shuffle( ) that will rearrange the 52 cards into a random order the dealcard( ) instance method will get the next card from the deck </s>
<s> this will be a function with a return type of card since the caller needs to know what card is being dealt </s>
<s> it has no parameters—when you deal the next card from the deck you don’t provide any information to the deck you just get the next card whatever it is </s>
<s> what will happen if there are no more cards in the deck when its dealcard( ) method is called it should probably be considered an error to try to deal a card from an empty deck so the deck can throw an exception in that case but this raises another question how will the rest of the program know whether the deck is empty of course the program could keep track of how many cards it has used </s>
<s> but the deck itself should know how many cards it has left so the program should just be able to ask the deck object </s>
<s> we can make this possible by specifying another instance method cardsleft( ) that returns the number of cards remaining in the deck </s>
<s> this leads to a full speciﬁcation of all the subroutines in the deck class constructor and instance methods in class deck /** * constructor */ public deck( ) create an unshuffled deck of cards /** * put all the used cards back into the deck * and shuffle it into a random order */ public void shuffle( ) /** * as cards are dealt from the deck the number of * cards left decreases </s>
<s> this function returns the * number of cards that are still left in the deck */ public int cardsleft( ) /** * deals one card from the deck and returns it * @throws illegalstateexception if no more cards are left */ public card dealcard( ) this is everything you need to know in order to use the deck class </s>
<s> of course it doesn’t tell us how to write the class </s>
<s> this has been an exercise in design not in coding </s>
<s> in fact writing the class involves a programming technique arrays which will not be covered until chapter 7 nevertheless you can look at the source code deckjava if you want </s>
<s> even though you won’t understand the implementation the javadoc comments give you all the information that you need to understand the interface </s>
<s> with this information you can use the class in your programs without understanding the implementation we can do a similar analysis for the hand class </s>
<s> when a hand object is ﬁrst created it has no cards in it </s>
<s> an addcard( ) instance method will add a card to the hand </s>
<s> this method needs a parameter of type card to specify which card is being added </s>
<s> for the removecard( ) 54 </s>
<s> programming example card hand deck 191 method a parameter is needed to specify which card to remove </s>
<s> but should we specify the card itself ( remove the ace of spades” ) or should we specify the card by its position in the hand ( remove the third card in the hand” ) actually we don’t have to decide since we can allow for both options </s>
<s> we’ll have two removecard( ) instance methods one with a parameter of type card specifying the card to be removed and one with a parameter of type int specifying the position of the card in the hand ( remember that you can have two methods in a class with the same name provided they have diﬀerent numbers or types of parameters ) since a hand can contain a variable number of cards it’s convenient to be able to ask a hand object how many cards it contains </s>
<s> so we need an instance method getcardcount( ) that returns the number of cards in the hand </s>
<s> when i play cards i like to arrange the cards in my hand so that cards of the same value are next to each other </s>
<s> since this is a generally useful thing to be able to do we can provide instance methods for sorting the cards in the hand </s>
<s> here is a full speciﬁcation for a reusable hand class constructor and instance methods in class hand /** * constructor </s>
<s> create a hand object that is initially empty */ public hand( ) /** * discard all cards from the hand making the hand empty */ public void clear( ) /** * add the card c to the hand c should be non-null * @throws nullpointerexception if c is null */ public void addcard( card c ) /** * if the specified card is in the hand it is removed */ public void removecard( card c ) /** * remove the card in the specified position from the * hand </s>
<s> cards are numbered counting from zero * @throws illegalargumentexception if the specified * position does not exist in the hand */ public void removecard( int position ) /** * return the number of cards in the hand */ public int getcardcount( ) /** * get the card from the hand in given position where * positions are numbered starting from 0 * @throws illegalargumentexception if the specified * position does not exist in the hand 192 chapter 5 </s>
<s> objects and classes */ public card getcard( int position ) /** * sorts the cards in the hand so that cards of the same * suit are grouped together and within a suit the cards * are sorted by value */ public void sortbysuit( ) /** * sorts the cards in the hand so that cards are sorted into * order of increasing value </s>
<s> cards with the same value * are sorted by suit </s>
<s> note that aces are considered * to have the lowest value */ public void sortbyvalue( ) again you don’t yet know enough to implement this class </s>
<s> but given the source code handjava you can use the class in your own programming projects 542 the card class we have covered enough material to write a card class </s>
<s> the class will have a constructor that speciﬁes the value and suit of the card that is being created </s>
<s> there are four suits which can be represented by the integers 0 1 2 and 3 </s>
<s> it would be tough to remember which number represents which suit so i’ve deﬁned named constants in the card class to represent the four possibilities </s>
<s> for example cardspades is a constant that represents the suit spades ( these constants are declared to be public final static ints </s>
<s> it might be better to use an enumerated type but for now we will stick to integer-valued constants </s>
<s> i’ll return to the question of using enumerated types in this example at the end of the chapter ) the possible values of a card are the numbers 1 2 13 with 1 standing for an ace 11 for a jack 12 for a queen and 13 for a king </s>
<s> again i’ve deﬁned some named constants to represent the values of aces and face cards ( when you read the card class you’ll see that i’ve also added support for jokers ) a card object can be constructed knowing the value and the suit of the card </s>
<s> for example we can call the constructor with statements such as card1 = new card( cardace cardspades ) // construct ace of spades card2 = new card( 10 carddiamonds ) // construct 10 of diamonds card3 = new card( v s ) // this is ok as long as v and s // are integer expressions a card object needs instance variables to represent its value and suit </s>
<s> i’ve made these private so that they cannot be changed from outside the class and i’ve provided getter methods getsuit( ) and getvalue( ) so that it will be possible to discover the suit and value from outside the class </s>
<s> the instance variables are initialized in the constructor and are never changed after that </s>
<s> in fact i’ve declared the instance variables suit and value to be final since they are never changed after they are initialized ( an instance variable can be declared final provided it is either given an initial value in its declaration or is initialized in every constructor in the class ) finally i’ve added a few convenience methods to the class to make it easier to print out cards in a human-readable form </s>
<s> for example i want to be able to print out the suit of a 54 </s>
<s> programming example card hand deck 193 card as the word diamonds” rather than as the meaningless code number 2 which is used in the class to represent diamonds </s>
<s> since this is something that i’ll probably have to do in many programs it makes sense to include support for it in the class </s>
<s> so i’ve provided instance methods getsuitasstring( ) and getvalueasstring( ) to return string representations of the suit and value of a card </s>
<s> finally i’ve deﬁned the instance method tostring( ) to return a string with both the value and suit such as queen of hearts” </s>
<s> recall that this method will be used automatically whenever a card needs to be converted into a string such as when the card is concatenated onto a string with the + operator </s>
<s> thus the statement systemoutprintln( your card is the + card ) is equivalent to systemoutprintln( your card is the + cardtostring( ) ) if the card is the queen of hearts either of these will print out your card is the queen of hearts” here is the complete card class </s>
<s> it is general enough to be highly reusable so the work that went into designing writing and testing it pays oﬀ handsomely in the long run /** * an object of type card represents a playing card from a * standard poker deck including jokers </s>
<s> the card has a suit which * can be spades hearts diamonds clubs or joker </s>
<s> a spade heart * diamond or club has one of the 13 values ace 2 3 4 5 6 7 * 8 9 10 jack queen or king </s>
<s> note that ace is considered to be * the smallest value </s>
<s> a joker can also have an associated value * this value can be anything and can be used to keep track of several * different jokers */ public class card { public public public public public final final final final final static static static static static int int int int int spades = 0 // codes for the 4 suits plus joker hearts = 1 diamonds = 2 clubs = 3 joker = 4 public public public public final final final final static static static static int int int int ace = 1 jack = 11 queen = 12 king = 13 // codes for the non-numeric cards // cards 2 through 10 have their // numerical values for their codes /** * this card’s suit one of the constants spades hearts diamonds * clubs or joker </s>
<s> the suit cannot be changed after the card is * constructed */ private final int suit /** * the card’s value </s>
<s> for a normal card this is one of the values * 1 through 13 with 1 representing ace </s>
<s> for a joker the value * can be anything </s>
<s> the value cannot be changed after the card * is constructed */ 194 chapter 5 </s>
<s> objects and classes private final int value /** * creates a joker with 1 as the associated value ( note that * new card( ) is equivalent to new card( 1cardjoker ) ) */ public card( ) { suit = joker value = 1 } /** * creates a card with a specified suit and value * @param thevalue the value of the new card </s>
<s> for a regular card ( non-joker ) * the value must be in the range 1 through 13 with 1 representing an ace * you can use the constants cardace cardjack cardqueen and cardking * for a joker the value can be anything * @param thesuit the suit of the new card </s>
<s> this must be one of the values * cardspades cardhearts carddiamonds cardclubs or cardjoker * @throws illegalargumentexception if the parameter values are not in the * permissible ranges */ public card( int thevalue int thesuit ) { if ( thesuit != spades && thesuit != hearts && thesuit != diamonds && thesuit != clubs && thesuit != joker ) throw new illegalargumentexception( illegal playing card suit ) if ( thesuit != joker && ( thevalue < 1 || thevalue > 13 ) ) throw new illegalargumentexception( illegal playing card value ) value = thevalue suit = thesuit } /** * returns the suit of this card * @returns the suit which is one of the constants cardspades * cardhearts carddiamonds cardclubs or cardjoker */ public int getsuit( ) { return suit } /** * returns the value of this card * @return the value which is one of the numbers 1 through 13 inclusive for * a regular card and which can be any value for a joker */ public int getvalue( ) { return value } /** * returns a string representation of the card’s suit * @return one of the strings spades hearts diamonds clubs * or joker */ public string getsuitasstring( ) { 54 </s>
<s> programming example card hand deck switch ( suit ) { case spades return case hearts return case diamonds return case clubs return default return } spades hearts diamonds clubs joker } /** * returns a string representation of the card’s value * @return for a regular card one of the strings ace 2 * 3 10 jack queen or king </s>
<s> for a joker the * string is always numerical */ public string getvalueasstring( ) { if ( suit == joker ) return + value else { switch ( value ) { case 1 return ace case 2 return 2 case 3 return 3 case 4 return 4 case 5 return 5 case 6 return 6 case 7 return 7 case 8 return 8 case 9 return 9 case 10 return 10 case 11 return jack case 12 return queen default return king } } } /** * returns a string representation of this card including both * its suit and its value ( except that for a joker with value 1 * the return value is just joker ) </s>
<s> sample return values * are queen of hearts 10 of diamonds ace of spades * joker joker #2 */ public string tostring( ) { if ( suit == joker ) { if ( value == 1 ) return joker else return joker # + value } else return getvalueasstring( ) + of + getsuitasstring( ) } 195 196 chapter 5 </s>
<s> objects and classes } // end class card 543 example a simple card game i will ﬁnish this section by presenting a complete program that uses the card and deck classes the program lets the user play a very simple card game called highlow </s>
<s> a deck of cards is shuﬄed and one card is dealt from the deck and shown to the user </s>
<s> the user predicts whether the next card from the deck will be higher or lower than the current card </s>
<s> if the user predicts correctly then the next card from the deck becomes the current card and the user makes another prediction </s>
<s> this continues until the user makes an incorrect prediction </s>
<s> the number of correct predictions is the user’s score my program has a static method that plays one game of highlow </s>
<s> this method has a return value that represents the user’s score in the game </s>
<s> the main( ) routine lets the user play several games of highlow </s>
<s> at the end it reports the user’s average score i won’t go through the development of the algorithms used in this program but i encourage you to read it carefully and make sure that you understand how it works </s>
<s> note in particular that the subroutine that plays one game of highlow returns the user’s score in the game as its return value </s>
<s> this gets the score back to the main program where it is needed </s>
<s> here is the program /** * this program lets the user play highlow a simple card game * that is described in the output statements at the beginning of * the main( ) routine </s>
<s> after the user plays several games * the user’s average score is reported */ public class highlow { public static void main( string[] args ) { systemoutprintln( this program lets you play the simple card game ) systemoutprintln( highlow </s>
<s> a card is dealt from a deck of cards ) systemoutprintln( you have to predict whether the next card will be ) systemoutprintln( higher or lower </s>
<s> your score in the game is the ) systemoutprintln( number of correct predictions you make before ) systemoutprintln( you guess wrong ) systemoutprintln( ) int gamesplayed = 0 int sumofscores = 0 double averagescore boolean playagain // // // // // // // // number of games user has played the sum of all the scores from all the games played average score computed by dividing sumofscores by gamesplayed record user’s response when user is asked whether he wants to play another game do { int scorethisgame // score for one game scorethisgame = play( ) // play the game and get the score sumofscores += scorethisgame gamesplayed++ 197 54 </s>
<s> programming example card hand deck textioput( play again ) playagain = textiogetlnboolean( ) } while ( playagain ) averagescore = ( ( double )sumofscores ) / gamesplayed systemoutprintln( ) systemoutprintln( you played + gamesplayed + games ) systemoutprintf( your average score was %13fn averagescore ) } // end main( ) /** * lets the user play one game of highlow and returns the * user’s score on that game </s>
<s> the score is the number of * correct guesses that the user makes */ private static int play( ) { deck deck = new deck( ) card currentcard card nextcard // the current card which the user sees // the next card in the deck </s>
<s> the user tries // to predict whether this is higher or lower // than the current card int correctguesses char guess // get a new deck of cards and // store a reference to it in // the variable deck // the number of correct predictions the // user has made </s>
<s> at the end of the game // this will be the user’s score // the user’s guess ’h’ if the user predicts that // the next card will be higher ’l’ if the user // predicts that it will be lower deckshuffle( ) // shuffle the deck into a random order before // starting the game correctguesses = 0 currentcard = deckdealcard( ) textioputln( the first card is the + currentcard ) while ( true ) { // loop ends when user’s prediction is wrong /* get the user’s prediction ’h’ or ’l’ ( or ’h’ or ’l’ ) */ textioput( will the next card be higher ( h ) or lower ( l ) do { guess = textiogetlnchar( ) guess = charactertouppercase( guess ) if ( guess != ’h’ && guess != ’l’ ) textioput( please respond with h or l ) } while ( guess != ’h’ && guess != ’l’ ) /* get the next card and show it to the user */ nextcard = deckdealcard( ) textioputln( the next card is + nextcard ) ) 198 chapter 5 </s>
<s> objects and classes /* check the user’s prediction */ if ( nextcardgetvalue( ) == currentcardgetvalue( ) ) { textioputln( the value is the same as the previous card ) textioputln( you lose on ties </s>
<s> sorry! ) break // end the game } else if ( nextcardgetvalue( ) > currentcardgetvalue( ) ) { if ( guess == ’h’ ) { textioputln( your prediction was correct ) correctguesses++ } else { textioputln( your prediction was incorrect ) break // end the game } } else { // nextcard is lower if ( guess == ’l’ ) { textioputln( your prediction was correct ) correctguesses++ } else { textioputln( your prediction was incorrect ) break // end the game } } /* to set up for the next iteration of the loop the nextcard becomes the currentcard since the currentcard has to be the card that the user sees and the nextcard will be set to the next card in the deck after the user makes his prediction */ currentcard = nextcard textioputln( ) textioputln( the card is + currentcard ) } // end of while loop textioputln( ) textioputln( the game is over ) textioputln( you made + correctguesses + correct predictions ) textioputln( ) return correctguesses } // end play( ) } // end class 199 55 </s>
<s> inheritance and polymorphism 55 inheritance polymorphism and abstract classes a class represents a set of objects which share the same structure and behaviors the class determines the structure of objects by specifying variables that are contained in each instance of the class and it determines behavior by providing the instance methods that express the behavior of the objects </s>
<s> this is a powerful idea </s>
<s> however something like this can be done in most programming languages </s>
<s> the central new idea in object-oriented programming—the idea that really distinguishes it from traditional programming—is to allow classes to express the similarities among objects that share some but not all of their structure and behavior such similarities can be expressed using inheritance and polymorphism 551 extending existing classes the topics covered in later subsections of this section are relatively advanced aspects of objectoriented programming </s>
<s> any programmer should know what is meant by subclass inheritance and polymorphism </s>
<s> however it will probably be a while before you actually do anything with inheritance except for extending classes that already exist </s>
<s> in the ﬁrst part of this section we look at how that is done in day-to-day programming especially for programmers who are just beginning to work with objects subclassing is used mainly in one situation there is an existing class that can be adapted with a few changes or additions </s>
<s> this is much more common than designing groups of classes and subclasses from scratch </s>
<s> the existing class can be extended to make a subclass the syntax for this is public class subclass-name extends existing-class-name // changes and additions } { as an example suppose you want to write a program that plays the card game blackjack you can use the card hand and deck classes developed in section 54 </s>
<s> however a hand in the game of blackjack is a little diﬀerent from a hand of cards in general since it must be possible to compute the value” of a blackjack hand according to the rules of the game </s>
<s> the rules are as follows the value of a hand is obtained by adding up the values of the cards in the hand the value of a numeric card such as a three or a ten is its numerical value </s>
<s> the value of a jack queen or king is 10 </s>
<s> the value of an ace can be either 1 or 11 </s>
<s> an ace should be counted as 11 unless doing so would put the total value of the hand over 21 </s>
<s> note that this means that the second third or fourth ace in the hand will always be counted as 1 one way to handle this is to extend the existing hand class by adding a method that computes the blackjack value of the hand </s>
<s> here’s the deﬁnition of such a class public class blackjackhand extends hand { /** * computes and returns the value of this hand in the game * of blackjack */ public int getblackjackvalue( ) { int val boolean ace // the value computed for the hand // this will be set to true if the 200 chapter 5 </s>
<s> objects and classes int cards // hand contains an ace // number of cards in the hand val = 0 ace = false cards = getcardcount( ) // ( method defined in class hand ) for ( int i = 0 i < cards i++ ) { // add the value of the i-th card in the hand card card // the i-th card int cardval // the blackjack value of the i-th card card = getcard( i ) cardval = cardgetvalue( ) // the normal value 1 to 13 if ( cardval > 10 ) { cardval = 10 // for a jack queen or king } if ( cardval == 1 ) { ace = true // there is at least one ace } val = val + cardval } // // // // now val is the value of the hand counting any ace as 1 if there is an ace and if changing its value from 1 to 11 would leave the score less than or equal to 21 then do so by adding the extra 10 points to val if ( ace == true && val = val + 10 val + 10 <= 21 ) return val } // end getblackjackvalue( ) } // end class blackjackhand since blackjackhand is a subclass of hand an object of type blackjackhand contains all the instance variables and instance methods deﬁned in hand plus the new instance method named getblackjackvalue( ) </s>
<s> for example if bjh is a variable of type blackjackhand then the following are all legal bjhgetcardcount( ) bjhremovecard( 0 ) and bjhgetblackjackvalue( ) </s>
<s> the ﬁrst two methods are deﬁned in hand but are inherited by blackjackhand variables and methods from the hand class are inherited by blackjackhand and they can be used in the deﬁnition of blackjackhand just as if they were actually deﬁned in that class ( except for any that are declared to be private which prevents access even by subclasses ) the statement cards = getcardcount( )” in the above deﬁnition of getblackjackvalue( ) calls the instance method getcardcount( ) which was deﬁned in hand extending existing classes is an easy way to build on previous work </s>
<s> we’ll see that many standard classes have been written speciﬁcally to be used as the basis for making subclasses ∗ ∗ ∗ access modiﬁers such as public and private are used to control access to members of a class </s>
<s> there is one more access modiﬁer protected that comes into the picture when subclasses are taken into consideration </s>
<s> when protected is applied as an access modiﬁer to a method or member variable in a class that member can be used in subclasses—direct or indirect—of the 201 55 </s>
<s> inheritance and polymorphism class in which it is deﬁned but it cannot be used in non-subclasses ( there is an exception a protected member can also be accessed by any class in the same package as the class that contains the protected member </s>
<s> recall that using no access modiﬁer makes a member accessible to classes in the same package and nowhere else </s>
<s> using the protected modiﬁer is strictly more liberal than using no modiﬁer at all it allows access from classes in the same package and from subclasses that are not in the same package ) when you declare a method or member variable to be protected you are saying that it is part of the implementation of the class rather than part of the public interface of the class however you are allowing subclasses to use and modify that part of the implementation for example consider a pairofdice class that has instance variables die1 and die2 to represent the numbers appearing on the two dice </s>
<s> we could make those variables private to make it impossible to change their values from outside the class while still allowing read access through getter methods </s>
<s> however if we think it possible that pairofdice will be used to create subclasses we might want to make it possible for subclasses to change the numbers on the dice for example a graphicaldice subclass that draws the dice might want to change the numbers at other times besides when the dice are rolled </s>
<s> in that case we could make die1 and die2 protected which would allow the subclass to change their values without making them public to the rest of the world ( an even better idea would be to deﬁne protected setter methods for the variables </s>
<s> a setter method could for example ensure that the value that is being assigned to the variable is in the legal range 1 through 6 ) 552 inheritance and class hierarchy the term inheritance refers to the fact that one class can inherit part or all of its structure and behavior from another class </s>
<s> the class that does the inheriting is said to be a subclass of the class from which it inherits </s>
<s> if class b is a subclass of class a we also say that class a is a superclass of class b ( sometimes the terms derived class and base class are used instead of subclass and superclass this is the common terminology in c++ ) a subclass can add to the structure and behavior that it inherits </s>
<s> it can also replace or modify inherited behavior ( though not inherited structure ) </s>
<s> the relationship between subclass and superclass is sometimes shown by a diagram in which the subclass is shown below and connected to its superclass as shown on the left below class a class a ( superclass ) class b class b ( subclass ) class c class d class e in java to create a class named b” as a subclass of a class named a” you would write class b extends a { // additions to and modifications of 202 chapter 5 </s>
<s> objects and classes // stuff inherited from class a } several classes can be declared as subclasses of the same superclass </s>
<s> the subclasses which might be referred to as sibling classes” share some structures and behaviors—namely the ones they inherit from their common superclass </s>
<s> the superclass expresses these shared structures and behaviors </s>
<s> in the diagram shown on the right above classes b c and d are sibling classes inheritance can also extend over several generations” of classes </s>
<s> this is shown in the diagram where class e is a subclass of class d which is itself a subclass of class a </s>
<s> in this case class e is considered to be a subclass of class a even though it is not a direct subclass </s>
<s> this whole set of classes forms a small class hierarchy 553 example vehicles et’s look at an example </s>
<s> suppose that a program has to deal with motor vehicles including cars trucks and motorcycles ( this might be a program used by a department of motor vehicles to keep track of registrations ) the program could use a class named vehicle to represent all types of vehicles </s>
<s> since cars trucks and motorcycles are types of vehicles they would be represented by subclasses of the vehicle class as shown in this class hierarchy diagram vehicle car truck motorcycle the vehicle class would include instance variables such as registrationnumber and owner and instance methods such as transferownership( ) </s>
<s> these are variables and methods common to all vehicles </s>
<s> the three subclasses of vehicle—car truck and motorcycle—could then be used to hold variables and methods speciﬁc to particular types of vehicles </s>
<s> the car class might add an instance variable numberofdoors the truck class might have numberofaxles and the motorcycle class could have a boolean variable hassidecar ( well it could in theory at least even if it might give a chuckle to the people at the department of motor vehicles ) the declarations of these classes in a java program would look in outline like this ( although in practice they would probably be public classes deﬁned in separate ﬁles ) class vehicle { int registrationnumber person owner // ( assuming that a person class has been defined! ) void transferownership( person newowner ) { } } class car extends vehicle { int numberofdoors 55 </s>
<s> inheritance and polymorphism 203 } class truck extends vehicle { int numberofaxles } class motorcycle extends vehicle { boolean hassidecar } suppose that mycar is a variable of type car that has been declared and initialized with the statement car mycar = new car( ) given this declaration a program could refer to mycarnumberofdoors since numberofdoors is an instance variable in the class car </s>
<s> but since class car extends class vehicle a car also has all the structure and behavior of a vehicle </s>
<s> this means that mycarregistrationnumber mycarowner and mycartransferownership( ) also exist now in the real world cars trucks and motorcycles are in fact vehicles </s>
<s> the same is true in a program </s>
<s> that is an object of type car or truck or motorcycle is automatically an object of type vehicle too </s>
<s> this brings us to the following important fact a variable that can hold a reference to an object of class a can also hold a reference to an object belonging to any subclass of a the practical eﬀect of this in our example is that an object of type car can be assigned to a variable of type vehicle </s>
<s> that is it would be legal to say vehicle myvehicle = mycar or even vehicle myvehicle = new car( ) after either of these statements the variable myvehicle holds a reference to a vehicle object that happens to be an instance of the subclass car </s>
<s> the object remembers” that it is in fact a car and not just a vehicle </s>
<s> information about the actual class of an object is stored as part of that object </s>
<s> it is even possible to test whether a given object belongs to a given class using the instanceof operator </s>
<s> the test if ( myvehicle instanceof car ) determines whether the object referred to by myvehicle is in fact a car on the other hand the assignment statement mycar = myvehicle would be illegal because myvehicle could potentially refer to other types of vehicles that are not cars </s>
<s> this is similar to a problem we saw previously in subsection 256 the computer will not allow you to assign an int value to a variable of type short because not every int is a short </s>
<s> similarly it will not allow you to assign a value of type vehicle to a variable of type car because not every vehicle is a car </s>
<s> as in the case of ints and shorts the solution here is to use type-casting </s>
<s> if for some reason you happen to know that myvehicle does in fact refer to a car you can use the type cast ( car )myvehicle to tell the computer to treat myvehicle as if it were actually of type car </s>
<s> so you could say 204 chapter 5 </s>
<s> objects and classes mycar = ( car )myvehicle and you could even refer to ( ( car )myvehicle )numberofdoors ( the parentheses are necessary because of precedence </s>
<s> the ” has higher precedence than the type-cast so ( car )myvehiclenumberofdoors would try to type-cast the int myvehiclenumberofdoors into a vehicle which is impossible ) as an example of how this could be used in a program suppose that you want to print out relevant data about the vehicle referred to by myvehicle </s>
<s> if it’s a car you will want to print out the car’s numberofdoors but you can’t say myvehiclenumberofdoors since there is no numberofdoors in the vehicle class </s>
<s> but you could say systemoutprintln( vehicle data ) systemoutprintln( registration number + myvehicleregistrationnumber ) if ( myvehicle instanceof car ) { systemoutprintln( type of vehicle car ) car c c = ( car )myvehicle // type-cast to get access to numberofdoors! systemoutprintln( number of doors + cnumberofdoors ) } else if ( myvehicle instanceof truck ) { systemoutprintln( type of vehicle truck ) truck t t = ( truck )myvehicle // type-cast to get access to numberofaxles! systemoutprintln( number of axles + tnumberofaxles ) } else if ( myvehicle instanceof motorcycle ) { systemoutprintln( type of vehicle motorcycle ) motorcycle m m = ( motorcycle )myvehicle // type-cast to get access to hassidecar! systemoutprintln( has a sidecar + mhassidecar ) } note that for object types when the computer executes a program it checks whether type-casts are valid </s>
<s> so for example if myvehicle refers to an object of type truck then the type cast ( car )myvehicle would be an error </s>
<s> when this happens an exception of type classcastexception is thrown </s>
<s> this check is done at run time not compile time because the actual type of the object referred to by myvehicle is not known when the program is compiled 554 polymorphism as another example consider a program that deals with shapes drawn on the screen </s>
<s> let’s say that the shapes include rectangles ovals and roundrects of various colors ( a roundrect” is just a rectangle with rounded corners ) 205 55 </s>
<s> inheritance and polymorphism rectangles ovals roundrects three classes rectangle oval and roundrect could be used to represent the three types of shapes </s>
<s> these three classes would have a common superclass shape to represent features that all three shapes have in common </s>
<s> the shape class could include instance variables to represent the color position and size of a shape and it could include instance methods for changing the color position and size </s>
<s> changing the color for example might involve changing the value of an instance variable and then redrawing the shape in its new color class shape { color color // color of the shape ( recall that class color // is defined in package javaawt </s>
<s> assume // that this class has been imported ) void setcolor( color newcolor ) { // method to change the color of the shape color = newcolor // change value of instance variable redraw( ) // redraw shape which will appear in new color } void redraw( ) { // method for drawing the shape // what commands should go here } // more instance variables and methods } // end of class shape now you might see a problem here with the method redraw( ) </s>
<s> the problem is that each diﬀerent type of shape is drawn diﬀerently </s>
<s> the method setcolor( ) can be called for any type of shape </s>
<s> how does the computer know which shape to draw when it executes the redraw( ) informally we can answer the question like this the computer executes redraw( ) by asking the shape to redraw itself </s>
<s> every shape object knows what it has to do to redraw itself in practice this means that each of the speciﬁc shape classes has its own redraw( ) method class rectangle extends shape { void redraw( ) { // commands for drawing a rectangle } // possibly more methods and variables } class oval extends shape { void redraw( ) { 206 chapter 5 </s>
<s> objects and classes // commands for drawing an oval } // possibly more methods and variables } class roundrect extends shape { void redraw( ) { // commands for drawing a rounded rectangle } // possibly more methods and variables } if oneshape is a variable of type shape it could refer to an object of any of the types rectangle oval or roundrect </s>
<s> as a program executes and the value of oneshape changes it could even refer to objects of diﬀerent types at diﬀerent times! whenever the statement oneshaperedraw( ) is executed the redraw method that is actually called is the one appropriate for the type of object to which oneshape actually refers </s>
<s> there may be no way of telling from looking at the text of the program what shape this statement will draw since it depends on the value that oneshape happens to have when the program is executed </s>
<s> even more is true </s>
<s> suppose the statement is in a loop and gets executed many times </s>
<s> if the value of oneshape changes as the loop is executed it is possible that the very same statement oneshaperedraw( )” will call diﬀerent methods and draw diﬀerent shapes as it is executed over and over </s>
<s> we say that the redraw( ) method is polymorphic </s>
<s> a method is polymorphic if the action performed by the method depends on the actual type of the object to which the method is applied </s>
<s> polymorphism is one of the major distinguishing features of object-oriented programming perhaps this becomes more understandable if we change our terminology a bit in objectoriented programming calling a method is often referred to as sending a message to an object the object responds to the message by executing the appropriate method </s>
<s> the statement oneshaperedraw( )” is a message to the object referred to by oneshape </s>
<s> since that object knows what type of object it is it knows how it should respond to the message </s>
<s> from this point of view the computer always executes oneshaperedraw( )” in the same way by sending a message </s>
<s> the response to the message depends naturally on who receives it </s>
<s> from this point of view objects are active entities that send and receive messages and polymorphism is a natural even necessary part of this view </s>
<s> polymorphism just means that diﬀerent objects can respond to the same message in diﬀerent ways one of the most beautiful things about polymorphism is that it lets code that you write do things that you didn’t even conceive of at the time you wrote it </s>
<s> suppose that i decide to add beveled rectangles to the types of shapes my program can deal with </s>
<s> a beveled rectangle has a triangle cut oﬀ each corner 55 </s>
<s> inheritance and polymorphism 207 beveledrects to implement beveled rectangles i can write a new subclass beveledrect of class shape and give it its own redraw( ) method </s>
<s> automatically code that i wrote previously—such as the statement oneshaperedraw( )—can now suddenly start drawing beveled rectangles even though the beveled rectangle class didn’t exist when i wrote the statement! in the statement oneshaperedraw( )” the redraw message is sent to the object oneshape </s>
<s> look back at the method in the shape class for changing the color of a shape void setcolor( color newcolor ) { color = newcolor // change value of instance variable redraw( ) // redraw shape which will appear in new color } a redraw message is sent here but which object is it sent to well the setcolor method is itself a message that was sent to some object </s>
<s> the answer is that the redraw message is sent to that same object the one that received the setcolor message </s>
<s> if that object is a rectangle then it contains a redraw( ) method for drawing rectangles and that is the one that is executed if the object is an oval then it is the redraw( ) method from the oval class </s>
<s> this is what you should expect but it means that the redraw( )” statement in the setcolor( ) method does not necessarily call the redraw( ) method in the shape class! the redraw( ) method that is executed could be in any subclass of shape </s>
<s> this is just another case of polymorphism again this is not a real surprise if you think about it in the right way </s>
<s> remember that an instance method is always contained in an object </s>
<s> the class only contains the source code for the method </s>
<s> when a rectangle object is created it contains a redraw( ) method </s>
<s> the source code for that method is in the rectangle class </s>
<s> the object also contains a setcolor( ) method </s>
<s> since the rectangle class does not deﬁne a setcolor( ) method the source code for the rectangle’s setcolor( ) method comes from the superclass shape but the method itself is in the object of type rectangle </s>
<s> even though the source codes for the two methods are in diﬀerent classes the methods themselves are part of the same object </s>
<s> when the rectangle’s setcolor( ) method is executed and calls redraw( ) the redraw( ) method that is executed is the one in the same object 555 abstract classes whenever a rectangle oval or roundrect object has to draw itself it is the redraw( ) method in the appropriate class that is executed </s>
<s> this leaves open the question what does the redraw( ) method in the shape class do how should it be deﬁned the answer may be surprising we should leave it blank! the fact is that the class shape represents the abstract idea of a shape and there is no way to draw such a thing </s>
<s> only particular concrete shapes like rectangles and ovals can be drawn </s>
<s> so why should there 208 chapter 5 </s>
<s> objects and classes even be a redraw( ) method in the shape class well it has to be there or it would be illegal to call it in the setcolor( ) method of the shape class and it would be illegal to write oneshaperedraw( )” </s>
<s> the compiler would complain that oneshape is a variable of type shape and there’s no redraw( ) method in the shape class nevertheless the version of redraw( ) in the shape class itself will never actually be called in fact if you think about it there can never be any reason to construct an actual object of type shape! you can have variables of type shape but the objects they refer to will always belong to one of the subclasses of shape </s>
<s> we say that shape is an abstract class </s>
<s> an abstract class is one that is not used to construct objects but only as a basis for making subclasses </s>
<s> an abstract class exists only to express the common properties of all its subclasses </s>
<s> a class that is not abstract is said to be concrete </s>
<s> you can create objects belonging to a concrete class but not to an abstract class </s>
<s> a variable whose type is given by an abstract class can only refer to objects that belong to concrete subclasses of the abstract class similarly we say that the redraw( ) method in class shape is an abstract method since it is never meant to be called </s>
<s> in fact there is nothing for it to do—any actual redrawing is done by redraw( ) methods in the subclasses of shape </s>
<s> the redraw( ) method in shape has to be there </s>
<s> but it is there only to tell the computer that all shapes understand the redraw message </s>
<s> as an abstract method it exists merely to specify the common interface of all the actual concrete versions of redraw( ) in the subclasses </s>
<s> there is no reason for the abstract redraw( ) in class shape to contain any code at all shape and its redraw( ) method are semantically abstract </s>
<s> you can also tell the computer syntactically that they are abstract by adding the modiﬁer abstract” to their deﬁnitions for an abstract method the block of code that gives the implementation of an ordinary method is replaced by a semicolon </s>
<s> an implementation must then be provided for the abstract method in any concrete subclass of the abstract class </s>
<s> here’s what the shape class would look like as an abstract class public abstract class shape { color color // color of shape void setcolor( color newcolor ) { // method to change the color of the shape color = newcolor // change value of instance variable redraw( ) // redraw shape which will appear in new color } abstract void redraw( ) // abstract method -- -must be defined in // concrete subclasses // more instance variables and methods } // end of class shape once you have declared the class to be abstract it becomes illegal to try to create actual objects of type shape and the computer will report a syntax error if you try to do so note by the way that the vehicle class discussed above would probably also be an abstract class </s>
<s> there is no way to own a vehicle as such—the actual vehicle has to be a car or a truck or a motorcycle or some other concrete” type of vehicle ∗ ∗ ∗ 55 </s>
<s> inheritance and polymorphism 209 recall from subsection 533 that a class that is not explicitly declared to be a subclass of some other class is automatically made a subclass of the standard class object </s>
<s> that is a class declaration with no extends” part such as public class myclass { is exactly equivalent to public class myclass extends object { this means that class object is at the top of a huge class hierarchy that includes every other class ( semantically object is an abstract class in fact the most abstract class of all curiously however it is not declared to be abstract syntactically which means that you can create objects of type object </s>
<s> what you would do with them however i have no idea ) since every class is a subclass of object a variable of type object can refer to any object whatsoever of any type </s>
<s> java has several standard data structures that are designed to hold objects but since every object is an instance of class object these data structures can actually hold any object whatsoever </s>
<s> one example is the arraylist” data structure which is deﬁned by the class arraylist in the package javautil ( arraylist is discussed more fully in section 73 ) an arraylist is simply a list of objects </s>
<s> this class is very convenient because an arraylist can hold any number of objects and it will grow when necessary as objects are added to it </s>
<s> since the items in the list are of type object the list can actually hold objects of any type a program that wants to keep track of various shapes that have been drawn on the screen can store those shapes in an arraylist </s>
<s> suppose that the arraylist is named listofshapes </s>
<s> a shape such as oneshape can be added to the end of the list by calling the instance method listofshapesadd( oneshape )” </s>
<s> the shape can be removed from the list with the instance method listofshapesremove( oneshape )” </s>
<s> the number of shapes in the list is given by the function listofshapessize( )” </s>
<s> and it is possible to retrieve the i-th object from the list with the function call listofshapesget( i )” ( items in the list are numbered from 0 to listofshapessize( ) - 1 ) however note that this method returns an object not a shape ( of course the people who wrote the arraylist class didn’t even know about shapes so the method they wrote could hardly have a return type of shape! ) since you know that the items in the list are in fact shapes and not just objects you can type-cast the object returned by listofshapesget( i ) to be a value of type shape oneshape = ( shape )listofshapesget( i ) et’s say for example that you want to redraw all the shapes in the list </s>
<s> you could do this with a simple for loop which is a lovely example of object-oriented programming and of polymorphism for ( int i = 0 i < listofshapessize( ) i++ ) { shape s // i-th element of the list considered as a shape s = ( shape )listofshapesget( i ) sredraw( ) // what is drawn here depends on what type of shape s is! } ∗ ∗ ∗ the sample source code ﬁle shapedrawjava uses an abstract shape class and an arraylist to hold a list of shapes </s>
<s> the ﬁle deﬁnes an applet in which the user can add various shapes to a drawing area </s>
<s> once a shape is in the drawing area the user can use the mouse to drag it around 210 chapter 5 </s>
<s> objects and classes you might want to look at this ﬁle even though you won’t be able to understand all of it at this time </s>
<s> even the deﬁnitions of the shape classes are somewhat diﬀerent from those that i have described in this section ( for example the draw( ) method has a parameter of type graphics </s>
<s> this parameter is required because of the way java handles all drawing ) i’ll return to similar examples in later chapters when you know more about gui programming </s>
<s> however it would still be worthwhile to look at the deﬁnition of the shape class and its subclasses in the source code </s>
<s> you might also check how an arraylist is used to hold the list of shapes in the applet the only time when the actual class of a shape is used is when that shape is added to the screen </s>
<s> once the shape has been created it is manipulated entirely as an abstract shape </s>
<s> the routine that implements dragging for example works with variables of type shape and makes no reference to any of its subclasses </s>
<s> as the shape is being dragged the dragging routine just calls the shape’s draw method each time the shape has to be drawn so it doesn’t have to know how to draw the shape or even what type of shape it is </s>
<s> the object is responsible for drawing itself </s>
<s> if i wanted to add a new type of shape to the program i would deﬁne a new subclass of shape add another button to the applet and program the button to add the correct type of shape to the screen </s>
<s> no other changes in the programming would be necessary if you want to try out the applet you can ﬁnd it at the end of the on-line version of this section 56 this and super although the basic ideas of object-oriented programming are reasonably simple and clear they are subtle and they take time to get used to </s>
<s> and unfortunately beyond the basic ideas there are a lot of details </s>
<s> this section and the next cover more of those annoying details </s>
<s> you should not necessarily master everything in these two sections the ﬁrst time through but you should read it to be aware of what is possible </s>
<s> for the most part when i need to use this material later in the text i will explain it again brieﬂy or i will refer you back to it </s>
<s> in this section we’ll look at two variables this and super that are automatically deﬁned in any instance method 561 the special variable this what does it mean when you use a simple identiﬁer such as amount or process( ) to refer to a variable or method the answer depends on scope rules that tell where and how each declared variable and method can be accessed in a program </s>
<s> inside the deﬁnition of a method a simple variable name might refer to a local variable or parameter if there is one in scope” that is one whose declaration is in eﬀect at the point in the source code where the reference occurs </s>
<s> if not it must refer to a member variable of the class in which the reference occurs </s>
<s> similarly a simple method name must refer to a method in the same class a static member of a class has a simple name that can only be used inside the class deﬁnition for use outside the class it has a full name of the form class-name simple-name for example mathpi” is a static member variable with simple name pi” in the class math” it’s always legal to use the full name of a static member even within the class where it’s deﬁned sometimes it’s even necessary as when the simple name of a static member variable is hidden by a local variable or parameter of the same name instance variables and instance methods also have simple names </s>
<s> the simple name of such an instance member can be used in instance methods in the class where the instance member 211 56 </s>
<s> this and super is deﬁned ( but not in static methods ) </s>
<s> instance members also have full names—but remember that instance variables and methods are actually contained in objects not classes </s>
<s> the full name of an instance member starts with a reference to the object that contains the instance member for example if std is a variable that refers to an object of type student then stdtest1 could be the full name of an instance variable named test1 that is contained in that object </s>
<s> inside the student class the same variable could be referred to simply as test1 </s>
<s> but when just the simple name is used where is the object that contains the variable as an instance variable test1 is not a part of the student class itself any actual test1 variable has to be contained in some object of type student the solution to this riddle is simple suppose that the reference to test1” occurs in the deﬁnition of some instance method </s>
<s> as with instance variables only the deﬁnition of the instance method is in the class the actual method that gets executed has to be thought of as belonging to some particular object of type student </s>
<s> when that method gets executed the occurrence of the name test1” refers to the test1 variable in that same object ( this is why simple names of instance members cannot be used in static methods—when a static method is executed there is no object around and hence no actual instance members to refer to! ) this leaves open the question of full names for instance members inside the same class where they are deﬁned </s>
<s> we need a way to refer to the object that contains this method” java deﬁnes a special variable named this for just this purpose which is used in the source code of an instance method to refer to the object that contains the method </s>
<s> this intent of the name this” is to refer to this object” the one right here that this very method is in if var is an instance variable in the same object as the method then thisvar” is a full name for that variable </s>
<s> if othermethod( ) is an instance method in the same object then thisothermethod( ) could be used to call that method </s>
<s> whenever the computer executes an instance method it automatically sets the variable this to refer to the object that contains the method one common use of this is in constructors </s>
<s> for example public class student { private string name // name of the student public student( string name ) { // constructor </s>
<s> create a student with specified name thisname = name } // more variables and methods } in the constructor the instance variable called name is hidden by a formal parameter </s>
<s> however the instance variable can still be referred to by its full name thisname </s>
<s> in the assignment statement thisname = name” the value of the formal parameter name is assigned to the instance variable thisname </s>
<s> this is considered to be acceptable style there is no need to dream up cute new names for formal parameters that are just used to initialize instance variables </s>
<s> you can use the same name for the parameter as for the instance variable there are other uses for this </s>
<s> sometimes when you are writing an instance method you need to pass the object that contains the method to a subroutine as an actual parameter </s>
<s> in that case you can use this as the actual parameter </s>
<s> for example if you wanted to print out a 212 chapter 5 </s>
<s> objects and classes string representation of the object you could say systemoutprintln( this )” </s>
<s> if you want to add it to an arraylist lst you could say lstadd( this ) </s>
<s> or you could assign the value of this to another variable in an assignment statement </s>
<s> in fact you can do anything with this that you could do with any other variable except change its value 562 the special variable super java also deﬁnes another special variable named super” for use in the deﬁnitions of instance methods </s>
<s> the variable super is for use in a subclass </s>
<s> like this super refers to the object that contains the method </s>
<s> but it’s forgetful </s>
<s> it forgets that the object belongs to the class you are writing and it remembers only that it belongs to the superclass of that class </s>
<s> the point is that the class can contain additions and modiﬁcations to the superclass super doesn’t know about any of those additions and modiﬁcations it can only be used to refer to methods and variables in the superclass et’s say that the class that you are writing contains an instance method named dosomething( ) </s>
<s> consider the subroutine call statement superdosomething( ) </s>
<s> now super doesn’t know anything about the dosomething( ) method in the subclass </s>
<s> it only knows about things in the superclass so it tries to execute a method named dosomething( ) from the superclass </s>
<s> if there is none—if the dosomething( ) method was an addition rather than a modiﬁcation—you’ll get a syntax error the reason super exists is so you can get access to things in the superclass that are hidden by things in the subclass </s>
<s> for example supervar always refers to an instance variable named var in the superclass </s>
<s> this can be useful for the following reason if a class contains an instance variable with the same name as an instance variable in its superclass then an object of that class will actually contain two variables with the same name one deﬁned as part of the class itself and one deﬁned as part of the superclass </s>
<s> the variable in the subclass does not replace the variable of the same name in the superclass it merely hides it </s>
<s> the variable from the superclass can still be accessed using super when you write a method in a subclass that has the same signature as a method in its superclass the method from the superclass is hidden in the same way </s>
<s> we say that the method in the subclass overrides the method from the superclass </s>
<s> again however super can be used to access the method from the superclass the major use of super is to override a method with a new method that extends the behavior of the inherited method instead of replacing that behavior entirely </s>
<s> the new method can use super to call the method from the superclass and then it can add additional code to provide additional behavior </s>
<s> as an example suppose you have a pairofdice class that includes a roll( ) method </s>
<s> suppose that you want a subclass graphicaldice to represent a pair of dice drawn on the computer screen </s>
<s> the roll( ) method in the graphicaldice class should do everything that the roll( ) method in the pairofdice class does </s>
<s> we can express this with a call to superroll( ) which calls the method in the superclass </s>
<s> but in addition to that the roll( ) method for a graphicaldice object has to redraw the dice to show the new values </s>
<s> the graphicaldice class might look something like this public class graphicaldice extends pairofdice { public void roll( ) { // roll the dice and redraw them superroll( ) // call the roll method from pairofdice redraw( ) // call a method to draw the dice 56 </s>
<s> this and super 213 } // more stuff including definition of redraw( ) } note that this allows you to extend the behavior of the roll( ) method even if you don’t know how the method is implemented in the superclass! here is a more complete example </s>
<s> the applet at the end of section 47 in the on-line version of this book shows a disturbance that moves around in a mosaic of little squares </s>
<s> as it moves each square that it visits becomes a brighter shade of green </s>
<s> the result looks interesting but i think it would be prettier if the pattern were symmetric </s>
<s> a symmetric version of the applet is shown at the bottom of section 57 ( the on-line version ) </s>
<s> the symmetric applet can be programmed as an easy extension of the original applet in the symmetric version each time a square is brightened the squares that can be obtained from that one by horizontal and vertical reﬂection through the center of the mosaic are also brightened </s>
<s> this picture might make the symmetry idea clearer the four red squares in the picture for example form a set of such symmetrically placed squares as do the purple squares and the green squares ( the blue square is at the center of the mosaic so reﬂecting it doesn’t produce any other squares it’s its own reﬂection ) the original applet is deﬁned by the class randombrighten </s>
<s> in that class the actual task of brightening a square is done by a method called brighten( ) </s>
<s> if row and col are the row and column numbers of a square then brighten( rowcol )” increases the brightness of that square </s>
<s> all we need is a subclass of randombrighten with a modiﬁed brighten( ) routine instead of just brightening one square the modiﬁed routine will also brighten the horizontal and vertical reﬂections of that square </s>
<s> but how will it brighten each of the four individual squares by calling the brighten( ) method from the original class! it can do this by calling superbrighten( ) there is still the problem of computing the row and column numbers of the horizontal and vertical reﬂections </s>
<s> to do this you need to know the number of rows and the number of columns </s>
<s> the randombrighten class has instance variables named rows and columns to represent these quantities </s>
<s> using these variables it’s possible to come up with formulas for the reﬂections as shown in the deﬁnition of the brighten( ) method below here’s the complete deﬁnition of the new class public class symmetricbrighten extends randombrighten { /** * brighten the specified square at position ( rowcol ) and its * horizontal and vertical reflections </s>
<s> this overrides the 214 chapter 5 </s>
<s> objects and classes * brighten( ) method from the randombrighten class which just * brightens one square */ void brighten( int row int col ) { superbrighten( row col ) superbrighten( rows - 1 - row col ) superbrighten( row columns - 1 - col ) superbrighten( rows - 1 - row columns - 1 - col ) } } // end class symmetricbrighten this is the entire source code for the applet! 563 constructors in subclasses constructors are not inherited </s>
<s> that is if you extend an existing class to make a subclass the constructors in the superclass do not become part of the subclass </s>
<s> if you want constructors in the subclass you have to deﬁne new ones from scratch </s>
<s> if you don’t deﬁne any constructors in the subclass then the computer will make up a default constructor with no parameters for you this could be a problem if there is a constructor in the superclass that does a lot of necessary work </s>
<s> it looks like you might have to repeat all that work in the subclass! this could be a real problem if you don’t have the source code to the superclass and don’t know how it works </s>
<s> it might look like an impossible problem if the constructor in the superclass uses private member variables that you don’t even have access to in the subclass! obviously there has to be some ﬁx for this and there is </s>
<s> it involves the special variable super </s>
<s> as the very ﬁrst statement in a constructor you can use super to call a constructor from the superclass </s>
<s> the notation for this is a bit ugly and misleading and it can only be used in this one particular circumstance it looks like you are calling super as a subroutine ( even though super is not a subroutine and you can’t call constructors the same way you call other subroutines anyway ) </s>
<s> as an example assume that the pairofdice class has a constructor that takes two integers as parameters </s>
<s> consider a subclass public class graphicaldice extends pairofdice { public graphicaldice( ) { super( 34 ) // constructor for this class // call the constructor from the // pairofdice class with parameters 3 4 initializegraphics( ) // do some initialization specific // to the graphicaldice class } // more constructors methods variables } the statement super( 34 )” calls the constructor from the superclass </s>
<s> this call must be the ﬁrst line of the constructor in the subclass </s>
<s> note that if you don’t explicitly call a constructor from the superclass in this way then the default constructor from the superclass the one with no parameters will be called automatically ( and if no such constructor exists in the superclass the compiler will consider it to be a syntax error ) 57 </s>
<s> interfaces nested classes and other details 215 this might seem rather technical but unfortunately it is sometimes necessary </s>
<s> by the way you can use the special variable this in exactly the same way to call another constructor in the same class </s>
<s> this can be useful since it can save you from repeating the same code in several diﬀerent constructors 57 interfaces nested classes and other details this section simply pulls together a few more miscellaneous features of object oriented programming in java </s>
<s> read it now or just look through it and refer back to it later when you need this material ( you will need to know about the ﬁrst topic interfaces almost as soon as we begin gui programming ) 571 interfaces some object-oriented programming languages such as c++ allow a class to extend two or more superclasses </s>
<s> this is called multiple inheritance </s>
<s> in the illustration below for example class e is shown as having both class a and class b as direct superclasses while class f has three direct superclasses class a class b class c class d class e class f multiple inheritance ( not allowed in java ) such multiple inheritance is not allowed in java </s>
<s> the designers of java wanted to keep the language reasonably simple and felt that the beneﬁts of multiple inheritance were not worth the cost in increased complexity </s>
<s> however java does have a feature that can be used to accomplish many of the same goals as multiple inheritance interfaces we’ve encountered the term interface” before in connection with black boxes in general and subroutines in particular </s>
<s> the interface of a subroutine consists of the name of the subroutine its return type and the number and types of its parameters </s>
<s> this is the information you need to know if you want to call the subroutine </s>
<s> a subroutine also has an implementation the block of code which deﬁnes it and which is executed when the subroutine is called in java interface is a reserved word with an additional technical meaning </s>
<s> an interface” in this sense consists of a set of instance method interfaces without any associated implementations ( actually a java interface can contain other things as well but we won’t discuss them here ) a class can implement an interface by providing an implementation for each of the methods speciﬁed by the interface </s>
<s> here is an example of a very simple java interface 216 chapter 5 </s>
<s> objects and classes public interface drawable { public void draw( graphics g ) } this looks much like a class deﬁnition except that the implementation of the draw( ) method is omitted </s>
<s> a class that implements the interface drawable must provide an implementation for this method </s>
<s> of course the class can also include other methods and variables </s>
<s> for example public class line implements drawable { public void draw( graphics g ) { // do something -- -presumably draw a line } // other methods and variables } note that to implement an interface a class must do more than simply provide an implementation for each method in the interface it must also state that it implements the interface using the reserved word implements as in this example public class line implements drawable” </s>
<s> any class that implements the drawable interface deﬁnes a draw( ) instance method any object created from such a class includes a draw( ) method </s>
<s> we say that an object implements an interface if it belongs to a class that implements the interface </s>
<s> for example any object of type line implements the drawable interface while a class can extend only one other class it can implement any number of interfaces in fact a class can both extend one other class and implement one or more interfaces </s>
<s> so we can have things like class filledcircle extends circle implements drawable fillable { } the point of all this is that although interfaces are not classes they are something very similar </s>
<s> an interface is very much like an abstract class that is a class that can never be used for constructing objects but can be used as a basis for making subclasses </s>
<s> the subroutines in an interface are abstract methods which must be implemented in any concrete class that implements the interface </s>
<s> you can compare the drawable interface with the abstract class public abstract class abstractdrawable { public abstract void draw( graphics g ) } the main diﬀerence is that a class that extends abstractdrawable cannot extend any other class while a class that implements drawable can also extend some class </s>
<s> as with abstract classes even though you can’t construct an object from an interface you can declare a variable whose type is given by the interface </s>
<s> for example if drawable is an interface and if line and filledcircle are classes that implement drawable then you could say drawable figure // declare a variable of type drawable </s>
<s> it can // refer to any object that implements the // drawable interface figure = new line( ) // figure now refers to an object of class line figuredraw( g ) // calls draw( ) method from class line figure = new filledcircle( ) figuredraw( g ) // now figure refers to an object // of class filledcircle // calls draw( ) method from class filledcircle 57 </s>
<s> interfaces nested classes and other details 217 a variable of type drawable can refer to any object of any class that implements the drawable interface </s>
<s> a statement like figuredraw( g ) above is legal because figure is of type drawable and any drawable object has a draw( ) method </s>
<s> so whatever object figure refers to that object must have a draw( ) method note that a type is something that can be used to declare variables </s>
<s> a type can also be used to specify the type of a parameter in a subroutine or the return type of a function </s>
<s> in java a type can be either a class an interface or one of the eight built-in primitive types these are the only possibilities </s>
<s> of these however only classes can be used to construct new objects you are not likely to need to write your own interfaces until you get to the point of writing fairly complex programs </s>
<s> however there are several interfaces that are used in important ways in java’s standard packages </s>
<s> you’ll learn about some of these standard interfaces in the next few chapters and you will write classes that implement them 572 nested classes a class seems like it should be a pretty important thing </s>
<s> a class is a high-level building block of a program representing a potentially complex idea and its associated data and behaviors i’ve always felt a bit silly writing tiny little classes that exist only to group a few scraps of data together </s>
<s> however such trivial classes are often useful and even essential </s>
<s> fortunately in java i can ease the embarrassment because one class can be nested inside another class </s>
<s> my trivial little class doesn’t have to stand on its own </s>
<s> it becomes part of a larger more respectable class this is particularly useful when you want to create a little class speciﬁcally to support the work of a larger class </s>
<s> and more seriously there are other good reasons for nesting the deﬁnition of one class inside another class in java a nested class is any class whose deﬁnition is inside the deﬁnition of another class </s>
<s> nested classes can be either named or anonymous </s>
<s> i will come back to the topic of anonymous classes later in this section </s>
<s> a named nested class like most other things that occur in classes can be either static or non-static the deﬁnition of a static nested class looks just like the deﬁnition of any other class except that it is nested inside another class and it has the modiﬁer static as part of its declaration a static nested class is part of the static structure of the containing class </s>
<s> it can be used inside that class to create objects in the usual way </s>
<s> if it has not been declared private then it can also be used outside the containing class but when it is used outside the class its name must indicate its membership in the containing class </s>
<s> this is similar to other static components of a class a static nested class is part of the class itself in the same way that static member variables are parts of the class itself for example suppose a class named wireframemodel represents a set of lines in threedimensional space ( such models are used to represent three-dimensional objects in graphics programs ) suppose that the wireframemodel class contains a static nested class line that represents a single line </s>
<s> then outside of the class wireframemodel the line class would be referred to as wireframemodelline </s>
<s> of course this just follows the normal naming convention for static members of a class </s>
<s> the deﬁnition of the wireframemodel class with its nested line class would look in outline like this public class wireframemodel { // other members of the wireframemodel class static public class line { 218 chapter 5 </s>
<s> objects and classes // represents a line from the point ( x1y1z1 ) // to the point ( x2y2z2 ) in 3-dimensional space double x1 y1 z1 double x2 y2 z2 } // end class line // other members of the wireframemodel class } // end wireframemodel inside the wireframemodel class a line object would be created with the constructor new ine( )” </s>
<s> outside the class new wireframemodelline( )” would be used a static nested class has full access to the static members of the containing class even to the private members </s>
<s> similarly the containing class has full access to the members of the nested class </s>
<s> this can be another motivation for declaring a nested class since it lets you give one class access to the private members of another class without making those members generally available to other classes </s>
<s> note also that a nested class can itself be private meaning that it can only be used inside the class in which it is nested when you compile the above class deﬁnition two class ﬁles will be created </s>
<s> even though the deﬁnition of line is nested inside wireframemodel the compiled line class is stored in a separate ﬁle </s>
<s> the name of the class ﬁle for line will be wireframemodel$lineclass ∗ ∗ ∗ non-static nested classes are referred to as inner classes </s>
<s> inner classes are not in practice very diﬀerent from static nested classes but a non-static nested class is actually associated with an object rather than to the class in which it is nested </s>
<s> this can take some getting used to any non-static member of a class is not really part of the class itself ( although its source code is contained in the class deﬁnition ) </s>
<s> this is true for inner classes just as it is for any other non-static part of a class </s>
<s> the non-static members of a class specify what will be contained in objects that are created from that class </s>
<s> the same is true—at least logically—for inner classes it’s as if each object that belongs to the containing class has its own copy of the nested class this copy has access to all the instance methods and instance variables of the object even to those that are declared private </s>
<s> the two copies of the inner class in two diﬀerent objects diﬀer because the instance variables and methods they refer to are in diﬀerent objects </s>
<s> in fact the rule for deciding whether a nested class should be static or non-static is simple if the nested class needs to use any instance variable or instance method from the containing class make the nested class non-static </s>
<s> otherwise it might as well be static from outside the containing class a non-static nested class has to be referred to using a name of the form variablename </s>
<s> nestedclassname where variablename is a variable that refers to the object that contains the class </s>
<s> this is actually rather rare however </s>
<s> a non-static nested class is generally used only inside the class in which it is nested and there it can be referred to by its simple name in order to create an object that belongs to an inner class you must ﬁrst have an object that belongs to the containing class ( when working inside the class the object this” is used implicitly ) the inner class object is permanently associated with the containing class object and it has complete access to the members of the containing class object </s>
<s> looking at an example will help and will hopefully convince you that inner classes are really very natural </s>
<s> consider a class that represents poker games </s>
<s> this class might include a nested class to represent the players of the game </s>
<s> this structure of the pokergame class could be public class pokergame { // represents a game of poker 219 57 </s>
<s> interfaces nested classes and other details class player { // represents one of the players in this game } // end class player private deck deck private int pot // a deck of cards for playing the game // the amount of money that has been bet } // end class pokergame if game is a variable of type pokergame then conceptually game contains its own copy of the player class </s>
<s> in an instance method of a pokergame object a new player object would be created by saying new player( )” just as for any other class ( a player object could be created outside the pokergame class with an expression such as gamenew player( )” </s>
<s> again however this is rare ) the player object will have access to the deck and pot instance variables in the pokergame object </s>
<s> each pokergame object has its own deck and pot and players players of that poker game use the deck and pot for that game players of another poker game use the other game’s deck and pot </s>
<s> that’s the eﬀect of making the player class non-static this is the most natural way for players to behave </s>
<s> a player object represents a player of one particular poker game </s>
<s> if player were a static nested class on the other hand it would represent the general idea of a poker player independent of a particular poker game 573 anonymous inner classes in some cases you might ﬁnd yourself writing an inner class and then using that class in just a single line of your program </s>
<s> is it worth creating such a class indeed it can be but for cases like this you have the option of using an anonymous inner class </s>
<s> an anonymous class is created with a variation of the new operator that has the form new superclass-or-interface ( parameter-list methods-and-variables ) { } this constructor deﬁnes a new class without giving it a name and it simultaneously creates an object that belongs to that class </s>
<s> this form of the new operator can be used in any statement where a regular new” could be used </s>
<s> the intention of this expression is to create a new object belonging to a class that is the same as superclass-or-interface but with these methods-andvariables added” the eﬀect is to create a uniquely customized object just at the point in the program where you need it </s>
<s> note that it is possible to base an anonymous class on an interface rather than a class </s>
<s> in this case the anonymous class must implement the interface by deﬁning all the methods that are declared in the interface </s>
<s> if an interface is used as a base the parameter-list must be empty </s>
<s> otherwise it can contain parameters for a constructor in the superclass anonymous classes are often used for handling events in graphical user interfaces and we will encounter them several times in the chapters on gui programming </s>
<s> for now we will look at one not-very-plausible example </s>
<s> consider the drawable interface which is deﬁned earlier in 220 chapter 5 </s>
<s> objects and classes this section </s>
<s> suppose that we want a drawable object that draws a ﬁlled red 100-pixel square rather than deﬁning a new separate class and then using that class to create the object we can use an anonymous class to create the object in one statement drawable redsquare = new drawable( ) { void draw( graphics g ) { gsetcolor( colorred ) gfillrect( 1010100100 ) } } the semicolon at the end of this statement is not part of the class deﬁnition </s>
<s> it’s the semicolon that is required at the end of every declaration statement when a java class is compiled each anonymous nested class will produce a separate class ﬁle </s>
<s> if the name of the main class is mainclass for example then the names of the class ﬁles for the anonymous nested classes will be mainclass$1class mainclass$2class mainclass$3class and so on 574 mixing static and non-static classes as i’ve said have two very distinct purposes </s>
<s> a class can be used to group together a set of static member variables and static methods </s>
<s> or it can be used as a factory for making objects the non-static variables and methods in the class deﬁnition specify the instance variables and methods of the objects </s>
<s> in most cases a class performs one or the other of these roles not both sometimes however static and non-static members are mixed in a single class </s>
<s> in this case the class plays a dual role </s>
<s> sometimes these roles are completely separate </s>
<s> but it is also possible for the static and non-static parts of a class to interact </s>
<s> this happens when instance methods use static member variables or call static member subroutines </s>
<s> an instance method belongs to an object not to the class itself and there can be many objects with their own versions of the instance method </s>
<s> but there is only one copy of a static member variable </s>
<s> so eﬀectively we have many objects sharing that one variable suppose for example that we want to write a pairofdice class that uses the random class mentioned in section 53 for rolling the dice </s>
<s> to do this a pairofdice object needs access to an object of type random </s>
<s> but there is no need for each pairofdice object to have a separate random object ( in fact it would not even be a good idea because of the way random number generators work a program should in general use only one source of random numbers ) a nice solution is to have a single random variable as a static member of the pairofdice class so that it can be shared by all pairofdice objects </s>
<s> for example import javautilrandom public class pairofdice { private static random randgen = new random( ) public int die1 public int die2 // number showing on the first die // number showing on the second die public pairofdice( ) { // constructor </s>
<s> creates a pair of dice that // initially shows random values roll( ) 57 </s>
<s> interfaces nested classes and other details 221 } public void roll( ) { // roll the dice by setting each of the dice to be // a random number between 1 and 6 die1 = randgennextint( 6 ) + 1 // use the static variable! die2 = randgennextint( 6 ) + 1 } } // end class pairofdice as another example let’s rewrite the student class that was used in section 52 </s>
<s> i’ve added an id for each student and a static member called nextuniqueid </s>
<s> although there is an id variable in each student object there is only one nextuniqueid variable public class student { private string name // student’s name private int id // unique id number for this student public double test1 test2 test3 // grades on three tests private static int nextuniqueid = 0 // keep track of next available unique id number student( string thename ) { // constructor for student objects provides a name for the student // and assigns the student a unique id number name = thename nextuniqueid++ id = nextuniqueid } public string getname( ) { // accessor method for reading the value of the private // instance variable name return name } public int getid( ) { // accessor method for reading the value of id return id } public double getaverage( ) { // compute average test grade return ( test1 + test2 + test3 ) / 3 } } // end of class student since nextuniqueid is a static variable the initialization nextuniqueid = 0” is done only once when the class is ﬁrst loaded </s>
<s> whenever a student object is constructed and the constructor says nextuniqueid++” it’s always the same static member variable that is being incremented </s>
<s> when the very ﬁrst student object is created nextuniqueid becomes 1 </s>
<s> when the second object is created nextuniqueid becomes 2 </s>
<s> after the third object it becomes 3 and so on </s>
<s> the constructor stores the new value of nextuniqueid in the id variable of the object that is being created </s>
<s> of course id is an instance variable so every object has its own 222 chapter 5 </s>
<s> objects and classes individual id variable </s>
<s> the class is constructed so that each student will automatically get a diﬀerent value for its id variable </s>
<s> furthermore the id variable is private so there is no way for this variable to be tampered with after the object has been created </s>
<s> you are guaranteed just by the way the class is designed that every student object will have its own permanent unique identiﬁcation number </s>
<s> which is kind of cool if you think about it ( unfortunately if you think about it a bit more it turns out that the guarantee isn’t quite absolute </s>
<s> the guarantee is valid in programs that use a single thread </s>
<s> but as a preview of the diﬃculties of parallel programming i’ll note that in multi-threaded programs where several things can be going on at the same time things can get a bit strange </s>
<s> in a multi-threaded program it is possible that two threads are creating student objects at exactly the same time and it becomes possible for both objects to get the same id number </s>
<s> we’ll come back to this in subsection 1213 where you will learn how to ﬁx the problem ) 575 static import the import directive makes it possible to refer to a class such as javaawtcolor using its simple name color </s>
<s> all you have to do is say import javaawtcolor or import javaawt* but you still have to use compound names to refer to static member variables such as systemout and to static methods such as mathsqrt java 50 introduced a new form of the import directive that can be used to import static members of a class in the same way that the ordinary import directive imports classes from a package </s>
<s> the new form of the directive is called a static import and it has syntax import static package-name class-name static-member-name to import one static member name from a class or import static package-name class-name * to import all the public static members from a class </s>
<s> for example if you preface a class deﬁnition with import static javalangsystemout then you can use the simple name out instead of the compound name systemout </s>
<s> this means you can use outprintln instead of systemoutprintln </s>
<s> if you are going to work extensively with the math class you can preface your class deﬁnition with import static javalangmath* this would allow you to say sqrt instead of mathsqrt log instead of mathlog pi instead of mathpi and so on note that the static import directive requires a package-name even for classes in the standard package javalang </s>
<s> one consequence of this is that you can’t do a static import from a class in the default package </s>
<s> in particular it is not possible to do a static import from my textio class—if you wanted to do that you would have to move textio into a package 576 enums as classes enumerated types were introduced in subsection 233 </s>
<s> now that we have covered more material on classes and objects we can revisit the topic ( although still not covering enumerated types in their full complexity ) 57 </s>
<s> interfaces nested classes and other details 223 enumerated types are actually classes and each enumerated type constant is a public final static member variable in that class ( even though they are not declared with these modiﬁers ) </s>
<s> the value of the variable is an object belonging to the enumerated type class </s>
<s> there is one such object for each enumerated type constant and these are the only objects of the class that can ever be created </s>
<s> it is really these objects that represent the possible values of the enumerated type </s>
<s> the enumerated type constants are actually variables that refer to these objects when an enumerated type is deﬁned inside another class it is a nested class inside the enclosing class </s>
<s> in fact it is a static nested class whether you declare it to be static or not but it can also be declared as a non-nested class in a ﬁle of its own </s>
<s> for example we could deﬁne the following enumerated type in a ﬁle named suitjava public enum suit { spades hearts diamonds clubs } this enumerated type represents the four possible suits for a playing card and it could have been used in the example cardjava from subsection 542 furthermore in addition to its list of values an enumerated type can contain some of the other things that a regular class can contain including methods and additional member variables </s>
<s> just add a semicolon ( ) at the end of the list of values and then add deﬁnitions of the methods and variables in the usual way </s>
<s> for example we might make an enumerated type to represent the possible values of a playing card </s>
<s> it might be useful to have a method that returns the corresponding value in the game of blackjack </s>
<s> as another example suppose that when we print out one of the values we’d like to see something diﬀerent from the default string representation ( the identiﬁer that names the constant ) </s>
<s> in that case we can override the tostring( ) method in the class to print out a diﬀerent string representation </s>
<s> this would give something like public enum cardvalue { ace two three four five six seven eight nine ten jack queen king /** * return the value of this cardvalue in the game of blackjack * note that the value returned for an ace is 1 */ public int blackjackvalue( ) { if ( this == jack || this == queen || this == king ) return 10 else return 1 + ordinal( ) } /** * return a string representation of this cardvalue using numbers * for the numerical cards and names for the ace and face cards */ public string tostring( ) { switch ( this ) { // this is one of the enumerated type values case ace 224 chapter 5 </s>
<s> objects and classes return ace case jack return jack case queen return queen case king return king default // it’s a numeric card value int numericvalue = 1 + ordinal( ) return + numericvalue } } // end cardvalue the methods blackjackvalue( ) and tostring( ) are instance methods in cardvalue since cardvaluejack is an object belonging to that class you can call cardvaluejackblackjackvalue( ) </s>
<s> suppose that cardval is declared to be a variable of type cardvalue so that it can refer to any of the values in the enumerated type </s>
<s> we can call cardvalblackjackvalue( ) to ﬁnd the blackjack value of the cardvalue object to which cardval refers and systemoutprintln( cardval ) will implicitly call the method cardvaltostring( ) to obtain the print representation of that cardvalue ( one other thing to keep in mind is that since cardvalue is a class the value of cardval can be null which means it does not refer to any object ) remember that ace two king are the only possible objects of type cardvalue so in an instance method in that class this will refer to one of those values </s>
<s> recall that the instance method ordinal( ) is deﬁned in any enumerated type and gives the position of the enumerated type value in the list of possible values with the count starting from zero ( if you ﬁnd it annoying to use the class name as part of the name of every enumerated type constant you can use static import to make the simple names of the constants directly available—but only if you put the enumerated type into a package </s>
<s> for example if the enumerated type cardvalue is deﬁned in a package named cardgames then you could place import static cardgamescardvalue* at the beginning of a source code ﬁle </s>
<s> this would allow you for example to use the name jack in that ﬁle instead of cardvaluejack ) 225 exercises exercises for chapter 5 1 </s>
<s> in all versions of the pairofdice class in section 52 the instance variables die1 and die2 are declared to be public </s>
<s> they really should be private so that they would be protected from being changed from outside the class </s>
<s> write another version of the pairofdice class in which the instance variables die1 and die2 are private </s>
<s> your class will need getter” methods that can be used to ﬁnd out the values of die1 and die2 ( the idea is to protect their values from being changed from outside the class but still to allow the values to be read ) include other improvements in the class if you can think of any </s>
<s> test your class with a short program that counts how many times a pair of dice is rolled before the total of the two dice is equal to two 2 </s>
<s> a common programming task is computing statistics of a set of numbers ( a statistic is a number that summarizes some property of a set of data ) common statistics include the mean ( also known as the average ) and the standard deviation ( which tells how spread out the data are from the mean ) </s>
<s> i have written a little class called statcalc that can be used to compute these statistics as well as the sum of the items in the dataset and the number of items in the dataset </s>
<s> you can read the source code for this class in the ﬁle statcalcjava </s>
<s> if calc is a variable of type statcalc then the following methods are deﬁned • calcenter( item ) where item is a number adds the item to the dataset • calcgetcount( ) is a function that returns the number of items that have been added to the dataset • calcgetsum( ) is a function that returns the sum of all the items that have been added to the dataset • calcgetmean( ) is a function that returns the average of all the items • calcgetstandarddeviation( ) is a function that returns the standard deviation of the items typically all the data are added one after the other by calling the enter( ) method over and over as the data become available </s>
<s> after all the data have been entered any of the other methods can be called to get statistical information about the data </s>
<s> the methods getmean( ) and getstandarddeviation( ) should only be called if the number of items is greater than zero modify the current source code statcalcjava to add instance methods getmax( ) and getmin( ) </s>
<s> the getmax( ) method should return the largest of all the items that have been added to the dataset and getmin( ) should return the smallest </s>
<s> you will need to add two new instance variables to keep track of the largest and smallest items that have been seen so far test your new class by using it in a program to compute statistics for a set of non-zero numbers entered by the user </s>
<s> start by creating an object of type statcalc statcalc calc // object to be used to process the data calc = new statcalc( ) read numbers from the user and add them to the dataset </s>
<s> use 0 as a sentinel value ( that is stop reading numbers when the user enters 0 ) </s>
<s> after all the user’s non-zero 226 chapter 5 </s>
<s> objects and classes numbers have been entered print out each of the six statistics that are available from calc 3 </s>
<s> this problem uses the pairofdice class from exercise 51 and the statcalc class from exercise 52 the program in exercise 44 performs the experiment of counting how many times a pair of dice is rolled before a given total comes up </s>
<s> it repeats this experiment 10000 times and then reports the average number of rolls </s>
<s> it does this whole process for each possible total ( 2 3 12 ) redo that exercise </s>
<s> but instead of just reporting the average number of rolls you should also report the standard deviation and the maximum number of rolls </s>
<s> use a pairofdice object to represent the dice </s>
<s> use a statcalc object to compute the statistics ( you’ll need a new statcalc object for each possible total 2 3 12 </s>
<s> you can use a new pair of dice if you want but it’s not necessary ) 4 </s>
<s> the blackjackhand class from subsection 551 is an extension of the hand class from section 54 </s>
<s> the instance methods in the hand class are discussed in that section </s>
<s> in addition to those methods blackjackhand includes an instance method getblackjackvalue( ) that returns the value of the hand for the game of blackjack </s>
<s> for this exercise you will also need the deck and card classes from section 54 a blackjack hand typically contains from two to six cards </s>
<s> write a program to test the blackjackhand class </s>
<s> you should create a blackjackhand object and a deck object </s>
<s> pick a random number between 2 and 6 </s>
<s> deal that many cards from the deck and add them to the hand </s>
<s> print out all the cards in the hand and then print out the value computed for the hand by getblackjackvalue( ) </s>
<s> repeat this as long as the user wants to continue in addition to textiojava your program will depend on cardjava deckjava handjava and blackjackhandjava 5 </s>
<s> write a program that lets the user play blackjack </s>
<s> the game will be a simpliﬁed version of blackjack as it is played in a casino </s>
<s> the computer will act as the dealer </s>
<s> as in the previous exercise your program will need the classes deﬁned in cardjava deckjava handjava and blackjackhandjava ( this is the longest and most complex program that has come up so far in the exercises ) you should ﬁrst write a subroutine in which the user plays one game </s>
<s> the subroutine should return a boolean value to indicate whether the user wins the game or not </s>
<s> return true if the user wins false if the dealer wins </s>
<s> the program needs an object of class deck and two objects of type blackjackhand one for the dealer and one for the user the general object in blackjack is to get a hand of cards whose value is as close to 21 as possible without going over </s>
<s> the game goes like this • first two cards are dealt into each player’s hand </s>
<s> if the dealer’s hand has a value of 21 at this point then the dealer wins </s>
<s> otherwise if the user has 21 then the user wins ( this is called a blackjack” ) note that the dealer wins on a tie so if both players have blackjack then the dealer wins • now if the game has not ended the user gets a chance to add some cards to her hand </s>
<s> in this phase the user sees her own cards and sees one of the dealer’s two cards ( in a casino the dealer deals himself one card face up and one card face down all the user’s cards are dealt face up ) the user makes a decision whether to hit” exercises 227 which means to add another card to her hand or to stand” which means to stop taking cards • if the user hits there is a possibility that the user will go over 21 </s>
<s> in that case the game is over and the user loses </s>
<s> if not then the process continues </s>
<s> the user gets to decide again whether to hit or stand • if the user stands the game will end but ﬁrst the dealer gets a chance to draw cards the dealer only follows rules without any choice </s>
<s> the rule is that as long as the value of the dealer’s hand is less than or equal to 16 the dealer hits ( that is takes another card ) </s>
<s> the user should see all the dealer’s cards at this point </s>
<s> now the winner can be determined if the dealer has gone over 21 the user wins </s>
<s> otherwise if the dealer’s total is greater than or equal to the user’s total then the dealer wins otherwise the user wins two notes on programming at any point in the subroutine as soon as you know who the winner is you can say return true” or return false” to end the subroutine and return to the main program </s>
<s> to avoid having an overabundance of variables in your subroutine remember that a function call such as userhandgetblackjackvalue( ) can be used anywhere that a number could be used including in an output statement or in the condition of an if statement write a main program that lets the user play several games of blackjack </s>
<s> to make things interesting give the user 100 dollars and let the user make bets on the game </s>
<s> if the user loses subtract the bet from the user’s money </s>
<s> if the user wins add an amount equal to the bet to the user’s money </s>
<s> end the program when the user wants to quit or when she runs out of money an applet version of this program can be found in the on-line version of this exercise you might want to try it out before you work on the program 6 </s>
<s> subsection 576 discusses the possibility of representing the suits and values of playing cards as enumerated types </s>
<s> rewrite the card class from subsection 542 to use these enumerated types </s>
<s> test your class with a program that prints out the 52 possible playing cards </s>
<s> suggestions you can modify the source code ﬁle cardjava but you should leave out support for jokers </s>
<s> in your main program use nested for loops to generated cards of all possible suits and values the for loops will be for-each” loops of the type discussed in subsection 344 </s>
<s> it would be nice to add a tostring( ) method to the suit class from subsection 576 so that a suit prints out as spades” or hearts” instead of spades” or hearts” 228 chapter 5 </s>
<s> objects and classes quiz on chapter 5 1 </s>
<s> object-oriented programming uses classes and objects </s>
<s> what are classes and what are objects what is the relationship between classes and objects 2 </s>
<s> explain carefully what null means in java and why this special value is necessary 3 </s>
<s> what is a constructor what is the purpose of a constructor in a class 4 </s>
<s> suppose that kumquat is the name of a class and that fruit is a variable of type kumquat what is the meaning of the statement fruit = new kumquat( )” that is what does the computer do when it executes this statement ( try to give a complete answer </s>
<s> the computer does several things ) 5 </s>
<s> what is meant by the terms instance variable and instance method 6 </s>
<s> explain what is meant by the terms subclass and superclass 7 </s>
<s> modify the following class so that the two instance variables are private and there is a getter method and a setter method for each instance variable public class player { string name int score } 8 </s>
<s> explain why the class player that is deﬁned in the previous question has an instance method named tostring( ) even though no deﬁnition of this method appears in the deﬁnition of the class 9 </s>
<s> explain the term polymorphism 10 </s>
<s> java uses garbage collection” for memory management </s>
<s> explain what is meant here by garbage collection </s>
<s> what is the alternative to garbage collection 11 </s>
<s> for this problem you should write a very simple but complete class </s>
<s> the class represents a counter that counts 0 1 2 3 4 </s>
<s> the name of the class should be counter </s>
<s> it has one private instance variable representing the value of the counter </s>
<s> it has two instance methods increment( ) adds one to the counter value and getvalue( ) returns the current counter value </s>
<s> write a complete deﬁnition for the class counter 12 </s>
<s> this problem uses the counter class from the previous question </s>
<s> the following program segment is meant to simulate tossing a coin 100 times </s>
<s> it should use two counter objects headcount and tailcount to count the number of heads and the number of tails </s>
<s> fill in the blanks so that it will do so 229 quiz counter headcount tailcount tailcount = new counter( ) headcount = new counter( ) for ( int flip = 0 flip < 100 flip++ ) { if ( mathrandom( ) < 05 ) // there’s a 50/50 chance that this is true // count a head // count a tail else } systemoutprintln( there were + + heads ) systemoutprintln( there were + + tails ) 230 chapter 5 </s>
<s> objects and classes chapter 6 introduction to gui programming computer users today expect to interact with their computers using a graphical user interface ( gui ) </s>
<s> java can be used to write gui programs ranging from simple applets which run on a web page to sophisticated stand-alone applications gui programs diﬀer from traditional straight-through” programs that you have encountered in the ﬁrst few chapters of this book </s>
<s> one big diﬀerence is that gui programs are event-driven </s>
<s> that is user actions such as clicking on a button or pressing a key on the keyboard generate events and the program must respond to these events as they occur </s>
<s> eventdriven programming builds on all the skills you have learned in the ﬁrst ﬁve chapters of this text </s>
<s> you need to be able to write the methods that respond to events </s>
<s> inside those methods you are doing the kind of programming-in-the-small that was covered in chapter 2 and chapter 3 and of course objects are everywhere in gui programming </s>
<s> events are objects </s>
<s> colors and fonts are objects </s>
<s> gui components such as buttons and menus are objects </s>
<s> events are handled by instance methods contained in objects </s>
<s> in java gui programming is object-oriented programming this chapter covers the basics of gui programming </s>
<s> the discussion will continue in chapter 13 with more details and with more advanced techniques 61 the basic gui application there are two basic types of gui program in java stand-alone applications and applets </s>
<s> an applet is a program that runs in a rectangular area on a web page </s>
<s> applets are generally small programs meant to do fairly simple things although there is nothing to stop them from being very complex </s>
<s> applets were responsible for a lot of the initial excitement about java when it was introduced since they could do things that could not otherwise be done on web pages </s>
<s> however there are now easier ways to do many of the more basic things that can be done with applets and they are no longer the main focus of interest in java </s>
<s> nevertheless there are still some things that can be done best with applets and they are still somewhat common on the web </s>
<s> we will look at applets in the next section a stand-alone application is a program that runs on its own without depending on a web browser </s>
<s> you’ve been writing stand-alone applications all along </s>
<s> any class that has a main( ) routine deﬁnes a stand-alone application running the program just means executing this main( ) routine </s>
<s> however the programs that you’ve seen up till now have been commandline” programs where the user and computer interact by typing things back and forth to each 231 232 chapter 6 </s>
<s> introduction to gui programming other </s>
<s> a gui program oﬀers a much richer type of user interface where the user uses a mouse and keyboard to interact with gui components such as windows menus buttons check boxes text input boxes scroll bars and so on </s>
<s> the main routine of a gui program creates one or more such components and displays them on the computer screen </s>
<s> very often that’s all it does once a gui component has been created it follows its own programming—programming that tells it how to draw itself on the screen and how to respond to events such as being clicked on by the user a gui program doesn’t have to be immensely complex </s>
<s> we can for example write a very simple gui hello world” program that says hello” to the user but does it by opening a window where the greeting is displayed import javaxswingjoptionpane public class helloworldgui1 { public static void main( string[] args ) { joptionpaneshowmessagedialog( null hello world! ) } } when this program is run a window appears on the screen that contains the message hello world!” </s>
<s> the window also contains an ok” button for the user to click after reading the message </s>
<s> when the user clicks this button the window closes and the program ends </s>
<s> by the way this program can be placed in a ﬁle named helloworldgui1java compiled and run just like any other java program now this program is already doing some pretty fancy stuﬀ </s>
<s> it creates a window it draws the contents of that window and it handles the event that is generated when the user clicks the button </s>
<s> the reason the program was so easy to write is that all the work is done by showmessagedialog( ) a static method in the built-in class joptionpane ( note that the source code imports” the class javaxswingjoptionpane to make it possible to refer to the joptionpane class using its simple name </s>
<s> see subsection 453 for information about importing classes from java’s standard packages ) if you want to display a message to the user in a gui program this is a good way to do it just use a standard class that already knows how to do the work! and in fact joptionpane is regularly used for just this purpose ( but as part of a larger program usually ) </s>
<s> of course if you want to do anything serious in a gui program there is a lot more to learn </s>
<s> to give you an idea of the types of things that are involved we’ll look at a short gui program that does the same things as the previous program—open a window containing a message and an ok button and respond to a click on the button by ending the program—but does it all by hand instead of by using the built-in joptionpane class </s>
<s> mind you this is not a good way to write the program but it will illustrate some important aspects of gui programming in java here is the source code for the program </s>
<s> you are not expected to understand it yet </s>
<s> i will explain how it works below but it will take the rest of the chapter before you will really understand completely </s>
<s> in this section you will just get a brief overview of gui programming import javaawt* import javaawtevent* import javaxswing* public class helloworldgui2 { private static class helloworlddisplay extends jpanel { 61 </s>
<s> the basic gui application 233 public void paintcomponent( graphics g ) { superpaintcomponent( g ) gdrawstring( hello world! 20 30 ) } } private static class buttonhandler implements actionlistener { public void actionperformed( actionevent e ) { systemexit( 0 ) } } public static void main( string[] args ) { helloworlddisplay displaypanel = new helloworlddisplay( ) jbutton okbutton = new jbutton( ok ) buttonhandler listener = new buttonhandler( ) okbuttonaddactionlistener( listener ) jpanel content = new jpanel( ) contentsetlayout( new borderlayout( ) ) contentadd( displaypanel borderlayoutcenter ) contentadd( okbutton borderlayoutsouth ) jframe window = new jframe( gui test ) windowsetcontentpane( content ) windowsetsize( 250100 ) windowsetlocation( 100100 ) windowsetvisible( true ) } } 611 jframe and jpanel in a java gui program each gui component in the interface is represented by an object in the program </s>
<s> one of the most fundamental types of component is the window </s>
<s> windows have many behaviors </s>
<s> they can be opened and closed </s>
<s> they can be resized </s>
<s> they have titles” that are displayed in the title bar above the window </s>
<s> and most important they can contain other gui components such as buttons and menus java of course has a built-in class to represent windows </s>
<s> there are actually several diﬀerent types of window but the most common type is represented by the jframe class ( which is included in the package javaxswing ) </s>
<s> a jframe is an independent window that can for example act as the main window of an application </s>
<s> one of the most important things to understand is that a jframe object comes with many of the behaviors of windows already programmed in </s>
<s> in particular it comes with the basic properties shared by all windows such as a titlebar and the ability to be opened and closed </s>
<s> since a jframe comes with these behaviors you don’t have to program them yourself! this is of course one of the central ideas of objectoriented programming </s>
<s> what a jframe doesn’t come with of course is content the stuﬀ that is contained in the window </s>
<s> if you don’t add any other content to a jframe it will just display a blank area </s>
<s> you can add content either by creating a jframe object and then adding the content to it or by creating a subclass of jframe and adding the content in the constructor of that subclass 234 chapter 6 </s>
<s> introduction to gui programming the main program above declares a variable window of type jframe and sets it to refer to a new window object with the statement jframe window = new jframe( gui test ) the parameter in the constructor gui test” speciﬁes the title that will be displayed in the titlebar of the window </s>
<s> this line creates the window object but the window itself is not yet visible on the screen </s>
<s> before making the window visible some of its properties are set with these statements windowsetcontentpane( content ) windowsetsize( 250100 ) windowsetlocation( 100100 ) the ﬁrst line here sets the content of the window ( the content itself was created earlier in the main program ) the second line says that the window will be 250 pixels wide and 100 pixels high </s>
<s> the third line says that the upper left corner of the window will be 100 pixels over from the left edge of the screen and 100 pixels down from the top </s>
<s> once all this has been set up the window is actually made visible on the screen with the command windowsetvisible( true ) it might look as if the program ends at that point and in fact the main( ) routine does end however the window is still on the screen and the program as a whole does not end until the user clicks the ok button </s>
<s> once the window was opened a new thread was created to manage the graphical user interface and that thread continues to run even after main( ) has ﬁnished ∗ ∗ ∗ the content that is displayed in a jframe is called its content pane ( in addition to its content pane a jframe can also have a menu bar which is a separate thing that i will talk about later ) a basic jframe already has a blank content pane you can either add things to that pane or you can replace the basic content pane entirely </s>
<s> in my sample program the line windowsetcontentpane( content ) replaces the original blank content pane with a diﬀerent component ( remember that a component” is just a visual element of a graphical user interface ) in this case the new content is a component of type jpanel jpanel is another of the fundamental classes in swing </s>
<s> the basic jpanel is again just a blank rectangle </s>
<s> there are two ways to make a useful jpanel the ﬁrst is to add other components to the panel the second is to draw something in the panel </s>
<s> both of these techniques are illustrated in the sample program </s>
<s> in fact you will ﬁnd two jpanels in the program content which is used to contain other components and displaypanel which is used as a drawing surface et’s look more closely at displaypanel </s>
<s> this variable is of type helloworlddisplay which is a nested static class inside the helloworldgui2 class ( nested classes were introduced in subsection 572 ) this class deﬁnes just one instance method paintcomponent( ) which overrides a method of the same name in the jpanel class private static class helloworlddisplay extends jpanel { public void paintcomponent( graphics g ) { superpaintcomponent( g ) gdrawstring( hello world! 20 30 ) } } 61 </s>
<s> the basic gui application 235 the paintcomponent( ) method is called by the system when a component needs to be painted on the screen </s>
<s> in the jpanel class the paintcomponent method simply ﬁlls the panel with the panel’s background color </s>
<s> the paintcomponent( ) method in helloworlddisplay begins by calling superpaintcomponent( g ) </s>
<s> this calls the version of paintcomponent( ) that is deﬁned in the superclass jpanel that is it ﬁlls the panel with the background color ( see subsection 562 for a discussion of the special variable super ) then it calls gdrawstring( ) to paint the string hello world!” onto the panel </s>
<s> the net result is that whenever a helloworlddisplay is shown on the screen it displays the string hello world!” we will often use jpanels in this way as drawing surfaces </s>
<s> usually when we do this we will deﬁne a nested class that is a subclass of jpanel and we will write a paintcomponent method in that class to draw the desired content in the panel 612 components and layout another way of using a jpanel is as a container to hold other components </s>
<s> java has many classes that deﬁne gui components </s>
<s> before these components can appear on the screen they must be added to a container </s>
<s> in this program the variable named content refers to a jpanel that is used as a container and two other components are added to that container </s>
<s> this is done in the statements contentadd( displaypanel borderlayoutcenter ) contentadd( okbutton borderlayoutsouth ) here content refers to an object of type jpanel later in the program this panel becomes the content pane of the window </s>
<s> the ﬁrst component that is added to content is displaypanel which as discussed above displays the message hello world!” </s>
<s> the second is okbutton which represents the button that the user clicks to close the window </s>
<s> the variable okbutton is of type jbutton the java class that represents push buttons the borderlayout” stuﬀ in these statements has to do with how the two components are arranged in the container </s>
<s> when components are added to a container there has to be some way of deciding how those components are arranged inside the container </s>
<s> this is called laying out” the components in the container and the most common technique for laying out components is to use a layout manager </s>
<s> a layout manager is an object that implements some policy for how to arrange the components in a container diﬀerent types of layout manager implement diﬀerent policies </s>
<s> one type of layout manager is deﬁned by the borderlayout class </s>
<s> in the program the statement contentsetlayout( new borderlayout( ) ) creates a new borderlayout object and tells the content panel to use the new object as its layout manager </s>
<s> essentially this line determines how components that are added to the content panel will be arranged inside the panel </s>
<s> we will cover layout managers in much more detail later but for now all you need to know is that adding okbutton in the borderlayoutsouth position puts the button at the bottom of the panel and putting displaypanel in the borderlayoutcenter position makes it ﬁll any space that is not taken up by the button this example shows a general technique for setting up a gui create a container and assign a layout manager to it create components and add them to the container and use the container as the content pane of a window or applet </s>
<s> a container is itself a component so it is possible that some of the components that are added to the top-level container are themselves containers with their own layout managers and components </s>
<s> this makes it possible to build up complex user interfaces in a hierarchical fashion with containers inside containers inside containers 236 613 chapter 6 </s>
<s> introduction to gui programming events and listeners the structure of containers and components sets up the physical appearance of a gui but it doesn’t say anything about how the gui behaves </s>
<s> that is what can the user do to the gui and how will it respond guis are largely event-driven that is the program waits for events that are generated by the user’s actions ( or by some other cause ) </s>
<s> when an event occurs the program responds by executing an event-handling method </s>
<s> in order to program the behavior of a gui you have to write event-handling methods to respond to the events that you are interested in the most common technique for handling events in java is to use event listeners </s>
<s> a listener is an object that includes one or more event-handling methods </s>
<s> when an event is detected by another object such as a button or menu the listener object is notiﬁed and it responds by running the appropriate event-handling method </s>
<s> an event is detected or generated by an object </s>
<s> another object the listener has the responsibility of responding to the event the event itself is actually represented by a third object which carries information about the type of event when it occurred and so on </s>
<s> this division of responsibilities makes it easier to organize large programs as an example consider the ok button in the sample program </s>
<s> when the user clicks the button an event is generated </s>
<s> this event is represented by an object belonging to the class actionevent </s>
<s> the event that is generated is associated with the button we say that the button is the source of the event </s>
<s> the listener object in this case is an object belonging to the class buttonhandler which is deﬁned as a nested class inside helloworldgui2 private static class buttonhandler implements actionlistener { public void actionperformed( actionevent e ) { systemexit( 0 ) } } this class implements the actionlistener interface—a requirement for listener objects that handle events from buttons ( interfaces were introduced in subsection 571 ) the eventhandling method is named actionperformed as speciﬁed by the actionlistener interface </s>
<s> this method contains the code that is executed when the user clicks the button in this case the code is a call to systemexit( ) which will terminate the program there is one more ingredient that is necessary to get the event from the button to the listener object the listener object must register itself with the button as an event listener this is done with the statement okbuttonaddactionlistener( listener ) this statement tells okbutton that when the user clicks the button the actionevent that is generated should be sent to listener </s>
<s> without this statement the button has no way of knowing that some other object would like to listen for events from the button this example shows a general technique for programming the behavior of a gui write classes that include event-handling methods </s>
<s> create objects that belong to these classes and register them as listeners with the objects that will actually detect or generate the events </s>
<s> when an event occurs the listener is notiﬁed and the code that you wrote in one of its event-handling methods is executed </s>
<s> at ﬁrst this might seem like a very roundabout and complicated way to get things done but as you gain experience with it you will ﬁnd that it is very ﬂexible and that it goes together very well with object oriented programming ( we will return to events 62 </s>
<s> applets and html 237 and listeners in much more detail in section 63 and later sections i do not expect you to completely understand them at this time ) 62 applets and html although stand-alone applications are much more important than applets at this point in the history of java applets are still widely used </s>
<s> they can do things on web pages that can’t easily be done with other technologies </s>
<s> it is easy to distribute applets to users the user just has to open a web page and the applet is there with no special installation required ( although the user must have an appropriate version of java installed on their computer ) </s>
<s> and of course applets are fun now that the web has become such a common part of life it’s nice to be able to see your work running on a web page the good news is that writing applets is not much diﬀerent from writing stand-alone applications </s>
<s> the structure of an applet is essentially the same as the structure of the jframes that were introduced in the previous section and events are handled in the same way in both types of program </s>
<s> so most of what you learn about applications applies to applets and vice versa of course one diﬀerence is that an applet is dependent on a web page so to use applets eﬀectively you have to learn at least a little about creating web pages </s>
<s> web pages are written using a language called html ( hypertext markup language ) </s>
<s> in subsection 623 below you’ll learn how to use html to create web pages that display applets 621 japplet the japplet class ( in package javaxswing ) can be used as a basis for writing applets in the same way that jframe is used for writing stand-alone applications </s>
<s> the basic japplet class represents a blank rectangular area </s>
<s> since an applet is not a stand-alone application this area must appear on a web page or in some other environment that knows how to display an applet ike a jframe a japplet contains a content pane ( and can contain a menu bar ) </s>
<s> you can add content to an applet either by adding content to its content pane or by replacing the content pane with another component </s>
<s> in my examples i will generally create a jpanel and use it as a replacement for the applet’s content pane to create an applet you will write a subclass of japplet </s>
<s> the japplet class deﬁnes several instance methods that are unique to applets </s>
<s> these methods are called by the applet’s environment at certain points during the applet’s life cycle” in the japplet class itself these methods do nothing you can override these methods in a subclass </s>
<s> the most important of these special applet methods is public void init( ) an applet’s init( ) method is called when the applet is created </s>
<s> you can use the init( ) method as a place where you can set up the physical structure of the applet and the event handling that will determine its behavior ( you can also do some initialization in the constructor for your class but there are certain aspects of the applet’s environment that are set up after its constructor is called but before the init( ) method is called so there are a few operations that will work in the init( ) method but will not work in the constructor ) the other applet life-cycle methods are start( ) stop( ) and destroy( ) </s>
<s> i will not use these methods for the time being and will not discuss them here except to mention that destroy( ) is called at the end of the applet’s lifetime and can be used as a place to do any necessary cleanup such as closing any windows that were opened by the applet 238 chapter 6 </s>
<s> introduction to gui programming with this in mind we can look at our ﬁrst example of a japplet </s>
<s> it is of course an applet that says hello world!” </s>
<s> to make it a little more interesting i have added a button that changes the text of the message and a state variable currentmessage that holds the text of the current message </s>
<s> this example is very similar to the stand-alone application helloworldgui2 from the previous section </s>
<s> it uses an event-handling class to respond when the user clicks the button a panel to display the message and another panel that serves as a container for the message panel and the button </s>
<s> the second panel becomes the content pane of the applet </s>
<s> here is the source code for the applet again you are not expected to understand all the details at this time import javaawt* import javaawtevent* import javaxswing* /** * a simple applet that can display the messages hello world * and goodbye world </s>
<s> the applet contains a button and it * switches from one message to the other when the button is * clicked */ public class helloworldapplet extends japplet { private string currentmessage = hello world! // currently displayed message private messagedisplay displaypanel // the panel where the message is displayed private class messagedisplay extends jpanel { public void paintcomponent( graphics g ) { superpaintcomponent( g ) gdrawstring( currentmessage 20 30 ) } } // defines the display panel private class buttonhandler implements actionlistener { // the event listener public void actionperformed( actionevent e ) { if ( currentmessageequals( hello world! ) ) currentmessage = goodbye world! else currentmessage = hello world! displaypanelrepaint( ) // paint display panel with new message } } /** * the applet’s init( ) method creates the button and display panel and * adds them to the applet and it sets up a listener to respond to * clicks on the button */ public void init( ) { displaypanel = new messagedisplay( ) jbutton changemessagebutton = new jbutton( change message ) buttonhandler listener = new buttonhandler( ) changemessagebuttonaddactionlistener( listener ) jpanel content = new jpanel( ) contentsetlayout( new borderlayout( ) ) 239 62 </s>
<s> applets and html contentadd( displaypanel borderlayoutcenter ) contentadd( changemessagebutton borderlayoutsouth ) setcontentpane( content ) } } you should compare this class with helloworldgui2java from the previous section </s>
<s> one subtle diﬀerence that you will notice is that the member variables and nested classes in this example are non-static </s>
<s> remember that an applet is an object </s>
<s> a single class can be used to make several applets and each of those applets will need its own copy of the applet data so the member variables in which the data are stored must be non-static instance variables </s>
<s> since the variables are non-static the two nested classes which use those variables must also be non-static ( static nested classes cannot access non-static member variables in the containing class see subsection 572 ) remember the basic rule for deciding whether to make a nested class static if it needs access to any instance variable or instance method in the containing class the nested class must be non-static otherwise it can be declared to be static ( by the way japplet is a subclass of a more basic class named applet and found in the package javaapplet </s>
<s> japplet is part of the swing gui framework applet is part of the older awt and is no longer commonly used directly for writing applets ) 622 reusing your jpanels both applets and frames can be programmed in the same way design a jpanel and use it to replace the default content pane in the applet or frame </s>
<s> this makes it very easy to write two versions of a program one which runs as an applet and one which runs as a frame </s>
<s> the idea is to create a subclass of jpanel that represents the content pane for your program all the hard programming work is done in this panel class </s>
<s> an object of this class can then be used as the content pane either in a frame or in an applet—or both </s>
<s> only a very simple main( ) program is needed to show your panel in a frame and only a very simple applet class is needed to show your panel in an applet so it’s easy to make both versions as an example we can rewrite helloworldapplet by writing a subclass of jpanel </s>
<s> that class can then be reused to make a frame in a standalone application </s>
<s> this class is very similar to helloworldapplet but now the initialization is done in a constructor instead of in an init( ) method import javaawt* import javaawtevent* import javaxswing* public class helloworldpanel extends jpanel { private string currentmessage = hello world! // currently displayed message private messagedisplay displaypanel // the panel where the message is displayed private class messagedisplay extends jpanel { public void paintcomponent( graphics g ) { superpaintcomponent( g ) gdrawstring( currentmessage 20 30 ) } } // defines the display panel private class buttonhandler implements actionlistener { // the event listener 240 chapter 6 </s>
<s> introduction to gui programming public void actionperformed( actionevent e ) { if ( currentmessageequals( hello world! ) ) currentmessage = goodbye world! else currentmessage = hello world! displaypanelrepaint( ) // paint display panel with new message } } /** * the constructor creates the components that will be contained inside this * panel and then adds those components to this panel */ public helloworldpanel( ) { displaypanel = new messagedisplay( ) // create the display subpanel jbutton changemessagebutton = new jbutton( change message ) // the button buttonhandler listener = new buttonhandler( ) changemessagebuttonaddactionlistener( listener ) setlayout( new borderlayout( ) ) // set the layout manager for this panel add( displaypanel borderlayoutcenter ) // add the display panel add( changemessagebutton borderlayoutsouth ) // add the button } } once this class exists it can be used in an applet </s>
<s> the applet class only has to create an object of type helloworldpanel and use that object as its content pane import javaxswingjapplet public class helloworldapplet2 extends japplet { public void init( ) { helloworldpanel content = new helloworldpanel( ) setcontentpane( content ) } } similarly it’s easy to make a frame that uses an object of type helloworldpanel as its content pane import javaxswingjframe public class helloworldgui3 { public static void main( string[] args ) { jframe window = new jframe( gui test ) helloworldpanel content = new helloworldpanel( ) windowsetcontentpane( content ) windowsetsize( 250100 ) windowsetlocation( 100100 ) windowsetdefaultcloseoperation( jframeexit on close ) windowsetvisible( true ) } } 62 </s>
<s> applets and html 241 one new feature of this example is the line windowsetdefaultcloseoperation( jframeexit on close ) this says that when the user closes the window by clicking the close box in the title bar of the window the program should be terminated </s>
<s> this is necessary because no other way is provided to end the program </s>
<s> without this line the default close operation of the window would simply hide the window when the user clicks the close box leaving the program running even though nothing is visible on the screen </s>
<s> this brings up one of the diﬃculties of reusing the same panel class both in an applet and in a frame there are some things that a stand-alone application can do that an applet can’t do </s>
<s> terminating the program is one of those things </s>
<s> if an applet calls systemexit( ) it has no eﬀect except to generate an error nevertheless in spite of occasional minor diﬃculties many of the gui examples in this book will be written as subclasses of jpanel that can be used either in an applet or in a frame 623 basic html before you can actually use an applet that you have written you need to create a web page on which to place the applet </s>
<s> such pages are themselves written in a language called html ( hypertext markup language ) </s>
<s> an html document describes the contents of a page </s>
<s> a web browser interprets the html code to determine what to display on the page </s>
<s> the html code doesn’t look much like the resulting page that appears in the browser </s>
<s> the html document does contain all the text that appears on the page but that text is marked up” with commands that determine the structure and appearance of the text and determine what will appear on the page in addition to the text html has become a rather complicated language and it is only one of the languages that you need to be familiar with if you want to write sophisticated modern web pages </s>
<s> many aspects of the visual style of a page can be controlled using a language called css ( cascading style sheets ) </s>
<s> web pages can be dynamic and interactive and their behavior can be programmed using a programming language called javascript ( which is only very distantly related to java ) furthermore interactive web pages often work with programs that run on the web server which can be written in java or in several other languages </s>
<s> programming for the web has become very complicated indeed! nevertheless it’s fairly easy to write basic web pages using only plain html </s>
<s> in this section i will cover just the most basic aspects of the language </s>
<s> you can easily ﬁnd more information on the web if you want to learn more </s>
<s> although there are many web-authoring programs that make it possible to create web pages without ever looking at the underlying html code it is possible to write an html page using an ordinary text editor typing in all the mark-up commands by hand and it is worthwhile to learn how to create at least simple pages in this way there is a strict syntax for html documents ( although in practice web browsers will do their best to display a page even if it does not follow the syntax strictly ) </s>
<s> leaving out optional features an html document has the form <html> <head> <title> document-title </title> </head> <body> document-content 242 chapter 6 </s>
<s> introduction to gui programming </body> </html> the document-title is text that will appear in the title bar of the web browser window when the page is displayed </s>
<s> the document-content is what is displayed on the page itself </s>
<s> the rest of this section describes some of the things that can go into the document-content section of an html document ∗ ∗ ∗ the mark-up commands used by html are called tags </s>
<s> examples include <html> and <title> in the document outline given above </s>
<s> an html tag takes the form < tag-name optional-modifiers > where the tag-name is a word that speciﬁes the command and the optional-modiﬁers if present are used to provide additional information for the command ( much like parameters in subroutines ) </s>
<s> a modiﬁer takes the form modifier-name = value usually the value is enclosed in quotes and it must be if it is more than one word long or if it contains certain special characters </s>
<s> there are a few modiﬁers which have no value in which case only the name of the modiﬁer is present </s>
<s> html is case insensitive which means that you can use upper case and lower case letters interchangeably in tags and modiﬁers ( however lower case is generally used because xhtml a successor language to html requires lower case ) a simple example of a tag is <hr> which draws a line—also called a horizontal rule”— across the page </s>
<s> the hr tag can take several possible modiﬁers such as width and align </s>
<s> for example a horizontal line that extends halfway across the page could be generated with the tag <hr width=50%> the width here is speciﬁed as 50% of the available space meaning a line that extends halfway across the page </s>
<s> the width could also be given as a ﬁxed number of pixels many tags require matching closing tags which take the form </ tag-name > for example the <html> tag at the beginning of an html document must be matched by a closing </html> tag at the end of the document </s>
<s> as another example the tag <pre> must always have a matching closing tag </pre> later in the document </s>
<s> an opening/closing tag pair applies to everything that comes between the opening tag and the closing tag </s>
<s> the <pre> tag tells a web browser to display everything between the <pre> and the </pre> just as it is formatted in the original html source code including all the spaces and carriage returns ( but tags between <pre> and </pre> are still interpreted by the browser ) pre” stands for preformatted text </s>
<s> all of the sample programs in the on-line version of this book are formatted using the <pre> command it is important for you to understand that when you don’t use <pre> the computer will completely ignore the formatting of the text in the html source code </s>
<s> the only thing it pays attention to is the tags </s>
<s> five blank lines in the source code have no more eﬀect than one blank line or even a single blank space </s>
<s> outside of <pre> if you want to force a new line on the web page you can use the tag <br> which stands for break” </s>
<s> for example i might give my address as 243 62 </s>
<s> applets and html david eck<br> department of mathematics and computer science<br> hobart and william smith colleges<br> geneva ny 14456<br> if you want extra vertical space in your web page you can use several <br>’s in a row similarly you need a tag to indicate how the text should be broken up into paragraphs this is done with the <p> tag which should be placed at the beginning of every paragraph the <p> tag has a matching </p> which should be placed at the end of each paragraph </s>
<s> the closing </p> is technically optional but it is considered good form to use it </s>
<s> if you want all the lines of the paragraph to be shoved over to the right you can use <p align=right> instead of <p> ( this is mostly useful when used with one short line or when used with <br> to make several short lines ) you can also use <p align=center> for centered lines by the way if tags like <p> and <hr> have special meanings in html you might wonder how to get them to appear literally on a web page </s>
<s> to get certain special characters to appear on the page you have to use an entity name in the html source code </s>
<s> the entity name for < is &lt and the entity name for > is &gt </s>
<s> entity names begin with & and end with a semicolon </s>
<s> the character & is itself a special character whose entity name is &amp </s>
<s> there are also entity names for nonstandard characters such as an accented e” which has the entity name &eacute and the greek letter π which is written as &pi there are several useful tags that change the appearance of text </s>
<s> to get italic text enclose the text between <i> and </i> </s>
<s> for example <i>introduction to programming using java</i> in an html document gives introduction to programming using java in italics when the document is displayed as a web page </s>
<s> the tags <b> <u> and <tt> can be used in a similar way for bold underlined and typewriter-style ( monospace” ) text a headline with very large text can be made by placing the text between <h1> and </h1> headlines with smaller text can be made using <h2> or <h3> instead of <h1> </s>
<s> note that these headline tags stand on their own they are not used inside paragraphs </s>
<s> you can add the modiﬁer align=center to center the headline and you can right-justify it with align=right </s>
<s> you can include break tags ( <br> ) in a headline to break it up into multiple lines </s>
<s> for example the following html code will produce a medium–sized centered two-line headline <h2 align=center>chapter 6<br>introduction to gui programming</h2> ∗ ∗ ∗ the most distinctive feature of html is that documents can contain links to other documents </s>
<s> the user can follow links from page to page and in the process visit pages from all over the internet the <a> tag is used to create a link </s>
<s> the text between the <a> and its matching </a> appears on the page as the text of the link the user can follow the link by clicking on this text </s>
<s> the <a> tag uses the modiﬁer href to say which document the link should connect to the value for href must be a url ( uniform resource locator ) </s>
<s> a url is a coded set of instructions for ﬁnding a document on the internet </s>
<s> for example the url for my own home page” is http//mathhwsedu/eck/ to make a link to this page i would use the html source code <a href=http//mathhwsedu/eck/>david’s home page</a> 244 chapter 6 </s>
<s> introduction to gui programming the best place to ﬁnd urls is on existing web pages </s>
<s> web browsers display the url for the page you are currently viewing and many browsers will display the url of a link if you point to the link with the mouse if you are writing an html document and you want to make a link to another document that is in the same directory you can use a relative url </s>
<s> the relative url consists of just the name of the ﬁle </s>
<s> for example to create a link to a ﬁle named s1html” in the same directory as the html document that you are writing you could use <a href=s1html>section 1</a> there are also relative urls for linking to ﬁles that are in other directories </s>
<s> using relative urls is a good idea since if you use them you can move a whole collection of ﬁles without changing any of the links between them ( as long as you don’t change the relative locations of the ﬁles ) when you type a url into a web browser you can omit the http//” at the beginning of the url </s>
<s> however in an <a> tag in an html document the http//” can only be omitted if the url is a relative url </s>
<s> for a normal url it is required ∗ ∗ ∗ you can add images to a web page with the <img> tag ( this is a tag that has no matching closing tag ) the actual image must be stored in a separate ﬁle from the html document the <img> tag has a required modiﬁer named src to specify the url of the image ﬁle </s>
<s> for most browsers the image should be in one of the formats png ( with a ﬁle name ending in png” ) jpeg ( with a ﬁle name ending in jpeg” or jpg” ) or gif ( with a ﬁle name ending in gif” ) </s>
<s> usually the image is stored in the same place as the html document and a relative url—that is just the name of the ﬁle—is used to specify the image ﬁle the <img> tag also has several optional modiﬁers </s>
<s> it’s a good idea to always include the height and width modiﬁers which specify the size of the image in pixels </s>
<s> some browsers handle images better if they know in advance how big they are </s>
<s> the align modiﬁer can be used to aﬀect the placement of the image align=right” will shove the image to the right edge of the page and the text on the page will ﬂow around the image align=left” works similarly ( unfortunately align=center” doesn’t have the meaning you would expect </s>
<s> browsers treat images as if they are just big characters </s>
<s> images can occur inside paragraphs links and headings for example </s>
<s> alignment values of center top and bottom are used to specify how the image should line up with other characters in a line of text should the baseline of the text be at the center the top or the bottom of the image alignment values of right and left were added to html later but they are the most useful values </s>
<s> if you want an image centered on the page put it inside a <p align=center> tag ) for example here is html code that will place an image from a ﬁle named ﬁgure1png on the page <img src=figure1png align=right height=150 width=100> the image is 100 pixels wide and 150 pixels high and it will appear on the right edge of the page 624 applets on web pages the main point of this whole discussion of html is to learn how to use applets on the web the <applet> tag can be used to add a java applet to a web page </s>
<s> this tag must have a matching </applet> </s>
<s> a required modiﬁer named code gives the name of the compiled class 245 62 </s>
<s> applets and html ﬁle that contains the applet class </s>
<s> the modiﬁers height and width are required to specify the size of the applet in pixels </s>
<s> if you want the applet to be centered on the page you can put the applet in a paragraph with center alignment </s>
<s> so an applet tag to display an applet named helloworldapplet centered on a web page would look like this <p align=center> <applet code=helloworldappletclass height=100 width=250> </applet> </p> this assumes that the ﬁle helloworldappletclass is located in the same directory with the html document </s>
<s> if this is not the case you can use another modiﬁer codebase to give the url of the directory that contains the class ﬁle </s>
<s> the value of code itself is always just a class not a url if the applet uses other classes in addition to the applet class itself then those class ﬁles must be in the same directory as the applet class ( always assuming that your classes are all in the default package” see subsection 264 if not they must be in subdirectories ) </s>
<s> if an applet requires more than one or two class ﬁles it’s a good idea to collect all the class ﬁles into a single jar ﬁle </s>
<s> jar ﬁles are archive ﬁles” which hold a number of smaller ﬁles </s>
<s> if your class ﬁles are in a jar archive then you have to specify the name of the jar ﬁle in an archive modiﬁer in the <applet> tag as in <applet code=helloworldappletclass archive=helloworldjar height=50 i will have more to say about creating and using jar ﬁles at the end of this chapter applets can use applet parameters to customize their behavior </s>
<s> applet parameters are speciﬁed by using <param> tags which can only occur between an <applet> tag and the closing </applet> </s>
<s> the param tag has required modiﬁers named name and value and it takes the form <param name= param-name value= param-value > the parameters are available to the applet when it runs </s>
<s> an applet uses the predeﬁned method getparameter( ) to check for parameters speciﬁed in param tags </s>
<s> the getparameter( ) method has the following interface string getparameter( string paramname ) the parameter paramname corresponds to the param-name in a param tag </s>
<s> if the speciﬁed paramname actually occurs in one of the param tags then getparameter( paramname ) returns the associated param-value </s>
<s> if the speciﬁed paramname does not occur in any param tag then getparameter( paramname ) returns the value null </s>
<s> parameter names are case-sensitive so you cannot use size” in the param tag and ask for size” in getparameter </s>
<s> the getparameter( ) method is often called in the applet’s init( ) method </s>
<s> it will not work correctly in the applet’s constructor since it depends on information about the applet’s environment that is not available when the constructor is called here is an example of an applet tag with several params <applet code=showmessageclass width=200 height=50> <param name=message value=goodbye world!> <param name=font value=serif> <param name=size value=36> </applet> 246 chapter 6 </s>
<s> introduction to gui programming the showmessage applet would presumably read these parameters in its init( ) method which could go something like this string message // instance variable message to be displayed string fontname // instance variable font to use for display int fontsize // instance variable size of the display font public void init( ) { string value value = getparameter( message ) // get message param if any if ( value == null ) message = hello world! // default value if no param is present else message = value // value from param tag value = getparameter( font ) if ( value == null ) fontname = sansserif // default value if no param is present else fontname = value value = getparameter( size ) try { fontsize = integerparseint( value ) // convert string to number } catch ( numberformatexception e ) { fontsize = 20 // default value if no param is present or if } // the parameter value is not a legal integer elsewhere in the applet the instance variables message fontname and fontsize would be used to determine the message displayed by the applet and the appearance of that message note that the value returned by getparameter( ) is always a string </s>
<s> if the param represents a numerical value the string must be converted into a number as is done here for the size parameter 63 graphics and painting everything you see on a computer screen has to be drawn there even the text </s>
<s> the java api includes a range of classes and methods that are devoted to drawing </s>
<s> in this section i’ll look at some of the most basic of these the physical structure of a gui is built of components </s>
<s> the term component refers to a visual element in a gui including buttons menus text-input boxes scroll bars check boxes and so on </s>
<s> in java gui components are represented by objects belonging to subclasses of the class javaawtcomponent </s>
<s> most components in the swing gui—although not top-level components like japplet and jframe—belong to subclasses of the class javaxswingjcomponent which is itself a subclass of javaawtcomponent </s>
<s> every component is responsible for drawing itself </s>
<s> if you want to use a standard component you only have to add it to your applet or frame you don’t have to worry about painting it on the screen </s>
<s> that will happen automatically since it already knows how to draw itself sometimes however you do want to draw on a component </s>
<s> you will have to do this whenever you want to display something that is not included among the standard pre-deﬁned 247 63 </s>
<s> graphics and painting component classes </s>
<s> when you want to do this you have to deﬁne your own component class and provide a method in that class for drawing the component </s>
<s> i will always use a subclass of jpanel when i need a drawing surface of this kind as i did for the messagedisplay class in the example helloworldappletjava in the previous section </s>
<s> a jpanel like any jcomponent draws its content in the method public void paintcomponent( graphics g ) to create a drawing surface you should deﬁne a subclass of jpanel and provide a custom paintcomponent( ) method </s>
<s> create an object belonging to this class and use it in your applet or frame </s>
<s> when the time comes for your component to be drawn on the screen the system will call its paintcomponent( ) to do the drawing </s>
<s> that is the code that you put into the paintcomponent( ) method will be executed whenever the panel needs to be drawn on the screen by writing this method you determine the picture that will be displayed in the panel note that the paintcomponent( ) method has a parameter of type graphics </s>
<s> the graphics object will be provided by the system when it calls your method </s>
<s> you need this object to do the actual drawing </s>
<s> to do any drawing at all in java you need a graphics context </s>
<s> a graphics context is an object belonging to the class javaawtgraphics </s>
<s> instance methods are provided in this class for drawing shapes text and images </s>
<s> any given graphics object can draw to only one location </s>
<s> in this chapter that location will always be a gui component belonging to some subclass of jpanel </s>
<s> the graphics class is an abstract class which means that it is impossible to create a graphics context directly with a constructor </s>
<s> there are actually two ways to get a graphics context for drawing on a component first of all of course when the paintcomponent( ) method of a component is called by the system the parameter to that method is a graphics context for drawing on the component </s>
<s> second every component has an instance method called getgraphics( ) </s>
<s> this method is a function that returns a graphics context that can be used for drawing on the component outside its paintcomponent( ) method the oﬃcial line is that you should not do this and i will almost always avoid it </s>
<s> but i have found it convenient to use getgraphics( ) in a few examples the paintcomponent( ) method in the jpanel class simply ﬁlls the panel with the panel’s background color </s>
<s> when deﬁning a subclass of jpanel for use as a drawing surface you will usually want to ﬁll the panel with the background color before drawing other content onto the panel ( although it is not necessary to do this if the drawing commands in the method cover the background of the component completely ) </s>
<s> this is traditionally done with a call to superpaintcomponent( g ) so most paintcomponent( ) methods that you write will have the form public void paintcomponent( g ) { superpaintcomponent( g ) // draw the content of the component } ∗ ∗ ∗ most components do in fact do all drawing operations in their paintcomponent( ) methods what happens if in the middle of some other method you realize that the content of the component needs to be changed you should not call paintcomponent( ) directly to make the change this method is meant to be called only by the system </s>
<s> instead you have to inform the system that the component needs to be redrawn and let the system do its job by calling paintcomponent( ) </s>
<s> you do this by calling the component’s repaint( ) method </s>
<s> the method public void repaint( ) 248 chapter 6 </s>
<s> introduction to gui programming is deﬁned in the component class and so can be used with any component </s>
<s> you should call repaint( ) to inform the system that the component needs to be redrawn </s>
<s> it is important to understand that the repaint( ) method returns immediately without doing any painting itself the system will call the component’s paintcomponent( ) method later as soon as it gets a chance to do so after processing other pending events if there are any note that the system can also call paintcomponent( ) for other reasons </s>
<s> it is called when the component ﬁrst appears on the screen </s>
<s> it will also be called if the size of the component changes which can happen when the user resizes the window that contains the component </s>
<s> in versions of java earlier than java 6 paintcomponent( ) is also called if the component is covered up and then uncovered since the system did not automatically save a copy of the content ( and even in java 6 the content is not automatically saved if is drawn with a graphics context created by getgraphics( ) as i will do in some examples ) in any case paintcomponent( ) should be capable of redrawing the content of the component on demand </s>
<s> as you will see however some of our early examples will not be able to do this correctly this means that to work properly the paintcomponent( ) method must be smart enough to correctly redraw the component at any time </s>
<s> to make this possible a program should store data in its instance variables about the state of the component </s>
<s> these variables should contain all the information necessary to redraw the component completely </s>
<s> the paintcomponent( ) method should use the data in these variables to decide what to draw </s>
<s> when the program wants to change the content of the component it should not simply draw the new content </s>
<s> it should change the values of the relevant variables and call repaint( ) </s>
<s> when the system calls paintcomponent( ) that method will use the new values of the variables and will draw the component with the desired modiﬁcations </s>
<s> this might seem a roundabout way of doing things why not just draw the modiﬁcations directly there are at least two reasons </s>
<s> first of all it really does turn out to be easier to get things right if all drawing is done in one method </s>
<s> second even if you do make modiﬁcations directly you still have to make the paintcomponent( ) method aware of them in some way so that it will be able to redraw the component correctly on demand you will see how all this works in practice as we work through examples in the rest of this chapter </s>
<s> for now we will spend the rest of this section looking at how to get some actual drawing done 631 coordinates the screen of a computer is a grid of little squares called pixels </s>
<s> the color of each pixel can be set individually and drawing on the screen just means setting the colors of individual pixels x=0 y=0 y = height x = width 63 </s>
<s> graphics and painting 249 a graphics context draws in a rectangle made up of pixels </s>
<s> a position in the rectangle is speciﬁed by a pair of integer coordinates ( xy ) </s>
<s> the upper left corner has coordinates ( 00 ) </s>
<s> the x coordinate increases from left to right and the y coordinate increases from top to bottom </s>
<s> the illustration shows a 16-by-10 pixel component ( with very large pixels ) </s>
<s> a small line rectangle and oval are shown as they would be drawn by coloring individual pixels ( note that properly speaking the coordinates don’t belong to the pixels but to the grid lines between them ) for any component you can ﬁnd out the size of the rectangle that it occupies by calling the instance methods getwidth( ) and getheight( ) which return the number of pixels in the horizontal and vertical directions respectively </s>
<s> in general it’s not a good idea to assume that you know the size of a component since the size is often set by a layout manager and can even change if the component is in a window and that window is resized by the user </s>
<s> this means that it’s good form to check the size of a component before doing any drawing on that component </s>
<s> for example you can use a paintcomponent( ) method that looks like public void paintcomponent( graphics g ) { superpaintcomponent( g ) int width = getwidth( ) // find out the width of this component int height = getheight( ) // find out its height // draw the content of the component } of course your drawing commands will have to take the size into account </s>
<s> that is they will have to use ( xy ) coordinates that are calculated based on the actual height and width of the component 632 colors you will probably want to use some color when you draw </s>
<s> java is designed to work with the rgb color system </s>
<s> an rgb color is speciﬁed by three numbers that give the level of red green and blue respectively in the color </s>
<s> a color in java is an object of the class javaawtcolor </s>
<s> you can construct a new color by specifying its red blue and green components </s>
<s> for example color mycolor = new color( rgb ) there are two constructors that you can call in this way </s>
<s> in the one that i almost always use r g and b are integers in the range 0 to 255 </s>
<s> in the other they are numbers of type ﬂoat in the range 00f to 10f ( recall that a literal of type ﬂoat is written with an f” to distinguish it from a double number ) often you can avoid constructing new colors altogether since the color class deﬁnes several named constants representing common colors colorwhite colorblack colorred colorgreen colorblue colorcyan colormagenta coloryellow colorpink colororange colorlight gray colorgray and colordark gray ( there are older alternative names for these constants that use lower case rather than upper case constants such as colorred instead of colorred but the upper case versions are preferred because they follow the convention that constant names should be upper case ) an alternative to rgb is the hsb color system </s>
<s> in the hsb system a color is speciﬁed by three numbers called the hue the saturation and the brightness </s>
<s> the hue is the basic color ranging from red through orange through all the other colors of the rainbow </s>
<s> the brightness is pretty much what it sounds like </s>
<s> a fully saturated color is a pure color tone </s>
<s> decreasing the 250 chapter 6 </s>
<s> introduction to gui programming saturation is like mixing white or gray paint into the pure color </s>
<s> in java the hue saturation and brightness are always speciﬁed by values of type ﬂoat in the range from 00f to 10f </s>
<s> the color class has a static member function named gethsbcolor for creating hsb colors </s>
<s> to create the color with hsb values given by h s and b you can say color mycolor = colorgethsbcolor( hsb ) for example to make a color with a random hue that is as bright and as saturated as possible you could use color randomcolor = colorgethsbcolor( ( float )mathrandom( ) 10f 10f ) the type cast is necessary because the value returned by mathrandom( ) is of type double and colorgethsbcolor( ) requires values of type ﬂoat ( by the way you might ask why rgb colors are created using a constructor while hsb colors are created using a static member function </s>
<s> the problem is that we would need two diﬀerent constructors both of them with three parameters of type ﬂoat </s>
<s> unfortunately this is impossible </s>
<s> you can have two constructors only if the number of parameters or the parameter types diﬀer ) the rgb system and the hsb system are just diﬀerent ways of describing the same set of colors </s>
<s> it is possible to translate between one system and the other </s>
<s> the best way to understand the color systems is to experiment with them </s>
<s> in the on-line version of this section you will ﬁnd an applet that you can use to experiment with rgb and hsb colors one of the properties of a graphics object is the current drawing color which is used for all drawing of shapes and text </s>
<s> if g is a graphics context you can change the current drawing color for g using the method gsetcolor( c ) where c is a color </s>
<s> for example if you want to draw in green you would just say gsetcolor( colorgreen ) before doing the drawing the graphics context continues to use the color until you explicitly change it with another setcolor( ) command </s>
<s> if you want to know what the current drawing color is you can call the function ggetcolor( ) which returns an object of type color </s>
<s> this can be useful if you want to change to another drawing color temporarily and then restore the previous drawing color every component has an associated foreground color and background color </s>
<s> generally the component is ﬁlled with the background color before anything else is drawn ( although some components are transparent” meaning that the background color is ignored ) </s>
<s> when a new graphics context is created for a component the current drawing color is set to the foreground color </s>
<s> note that the foreground color and background color are properties of the component not of a graphics context the foreground and background colors can be set by instance methods setforeground( c ) and setbackground( c ) which are deﬁned in the component class and therefore are available for use with any component </s>
<s> this can be useful even for standard components if you want them to use colors that are diﬀerent from the defaults 633 fonts a font represents a particular size and style of text </s>
<s> the same character will appear diﬀerent in diﬀerent fonts </s>
<s> in java a font is characterized by a font name a style and a size </s>
<s> the available font names are system dependent but you can always use the following four strings as font names serif” sansserif” monospaced” and dialog” ( a serif” is a little decoration on a character such as a short horizontal line at the bottom of the letter i sansserif” means without serifs” monospaced” means that all the characters in the font have the same width the dialog” font is the one that is typically used in dialog boxes ) 63 </s>
<s> graphics and painting 251 the style of a font is speciﬁed using named constants that are deﬁned in the font class you can specify the style as one of the four values • fontplain • fontitalic • fontbold or • fontbold + fontitalic the size of a font is an integer </s>
<s> size typically ranges from about 10 to 36 although larger sizes can also be used </s>
<s> the size of a font is usually about equal to the height of the largest characters in the font in pixels but this is not an exact rule </s>
<s> the size of the default font is 12 java uses the class named javaawtfont for representing fonts </s>
<s> you can construct a new font by specifying its font name style and size in a constructor font plainfont = new font( serif fontplain 12 ) font bigboldfont = new font( sansserif fontbold 24 ) every graphics context has a current font which is used for drawing text </s>
<s> you can change the current font with the setfont( ) method </s>
<s> for example if g is a graphics context and bigboldfont is a font then the command gsetfont( bigboldfont ) will set the current font of g to bigboldfont </s>
<s> the new font will be used for any text that is drawn after the setfont( ) command is given </s>
<s> you can ﬁnd out the current font of g by calling the method ggetfont( ) which returns an object of type font every component has an associated font </s>
<s> it can be set with the instance method setfont( font ) which is deﬁned in the component class </s>
<s> when a graphics context is created for drawing on a component the graphic context’s current font is set equal to the font of the component 634 shapes the graphics class includes a large number of instance methods for drawing various shapes such as lines rectangles and ovals </s>
<s> the shapes are speciﬁed using the ( xy ) coordinate system described above </s>
<s> they are drawn in the current drawing color of the graphics context </s>
<s> the current drawing color is set to the foreground color of the component when the graphics context is created but it can be changed at any time using the setcolor( ) method here is a list of some of the most important drawing methods </s>
<s> with all these commands any drawing that is done outside the boundaries of the component is ignored </s>
<s> note that all these methods are in the graphics class so they all must be called through an object of type graphics • drawstring( string str int x int y ) — draws the text given by the string str the string is drawn using the current color and font of the graphics context x speciﬁes the position of the left end of the string y is the y-coordinate of the baseline of the string </s>
<s> the baseline is a horizontal line on which the characters rest </s>
<s> some parts of the characters such as the tail on a y or g extend below the baseline • drawline( int x1 int y1 int x2 int y2 ) — draws a line from the point ( x1y1 ) to the point ( x2y2 ) </s>
<s> the line is drawn as if with a pen that hangs one pixel to the right and one pixel down from the ( xy ) point where the pen is located </s>
<s> for example if g refers to an object of type graphics then the command gdrawline( xyxy ) which 252 chapter 6 </s>
<s> introduction to gui programming corresponds to putting the pen down at a point colors the single pixel with upper left corner at the point ( xy ) • drawrect( int x int y int width int height ) — draws the outline of a rectangle the upper left corner is at ( xy ) and the width and height of the rectangle are as speciﬁed </s>
<s> if width equals height then the rectangle is a square </s>
<s> if the width or the height is negative then nothing is drawn </s>
<s> the rectangle is drawn with the same pen that is used for drawline( ) </s>
<s> this means that the actual width of the rectangle as drawn is width+1 and similarly for the height </s>
<s> there is an extra pixel along the right edge and the bottom edge </s>
<s> for example if you want to draw a rectangle around the edges of the component you can say gdrawrect( 0 0 getwidth( )-1 getheight( )-1 )” where g is a graphics context for the component </s>
<s> if you use gdrawrect( 0 0 getwidth( ) getheight( ) )” then the right and bottom edges of the rectangle will be drawn outside the component and will not appear on the screen • drawoval( int x int y int width int height ) — draws the outline of an oval the oval is one that just ﬁts inside the rectangle speciﬁed by x y width and height </s>
<s> if width equals height the oval is a circle • drawroundrect( int x int y int width int height int xdiam int ydiam ) — draws the outline of a rectangle with rounded corners </s>
<s> the basic rectangle is speciﬁed by x y width and height but the corners are rounded </s>
<s> the degree of rounding is given by xdiam and ydiam </s>
<s> the corners are arcs of an ellipse with horizontal diameter xdiam and vertical diameter ydiam </s>
<s> a typical value for xdiam and ydiam is 16 but the value used should really depend on how big the rectangle is • draw3drect( int x int y int width int height boolean raised ) — draws the outline of a rectangle that is supposed to have a three-dimensional eﬀect as if it is raised from the screen or pushed into the screen </s>
<s> the basic rectangle is speciﬁed by x y width and height </s>
<s> the raised parameter tells whether the rectangle seems to be raised from the screen or pushed into it </s>
<s> the 3d eﬀect is achieved by using brighter and darker versions of the drawing color for diﬀerent edges of the rectangle </s>
<s> the documentation recommends setting the drawing color equal to the background color before using this method </s>
<s> the eﬀect won’t work well for some colors • drawarc( int x int y int width int height int startangle int arcangle ) — draws part of the oval that just ﬁts inside the rectangle speciﬁed by x y width and height </s>
<s> the part drawn is an arc that extends arcangle degrees from a starting angle at startangle degrees </s>
<s> angles are measured with 0 degrees at the 3 o’clock position ( the positive direction of the horizontal axis ) </s>
<s> positive angles are measured counterclockwise from zero and negative angles are measured clockwise </s>
<s> to get an arc of a circle make sure that width is equal to height • fillrect( int x int y int width int height ) — draws a ﬁlled-in rectangle </s>
<s> this ﬁlls in the interior of the rectangle that would be drawn by drawrect( xywidthheight ) the extra pixel along the bottom and right edges is not included </s>
<s> the width and height parameters give the exact width and height of the rectangle </s>
<s> for example if you wanted to ﬁll in the entire component you could say gfillrect( 0 0 getwidth( ) getheight( ) )” • filloval( int x int y int width int height ) — draws a ﬁlled-in oval • fillroundrect( int x int y int width int height int xdiam int ydiam ) — draws a ﬁlled-in rounded rectangle 63 </s>
<s> graphics and painting 253 • fill3drect( int x int y int width int height boolean raised ) — draws a ﬁlled-in three-dimensional rectangle • fillarc( int x int y int width int height int startangle int arcangle ) — draw a ﬁlled-in arc </s>
<s> this looks like a wedge of pie whose crust is the arc that would be drawn by the drawarc method 635 graphics2d all drawing in java is done through an object of type graphics </s>
<s> the graphics class provides basic commands for such things as drawing shapes and text and for selecting a drawing color these commands are adequate in many cases but they fall far short of what’s needed in a serious computer graphics program </s>
<s> java has another class graphics2d that provides a larger set of drawing operations </s>
<s> graphics2d is a sub-class of graphics so all the methods from the graphics class are also available in a graphics2d the paintcomponent( ) method of a jcomponent gives you a graphics context of type graphics that you can use for drawing on the component </s>
<s> in fact the graphics context actually belongs to the sub-class graphics2d ( in java version 12 and later ) and can be type-cast to gain access to the advanced graphics2d drawing methods public void paintcomponent( graphics g ) { superpaintcomponent( g ) graphics2d g2 g2 = ( graphics2d )g // draw on the component using g2 } drawing in graphics2d is based on shapes which are objects that implement an interface named shape </s>
<s> shape classes include line2d rectangle2d ellipse2d arc2d and generalpath among others all these classes are deﬁned in the package javaawtgeom </s>
<s> graphics2d has methods draw( shape ) and fill( shape ) for drawing the outline of a shape and for ﬁlling its interior </s>
<s> advanced capabilities include lines that are more than one pixel thick dotted and dashed lines ﬁlling a shape with a texture ( that is with a repeated image ) ﬁlling a shape with a gradient and so-called anti-aliased” drawing ( which cuts down on the jagged appearance along a slanted line or curve ) in the graphics class coordinates are speciﬁed as integers and are based on pixels </s>
<s> the shapes that are used with graphics2d use real numbers for coordinates and they are not necessarily bound to pixels </s>
<s> in fact you can change the coordinate system and use any coordinates that are convenient to your application </s>
<s> in computer graphics terms you can apply a transformation” to the coordinate system </s>
<s> the transformation can be any combination of translation scaling and rotation i mention graphics2d here for completeness </s>
<s> i will not use any of the advanced capabilities of graphics2d in this chapter but i will cover a few of them in section 132 636 an example et’s use some of the material covered in this section to write a subclass of jpanel for use as a drawing surface </s>
<s> the panel can then be used in either an applet or a frame as discussed in 254 chapter 6 </s>
<s> introduction to gui programming subsection 622 </s>
<s> all the drawing will be done in the paintcomponent( ) method of the panel class </s>
<s> the panel will draw multiple copies of a message on a black background </s>
<s> each copy of the message is in a random color </s>
<s> five diﬀerent fonts are used with diﬀerent sizes and styles the message can be speciﬁed in the constructor if the default constructor is used the message is the string java!” </s>
<s> the panel works ok no matter what its size </s>
<s> here is what the panel looks like there is one problem with the way this class works </s>
<s> when the panel’s paintcomponent( ) method is called it chooses random colors fonts and locations for the messages </s>
<s> the information about which colors fonts and locations are used is not stored anywhere </s>
<s> the next time paintcomponent( ) is called it will make diﬀerent random choices and will draw a diﬀerent picture </s>
<s> a better approach would be to compute the contents of the picture elsewhere outside the paintcomponent( ) method </s>
<s> information about the picture would be stored in instance variables and the paintcomponent( ) method would use that information to draw the picture if paintcomponent( ) is called twice it should draw the same picture twice unless the data has changed in the meantime </s>
<s> unfortunately to store the data for the picture in this applet we would need to use either arrays which will not be covered until chapter 7 or oﬀ-screen images which will not be covered until chapter 13 </s>
<s> other examples in this chapter will suﬀer from the same problem the source for the panel class is shown below </s>
<s> i use an instance variable called message to hold the message that the panel will display </s>
<s> there are ﬁve instance variables of type font that represent diﬀerent sizes and styles of text </s>
<s> these variables are initialized in the constructor and are used in the paintcomponent( ) method the paintcomponent( ) method for the panel simply draws 25 copies of the message </s>
<s> for each copy it chooses one of the ﬁve fonts at random and it calls gsetfont( ) to select that font for drawing the text </s>
<s> it creates a random hsb color and uses gsetcolor( ) to select that color for drawing </s>
<s> it then chooses random ( xy ) coordinates for the location of the message the x coordinate gives the horizontal position of the left end of the string </s>
<s> the formula used for the x coordinate -50 + ( int )( mathrandom( ) * ( width+40 ) )” gives a random integer in the range from -50 to width-10 </s>
<s> this makes it possible for the string to extend beyond the left edge or the right edge of the panel </s>
<s> similarly the formula for y allows the string to extend beyond the top and bottom of the applet here is the complete source code for the randomstringspanel import import import import javaawtcolor javaawtfont javaawtgraphics javaxswingjpanel 255 63 </s>
<s> graphics and painting /** * this panel displays 25 copies of a message </s>
<s> the color and * position of each message is selected at random </s>
<s> the font * of each message is randomly chosen from among five possible * fonts </s>
<s> the messages are displayed on a black background * <p>note the style of drawing used here is poor because every * time the paintcomponent( ) method is called new random values are * used </s>
<s> this means that a different picture will be drawn each time * <p>this panel is meant to be used as the content pane in * either an applet or a frame */ public class randomstringspanel extends jpanel { private string message // the message to be displayed </s>
<s> this can be set in // the constructor </s>
<s> if no value is provided in the // constructor then the string java! is used private font font1 font2 font3 font4 font5 // the five fonts /** * default constructor creates a panel that displays the message java! */ public randomstringspanel( ) { this( null ) // call the other constructor with parameter null } /** * constructor creates a panel to display 25 copies of a specified message * @param messagestring the message to be displayed </s>
<s> if this is null * then the default message java! is displayed */ public randomstringspanel( string messagestring ) { message = messagestring if ( message == null ) message = java! font1 font2 font3 font4 font5 = = = = = new new new new new font( serif fontbold 14 ) font( sansserif fontbold + fontitalic 24 ) font( monospaced fontplain 30 ) font( dialog fontplain 36 ) font( serif fontitalic 48 ) setbackground( colorblack ) } /** * the paintcomponent method is responsible for drawing the content of the panel * it draws 25 copies of the message string using a random color font and * position for each string */ public void paintcomponent( graphics g ) { superpaintcomponent( g ) // call the paintcomponent method from the // superclass jpanel </s>
<s> this simply fills the // entire panel with the background color black 256 chapter 6 </s>
<s> introduction to gui programming int width = getwidth( ) int height = getheight( ) for ( int i = 0 i < 25 i++ ) { // draw one string </s>
<s> first set the font to be one of the five // available fonts at random int fontnum = ( int )( 5*mathrandom( ) ) + 1 switch ( fontnum ) { case 1 gsetfont( font1 ) break case 2 gsetfont( font2 ) break case 3 gsetfont( font3 ) break case 4 gsetfont( font4 ) break case 5 gsetfont( font5 ) break } // end switch // set the color to a bright saturated color with random hue float hue = ( float )mathrandom( ) gsetcolor( colorgethsbcolor( hue 10f 10f ) ) // select the position of the string at random int xy x = -50 + ( int )( mathrandom( )*( width+40 ) ) y = ( int )( mathrandom( )*( height+20 ) ) // draw the message gdrawstring( messagexy ) } // end for } // end paintcomponent( ) } // end class randomstringspanel this class deﬁnes a panel which is not something that can stand on its own </s>
<s> to see it on the screen we have to use it in an applet or a frame </s>
<s> here is a simple applet class that uses a randomstringspanel as its content pane import javaxswingjapplet /** * a randomstringsapplet displays 25 copies of a string using random colors * fonts and positions for the copies </s>
<s> the message can be specified as the * value of an applet param with name message if no param with name * message is present then the default message java! is displayed 64 </s>
<s> mouse events 257 * the actual content of the applet is an object of type randomstringspanel */ public class randomstringsapplet extends japplet { public void init( ) { string message = getparameter( message ) // if null java is used randomstringspanel content = new randomstringspanel( message ) setcontentpane( content ) } } note that the message to be displayed in the applet can be set using an applet parameter when the applet is added to an html document </s>
<s> using applets on web pages was discussed in subsection 624 </s>
<s> remember that to use the applet on a web page you must include both the panel class ﬁle randomstringspanelclass and the applet class ﬁle randomstringsappletclass in the same directory as the html document ( or alternatively bundle the two class ﬁles into a jar ﬁle and put the jar ﬁle in the document directory ) instead of writing an applet of course we could use the panel in the window of a standalone application </s>
<s> you can ﬁnd the source code for a main program that does this in the ﬁle randomstringsappjava 64 mouse events events are central to programming for a graphical user interface </s>
<s> a gui program doesn’t have a main( ) routine that outlines what will happen when the program is run in a step-by-step process from beginning to end </s>
<s> instead the program must be prepared to respond to various kinds of events that can happen at unpredictable times and in an order that the program doesn’t control </s>
<s> the most basic kinds of events are generated by the mouse and keyboard </s>
<s> the user can press any key on the keyboard move the mouse or press a button on the mouse </s>
<s> the user can do any of these things at any time and the computer has to respond appropriately in java events are represented by objects </s>
<s> when an event occurs the system collects all the information relevant to the event and constructs an object to contain that information diﬀerent types of events are represented by objects belonging to diﬀerent classes </s>
<s> for example when the user presses one of the buttons on a mouse an object belonging to a class called mouseevent is constructed </s>
<s> the object contains information such as the source of the event ( that is the component on which the user clicked ) the ( xy ) coordinates of the point in the component where the click occurred the exact time of the click and which button on the mouse was pressed </s>
<s> when the user presses a key on the keyboard a keyevent is created </s>
<s> after the event object is constructed it is passed as a parameter to a designated method </s>
<s> by writing that method the programmer says what should happen when the event occurs as a java programmer you get a fairly high-level view of events </s>
<s> there is a lot of processing that goes on between the time that the user presses a key or moves the mouse and the time that a subroutine in your program is called to respond to the event </s>
<s> fortunately you don’t need to know much about that processing </s>
<s> but you should understand this much even though your gui program doesn’t have a main( ) routine there is a sort of main routine running somewhere that executes a loop of the form while the program is still running wait for the next event to occur call a subroutine to handle the event 258 chapter 6 </s>
<s> introduction to gui programming this loop is called an event loop </s>
<s> every gui program has an event loop </s>
<s> in java you don’t have to write the loop </s>
<s> it’s part of the system” if you write a gui program in some other language you might have to provide a main routine that runs the event loop in this section we’ll look at handling mouse events in java and we’ll cover the framework for handling events in general </s>
<s> the next section will cover keyboard-related events and timer events </s>
<s> java also has other types of events which are produced by gui components </s>
<s> these will be introduced in section 66 641 event handling for an event to have any eﬀect a program must detect the event and react to it </s>
<s> in order to detect an event the program must listen” for it </s>
<s> listening for events is something that is done by an object called an event listener </s>
<s> an event listener object must contain instance methods for handling the events for which it listens </s>
<s> for example if an object is to serve as a listener for events of type mouseevent then it must contain the following method ( among several others ) public void mousepressed( mouseevent evt ) { } the body of the method deﬁnes how the object responds when it is notiﬁed that a mouse button has been pressed </s>
<s> the parameter evt contains information about the event </s>
<s> this information can be used by the listener object to determine its response the methods that are required in a mouse event listener are speciﬁed in an interface named mouselistener </s>
<s> to be used as a listener for mouse events an object must implement this mouselistener interface </s>
<s> java interfaces were covered in subsection 571 ( to review brieﬂy an interface in java is just a list of instance methods </s>
<s> a class can implement” an interface by doing two things </s>
<s> first the class must be declared to implement the interface as in class mousehandler implements mouselistener” or class myapplet extends japplet implements mouselistener” </s>
<s> second the class must include a deﬁnition for each instance method speciﬁed in the interface </s>
<s> an interface can be used as the type for a variable or formal parameter </s>
<s> we say that an object implements the mouselistener interface if it belongs to a class that implements the mouselistener interface </s>
<s> note that it is not enough for the object to include the speciﬁed methods </s>
<s> it must also belong to a class that is speciﬁcally declared to implement the interface ) many events in java are associated with gui components </s>
<s> for example when the user presses a button on the mouse the associated component is the one that the user clicked on before a listener object can hear” events associated with a given component the listener object must be registered with the component </s>
<s> if a mouselistener object mlistener needs to hear mouse events associated with a component object comp the listener must be registered with the component by calling compaddmouselistener( mlistener ) the addmouselistener( ) method is an instance method in class component and so can be used with any gui component object </s>
<s> in our ﬁrst few examples we will listen for events on a jpanel that is being used as a drawing surface the event classes such as mouseevent and the listener interfaces such as mouselistener are deﬁned in the package javaawtevent </s>
<s> this means that if you want to work with events you should either include the line import javaawtevent*” at the beginning of your source code ﬁle or import the individual classes and interfaces admittedly there is a large number of details to tend to when you want to use events </s>
<s> to summarize you must 64 </s>
<s> mouse events 259 1 </s>
<s> put the import speciﬁcation import javaawtevent*” ( or individual imports ) at the beginning of your source code 2 </s>
<s> declare that some class implements the appropriate listener interface such as mouselistener 3 </s>
<s> provide deﬁnitions in that class for the methods speciﬁed by the interface 4 </s>
<s> register the listener object with the component that will generate the events by calling a method such as addmouselistener( ) in the component any object can act as an event listener provided that it implements the appropriate interface </s>
<s> a component can listen for the events that it itself generates </s>
<s> a panel can listen for events from components that are contained in the panel </s>
<s> a special class can be created just for the purpose of deﬁning a listening object </s>
<s> many people consider it to be good form to use anonymous inner classes to deﬁne listening objects ( see subsection 573 ) </s>
<s> you will see all of these patterns in examples in this textbook 642 mouseevent and mouselistener the mouselistener interface speciﬁes ﬁve diﬀerent instance methods public public public public public void void void void void mousepressed( mouseevent evt ) mousereleased( mouseevent evt ) mouseclicked( mouseevent evt ) mouseentered( mouseevent evt ) mouseexited( mouseevent evt ) the mousepressed method is called as soon as the user presses down on one of the mouse buttons and mousereleased is called when the user releases a button </s>
<s> these are the two methods that are most commonly used but any mouse listener object must deﬁne all ﬁve methods you can leave the body of a method empty if you don’t want to deﬁne a response the mouseclicked method is called if the user presses a mouse button and then releases it without moving the mouse ( when the user does this all three routines—mousepressed mousereleased and mouseclicked—will be called in that order ) in most cases you should deﬁne mousepressed instead of mouseclicked </s>
<s> the mouseentered and mouseexited methods are called when the mouse cursor enters or leaves the component </s>
<s> for example if you want the component to change appearance whenever the user moves the mouse over the component you could deﬁne these two methods as a ﬁrst example we will look at a small addition to the randomstringspanel example from the previous section </s>
<s> in the new version the panel will repaint itself when the user clicks on it in order for this to happen a mouse listener should listen for mouse events on the panel and when the listener detects a mousepressed event it should respond by calling the repaint( ) method of the panel for the new version of the program we need an object that implements the mouselistener interface </s>
<s> one way to create the object is to deﬁne a separate class such as import javaawtcomponent import javaawtevent* /** * an object of type repaintonclick is a mouselistener that * will respond to a mousepressed event by calling the repaint( ) * method of the source of the event </s>
<s> that is a repaintonclick 260 chapter 6 </s>
<s> introduction to gui programming * object can be added as a mouse listener to any component * when the user clicks that component the component will be * repainted */ public class repaintonclick implements mouselistener { public void mousepressed( mouseevent evt ) { component source = ( component )evtgetsource( ) sourcerepaint( ) // call repaint( ) on the component that was clicked } public public public public void void void void mouseclicked( mouseevent evt ) { } mousereleased( mouseevent evt ) { } mouseentered( mouseevent evt ) { } mouseexited( mouseevent evt ) { } } this class does three of the four things that we need to do in order to handle mouse events first it imports javaawtevent* for easy access to event-related classes </s>
<s> second it is declared that the class implements mouselistener” </s>
<s> and third it provides deﬁnitions for the ﬁve methods that are speciﬁed in the mouselistener interface ( note that four of the ﬁve event-handling methods have empty deﬁnitions </s>
<s> we really only want to deﬁne a response to mousepressed events but in order to implement the mouselistener interface a class must deﬁne all ﬁve methods ) we must do one more thing to set up the event handling for this example we must register an event-handling object as a listener with the component that will generate the events </s>
<s> in this case the mouse events that we are interested in will be generated by an object of type randomstringspanel </s>
<s> if panel is a variable that refers to the panel object we can create a mouse listener object and register it with the panel with the statements repaintonclick listener = new repaintonclick( ) // create mouselistener object paneladdmouselistener( listener ) // register mouselistener with the panel once this is done the listener object will be notiﬁed of mouse events on the panel </s>
<s> when a mousepressed event occurs the mousepressed( ) method in the listener will be called </s>
<s> the code in this method calls the repaint( ) method in the component that is the source of the event that is in the panel </s>
<s> the result is that the randomstringspanel is repainted with its strings in new random colors fonts and positions although we have written the repaintonclick class for use with our randomstringspanel example the event-handling class contains no reference at all to the randomstringspanel class how can this be the mousepressed( ) method in class repaintonclick looks at the source of the event and calls its repaint( ) method </s>
<s> if we have registered the repaintonclick object as a listener on a randomstringspanel then it is that panel that is repainted </s>
<s> but the listener object could be used with any type of component and it would work in the same way similarly the randomstringspanel class contains no reference to the repaintonclick class— in fact randomstringspanel was written before we even knew anything about mouse events! the panel will send mouse events to any object that has registered with it as a mouse listener it does not need to know anything about that object except that it is capable of receiving mouse events the relationship between an object that generates an event and an object that responds to that event is rather loose </s>
<s> the relationship is set up by registering one object to listen for 261 64 </s>
<s> mouse events events from the other object </s>
<s> this is something that can potentially be done from outside both objects </s>
<s> each object can be developed independently with no knowledge of the internal operation of the other object </s>
<s> this is the essence of modular design build a complex system out of modules that interact only in straightforward easy to understand ways </s>
<s> then each module is a separate design problem that can be tackled independently </s>
<s> java’s event-handling framework is designed to oﬀer strong support for modular design to make this clearer consider the application version of the clickablerandomstrings program </s>
<s> i have included repaintonclick as a nested class although it could just as easily be a separate class </s>
<s> the main point is that this program uses the same randomstringspanel class that was used in the original program which did not respond to mouse clicks </s>
<s> the mouse handling has been bolted on” to an existing class without having to make any changes at all to that class import import import import javaawtcomponent javaawteventmouseevent javaawteventmouselistener javaxswingjframe /** * displays a window that shows 25 copies of the string java! in * random colors fonts and positions </s>
<s> the content of the window * is an object of type randomstringspanel </s>
<s> when the user clicks * the window the content of the window is repainted with the * strings in newly selected random colors fonts and positions */ public class clickablerandomstringsapp { public static void main( string[] args ) { jframe window = new jframe( random strings ) randomstringspanel content = new randomstringspanel( ) contentaddmouselistener( new repaintonclick( ) ) // register mouse listener windowsetcontentpane( content ) windowsetdefaultcloseoperation( jframeexit on close ) windowsetlocation( 10075 ) windowsetsize( 300240 ) windowsetvisible( true ) } private static class repaintonclick implements mouselistener { public void mousepressed( mouseevent evt ) { component source = ( component )evtgetsource( ) sourcerepaint( ) } public public public public } } void void void void mouseclicked( mouseevent evt ) { } mousereleased( mouseevent evt ) { } mouseentered( mouseevent evt ) { } mouseexited( mouseevent evt ) { } 262 643 chapter 6 </s>
<s> introduction to gui programming mouse coordinates often when a mouse event occurs you want to know the location of the mouse cursor </s>
<s> this information is available from the mouseevent parameter to the event-handling method which contains instance methods that return information about the event </s>
<s> if evt is the parameter then you can ﬁnd out the coordinates of the mouse cursor by calling evtgetx( ) and evtgety( ) </s>
<s> these methods return integers which give the x and y coordinates where the mouse cursor was positioned at the time when the event occurred </s>
<s> the coordinates are expressed in the coordinate system of the component that generated the event where the top left corner of the component is ( 00 ) the user can hold down certain modiﬁer keys while using the mouse </s>
<s> the possible modiﬁer keys include the shift key the control key the alt key ( called the option key on the mac ) and the meta key ( called the command or apple key on the mac ) </s>
<s> you might want to respond to a mouse event diﬀerently when the user is holding down a modiﬁer key </s>
<s> the booleanvalued instance methods evtisshiftdown( ) evtiscontroldown( ) evtisaltdown( ) and evtismetadown( ) can be called to test whether the modiﬁer keys are pressed you might also want to have diﬀerent responses depending on whether the user presses the left mouse button the middle mouse button or the right mouse button </s>
<s> now not every mouse has a middle button and a right button so java handles the information in a peculiar way </s>
<s> it treats pressing the right button as equivalent to holding down the meta key while pressing the left mouse button </s>
<s> that is if the right button is pressed then the instance method evtismetadown( ) will return true ( even if the meta key is not pressed ) </s>
<s> similarly pressing the middle mouse button is equivalent to holding down the alt key </s>
<s> in practice what this really means is that pressing the right mouse button under windows or linux is equivalent to holding down the command key while pressing the mouse button on the mac </s>
<s> a program tests for either of these by calling evtismetadown( ) as an example consider a jpanel that does the following clicking on the panel with the left mouse button will place a red rectangle on the panel at the point where the mouse was clicked clicking with the right mouse button ( or holding down the command key while clicking on a mac ) will place a blue oval on the applet </s>
<s> holding down the shift key while clicking will clear the panel by removing all the shapes that have been placed there are several ways to write this example </s>
<s> there could be a separate class to handle mouse events as in the previous example </s>
<s> however in this case i decided to let the panel itself respond to mouse events </s>
<s> any object can be a mouse listener as long as it implements the mouselistener interface </s>
<s> in this case the panel class implements the mouselistener interface so the object that represents the main panel of the program can be the mouse listener for the program </s>
<s> the constructor for the panel class contains the statement addmouselistener( this ) which is equivalent to saying thisaddmouselistener( this ) </s>
<s> now the ordinary way to register a mouse listener is to say xaddmouselistener( y ) where y is the listener and x is the component that will generate the mouse events </s>
<s> in the statement addmouselistener( this ) both roles are played by this that is this object” ( the panel ) is generating mouse events and is also listening for those events </s>
<s> although this might seem a little strange you should get used to seeing things like this </s>
<s> in a large program however it’s usually a better idea to write a separate class to do the listening in order to have a more organized division of responsibilities the source code for the panel class is shown below </s>
<s> you should check how the instance methods in the mouseevent object are used </s>
<s> you can also check for the four steps of event 263 64 </s>
<s> mouse events handling ( import javaawtevent*” implements mouselistener” deﬁnitions for the event-handling methods and addmouselistener” ) import javaawt* import javaawtevent* import javaxswing* /** * a simple demonstration of mouseevents </s>
<s> shapes are drawn * on a black background when the user clicks the panel </s>
<s> if * the user shift-clicks the applet is cleared </s>
<s> if the user * right-clicks the applet a blue oval is drawn </s>
<s> otherwise * when the user clicks a red rectangle is drawn </s>
<s> the contents of * the panel are not persistent </s>
<s> for example they might disappear * if the panel is resized or is covered and uncovered */ public class simplestamperpanel extends jpanel implements mouselistener { /** * this constructor simply sets the background color of the panel to be black * and sets the panel to listen for mouse events on itself */ public simplestamperpanel( ) { setbackground( colorblack ) addmouselistener( this ) } /** * since this panel has been set to listen for mouse events on itself * this method will be called when the user clicks the mouse on the panel * this method is part of the mouselistener interface */ public void mousepressed( mouseevent evt ) { if ( evtisshiftdown( ) ) { // the user was holding down the shift key </s>
<s> just repaint the panel // since this class does not define a paintcomponent( ) method the // method from the superclass jpanel is called </s>
<s> that method simply // fills the panel with its background color which is black </s>
<s> the // effect is to clear the panel repaint( ) return } int x = evtgetx( ) int y = evtgety( ) // x-coordinate where user clicked // y-coordinate where user clicked graphics g = getgraphics( ) // graphics context for drawing directly // note this is considered to be bad style! if ( evtismetadown( ) ) { // user right-clicked at the point ( xy ) </s>
<s> draw a blue oval centered // at the point ( xy ) ( a black outline around the oval will make it // more distinct when shapes overlap ) gsetcolor( colorblue ) // blue interior gfilloval( x - 30 y - 15 60 30 ) 264 chapter 6 </s>
<s> introduction to gui programming gsetcolor( colorblack ) // black outline gdrawoval( x - 30 y - 15 60 30 ) } else { // user left-clicked ( or middle-clicked ) at ( xy ) // draw a red rectangle centered at ( xy ) gsetcolor( colorred ) // red interior gfillrect( x - 30 y - 15 60 30 ) gsetcolor( colorblack ) // black outline gdrawrect( x - 30 y - 15 60 30 ) } gdispose( ) // we are finished with the graphics context so dispose of it } // end mousepressed( ) // the next four empty routines are required by the mouselistener interface // they don’t do anything in this class so their definitions are empty public public public public void void void void mouseentered( mouseevent evt ) { } mouseexited( mouseevent evt ) { } mouseclicked( mouseevent evt ) { } mousereleased( mouseevent evt ) { } } // end class simplestamperpanel note by the way that this class violates the rule that all drawing should be done in a paintcomponent( ) method </s>
<s> the rectangles and ovals are drawn directly in the mousepressed( ) routine </s>
<s> to make this possible i need to obtain a graphics context by saying g = getgraphics( )” </s>
<s> after using g for drawing i call gdispose( ) to inform the operating system that i will no longer be using g for drawing </s>
<s> it is a good idea to do this to free the system resources that are used by the graphics context </s>
<s> i do not advise doing this type of direct drawing if it can be avoided but you can see that it does work in this case and at this point we really have no other way to write this example 644 mousemotionlisteners and dragging whenever the mouse is moved it generates events </s>
<s> the operating system of the computer detects these events and uses them to move the mouse cursor on the screen </s>
<s> it is also possible for a program to listen for these mouse motion” events and respond to them </s>
<s> the most common reason to do so is to implement dragging </s>
<s> dragging occurs when the user moves the mouse while holding down a mouse button the methods for responding to mouse motion events are deﬁned in an interface named mousemotionlistener </s>
<s> this interface speciﬁes two event-handling methods public void mousedragged( mouseevent evt ) public void mousemoved( mouseevent evt ) the mousedragged method is called if the mouse is moved while a button on the mouse is pressed </s>
<s> if the mouse is moved while no mouse button is down then mousemoved is called instead </s>
<s> the parameter evt is an object of type mouseevent </s>
<s> it contains the x and y coordinates of the mouse’s location </s>
<s> as long as the user continues to move the mouse one of these methods will be called over and over ( so many events are generated that it would be ineﬃcient for a program to hear them all if it doesn’t want to do anything in response </s>
<s> this is why the 64 </s>
<s> mouse events 265 mouse motion event-handlers are deﬁned in a separate interface from the other mouse events you can listen for the mouse events deﬁned in mouselistener without automatically hearing all mouse motion events as well ) if you want your program to respond to mouse motion events you must create an object that implements the mousemotionlistener interface and you must register that object to listen for events </s>
<s> the registration is done by calling a component’s addmousemotionlistener( ) method </s>
<s> the object will then listen for mousedragged and mousemoved events associated with that component </s>
<s> in most cases the listener object will also implement the mouselistener interface so that it can respond to the other mouse events as well to get a better idea of how mouse events work you should try the simpletrackmouseapplet in the on-line version of this section </s>
<s> the applet is programmed to respond to any of the seven diﬀerent kinds of mouse events by displaying the coordinates of the mouse the type of event and a list of the modiﬁer keys that are down ( shift control meta and alt ) </s>
<s> you can experiment with the applet to see what happens when you use the mouse on the applet ( alternatively you could run the stand-alone application version of the program simpletrackmousejava ) the source code for the program can be found in simpletrackmousepaneljava which deﬁnes the panel that is used as the content pane and in simpletrackmouseappletjava which deﬁnes the applet class </s>
<s> the panel class includes a nested class mousehandler that deﬁnes the mousehandling object </s>
<s> i encourage you to read the source code </s>
<s> you should now be familiar with all the techniques that it uses it is interesting to look at what a program needs to do in order to respond to dragging operations </s>
<s> in general the response involves three methods mousepressed( ) mousedragged( ) and mousereleased( ) </s>
<s> the dragging gesture starts when the user presses a mouse button it continues while the mouse is dragged and it ends when the user releases the button </s>
<s> this means that the programming for the response to one dragging gesture must be spread out over the three methods! furthermore the mousedragged( ) method can be called many times as the mouse moves </s>
<s> to keep track of what is going on between one method call and the next you need to set up some instance variables </s>
<s> in many applications for example in order to process a mousedragged event you need to remember the previous coordinates of the mouse </s>
<s> you can store this information in two instance variables prevx and prevy of type int </s>
<s> it can also be useful to save the starting coordinates where the original mousepressed event occurred in instance variables </s>
<s> i also suggest having a boolean variable dragging which is set to true while a dragging gesture is being processed </s>
<s> this is necessary because in many applications not every mousepressed event starts a dragging operation to which you want to respond </s>
<s> the mousedragged and mousereleased methods can use the value of dragging to check whether a drag operation is actually in progress </s>
<s> you might need other instance variables as well but in general outline a class that handles mouse dragging looks like this import javaawtevent* public class mousedraghandler implements mouselistener mousemotionlistener { private int startx starty // point where the original mousepress occurred private int prevx prevy // most recently processed mouse coords private boolean dragging // set to true when dragging is in process // other instance variables for use in dragging public void mousepressed( mouseevent evt ) { if ( we-want-to-start-dragging ) { dragging = true startx = evtgetx( ) // remember starting position 266 chapter 6 </s>
<s> introduction to gui programming starty = evtgety( ) prevx = startx // remember most recent coords prevy = starty // other processing } } public void mousedragged( mouseevent evt ) { if ( dragging == false ) // first check if we are return // processing a dragging gesture int x = evtgetx( ) // current position of mouse int y = evtgety( ) // process a mouse movement from ( prevx prevy ) to ( xy ) prevx = x // remember the current position for the next call prevy = y } public void mousereleased( mouseevent evt ) { if ( dragging == false ) // first check if we are return // processing a dragging gesture dragging = false // we are done dragging // other processing and clean-up } } as an example let’s look at a typical use of dragging allowing the user to sketch a curve by dragging the mouse </s>
<s> this example also shows many other features of graphics and mouse processing </s>
<s> in the program you can draw a curve by dragging the mouse on a large white drawing area and you can select a color for drawing by clicking on one of several colored rectangles to the right of the drawing area </s>
<s> the complete source code can be found in simplepaintjava which can be run as a stand-alone application and you can ﬁnd an applet version in the on-line version of this section </s>
<s> here is a picture of the program 64 </s>
<s> mouse events 267 i will discuss a few aspects of the source code here but i encourage you to read it carefully in its entirety </s>
<s> there are lots of informative comments in the source code ( the source code uses one unusual technique it deﬁnes a subclass of japplet but it also includes a main( ) routine </s>
<s> the main( ) routine has nothing to do with the class’s use as an applet but it makes it possible to run the class as a stand-alone application </s>
<s> when this is done the application opens a window that shows the same panel that would be shown in the applet version </s>
<s> this example thus shows how to write a single ﬁle that can be used either as a stand-alone application or as an applet ) the panel class for this example is designed to work for any reasonable size that is unless the panel is too small </s>
<s> this means that coordinates are computed in terms of the actual width and height of the panel ( the width and height are obtained by calling getwidth( ) and getheight( ) ) this makes things quite a bit harder than they would be if we assumed some particular ﬁxed size for the panel </s>
<s> let’s look at some of these computations in detail </s>
<s> for example the large white drawing area extends from y = 3 to y = height - 3 vertically and from x = 3 to x = width - 56 horizontally </s>
<s> these numbers are needed in order to interpret the meaning of a mouse click </s>
<s> they take into account a gray border around the panel and the color palette along the right edge of the panel </s>
<s> the gray border is 3 pixels wide </s>
<s> the colored rectangles are 50 pixels wide </s>
<s> together with the 3-pixel border around the panel and a 3-pixel divider between the drawing area and the colored rectangles this adds up to put the right edge of the drawing area 56 pixels from the right edge of the panel a white square labeled clear” occupies a 50-by-50 pixel region beneath the colored rectangles on the right edge of the panel </s>
<s> allowing for this square we can ﬁgure out how much vertical space is available for the seven colored rectangles and then divide that space by 7 to get the vertical space available for each rectangle </s>
<s> this quantity is represented by a variable colorspace </s>
<s> out of this space 3 pixels are used as spacing between the rectangles so the height of each rectangle is colorspace - 3 </s>
<s> the top of the n-th rectangle is located ( n*colorspace + 3 ) pixels down from the top of the panel assuming that we count the rectangles starting with zero </s>
<s> this is because there are n rectangles above the n-th rectangle each of which uses colorspace pixels </s>
<s> the extra 3 is for the border at the top of the panel </s>
<s> after all that we can write down the command for drawing the n-th rectangle gfillrect( width - 53 n*colorspace + 3 50 colorspace - 3 ) that was not easy! but it shows the kind of careful thinking and precision graphics that are sometimes necessary to get good results the mouse in this program is used to do three diﬀerent things select a color clear the drawing and draw a curve </s>
<s> only the third of these involves dragging so not every mouse click will start a dragging operation </s>
<s> the mousepressed( ) method has to look at the ( xy ) coordinates where the mouse was clicked and decide how to respond </s>
<s> if the user clicked on the clear rectangle the drawing area is cleared by calling repaint( ) </s>
<s> if the user clicked somewhere in the strip of colored rectangles the corresponding color is selected for drawing this involves computing which color the user clicked on which is done by dividing the y coordinate by colorspace </s>
<s> finally if the user clicked on the drawing area a drag operation is initiated </s>
<s> in this case a boolean variable dragging is set to true so that the mousedragged and mousereleased methods will know that a curve is being drawn </s>
<s> the code for this follows the general form given above </s>
<s> the actual drawing of the curve is done in the mousedragged( ) method which draws a line from the previous location of the mouse to its current location some eﬀort is required to make sure that the line does not extend beyond the white drawing area of the panel </s>
<s> this is not automatic since as far as the computer is concerned the border and 268 chapter 6 </s>
<s> introduction to gui programming the color bar are part of the drawing surface </s>
<s> if the user drags the mouse outside the drawing area while drawing a line the mousedragged( ) routine changes the x and y coordinates to make them lie within the drawing area 645 anonymous event handlers and adapter classes as i mentioned above it is a fairly common practice to use anonymous inner classes to deﬁne listener objects </s>
<s> as discussed in subsection 573 a special form of the new operator is used to create an object that belongs to an anonymous class </s>
<s> for example a mouse listener object can be created with an expression of the form new mouselistener( ) { public void mousepressed( mouseevent evt ) { } public void mousereleased( mouseevent evt ) { } public void mouseclicked( mouseevent evt ) { } public void mouseentered( mouseevent evt ) { } public void mouseexited( mouseevent evt ) { } } this is all just one long expression that both deﬁnes an unnamed class and creates an object that belongs to that class </s>
<s> to use the object as a mouse listener it can be passed as the parameter to some component’s addmouselistener( ) method in a command of the form componentaddmouselistener( new mouselistener( ) { public void mousepressed( mouseevent evt ) { } public void mousereleased( mouseevent evt ) { } public void mouseclicked( mouseevent evt ) { } public void mouseentered( mouseevent evt ) { } public void mouseexited( mouseevent evt ) { } } ) now in a typical application most of the method deﬁnitions in this class will be empty a class that implements an interface must provide deﬁnitions for all the methods in that interface even if the deﬁnitions are empty </s>
<s> to avoid the tedium of writing empty method deﬁnitions in cases like this java provides adapter classes </s>
<s> an adapter class implements a listener interface by providing empty deﬁnitions for all the methods in the interface </s>
<s> an adapter class is useful only as a basis for making subclasses </s>
<s> in the subclass you can deﬁne just those methods that you actually want to use </s>
<s> for the remaining methods the empty deﬁnitions that are provided by the adapter class will be used </s>
<s> the adapter class for the mouselistener interface is named mouseadapter </s>
<s> for example if you want a mouse listener that only responds to mouse-pressed events you can use a command of the form componentaddmouselistener( new mouseadapter( ) { public void mousepressed( mouseevent evt ) { } } ) to see how this works in a real example let’s write another version of the clickablerandomstringsapp application from subsection 642 </s>
<s> this version uses an anonymous class based on mouseadapter to handle mouse events import import import import javaawtcomponent javaawteventmouseadapter javaawteventmouseevent javaawteventmouselistener 64 </s>
<s> mouse events 269 import javaxswingjframe public class clickablerandomstringsapp { public static void main( string[] args ) { jframe window = new jframe( random strings ) randomstringspanel content = new randomstringspanel( ) contentaddmouselistener( new mouseadapter( ) { // register a mouse listener that is defined by an anonymous subclass // of mouseadapter </s>
<s> this replaces the repaintonclick class that was // used in the original version public void mousepressed( mouseevent evt ) { component source = ( component )evtgetsource( ) sourcerepaint( ) } } ) windowsetcontentpane( content ) windowsetdefaultcloseoperation( jframeexit on close ) windowsetlocation( 10075 ) windowsetsize( 300240 ) windowsetvisible( true ) } } there is also an adapter class for mouse motion listeners mousemotionadapter which implements mousemotionlistener and deﬁnes empty versions of mousedragged( ) and mousemoved( ) in java 6 and later the mouseadapter class actually implements mousemotionlistener as well as mouselistener so there is less use for mousemotionadapter anonymous inner classes can be used for other purposes besides event handling </s>
<s> for example suppose that you want to deﬁne a subclass of jpanel to represent a drawing surface the subclass will only be used once </s>
<s> it will redeﬁne the paintcomponent( ) method but will make no other changes to jpanel </s>
<s> it might make sense to deﬁne the subclass as an anonymous inner class </s>
<s> as an example i present helloworldgui4java </s>
<s> this version is a variation of helloworldgui2java that uses anonymous inner classes where the original program uses ordinary named nested classes import javaawt* import javaawtevent* import javaxswing* /** * a simple gui program that creates and opens a jframe containing * the message hello world and an ok button </s>
<s> when the user clicks * the ok button the program ends </s>
<s> this version uses anonymous * classes to define the message display panel and the action listener * object </s>
<s> compare to helloworldgui2 which uses nested classes */ public class helloworldgui4 { /** * the main program creates a window containing a display panel * and a button that will end the program when the user clicks it */ 270 chapter 6 </s>
<s> introduction to gui programming public static void main( string[] args ) { jpanel displaypanel = new jpanel( ) { // an anonymous subclass of jpanel that displays hello world! public void paintcomponent( graphics g ) { superpaintcomponent( g ) gdrawstring( hello world! 20 30 ) } } jbutton okbutton = new jbutton( ok ) okbuttonaddactionlistener( new actionlistener( ) { // an anonymous class that defines the listener object public void actionperformed( actionevent e ) { systemexit( 0 ) } } ) jpanel content = new jpanel( ) contentsetlayout( new borderlayout( ) ) contentadd( displaypanel borderlayoutcenter ) contentadd( okbutton borderlayoutsouth ) jframe window = new jframe( gui test ) windowsetcontentpane( content ) windowsetsize( 250100 ) windowsetlocation( 100100 ) windowsetvisible( true ) } } 65 timers keyevents and state machines not every event is generated by an action on the part of the user </s>
<s> events can also be generated by objects as part of their regular programming and these events can be monitored by other objects so that they can take appropriate actions when the events occur </s>
<s> one example of this is the class javaxswingtimer </s>
<s> a timer generates events at regular intervals </s>
<s> these events can be used to drive an animation or to perform some other task at regular intervals we will begin this section with a look at timer events and animation </s>
<s> we will then look at another type of basic user-generated event the keyevents that are generated when the user types on the keyboard </s>
<s> the example at the end of the section uses both a timer and keyboard events to implement a simple game and introduces the important idea of state machines 651 timers and animation an object belonging to the class javaxswingtimer exists only to generate events </s>
<s> a timer by default generates a sequence of events with a ﬁxed delay between each event and the next ( it is also possible to set a timer to emit a single event after a speciﬁed time delay in that case the timer is being used as an alarm” ) each event belongs to the class actionevent </s>
<s> an object 65 </s>
<s> timers keyevents and state machines 271 that is to listen for the events must implement the interface actionlistener which deﬁnes just one method public void actionperformed( actionevent evt ) to use a timer you must create an object that implements the actionlistener interface </s>
<s> that is the object must belong to a class that is declared to implement actionlistener” and that class must deﬁne the actionperformed method </s>
<s> then if the object is set to listen for events from the timer the code in the listener’s actionperformed method will be executed every time the timer generates an event since there is no point to having a timer without having a listener to respond to its events the action listener for a timer is speciﬁed as a parameter in the timer’s constructor </s>
<s> the time delay between timer events is also speciﬁed in the constructor </s>
<s> if timer is a variable of type timer then the statement timer = new timer( millisdelay listener ) creates a timer with a delay of millisdelay milliseconds between events ( where 1000 milliseconds equal one second ) </s>
<s> events from the timer are sent to the listener ( millisdelay must be of type int and listener must be of type actionlistener ) note that a timer is not guaranteed to deliver events at precisely regular intervals </s>
<s> if the computer is busy with some other task an event might be delayed or even dropped altogether a timer does not automatically start generating events when the timer object is created the start( ) method in the timer must be called to tell the timer to start generating events the timer’s stop( ) method can be used to turn the stream of events oﬀ—it can be restarted by calling start( ) again ∗ ∗ ∗ one application of timers is computer animation </s>
<s> a computer animation is just a sequence of still images presented to the user one after the other </s>
<s> if the time between images is short and if the change from one image to another is not too great then the user perceives continuous motion </s>
<s> the easiest way to do animation in java is to use a timer to drive the animation </s>
<s> each time the timer generates an event the next frame of the animation is computed and drawn on the screen—the code that implements this goes in the actionperformed method of an object that listens for events from the timer our ﬁrst example of using a timer is not exactly an animation but it does display a new image for each timer event </s>
<s> the program shows randomly generated images that vaguely resemble works of abstract art </s>
<s> in fact the program draws a new random image every time its paintcomponent( ) method is called and the response to a timer event is simply to call repaint( ) which in turn triggers a call to paintcomponent </s>
<s> the work of the program is done in a subclass of jpanel which starts like this import javaawt* import javaawtevent* import javaxswing* public class randomartpanel extends jpanel { /** * a repaintaction object calls the repaint method of this panel each * time its actionperformed( ) method is called </s>
<s> an object of this * type is used as an action listener for a timer that generates an * actionevent every four seconds </s>
<s> the result is that the panel is 272 chapter 6 </s>
<s> introduction to gui programming * redrawn every four seconds */ private class repaintaction implements actionlistener { public void actionperformed( actionevent evt ) { repaint( ) // call the repaint( ) method in the panel class } } /** * the constructor creates a timer with a delay time of four seconds * ( 4000 milliseconds ) and with a repaintaction object as its * actionlistener </s>
<s> it also starts the timer running */ public randomartpanel( ) { repaintaction action = new repaintaction( ) timer timer = new timer( 4000 action ) timerstart( ) } /** * the paintcomponent( ) method fills the panel with a random shade of * gray and then draws one of three types of random art </s>
<s> the type * of art to be drawn is chosen at random */ public void paintcomponent( graphics g ) { // the rest of the class is omitted you can ﬁnd the full source code for this class in the ﬁle randomartpaneljava an application version of the program is randomartjava while the applet version is randomartappletjava you can see the applet version in the on-line version of this section ater in this section we will use a timer to drive the animation in a simple computer game 652 keyboard events in java user actions become events in a program </s>
<s> these events are associated with gui components </s>
<s> when the user presses a button on the mouse the event that is generated is associated with the component that contains the mouse cursor </s>
<s> what about keyboard events when the user presses a key what component is associated with the key event that is generated a gui uses the idea of input focus to determine the component associated with keyboard events </s>
<s> at any given time exactly one interface element on the screen has the input focus and that is where all keyboard events are directed </s>
<s> if the interface element happens to be a java component then the information about the keyboard event becomes a java object of type keyevent and it is delivered to any listener objects that are listening for keyevents associated with that component </s>
<s> the necessity of managing input focus adds an extra twist to working with keyboard events it’s a good idea to give the user some visual feedback about which component has the input focus </s>
<s> for example if the component is the typing area of a word-processor the feedback is usually in the form of a blinking text cursor </s>
<s> another common visual clue is to draw a brightly colored border around the edge of a component when it has the input focus as i do in the examples given later in this section 65 </s>
<s> timers keyevents and state machines 273 a component that wants to have the input focus can call the method requestfocus( ) which is deﬁned in the component class </s>
<s> calling this method does not absolutely guarantee that the component will actually get the input focus </s>
<s> several components might request the focus only one will get it </s>
<s> this method should only be used in certain circumstances in any case since it can be a rude surprise to the user to have the focus suddenly pulled away from a component that the user is working with </s>
<s> in a typical user interface the user can choose to give the focus to a component by clicking on that component with the mouse </s>
<s> and pressing the tab key will often move the focus from one component to another some components do not automatically request the input focus when the user clicks on them </s>
<s> to solve this problem a program has to register a mouse listener with the component to detect user clicks </s>
<s> in response to a user click the mousepressed( ) method should call requestfocus( ) for the component </s>
<s> this is true in particular for the components that are used as drawing surfaces in the examples in this chapter </s>
<s> these components are deﬁned as subclasses of jpanel and jpanel objects do not receive the input focus automatically </s>
<s> if you want to be able to use the keyboard to interact with a jpanel named drawingsurface you have to register a listener to listen for mouse events on the drawingsurface and call drawingsurfacerequestfocus( ) in the mousepressed( ) method of the listener object as our ﬁrst example of processing key events we look at a simple program in which the user moves a square up down left and right by pressing arrow keys </s>
<s> when the user hits the ’r’ ’g’ ’b’ or ’k’ key the color of the square is set to red green blue or black respectively of course none of these key events are delivered to the panel unless it has the input focus the panel in the program changes its appearance when it has the input focus when it does a cyan-colored border is drawn around the panel when it does not a gray-colored border is drawn </s>
<s> also the panel displays a diﬀerent message in each case </s>
<s> if the panel does not have the input focus the user can give the input focus to the panel by clicking on it </s>
<s> the complete source code for this example can be found in the ﬁle keyboardandfocusdemojava </s>
<s> i will discuss some aspects of it below </s>
<s> after reading this section you should be able to understand the source code in its entirety </s>
<s> here is what the program looks like in its focused state in java keyboard event objects belong to a class called keyevent </s>
<s> an object that needs to listen for keyevents must implement the interface named keylistener </s>
<s> furthermore the object must be registered with a component by calling the component’s addkeylistener( ) method the registration is done with the command componentaddkeylistener( listener )” where listener is the object that is to listen for key events and component is the object that will generate the key events ( when it has the input focus ) </s>
<s> it is possible for component and listener to be the same object </s>
<s> all this is of course directly analogous to what you learned about mouse events in the previous section </s>
<s> the keylistener interface deﬁnes the following methods which must be included in any class that implements keylistener 274 chapter 6 </s>
<s> introduction to gui programming public void keypressed( keyevent evt ) public void keyreleased( keyevent evt ) public void keytyped( keyevent evt ) java makes a careful distinction between the keys that you press and the characters that you type </s>
<s> there are lots of keys on a keyboard letter keys number keys modiﬁer keys such as control and shift arrow keys page up and page down keys keypad keys function keys and so on </s>
<s> in many cases pressing a key does not type a character </s>
<s> on the other hand typing a character sometimes involves pressing several keys </s>
<s> for example to type an uppercase ’a’ you have to press the shift key and then press the a key before releasing the shift key </s>
<s> on my mac os computer i can type an accented e by holding down the option key pressing the e key releasing the option key and pressing e again </s>
<s> only one character was typed but i had to perform three key-presses and i had to release a key at the right time </s>
<s> in java there are three types of keyevent </s>
<s> the types correspond to pressing a key releasing a key and typing a character </s>
<s> the keypressed method is called when the user presses a key the keyreleased method is called when the user releases a key and the keytyped method is called when the user types a character ( whether that’s done with one key press or several ) </s>
<s> note that one user action such as pressing the e key can be responsible for two events a keypressed event and a keytyped event </s>
<s> typing an upper case ’a’ can generate two keypressed events two keyreleased events and one keytyped event usually it is better to think in terms of two separate streams of events one consisting of keypressed and keyreleased events and the other consisting of keytyped events </s>
<s> for some applications you want to monitor the ﬁrst stream for other applications you want to monitor the second one </s>
<s> of course the information in the keytyped stream could be extracted from the keypressed/keyreleased stream but it would be diﬃcult ( and also system-dependent to some extent ) </s>
<s> some user actions such as pressing the shift key can only be detected as keypressed events </s>
<s> i used to have a computer solitaire game that highlighted every card that could be moved when i held down the shift key </s>
<s> you can do something like that in java by hiliting the cards when the shift key is pressed and removing the highlight when the shift key is released there is one more complication </s>
<s> usually when you hold down a key on the keyboard that key will auto-repeat </s>
<s> this means that it will generate multiple keypressed events as long as it is held down </s>
<s> it can also generate multiple keytyped events </s>
<s> for the most part this will not aﬀect your programming but you should not expect every keypressed event to have a corresponding keyreleased event every key on the keyboard has an integer code number ( actually this is only true for keys that java knows about </s>
<s> many keyboards have extra keys that can’t be used with java ) when the keypressed or keyreleased method is called the parameter evt contains the code of the key that was pressed or released </s>
<s> the code can be obtained by calling the function evtgetkeycode( ) </s>
<s> rather than asking you to memorize a table of code numbers java provides a named constant for each key </s>
<s> these constants are deﬁned in the keyevent class </s>
<s> for example the constant for the shift key is keyeventvk shift </s>
<s> if you want to test whether the key that the user pressed is the shift key you could say if ( evtgetkeycode( ) == keyeventvk shift )” </s>
<s> the key codes for the four arrow keys are keyeventvk left keyeventvk right keyeventvk up and keyeventvk down </s>
<s> other keys have similar codes ( the vk” stands for virtual keyboard” </s>
<s> in reality diﬀerent keyboards use diﬀerent key codes but java translates the actual codes from the keyboard into its own virtual” codes your program only sees these virtual key codes so it will work with various keyboards on 65 </s>
<s> timers keyevents and state machines 275 various platforms without modiﬁcation ) in the case of a keytyped event you want to know which character was typed </s>
<s> this information can be obtained from the parameter evt in the keytyped method by calling the function evtgetkeychar( ) </s>
<s> this function returns a value of type char representing the character that was typed in the keyboardandfocusdemo program i use the keypressed routine to respond when the user presses one of the arrow keys </s>
<s> the applet includes instance variables squareleft and squaretop that give the position of the upper left corner of the movable square </s>
<s> when the user presses one of the arrow keys the keypressed routine modiﬁes the appropriate instance variable and calls repaint( ) to redraw the panel with the square in its new position </s>
<s> note that the values of squareleft and squaretop are restricted so that the square never moves outside the white area of the panel /** * this is called each time the user presses a key while the panel has * the input focus </s>
<s> if the key pressed was one of the arrow keys * the square is moved ( except that it is not allowed to move off the * edge of the panel allowing for a 3-pixel border ) */ public void keypressed( keyevent evt ) { int key = evtgetkeycode( ) // keyboard code for the pressed key if ( key == keyeventvk left ) { // left-arrow key move the square left squareleft -= 8 if ( squareleft < 3 ) squareleft = 3 repaint( ) } else if ( key == keyeventvk right ) { // right-arrow key move the square right squareleft += 8 if ( squareleft > getwidth( ) - 3 - square size ) squareleft = getwidth( ) - 3 - square size repaint( ) } else if ( key == keyeventvk up ) { // up-arrow key move the square up squaretop -= 8 if ( squaretop < 3 ) squaretop = 3 repaint( ) } else if ( key == keyeventvk down ) { // down-arrow key move the square down squaretop += 8 if ( squaretop > getheight( ) - 3 - square size ) squaretop = getheight( ) - 3 - square size repaint( ) } } // end keypressed( ) color changes—which happen when the user types the characters ’r’ ’g’ ’b’ and ’k’ or the lower case equivalents—are handled in the keytyped method </s>
<s> i won’t include it here since it is so similar to the keypressed method </s>
<s> finally to complete the keylistener interface the 276 chapter 6 </s>
<s> introduction to gui programming keyreleased method must be deﬁned </s>
<s> in the sample program the body of this method is empty since the applet does nothing in response to keyreleased events 653 focus events if a component is to change its appearance when it has the input focus it needs some way to know when it has the focus </s>
<s> in java objects are notiﬁed about changes of input focus by events of type focusevent </s>
<s> an object that wants to be notiﬁed of changes in focus can implement the focuslistener interface </s>
<s> this interface declares two methods public void focusgained( focusevent evt ) public void focuslost( focusevent evt ) furthermore the addfocuslistener( ) method must be used to set up a listener for the focus events </s>
<s> when a component gets the input focus it calls the focusgained( ) method of any object that has been registered with that component as a focuslistener </s>
<s> when it loses the focus it calls the listener’s focuslost( ) method </s>
<s> sometimes it is the component itself that listens for focus events in the sample keyboardandfocusdemo program the response to a focus event is simply to redraw the panel </s>
<s> the paintcomponent( ) method checks whether the panel has the input focus by calling the boolean-valued function hasfocus( ) which is deﬁned in the component class and it draws a diﬀerent picture depending on whether or not the panel has the input focus </s>
<s> the net result is that the appearance of the panel changes when the panel gains or loses focus </s>
<s> the methods from the focuslistener interface are deﬁned simply as public void focusgained( focusevent evt ) { // the panel now has the input focus repaint( ) // will redraw with a new message and a cyan border } public void focuslost( focusevent evt ) { // the panel has now lost the input focus repaint( ) // will redraw with a new message and a gray border } the other aspect of handling focus is to make sure that the panel gets the focus when the user clicks on it </s>
<s> to do this the panel implements the mouselistener interface and listens for mouse events on itself </s>
<s> it deﬁnes a mousepressed routine that asks that the input focus be given to the panel public void mousepressed( mouseevent evt ) { requestfocus( ) } the other four methods of the mouselistener interface are deﬁned to be empty </s>
<s> note that the panel implements three diﬀerent listener interfaces keylistener focuslistener and mouselistener and the constructor in the panel class registers itself to listen for all three types of events with the statements addkeylistener( this ) addfocuslistener( this ) addmouselistener( this ) 65 </s>
<s> timers keyevents and state machines 277 there are of course other ways to organize this example </s>
<s> it would be possible for example to use a nested class to deﬁne the listening object </s>
<s> or anonymous classes could be used to deﬁne separate listening objects for each type of event </s>
<s> in my next example i will take the latter approach 654 state machines the information stored in an object’s instance variables is said to represent the state of that object </s>
<s> when one of the object’s methods is called the action taken by the object can depend on its state ( or in the terminology we have been using the deﬁnition of the method can look at the instance variables to decide what to do ) furthermore the state can change ( that is the deﬁnition of the method can assign new values to the instance variables ) in computer science there is the idea of a state machine which is just something that has a state and can change state in response to events or inputs </s>
<s> the response of a state machine to an event or input depends on what state it’s in </s>
<s> an object is a kind of state machine </s>
<s> sometimes this point of view can be very useful in designing classes the state machine point of view can be especially useful in the type of event-oriented programming that is required by graphical user interfaces </s>
<s> when designing a gui program you can ask yourself what information about state do i need to keep track of what events can change the state of the program how will my response to a given event depend on the current state should the appearance of the gui be changed to reﬂect a change in state how should the paintcomponent( ) method take the state into account all this is an alternative to the top-down step-wise-reﬁnement style of program design which does not apply to the overall design of an event-oriented program in the keyboardandfocusdemo program shown above the state of the program is recorded in the instance variables squarecolor squareleft and squaretop </s>
<s> these state variables are used in the paintcomponent( ) method to decide how to draw the panel </s>
<s> their values are changed in the two key-event-handling methods in the rest of this section we’ll look at another example where the state plays an even bigger role </s>
<s> in this example the user plays a simple arcade-style game by pressing the arrow keys </s>
<s> the main panel of the program is deﬁned in the source code ﬁle subkillerpaneljava an applet that uses this panel can be found in subkillerappletjava while the stand-alone application version is subkillerjava </s>
<s> you can try out the applet in the on-line version of this section </s>
<s> here is what it looks like you have to click on the panel to give it the input focus </s>
<s> the program shows a black submarine” near the bottom of the panel </s>
<s> while the panel has the input focus this submarine 278 chapter 6 </s>
<s> introduction to gui programming moves back and forth erratically near the bottom </s>
<s> near the top there is a blue boat” you can move this boat back and forth by pressing the left and right arrow keys </s>
<s> attached to the boat is a red bomb” ( or depth charge” ) </s>
<s> you can drop the bomb by hitting the down arrow key </s>
<s> the objective is to blow up the submarine by hitting it with the bomb </s>
<s> if the bomb falls oﬀ the bottom of the screen you get a new one </s>
<s> if the submarine explodes a new sub is created and you get a new bomb </s>
<s> try it! make sure to hit the sub at least once so you can see the explosion et’s think about how this game can be programmed </s>
<s> first of all since we are doing objectoriented programming i decided to represent the boat the depth charge and the submarine as objects </s>
<s> each of these objects is deﬁned by a separate nested class inside the main panel class and each object has its own state which is represented by the instance variables in the corresponding class </s>
<s> i use variables boat bomb and sub in the panel class to refer to the boat bomb and submarine objects now what constitutes the state” of the program that is what things change from time to time and aﬀect the appearance or behavior of the program of course the state includes the positions of the boat submarine and bomb so i need variables to store the positions anything else possibly less obvious well sometimes the bomb is falling and sometimes it’s not </s>
<s> that is a diﬀerence in state </s>
<s> since there are two possibilities i represent this aspect of the state with a boolean variable in the bomb object bombisfalling </s>
<s> sometimes the submarine is moving left and sometimes it is moving right </s>
<s> the diﬀerence is represented by another boolean variable subismovingleft </s>
<s> sometimes the sub is exploding </s>
<s> this is also part of the state and it is represented by a boolean variable subisexploding </s>
<s> however the explosions require a little more thought </s>
<s> an explosion is something that takes place over a series of frames </s>
<s> while an explosion is in progress the sub looks diﬀerent in each frame as the size of the explosion increases </s>
<s> also i need to know when the explosion is over so that i can go back to moving and drawing the sub as usual </s>
<s> so i use an integer variable subexplosionframenumber to record how many frames have been drawn since the explosion started the value of this variable is used only when an explosion is in progress how and when do the values of these state variables change some of them seem to change on their own for example as the sub moves left and right the state variables that specify its position change </s>
<s> of course these variables are changing because of an animation and that animation is driven by a timer </s>
<s> each time an event is generated by the timer some of the state variables have to change to get ready for the next frame of the animation </s>
<s> the changes are made by the action listener that listens for events from the timer </s>
<s> the boat bomb and sub objects each contain an updatefornextframe( ) method that updates the state variables of the object to get ready for the next frame of the animation </s>
<s> the action listener for the timer calls these methods with the statements boatupdatefornewframe( ) bombupdatefornewframe( ) subupdatefornewframe( ) the action listener also calls repaint( ) so that the panel will be redrawn to reﬂect its new state </s>
<s> there are several state variables that change in these update methods in addition to the position of the sub if the bomb is falling then its y-coordinate increases from one frame to the next </s>
<s> if the bomb hits the sub then the isexploding variable of the sub changes to true and the isfalling variable of the bomb becomes false </s>
<s> the isfalling variable also becomes false when the bomb falls oﬀ the bottom of the screen </s>
<s> if the sub is exploding then its explosionframenumber increases from one frame to the next and when it reaches a certain 65 </s>
<s> timers keyevents and state machines 279 value the explosion ends and isexploding is reset to false </s>
<s> at random times the sub switches between moving to the left and moving to the right </s>
<s> its direction of motion is recorded in the sub’s ismovingleft variable </s>
<s> the sub’s updatefornewframe( ) method includes the lines if ( mathrandom( ) < 004 ) ismovingleft = ! ismovingleft there is a 1 in 25 chance that mathrandom( ) will be less than 004 so the statement ismovingleft = ! ismovingleft” is executed in one in every twenty-ﬁve frames on average </s>
<s> the eﬀect of this statement is to reverse the value of ismovingleft from false to true or from true to false </s>
<s> that is the direction of motion of the sub is reversed in addition to changes in state that take place from one frame to the next a few state variables change when the user presses certain keys </s>
<s> in the program this is checked in a method that responds to user keystrokes </s>
<s> if the user presses the left or right arrow key the position of the boat is changed </s>
<s> if the user presses the down arrow key the bomb changes from not-falling to falling </s>
<s> this is coded in the keypressed( )method of a keylistener that is registered to listen for key events on the panel that method reads as follows public void keypressed( keyevent evt ) { int code = evtgetkeycode( ) // which key was pressed if ( code == keyeventvk left ) { // move the boat left ( if this moves the boat out of the frame its // position will be adjusted in the boatupdatefornewframe( ) method ) boatcenterx -= 15 } else if ( code == keyeventvk right ) { // move the boat right ( if this moves boat out of the frame its // position will be adjusted in the boatupdatefornewframe( ) method ) boatcenterx += 15 } else if ( code == keyeventvk down ) { // start the bomb falling if it is not already falling if ( bombisfalling == false ) bombisfalling = true } } note that it’s not necessary to call repaint( ) when the state changes since this panel shows an animation that is constantly being redrawn anyway </s>
<s> any changes in the state will become visible to the user as soon as the next frame is drawn </s>
<s> at some point in the program i have to make sure that the user does not move the boat oﬀ the screen </s>
<s> i could have done this in keypressed( ) but i choose to check for this in another routine in the boat object i encourage you to read the source code in subkillerpaneljava </s>
<s> although a few points are tricky you should with some eﬀort be able to read and understand the entire program </s>
<s> try to understand the program in terms of state machines </s>
<s> note how the state of each of the three objects in the program changes in response to events from the timer and from the user you should also note that the program uses four listeners to respond to action events from the timer key events from the user focus events and mouse events ( the mouse is used only to request the input focus when the user clicks the panel ) the timer runs only when the panel has the input focus this is programmed by having the focus listener start the timer when the panel gains the input focus and stop the timer when the panel loses the input focus </s>
<s> all four listeners 280 chapter 6 </s>
<s> introduction to gui programming are created in the constructor of the subkillerpanel class using anonymous inner classes ( see subsection 645 ) while it’s not at all sophisticated as arcade games go the subkiller game does use some interesting programming </s>
<s> and it nicely illustrates how to apply state-machine thinking in event-oriented programming 66 basic components in preceding sections you’ve seen how to use a graphics context to draw on the screen and how to handle mouse events and keyboard events </s>
<s> in one sense that’s all there is to gui programming </s>
<s> if you’re willing to program all the drawing and handle all the mouse and keyboard events you have nothing more to learn </s>
<s> however you would either be doing a lot more work than you need to do or you would be limiting yourself to very simple user interfaces a typical user interface uses standard gui components such as buttons scroll bars text-input boxes and menus </s>
<s> these components have already been written for you so you don’t have to duplicate the work involved in developing them </s>
<s> they know how to draw themselves and they can handle the details of processing the mouse and keyboard events that concern them consider one of the simplest user interface components a push button </s>
<s> the button has a border and it displays some text </s>
<s> this text can be changed </s>
<s> sometimes the button is disabled so that clicking on it doesn’t have any eﬀect </s>
<s> when it is disabled its appearance changes </s>
<s> when the user clicks on the push button the button changes appearance while the mouse button is pressed and changes back when the mouse button is released </s>
<s> in fact it’s more complicated than that </s>
<s> if the user moves the mouse outside the push button before releasing the mouse button the button changes to its regular appearance </s>
<s> to implement this it is necessary to respond to mouse exit or mouse drag events </s>
<s> furthermore on many platforms a button can receive the input focus </s>
<s> the button changes appearance when it has the focus </s>
<s> if the button has the focus and the user presses the space bar the button is triggered </s>
<s> this means that the button must respond to keyboard and focus events as well fortunately you don’t have to program any of this provided you use an object belonging to the standard class javaxswingjbutton </s>
<s> a jbutton object draws itself and processes mouse keyboard and focus events on its own </s>
<s> you only hear from the jbutton when the user triggers it by clicking on it or pressing the space bar while the button has the input focus </s>
<s> when this happens the jbutton object creates an event object belonging to the class javaawteventactionevent </s>
<s> the event object is sent to any registered listeners to tell them that the button has been pushed </s>
<s> your program gets only the information it needs—the fact that a button was pushed ∗ ∗ ∗ the standard components that are deﬁned as part of the swing graphical user interface api are deﬁned by subclasses of the class jcomponent which is itself a subclass of component ( note that this includes the jpanel class that we have already been working with extensively ) many useful methods are deﬁned in the component and jcomponent classes and so can be used with any swing component </s>
<s> we begin by looking at a few of these methods </s>
<s> suppose that comp is a variable that refers to some jcomponent </s>
<s> then the following methods can be used • compgetwidth( ) and compgetheight( ) are functions that give the current size of the component in pixels </s>
<s> one warning when a component is ﬁrst created its size is zero the size will be set later probably by a layout manager </s>
<s> a common mistake is to check 66 </s>
<s> basic components 281 the size of a component before that size has been set such as in a constructor • compsetenabled( true ) and compsetenabled( false ) can be used to enable and disable the component </s>
<s> when a component is disabled its appearance might change and the user cannot do anything with it </s>
<s> there is a boolean-valued function compisenabled( ) that you can call to discover whether the component is enabled • compsetvisible( true ) and compsetvisible( false ) can be called to hide or show the component • compsetfont( font ) sets the font that is used for text displayed on the component </s>
<s> see subsection 633 for a discussion of fonts • compsetbackground( color ) and compsetforeground( color ) set the background and foreground colors for the component </s>
<s> see subsection 632 • compsetopaque( true ) tells the component that the area occupied by the component should be ﬁlled with the component’s background color before the content of the component is painted </s>
<s> by default only jlabels are non-opaque </s>
<s> a non-opaque or transparent” component ignores its background color and simply paints its content over the content of its container </s>
<s> this usually means that it inherits the background color from its container • compsettooltiptext( string ) sets the speciﬁed string as a tool tip” for the component the tool tip is displayed if the mouse cursor is in the component and the mouse is not moved for a few seconds </s>
<s> the tool tip should give some information about the meaning of the component or how to use it • compsetpreferredsize( size ) sets the size at which the component should be displayed if possible </s>
<s> the parameter is of type javaawtdimension where an object of type dimension has two public integer-valued instance variables width and height </s>
<s> a call to this method usually looks something like setpreferredsize( new dimension( 10050 ) )” the preferred size is used as a hint by layout managers but will not be respected in all cases </s>
<s> standard components generally compute a correct preferred size automatically but it can be useful to set it in some cases </s>
<s> for example if you use a jpanel as a drawing surface it is usually a good idea to set a preferred size for it note that using any component is a multi-step process </s>
<s> the component object must be created with a constructor </s>
<s> it must be added to a container </s>
<s> in many cases a listener must be registered to respond to events from the component </s>
<s> and in some cases a reference to the component must be saved in an instance variable so that the component can be manipulated by the program after it has been created </s>
<s> in this section we will look at a few of the basic standard components that are available in swing </s>
<s> in the next section we will consider the problem of laying out components in containers 661 jbutton an object of class jbutton is a push button that the user can click to trigger some action </s>
<s> you’ve already seen buttons used in section 61 and section 62 but we consider them in much more detail here </s>
<s> to use any component eﬀectively there are several aspects of the corresponding class that you should be familiar with </s>
<s> for jbutton as an example i list these aspects explicitly • constructors the jbutton class has a constructor that takes a string as a parameter this string becomes the text displayed on the button </s>
<s> for example stopgobutton = 282 chapter 6 </s>
<s> introduction to gui programming new jbutton( go ) </s>
<s> this creates a button object that will display the text go” ( but remember that the button must still be added to a container before it can appear on the screen ) • events when the user clicks on a button the button generates an event of type actionevent </s>
<s> this event is sent to any listener that has been registered with the button as an actionlistener • listeners an object that wants to handle events generated by buttons must implement the actionlistener interface </s>
<s> this interface deﬁnes just one method public void actionperformed( actionevent evt )” which is called to notify the object of an action event • registration of listeners in order to actually receive notiﬁcation of an event from a button an actionlistener must be registered with the button </s>
<s> this is done with the button’s addactionlistener( ) method </s>
<s> for example stopgobuttonaddactionlistener( buttonhandler ) • event methods when actionperformed( evt ) is called by the button the parameter evt contains information about the event </s>
<s> this information can be retrieved by calling methods in the actionevent class </s>
<s> in particular evtgetactioncommand( ) returns a string giving the command associated with the button </s>
<s> by default this command is the text that is displayed on the button but it is possible to set it to some other string </s>
<s> the method evtgetsource( ) returns a reference to the object that produced the event that is to the jbutton that was pressed </s>
<s> the return value is of type object not jbutton because other types of components can also produce actionevents • component methods several useful methods are deﬁned in the jbutton class </s>
<s> for example stopgobuttonsettext( stop ) changes the text displayed on the button to stop” </s>
<s> and stopgobuttonsetactioncommand( sgb ) changes the action command associated with this button for action events of course jbuttons also have all the general component methods such as setenabled( ) and setfont( ) </s>
<s> the setenabled( ) and settext( ) methods of a button are particularly useful for giving the user information about what is going on in the program </s>
<s> a disabled button is better than a button that gives an obnoxious error message such as sorry you can’t click on me now!” 662 jlabel jlabel is certainly the simplest type of component </s>
<s> an object of type jlabel exists just to display a line of text </s>
<s> the text cannot be edited by the user although it can be changed by your program </s>
<s> the constructor for a jlabel speciﬁes the text to be displayed jlabel message = new jlabel( hello world! ) there is another constructor that speciﬁes where in the label the text is located if there is extra space </s>
<s> the possible alignments are given by the constants jlabelleft jlabelcenter and jlabelright </s>
<s> for example jlabel message = new jlabel( hello world! jlabelcenter ) creates a label whose text is centered in the available space </s>
<s> you can change the text displayed in a label by calling the label’s settext( ) method messagesettext( goodbye world! ) 66 </s>
<s> basic components 283 since the jlabel class is a subclass of jcomponent you can use methods such as setforeground( ) and setfont( ) with labels </s>
<s> if you want the background color to have any eﬀect you should call setopaque( true ) on the label since otherwise the jlabel might not ﬁll in its background </s>
<s> for example jlabel message = new jlabel( hello world! jlabelcenter ) messagesetforeground( colorred ) // display red text messagesetbackground( colorblack ) // on a black background messagesetfont( new font( seriffontbold18 ) ) // in a big bold font messagesetopaque( true ) // make sure background is filled in 663 jcheckbox a jcheckbox is a component that has two states selected or unselected </s>
<s> the user can change the state of a check box by clicking on it </s>
<s> the state of a checkbox is represented by a boolean value that is true if the box is selected and is false if the box is unselected </s>
<s> a checkbox has a label which is speciﬁed when the box is constructed jcheckbox showtime = new jcheckbox( show current time ) usually it’s the user who sets the state of a jcheckbox but you can also set the state in your program </s>
<s> the current state of a checkbox is set using its setselected( boolean ) method </s>
<s> for example if you want the checkbox showtime to be checked you would say showtimesetselected( true ) </s>
<s> to uncheck the box say showtimesetselected( false ) you can determine the current state of a checkbox by calling its isselected( ) method which returns a boolean value in many cases you don’t need to worry about events from checkboxes </s>
<s> your program can just check the state whenever it needs to know it by calling the isselected( ) method </s>
<s> however a checkbox does generate an event when its state is changed by the user and you can detect this event and respond to it if you want something to happen at the moment the state changes </s>
<s> when the state of a checkbox is changed by the user it generates an event of type actionevent </s>
<s> if you want something to happen when the user changes the state you must register an actionlistener with the checkbox by calling its addactionlistener( ) method ( note that if you change the state by calling the setselected( ) method no actionevent is generated </s>
<s> however there is another method in the jcheckbox class doclick( ) which simulates a user click on the checkbox and does generate an actionevent ) when handling an actionevent you can call evtgetsource( ) in the actionperformed( ) method to ﬁnd out which object generated the event ( of course if you are only listening for events from one component you don’t have to do this ) the returned value is of type object but you can type-cast it to another type if you want </s>
<s> once you know the object that generated the event you can ask the object to tell you its current state </s>
<s> for example if you know that the event had to come from one of two checkboxes cb1 or cb2 then your actionperformed( ) method might look like this public void actionperformed( actionevent evt ) { object source = evtgetsource( ) if ( source == cb1 ) { boolean newstate = cb1isselected( ) // respond to the change of state } else if ( source == cb2 ) { 284 chapter 6 </s>
<s> introduction to gui programming boolean newstate = cb2isselected( ) // respond to the change of state } } alternatively you can use evtgetactioncommand( ) to retrieve the action command associated with the source </s>
<s> for a jcheckbox the action command is by default the label of the checkbox 664 jtextfield and jtextarea the jtextfield and jtextarea classes represent components that contain text that can be edited by the user </s>
<s> a jtextfield holds a single line of text while a jtextarea can hold multiple lines it is also possible to set a jtextfield or jtextarea to be read-only so that the user can read the text that it contains but cannot edit the text </s>
<s> both classes are subclasses of an abstract class jtextcomponent which deﬁnes their common properties jtextfield and jtextarea have many methods in common </s>
<s> the instance method settext( ) which takes a parameter of type string can be used to change the text that is displayed in an input component </s>
<s> the contents of the component can be retrieved by calling its gettext( ) instance method which returns a value of type string </s>
<s> if you want to stop the user from modifying the text you can call seteditable( false ) </s>
<s> call the same method with a parameter of true to make the input component user-editable again the user can only type into a text component when it has the input focus </s>
<s> the user can give the input focus to a text component by clicking it with the mouse but sometimes it is useful to give the input focus to a text ﬁeld programmatically </s>
<s> you can do this by calling its requestfocus( ) method </s>
<s> for example when i discover an error in the user’s input i usually call requestfocus( ) on the text ﬁeld that contains the error </s>
<s> this helps the user see where the error occurred and lets the user start typing the correction immediately by default there is no space between the text in a text component and the edge of the component which usually doesn’t look very good </s>
<s> you can use the setmargin( ) method of the component to add some blank space between the edge of the component and the text this method takes a parameter of type javaawtinsets which contains four integer instance variables that specify the margins on the top left bottom and right edge of the component for example textcomponentsetmargin( new insets( 5555 ) ) adds a ﬁve-pixel margin between the text in textcomponent and each edge of the component ∗ ∗ ∗ the jtextfield class has a constructor public jtextfield( int columns ) where columns is an integer that speciﬁes the number of characters that should be visible in the text ﬁeld </s>
<s> this is used to determine the preferred width of the text ﬁeld ( because characters can be of diﬀerent sizes and because the preferred width is not always respected the actual number of characters visible in the text ﬁeld might not be equal to columns ) you don’t have to specify the number of columns for example you might use the text ﬁeld in a context where it will expand to ﬁll whatever space is available </s>
<s> in that case you can use the default constructor jtextfield( ) with no parameters </s>
<s> you can also use the following constructors which specify the initial contents of the text ﬁeld 285 66 </s>
<s> basic components public jtextfield( string contents ) public jtextfield( string contents int columns ) the constructors for a jtextarea are public public public public jtextarea( ) jtextarea( int rows int columns ) jtextarea( string contents ) jtextarea( string contents int rows int columns ) the parameter rows speciﬁes how many lines of text should be visible in the text area </s>
<s> this determines the preferred height of the text area just as columns determines the preferred width however the text area can actually contain any number of lines the text area can be scrolled to reveal lines that are not currently visible </s>
<s> it is common to use a jtextarea as the center component of a borderlayout </s>
<s> in that case it is less useful to specify the number of lines and columns since the textarea will expand to ﬁll all the space available in the center area of the container the jtextarea class adds a few useful methods to those inherited from jtextcomponent for example the instance method append( moretext ) where moretext is of type string adds the speciﬁed text at the end of the current content of the text area ( when using append( ) or settext( ) to add text to a jtextarea line breaks can be inserted in the text by using the newline character ’n’ ) and setlinewrap( wrap ) where wrap is of type boolean tells what should happen when a line of text is too long to be displayed in the text area </s>
<s> if wrap is true then any line that is too long will be wrapped” onto the next line if wrap is false the line will simply extend outside the text area and the user will have to scroll the text area horizontally to see the entire line </s>
<s> the default value of wrap is false since it might be necessary to scroll a text area to see all the text that it contains you might expect a text area to come with scroll bars </s>
<s> unfortunately this does not happen automatically to get scroll bars for a text area you have to put the jtextarea inside another component called a jscrollpane </s>
<s> this can be done as follows jtextarea inputarea = new jtextarea( ) jscrollpane scroller = new jscrollpane( inputarea ) the scroll pane provides scroll bars that can be used to scroll the text in the text area </s>
<s> the scroll bars will appear only when needed that is when the size of the text exceeds the size of the text area </s>
<s> note that when you want to put the text area into a container you should add the scroll pane not the text area itself to the container </s>
<s> see the short example textareademojava for an example of using a text area ∗ ∗ ∗ when the user is typing in a jtextfield and presses return an actionevent is generated if you want to respond to such events you can register an actionlistener with the text ﬁeld using the text ﬁeld’s addactionlistener( ) method ( since a jtextarea can contain multiple lines of text pressing return in a text area does not generate an event it simply begins a new line of text ) jtextfield has a subclass jpasswordfield which is identical except that it does not reveal the text that it contains </s>
<s> the characters in a jpasswordfield are all displayed as asterisks ( or some other ﬁxed character ) </s>
<s> a password ﬁeld is obviously designed to let the user enter a password without showing that password on the screen text components are actually quite complex and i have covered only their most basic properties here </s>
<s> i will return to the topic of text components in subsection 1344 286 665 chapter 6 </s>
<s> introduction to gui programming jcombobox the jcombobox class provides a way to let the user select one option from a list of options the options are presented as a kind of pop-up menu and only the currently selected option is visible on the screen when a jcombobox object is ﬁrst constructed it initially contains no items </s>
<s> an item is added to the bottom of the list of options by calling the combo box’s instance method additem( str ) where str is the string that will be displayed in the menu for example the following code will create an object of type jcombobox that contains the options red blue green and black jcombobox colorchoice = new jcombobox( ) colorchoiceadditem( red ) colorchoiceadditem( blue ) colorchoiceadditem( green ) colorchoiceadditem( black ) you can call the getselectedindex( ) method of a jcombobox to ﬁnd out which item is currently selected </s>
<s> this method returns an integer that gives the position of the selected item in the list where the items are numbered starting from zero </s>
<s> alternatively you can call getselecteditem( ) to get the selected item itself ( this method returns a value of type object since a jcombobox can actually hold other types of objects besides strings ) you can change the selection by calling the method setselectedindex( n ) where n is an integer giving the position of the item that you want to select the most common way to use a jcombobox is to call its getselectedindex( ) method when you have a need to know which item is currently selected </s>
<s> however like other components that we have seen jcombobox components generate actionevents when the user selects an item you can register an actionlistener with the jcombobox if you want to respond to such events as they occur jcomboboxes have a nifty feature which is probably not all that useful in practice </s>
<s> you can make a jcombobox editable” by calling its method seteditable( true ) </s>
<s> if you do this the user can edit the selection by clicking on the jcombobox and typing </s>
<s> this allows the user to make a selection that is not in the pre-conﬁgured list that you provide ( the combo” in the name jcombobox” refers to the fact that it’s a kind of combination of menu and text-input box ) if the user has edited the selection in this way then the getselectedindex( ) method will return the value -1 and getselecteditem( ) will return the string that the user typed an actionevent is triggered if the user presses return while typing in the jcombobox 666 jslider a jslider provides a way for the user to select an integer value from a range of possible values the user does this by dragging a knob” along a bar </s>
<s> a slider can optionally be decorated with tick marks and with labels </s>
<s> this picture shows three sliders with diﬀerent decorations and with diﬀerent ranges of values 66 </s>
<s> basic components 287 here the second slider is decorated with ticks and the third one is decorated with labels </s>
<s> it’s possible for a single slider to have both types of decorations the most commonly used constructor for jsliders speciﬁes the start and end of the range of values for the slider and its initial value when it ﬁrst appears on the screen public jslider( int minimum int maximum int value ) if the parameters are omitted the values 0 100 and 50 are used </s>
<s> by default a slider is horizontal but you can make it vertical by calling its method setorientation( jslidervertical ) the current value of a jslider can be read at any time with its getvalue( ) method which returns a value of type int </s>
<s> if you want to change the value you can do so with the method setvalue( n ) which takes a parameter of type int if you want to respond immediately when the user changes the value of a slider you can register a listener with the slider </s>
<s> jsliders unlike other components we have seen do not generate actionevents </s>
<s> instead they generate events of type changeevent </s>
<s> changeevent and related classes are deﬁned in the package javaxswingevent rather than javaawtevent so if you want to use changeevents you should import javaxswingevent* at the beginning of your program </s>
<s> you must also deﬁne some object to implement the changelistener interface and you must register the change listener with the slider by calling its addchangelistener( ) method </s>
<s> a changelistener must provide a deﬁnition for the method public void statechanged( changeevent evt ) this method will be called whenever the value of the slider changes </s>
<s> note that it will also be called when you change the value with the setvalue( ) method as well as when the user changes the value </s>
<s> in the statechanged( ) method you can call evtgetsource( ) to ﬁnd out which object generated the event </s>
<s> if you want to know whether the user generated the change event call the slider’s getvalueisadjusting( ) method which returns true if the user is dragging the knob on the slider using tick marks on a slider is a two-step process specify the interval between the tick marks and tell the slider that the tick marks should be displayed </s>
<s> there are actually two types of tick marks major” tick marks and minor” tick marks </s>
<s> you can have one or the other or both </s>
<s> major tick marks are a bit longer than minor tick marks </s>
<s> the method setminortickspacing( i ) indicates that there should be a minor tick mark every i units along the slider </s>
<s> the parameter is an integer ( the spacing is in terms of values on the slider not pixels ) for the major tick marks there is a similar command setmajortickspacing( i ) calling these methods is not enough to make the tick marks appear </s>
<s> you also have to call setpaintticks( true ) </s>
<s> for example the second slider in the above picture was created and conﬁgured using the commands slider2 = new jslider( ) // ( uses default min max and value ) slider2addchangelistener( this ) slider2setmajortickspacing( 25 ) slider2setminortickspacing( 5 ) slider2setpaintticks( true ) abels on a slider are handled similarly </s>
<s> you have to specify the labels and tell the slider to paint them </s>
<s> specifying labels is a tricky business but the jslider class has a method to simplify it </s>
<s> you can create a set of labels and add them to a slider named sldr with the command sldrsetlabeltable( sldrcreatestandardlabels( i ) ) 288 chapter 6 </s>
<s> introduction to gui programming where i is an integer giving the spacing between the labels </s>
<s> to arrange for the labels to be displayed call setpaintlabels( true ) </s>
<s> for example the third slider in the above picture was created and conﬁgured with the commands slider3 = new jslider( 200021002006 ) slider3addchangelistener( this ) slider3setlabeltable( slider3createstandardlabels( 50 ) ) slider3setpaintlabels( true ) 67 basic layout components are the fundamental building blocks of a graphical user interface but you have to do more with components besides create them </s>
<s> another aspect of gui programming is laying out components on the screen that is deciding where they are drawn and how big they are </s>
<s> you have probably noticed that computing coordinates can be a diﬃcult problem especially if you don’t assume a ﬁxed size for the drawing area </s>
<s> java has a solution for this as well components are the visible objects that make up a gui </s>
<s> some components are containers which can hold other components </s>
<s> containers in java are objects that belong to some subclass of javaawtcontainer </s>
<s> the content pane of a japplet or jframe is an example of a container the standard class jpanel which we have mostly used as a drawing surface up until now is another example of a container because a jpanel object is a container it can hold other components </s>
<s> because a jpanel is itself a component you can add a jpanel to another jpanel </s>
<s> this makes complex nesting of components possible </s>
<s> jpanels can be used to organize complicated user interfaces as shown in this illustration three panels shown in color containing six other components shown in gray the components in a container must be laid out” which means setting their sizes and positions </s>
<s> it’s possible to program the layout yourself but layout is ordinarily done by a layout manager </s>
<s> a layout manager is an object associated with a container that implements some policy for laying out the components in that container </s>
<s> diﬀerent types of layout manager 67 </s>
<s> basic layout 289 implement diﬀerent policies </s>
<s> in this section we will cover the three most common types of layout manager and then we will look at several programming examples that use components and layout every container has a default layout manager and has an instance method setlayout( ) that takes a parameter of type layoutmanager and that is used to specify a diﬀerent layout manager for the container </s>
<s> components are added to a container by calling an instance method named add( ) in the container object </s>
<s> there are actually several versions of the add( ) method with diﬀerent parameter lists </s>
<s> diﬀerent versions of add( ) are appropriate for diﬀerent layout managers as we will see below 671 basic layout managers java has a variety of standard layout managers that can be used as parameters in the setlayout( ) method </s>
<s> they are deﬁned by classes in the package javaawt </s>
<s> here we will look at just three of these layout manager classes flowlayout borderlayout and gridlayout a flowlayout simply lines up components in a row across the container </s>
<s> the size of each component is equal to that component’s preferred size” after laying out as many items as will ﬁt in a row across the container the layout manager will move on to the next row </s>
<s> the default layout for a jpanel is a flowlayout that is a jpanel uses a flowlayout unless you specify a diﬀerent layout manager by calling the panel’s setlayout( ) method the components in a given row can be either left-aligned right-aligned or centered within that row and there can be horizontal and vertical gaps between components </s>
<s> if the default constructor new flowlayout( )” is used then the components on each row will be centered and both the horizontal and the vertical gaps will be ﬁve pixels </s>
<s> the constructor public flowlayout( int align int hgap int vgap ) can be used to specify alternative alignment and gaps </s>
<s> the possible values of align are flowlayoutleft flowlayoutright and flowlayoutcenter suppose that cntr is a container object that is using a flowlayout as its layout manager then a component comp can be added to the container with the statement cntradd( comp ) the flowlayout will line up all the components that have been added to the container in this way </s>
<s> they will be lined up in the order in which they were added </s>
<s> for example this picture shows ﬁve buttons in a panel that uses a flowlayout note that since the ﬁve buttons will not ﬁt in a single row across the panel they are arranged in two rows </s>
<s> in each row the buttons are grouped together and are centered in the row </s>
<s> the buttons were added to the panel using the statements paneladd( button1 ) paneladd( button2 ) paneladd( button3 ) paneladd( button4 ) paneladd( button5 ) 290 chapter 6 </s>
<s> introduction to gui programming when a container uses a layout manager the layout manager is ordinarily responsible for computing the preferred size of the container ( although a diﬀerent preferred size could be set by calling the container’s setpreferredsize method ) </s>
<s> a flowlayout prefers to put its components in a single row so the preferred width is the total of the preferred widths of all the components plus the horizontal gaps between the components </s>
<s> the preferred height is the maximum preferred height of all the components ∗ ∗ ∗ a borderlayout layout manager is designed to display one large central component with up to four smaller components arranged along the edges of the central component </s>
<s> if a container cntr is using a borderlayout then a component comp should be added to the container using a statement of the form cntradd( comp borderlayoutposition ) where borderlayoutposition speciﬁes what position the component should occupy in the layout and is given as one of the constants borderlayoutcenter borderlayoutnorth borderlayoutsouth borderlayouteast or borderlayoutwest </s>
<s> the meaning of the ﬁve positions is shown in this diagram center east west north south note that a border layout can contain fewer than ﬁve components so that not all ﬁve of the possible positions need to be ﬁlled </s>
<s> it would be very unusual however to have no center component a borderlayout selects the sizes of its components as follows the north and south components ( if present ) are shown at their preferred heights but their width is set equal to the full width of the container </s>
<s> the east and west components are shown at their preferred widths but their height is set to the height of the container minus the space occupied by the north and south components </s>
<s> finally the center component takes up any remaining space </s>
<s> the preferred size of the center component is ignored when the layout is done but it is taken into account when the preferred size of the container is computed </s>
<s> you should make sure that the components that you put into a borderlayout are suitable for the positions that they will occupy </s>
<s> a horizontal slider or text ﬁeld for example would work well in the north or south position but wouldn’t make much sense in the east or west position the default constructor new borderlayout( ) leaves no space between components </s>
<s> if you would like to leave some space you can specify horizontal and vertical gaps in the constructor of the borderlayout object </s>
<s> for example if you say panelsetlayout( new borderlayout( 57 ) ) then the layout manager will insert horizontal gaps of 5 pixels between components and vertical gaps of 7 pixels between components </s>
<s> the background color of the container will show through 291 67 </s>
<s> basic layout in these gaps </s>
<s> the default layout for the original content pane that comes with a jframe or japplet is a borderlayout with no horizontal or vertical gap ∗ ∗ ∗ finally we consider the gridlayout layout manager </s>
<s> a grid layout lays out components in a grid containing rows and columns of equal sized rectangles </s>
<s> this illustration shows how the components would be arranged in a grid layout with 3 rows and 2 columns #1 #2 #3 #4 #5 #6 if a container uses a gridlayout the appropriate add method for the container takes a single parameter of type component ( for example cntradd( comp ) ) </s>
<s> components are added to the grid in the order shown that is each row is ﬁlled from left to right before going on the next row the constructor for a gridlayout takes the form new gridlayout( rc )” where r is the number of rows and c is the number of columns </s>
<s> if you want to leave horizontal gaps of h pixels between columns and vertical gaps of v pixels between rows use new gridlayout( rchv )” instead when you use a gridlayout it’s probably good form to add just enough components to ﬁll the grid </s>
<s> however this is not required </s>
<s> in fact as long as you specify a non-zero value for the number of rows then the number of columns is essentially ignored </s>
<s> the system will use just as many columns as are necessary to hold all the components that you add to the container </s>
<s> if you want to depend on this behavior you should probably specify zero as the number of columns you can also specify the number of rows as zero </s>
<s> in that case you must give a non-zero number of columns </s>
<s> the system will use the speciﬁed number of columns with just as many rows as necessary to hold the components that are added to the container horizontal grids with a single row and vertical grids with a single column are very common </s>
<s> for example suppose that button1 button2 and button3 are buttons and that you’d like to display them in a horizontal row in a panel </s>
<s> if you use a horizontal grid for the panel then the buttons will completely ﬁll that panel and will all be the same size </s>
<s> the panel can be created as follows jpanel buttonbar = new jpanel( ) buttonbarsetlayout( new gridlayout( 13 ) ) // ( note the 3 here is pretty much ignored and // you could also say new gridlayout( 10 ) // to leave gaps between the buttons you could use // new gridlayout( 1055 ) ) buttonbaradd( button1 ) buttonbaradd( button2 ) buttonbaradd( button3 ) you might ﬁnd this button bar to be more attractive than the one that uses the default flowlayout layout manager 292 chapter 6 </s>
<s> introduction to gui programming 672 borders we have seen how to leave gaps between the components in a container but what if you would like to leave a border around the outside of the container this problem is not handled by layout managers </s>
<s> instead borders in swing are represented by objects </s>
<s> a border object can be added to any jcomponent not just to containers </s>
<s> borders can be more than just empty space the class javaxswingborderfactory contains a large number of static methods for creating border objects </s>
<s> for example the function borderfactorycreatelineborder( colorblack ) returns an object that represents a one-pixel wide black line around the outside of a component if comp is a jcomponent a border can be added to comp using its setborder( ) method </s>
<s> for example compsetborder( borderfactorycreatelineborder( colorblack ) ) once a border has been set for a jcomponent the border is drawn automatically without any further eﬀort on the part of the programmer </s>
<s> the border is drawn along the edges of the component just inside its boundary </s>
<s> the layout manager of a jpanel or other container will take the space occupied by the border into account </s>
<s> the components that are added to the container will be displayed in the area inside the border </s>
<s> i don’t recommend using a border on a jpanel that is being used as a drawing surface </s>
<s> however if you do this you should take the border into account </s>
<s> if you draw in the area occupied by the border that part of your drawing will be covered by the border here are some of the static methods that can be used to create borders • borderfactorycreateemptyborder( topleftbottomright ) — leaves an empty border around the edges of a component </s>
<s> nothing is drawn in this space so the background color of the component will appear in the area occupied by the border </s>
<s> the parameters are integers that give the width of the border along the top left bottom and right edges of the component </s>
<s> this is actually very useful when used on a jpanel that contains other components </s>
<s> it puts some space between the components and the edge of the panel </s>
<s> it can also be useful on a jlabel which otherwise would not have any space between the text and the edge of the label • borderfactorycreatelineborder( colorthickness ) — draws a line around all four edges of a component </s>
<s> the ﬁrst parameter is of type color and speciﬁes the color of the line </s>
<s> the second parameter is an integer that speciﬁes the thickness of the border in pixels </s>
<s> if the second parameter is omitted a line of thickness 1 is drawn • borderfactorycreatematteborder( topleftbottomrightcolor ) — is similar to createlineborder except that you can specify individual thicknesses for the top left bottom and right edges of the component • borderfactorycreateetchedborder( ) — creates a border that looks like a groove etched around the boundary of the component </s>
<s> the eﬀect is achieved using lighter and darker shades of the component’s background color and it does not work well with every background color • borderfactorycreateloweredbevelborder( )—gives a component a three-dimensional eﬀect that makes it look like it is lowered into the computer screen </s>
<s> as with an etchedborder this only works well for certain background colors 67 </s>
<s> basic layout 293 • borderfactorycreateraisedbevelborder( )—similar to a loweredbevelborder but the component looks like it is raised above the computer screen • borderfactorycreatetitledborder( title )—creates a border with a title </s>
<s> the title is a string which is displayed in the upper left corner of the border there are many other methods in the borderfactory class most of them providing variations of the basic border styles given here </s>
<s> the following illustration shows six components with six diﬀerent border styles </s>
<s> the text in each component is the command that created the border for that component ( the source code for the applet that produced this picture can be found in borderdemojava ) 673 sliderandcomboboxdemo now that we have looked at components and layouts it’s time to put them together into some complete programs </s>
<s> we start with a simple demo that uses a jlabel a jcombobox and a couple of jsliders all laid out in a gridlayout as shown in this picture the sliders in this applet control the foreground and background color of the label and the combo box controls its font style </s>
<s> writing this program is a matter of creating the components laying them out and programming listeners to respond to events from the sliders and combo box </s>
<s> in my program i deﬁne a subclass of jpanel which will be used for the applet’s content pane </s>
<s> this class implements changelistener and actionlistener so the panel itself can act as the listener for change events from the sliders and action events from the combo box </s>
<s> in the 294 chapter 6 </s>
<s> introduction to gui programming constructor the four components are created and conﬁgured a gridlayout is installed as the layout manager for the panel and the components are added to the panel /* create the sliders and set up this panel to listen for changeevents that are generated by the sliders */ bgcolorslider = new jslider( 0255100 ) bgcolorslideraddchangelistener( this ) fgcolorslider = new jslider( 0255200 ) fgcolorslideraddchangelistener( this ) /* create the combo box and add four items to it listing different font styles </s>
<s> set up the panel to listen for actionevents from the combo box */ fontstyleselect = new jcombobox( ) fontstyleselectadditem( plain font ) fontstyleselectadditem( italic font ) fontstyleselectadditem( bold font ) fontstyleselectadditem( bold italic font ) fontstyleselectsetselectedindex( 2 ) fontstyleselectaddactionlistener( this ) /* create the display label with properties to match the values of the sliders and the setting of the combo box */ displaylabel = new jlabel( hello world! jlabelcenter ) displaylabelsetopaque( true ) displaylabelsetbackground( new color( 100100100 ) ) displaylabelsetforeground( new color( 255 200 200 ) ) displaylabelsetfont( new font( serif fontbold 30 ) ) /* set the layout for the panel and add the four components use a gridlayout with 4 rows and 1 column */ setlayout( new gridlayout( 41 ) ) add( displaylabel ) add( bgcolorslider ) add( fgcolorslider ) add( fontstyleselect ) the class also deﬁnes the methods required by the actionlistener and changelistener interfaces </s>
<s> the actionperformed( ) method is called when the user selects an item in the combo box </s>
<s> this method changes the font in the jlabel where the font depends on which item is currently selected in the combo box fontstyleselect public void actionperformed( actionevent evt ) { switch ( fontstyleselectgetselectedindex( ) ) { case 0 displaylabelsetfont( new font( serif fontplain 30 ) ) break case 1 displaylabelsetfont( new font( serif fontitalic 30 ) ) break case 2 displaylabelsetfont( new font( serif fontbold 30 ) ) break 67 </s>
<s> basic layout 295 case 3 displaylabelsetfont( new font( serif fontbold + fontitalic 30 ) ) break } } and the statechanged( ) method which is called when the user manipulates one of the sliders uses the value on the slider to compute a new foreground or background color for the label the method checks evtgetsource( ) to determine which slider was changed public void statechanged( changeevent evt ) { if ( evtgetsource( ) == bgcolorslider ) { int bgval = bgcolorslidergetvalue( ) displaylabelsetbackground( new color( bgvalbgvalbgval ) ) // note the background color is a shade of gray // determined by the setting on the slider } else { int fgval = fgcolorslidergetvalue( ) displaylabelsetforeground( new color( 255 fgval fgval ) ) // note the foreground color ranges from pure red to pure // white as the slider value increases from 0 to 255 } } ( the complete source code is in the ﬁle sliderandcomboboxdemojava ) 674 a simple calculator as our next example we look brieﬂy at an example that uses nested subpanels to build a more complex user interface </s>
<s> the program has two jtextfields where the user can enter two numbers four jbuttons that the user can click to add subtract multiply or divide the two numbers and a jlabel that displays the result of the operation ike the previous example this example uses a main panel with a gridlayout that has four rows and one column </s>
<s> in this case the layout is created with the statement setlayout( new gridlayout( 4133 ) ) which allows a 3-pixel gap between the rows where the gray background color of the panel is visible </s>
<s> the gray border around the edges of the panel is added with the statement setborder( borderfactorycreateemptyborder( 5555 ) ) 296 chapter 6 </s>
<s> introduction to gui programming the ﬁrst row of the grid layout actually contains two components a jlabel displaying the text x =” and a jtextfield </s>
<s> a grid layout can only have one component in each position </s>
<s> in this case that component is a jpanel a subpanel that is nested inside the main panel </s>
<s> this subpanel in turn contains the label and text ﬁeld </s>
<s> this can be programmed as follows xinput = new jtextfield( 0 10 ) jpanel xpanel = new jpanel( ) xpaneladd( new jlabel( x = ) ) xpaneladd( xinput ) mainpaneladd( xpanel ) // // // // // create a text field sized to hold 10 chars create the subpanel add a label to the subpanel add the text field to the subpanel add the subpanel to the main panel the subpanel uses the default flowlayout layout manager so the label and text ﬁeld are simply placed next to each other in the subpanel at their preferred size and are centered in the subpanel similarly the third row of the grid layout is a subpanel that contains four buttons </s>
<s> in this case the subpanel uses a gridlayout with one row and four columns so that the buttons are all the same size and completely ﬁll the subpanel one other point of interest in this example is the actionperformed( ) method that responds when the user clicks one of the buttons </s>
<s> this method must retrieve the user’s numbers from the text ﬁeld perform the appropriate arithmetic operation on them ( depending on which button was clicked ) and set the text of the label ( named answer ) to represent the result </s>
<s> however the contents of the text ﬁelds can only be retrieved as strings and these strings must be converted into numbers </s>
<s> if the conversion fails the label is set to display an error message public void actionperformed( actionevent evt ) { double x y // the numbers from the input boxes try { string xstr = xinputgettext( ) x = doubleparsedouble( xstr ) } catch ( numberformatexception e ) { // the string xstr is not a legal number answersettext( illegal data for x ) xinputrequestfocus( ) return } try { string ystr = yinputgettext( ) y = doubleparsedouble( ystr ) } catch ( numberformatexception e ) { // the string ystr is not a legal number answersettext( illegal data for y ) yinputrequestfocus( ) return } /* perform the operation based on the action command from the button </s>
<s> the action command is the text displayed on the button note that division by zero produces an error message */ string op = evtgetactioncommand( ) 67 </s>
<s> basic layout 297 if ( opequals( + ) ) answersettext( x + y = + ( x+y ) ) else if ( opequals( - ) ) answersettext( x - y = + ( x-y ) ) else if ( opequals( * ) ) answersettext( x * y = + ( x*y ) ) else if ( opequals( / ) ) { if ( y == 0 ) answersettext( can’t divide by zero! ) else answersettext( x / y = + ( x/y ) ) } } // end actionperformed( ) ( the complete source code for this example can be found in simplecalcjava ) 675 using a null layout as mentioned above it is possible to do without a layout manager altogether </s>
<s> for our next example we’ll look at a panel that does not use a layout manager </s>
<s> if you set the layout manager of a container to be null by calling containersetlayout( null ) then you assume complete responsibility for positioning and sizing the components in that container if comp is any component then the statement compsetbounds( x y width height ) puts the top left corner of the component at the point ( xy ) measured in the coordinate system of the container that contains the component and it sets the width and height of the component to the speciﬁed values </s>
<s> you should only set the bounds of a component if the container that contains it has a null layout manager </s>
<s> in a container that has a non-null layout manager the layout manager is responsible for setting the bounds and you should not interfere with its job assuming that you have set the layout manager to null you can call the setbounds( ) method any time you like ( you can even make a component that moves or changes size while the user is watching ) if you are writing a panel that has a known ﬁxed size then you can set the bounds of each component in the panel’s constructor </s>
<s> note that you must also add the components to the panel using the panel’s add( component ) instance method otherwise the component will not appear on the screen our example contains four components two buttons a label and a panel that displays a checkerboard pattern 298 chapter 6 </s>
<s> introduction to gui programming this is just an example of using a null layout it doesn’t do anything except that clicking the buttons changes the text of the label ( we will use this example in section 75 as a starting point for a checkers game ) for its content pane this example uses a main panel that is deﬁned by a class named nulllayoutpanel </s>
<s> the four components are created and added to the panel in the constructor of the nulllayoutpanel class </s>
<s> then the setbounds( ) method of each component is called to set the size and position of the component public nulllayoutpanel( ) { setlayout( null ) // i will do the layout myself! setbackground( new color( 01500 ) ) // a dark green background setborder( borderfactorycreateetchedborder( ) ) setpreferredsize( new dimension( 350240 ) ) // i assume that the size of the panel is in fact 350-by-240 /* create the components and add them to the content pane don’t add them to a container they won’t appear even if you set their bounds! */ if you board = new checkerboard( ) // ( checkerboard is a subclass of jpanel defined elsewhere ) add( board ) newgamebutton = new jbutton( new game ) newgamebuttonaddactionlistener( this ) add( newgamebutton ) resignbutton = new jbutton( resign ) resignbuttonaddactionlistener( this ) add( resignbutton ) message = new jlabel( click new game to begin a game ) messagesetforeground( new color( 100255100 ) ) // light green messagesetfont( new font( serif fontbold 14 ) ) add( message ) /* set the position and size of each component by calling 67 </s>
<s> basic layout 299 its setbounds( ) method */ boardsetbounds( 2020164164 ) newgamebuttonsetbounds( 210 60 120 30 ) resignbuttonsetbounds( 210 120 120 30 ) messagesetbounds( 20 200 330 30 ) } // end constructor it’s reasonably easy in this case to get an attractive layout </s>
<s> it’s much more diﬃcult to do your own layout if you want to allow for changes of size </s>
<s> in that case you have to respond to changes in the container’s size by recomputing the sizes and positions of all the components that it contains </s>
<s> if you want to respond to changes in a container’s size you can register an appropriate listener with the container </s>
<s> any component generates an event of type componentevent when its size changes ( and also when it is moved hidden or shown ) </s>
<s> you can register a componentlistener with the container and respond to size change events by recomputing the sizes and positions of all the components in the container </s>
<s> consult a java reference for more information about componentevents </s>
<s> however my real advice is that if you want to allow for changes in the container’s size try to ﬁnd a layout manager to do the work for you ( the complete source code for this example is in nulllayoutdemojava ) 676 a little card game for a ﬁnal example let’s look at something a little more interesting as a program </s>
<s> the example is a simple card game in which you look at a playing card and try to predict whether the next card will be higher or lower in value ( aces have the lowest value in this game ) you’ve seen a text-oriented version of the same game in subsection 543 </s>
<s> section 54 also introduced deck hand and card classes that are used in the game program </s>
<s> in this gui version of the game you click on a button to make your prediction </s>
<s> if you predict wrong you lose </s>
<s> if you make three correct predictions you win </s>
<s> after completing one game you can click the new game” button to start a new game </s>
<s> here is what the game looks like the game is implemented in a subclass of jpanel that is used as the content pane in the applet the source code for the panel is highlowguipaneljava </s>
<s> applet and standalone versions of the program are deﬁned by highlowguiappletjava and highlowguijava </s>
<s> you can try out the game in the on-line version of this section or by running the program as a stand-alone application 300 chapter 6 </s>
<s> introduction to gui programming the overall structure of the main panel in this example should be clear it has three buttons in a subpanel at the bottom of the main panel and a large drawing surface that displays the cards and a message ( the cards and message are not themselves components in this example they are drawn in the panel’s paintcomponent( ) method ) the main panel uses a borderlayout the drawing surface occupies the center position of the border layout </s>
<s> the subpanel that contains the buttons occupies the south position of the border layout and the other three positions of the layout are empty the drawing surface is deﬁned by a nested class named cardpanel which is a subclass of jpanel </s>
<s> i have chosen to let the drawing surface object do most of the work of the game it listens for events from the three buttons and responds by taking the appropriate actions the main panel is deﬁned by highlowguipanel itself which is another subclass of jpanel the constructor of the highlowguipanel class creates all the other components sets up event handling and lays out the components public highlowguipanel( ) { // the constructor setbackground( new color( 1305040 ) ) setlayout( new borderlayout( 33 ) ) cardpanel board = new cardpanel( ) add( board borderlayoutcenter ) // borderlayout with 3-pixel gaps // where the cards are drawn jpanel buttonpanel = new jpanel( ) // the subpanel that holds the buttons buttonpanelsetbackground( new color( 220200180 ) ) add( buttonpanel borderlayoutsouth ) jbutton higher = new jbutton( higher ) higheraddactionlistener( board ) // the cardpanel listens for events buttonpaneladd( higher ) jbutton lower = new jbutton( lower ) loweraddactionlistener( board ) buttonpaneladd( lower ) jbutton newgame = new jbutton( new game ) newgameaddactionlistener( board ) buttonpaneladd( newgame ) setborder( borderfactorycreatelineborder( new color( 1305040 ) 3 ) ) } // end constructor the programming of the drawing surface class cardpanel is a nice example of thinking in terms of a state machine ( see subsection 654 ) it is important to think in terms of the states that the game can be in how the state can change and how the response to events can depend on the state </s>
<s> the approach that produced the original text-oriented game in subsection 543 is not appropriate here </s>
<s> trying to think about the game in terms of a process that goes step-by-step from beginning to end is more likely to confuse you than to help you the state of the game includes the cards and the message </s>
<s> the cards are stored in an object of type hand </s>
<s> the message is a string </s>
<s> these values are stored in instance variables there is also another less obvious aspect of the state sometimes a game is in progress and the user is supposed to make a prediction about the next card </s>
<s> sometimes we are between games and the user is supposed to click the new game” button </s>
<s> it’s a good idea to keep 67 </s>
<s> basic layout 301 track of this basic diﬀerence in state </s>
<s> the cardpanel class uses a boolean instance variable named gameinprogress for this purpose the state of the game can change whenever the user clicks on a button </s>
<s> the cardpanel class implements the actionlistener interface and deﬁnes an actionperformed( ) method to respond to the user’s clicks </s>
<s> this method simply calls one of three other methods dohigher( ) dolower( ) or newgame( ) depending on which button was pressed </s>
<s> it’s in these three eventhandling methods that the action of the game takes place we don’t want to let the user start a new game if a game is currently in progress </s>
<s> that would be cheating </s>
<s> so the response in the newgame( ) method is diﬀerent depending on whether the state variable gameinprogress is true or false </s>
<s> if a game is in progress the message instance variable should be set to show an error message </s>
<s> if a game is not in progress then all the state variables should be set to appropriate values for the beginning of a new game </s>
<s> in any case the board must be repainted so that the user can see that the state has changed </s>
<s> the complete newgame( ) method is as follows /** * called by the cardpanel constructor and called by actionperformed( ) if * the user clicks the new game button </s>
<s> start a new game */ void donewgame( ) { if ( gameinprogress ) { // if the current game is not over it is an error to try // to start a new game message = you still have to finish this game! repaint( ) return } deck = new deck( ) // create the deck and hand to use for this game hand = new hand( ) deckshuffle( ) handaddcard( deckdealcard( ) ) // deal the first card into the hand message = is the next card higher or lower gameinprogress = true repaint( ) } // end donewgame( ) the dohigher( ) and dolower( ) methods are almost identical to each other ( and could probably have been combined into one method with a parameter if i were more clever ) </s>
<s> let’s look at the dohigher( ) routine </s>
<s> this is called when the user clicks the higher” button </s>
<s> this only makes sense if a game is in progress so the ﬁrst thing dohigher( ) should do is check the value of the state variable gameinprogress </s>
<s> if the value is false then dohigher( ) should just set up an error message </s>
<s> if a game is in progress a new card should be added to the hand and the user’s prediction should be tested </s>
<s> the user might win or lose at this time </s>
<s> if so the value of the state variable gameinprogress must be set to false because the game is over </s>
<s> in any case the board is repainted to show the new state </s>
<s> here is the dohigher( ) method /** * called by actionperformed( ) when user clicks higher button * check the user’s prediction </s>
<s> game ends if user guessed * wrong or if the user has made three correct predictions */ void dohigher( ) { 302 chapter 6 </s>
<s> introduction to gui programming if ( gameinprogress == false ) { // if the game has ended it was an error to click higher // so set up an error message and abort processing message = click new game to start a new game! repaint( ) return } handaddcard( deckdealcard( ) ) // deal a card to the hand int cardct = handgetcardcount( ) card thiscard = handgetcard( cardct - 1 ) // card just dealt card prevcard = handgetcard( cardct - 2 ) // the previous card if ( thiscardgetvalue( ) < prevcardgetvalue( ) ) { gameinprogress = false message = too bad! you lose } else if ( thiscardgetvalue( ) == prevcardgetvalue( ) ) { gameinprogress = false message = too bad! you lose on ties } else if ( cardct == 4 ) { gameinprogress = false message = you win! you made three correct guesses } else { message = got it right! try for + cardct + } repaint( ) } // end dohigher( ) the paintcomponent( ) method of the cardpanel class uses the values in the state variables to decide what to show </s>
<s> it displays the string stored in the message variable </s>
<s> it draws each of the cards in the hand </s>
<s> there is one little tricky bit if a game is in progress it draws an extra face-down card which is not in the hand to represent the next card in the deck </s>
<s> drawing the cards requires some care and computation </s>
<s> i wrote a method void drawcard( graphics g card card int x int y )” which draws a card with its upper left corner at the point ( xy ) </s>
<s> the paintcomponent( ) routine decides where to draw each card and calls this routine to do the drawing </s>
<s> you can check out all the details in the source code highlowguipaneljava ( the playing cards used in this program are not very impressive </s>
<s> a version of the program with images that actually look like cards can be found in subsection 1313 ) 68 menus and dialogs we have already encountered many of the basic aspects of gui programming but professional programs use many additional features </s>
<s> we will cover some of the advanced features of java gui programming in chapter 13 but in this section we look brieﬂy at a few more basic features that are essential for writing gui programs </s>
<s> i will discuss these features in the context of a mosaicdraw” program that is shown in this picture 68 </s>
<s> menus and dialogs 303 as the user clicks-and-drags the mouse in the large drawing area of this program it leaves a trail of little colored squares </s>
<s> there is some random variation in the color of the squares ( this is meant to make the picture look a little more like a real mosaic which is a picture made out of small colored stones in which there would be some natural color variation ) there is a menu bar above the drawing area </s>
<s> the control” menu contains commands for ﬁlling and clearing the drawing area along with a few options that aﬀect the appearance of the picture </s>
<s> the color” menu lets the user select the color that will be used when the user draws </s>
<s> the tools” menu aﬀects the behavior of the mouse </s>
<s> using the default draw” tool the mouse leaves a trail of single squares </s>
<s> using the draw 3x3” tool the mouse leaves a swath of colored squares that is three squares wide </s>
<s> there are also erase” tools which let the user set squares back to their default black color the drawing area of the program is a panel that belongs to the mosaicpanel class a subclass of jpanel that is deﬁned in mosaicpaneljava </s>
<s> mosaicpanel is a highly reusable class for representing mosaics of colored rectangles </s>
<s> it does not directly support drawing on the mosaic but it does support setting the color of each individual square </s>
<s> the mosaicdraw program installs a mouse listener on the panel the mouse listener responds to mousepressed and mousedragged events on the panel by setting the color of the square that contains the mouse </s>
<s> this is a nice example of applying a listener to an object to do something that was not programmed into the object itself most of the programming for mosaicdraw can be found in mosaicdrawcontrollerjava ( it could have gone into the mosaicpanel class if i had not decided to use that pre-existing class in unmodiﬁed form ) it is the mosaicdrawcontroller class that creates a mosaicpanel object and adds a mouse listener to it </s>
<s> it also creates the menu bar that is shown at the top of the program and implements all the commands in the menu bar </s>
<s> it has an instance method getmosaicpanel( ) that returns a reference to the mosaic panel that it has created and it has another instance method getmenubar( ) that returns a menu bar for the program </s>
<s> these methods are used to obtain the panel and menu bar so that they can be added to an applet or a frame to get a working program an object of type japplet or jframe is needed </s>
<s> the ﬁles mosaicdrawappletjava and mosaicdrawframejava deﬁne the applet and frame versions of the program </s>
<s> these are rather simple classes they simply create a mosaicdrawcontroller object 304 chapter 6 </s>
<s> introduction to gui programming and use its mosaic panel and menu bar </s>
<s> i urge you to study these ﬁles along with mosaicdrawcontrollerjava </s>
<s> i will not be discussing all aspects of the code here but you should be able to understand it all after reading this section </s>
<s> as for mosaicpaneljava it uses some techniques that you would not understand at this point but i encourage you to at least read the comments in this ﬁle to learn about the api for mosaic panels 681 menus and menubars mosaicdraw is the ﬁrst example that we have seen that uses a menu bar </s>
<s> fortunately menus are very easy to use in java </s>
<s> the items in a menu are represented by the class jmenuitem ( this class and other menu-related classes are in package javaxswing ) </s>
<s> menu items are used in almost exactly the same way as buttons </s>
<s> in fact jmenuitem and jbutton are both subclasses of a class abstractbutton that deﬁnes their common behavior </s>
<s> in particular a jmenuitem is created using a constructor that speciﬁes the text of the menu item such as jmenuitem fillcommand = new jmenuitem( fill ) you can add an actionlistener to a jmenuitem by calling the menu item’s addactionlistener( ) method </s>
<s> the actionperformed( ) method of the action listener is called when the user selects the item from the menu </s>
<s> you can change the text of the item by calling its settext( string ) method and you can enable it and disable it using the setenabled( boolean ) method </s>
<s> all this works in exactly the same way as for a jbutton the main diﬀerence between a menu item and a button of course is that a menu item is meant to appear in a menu rather than in a panel </s>
<s> a menu in java is represented by the class jmenu </s>
<s> a jmenu has a name which is speciﬁed in the constructor and it has an add( jmenuitem ) method that can be used to add a jmenuitem to the menu </s>
<s> so the tools” menu in the mosaicdraw program could be created as follows where listener is a variable of type actionlistener jmenu toolsmenu = new jmenu( tools ) // create a menu with name tools jmenuitem drawcommand = new jmenuitem( draw ) drawcommandaddactionlistener( listener ) toolsmenuadd( drawcommand ) // create a menu item // add listener to menu item // add menu item to menu jmenuitem erasecommand = new jmenuitem( erase ) // create a menu item erasecommandaddactionlistener( listener ) // add listener to menu item toolsmenuadd( erasecommand ) // add menu item to menu // create and add other menu items once a menu has been created it must be added to a menu bar </s>
<s> a menu bar is represented by the class jmenubar </s>
<s> a menu bar is just a container for menus </s>
<s> it does not have a name and its constructor does not have any parameters </s>
<s> it has an add( jmenu ) method that can be used to add menus to the menu bar </s>
<s> the name of the menu then appears in the menu bar </s>
<s> for example the mosaicdraw program uses three menus controlmenu colormenu and toolsmenu </s>
<s> we could create a menu bar and add the menus to it with the statements jmenubar menubar = new jmenubar( ) menubaradd( controlmenu ) menubaradd( colormenu ) menubaradd( toolsmenu ) 305 68 </s>
<s> menus and dialogs the ﬁnal step in using menus is to use the menu bar in a japplet or jframe </s>
<s> we have already seen that an applet or frame has a content pane” the menu bar is another component of the applet or frame not contained inside the content pane </s>
<s> both the japplet and the jframe classes include an instance method setmenubar( jmenubar ) that can be used to set the menu bar ( there can only be one so this is a set” method rather than an add” method ) in the mosaicdraw program the menu bar is created by a mosaicdrawcontroller object and can be obtained by calling that object’s getmenubar( ) method </s>
<s> here is the basic code that is used ( in somewhat modiﬁed form ) to set up the interface both in the applet and in the frame version of the program mosaicdrawcontroller controller = new mosaicdrawcontroller( ) mosaicpanel content = controllergetmosaicpanel( ) setcontentpane( content ) // use panel from controller as content pane jmenubar menubar = controllergetmenubar( ) setjmenubar( menubar ) // use the menu bar from the controller using menus always follows the same general pattern create a menu bar </s>
<s> create menus and add them to the menu bar </s>
<s> create menu items and add them to the menus ( and set up listening to handle action events from the menu items ) </s>
<s> use the menu bar in a japplet or jframe by calling the setjmenubar( ) method of the applet or frame ∗ ∗ ∗ there are other kinds of menu items deﬁned by subclasses of jmenuitem that can be added to menus </s>
<s> one of these is jcheckboxmenuitem which represents menu items that can be in one of two states selected or not selected </s>
<s> a jcheckboxmenuitem has the same functionality and is used in the same way as a jcheckbox ( see subsection 663 ) </s>
<s> three jcheckboxmenuitems are used in the control” menu of the mosaicdraw program </s>
<s> one can be used to turn the random color variation of the squares on and oﬀ </s>
<s> another turns a symmetry feature on and oﬀ when symmetry is turned on the user’s drawing is reﬂected horizontally and vertically to produce a symmetric pattern </s>
<s> and the third checkbox menu item shows and hides the grouting” in the mosaic the grouting is the gray lines that are drawn around each of the little squares in the mosaic </s>
<s> the menu item that corresponds to the use randomness” option in the control” menu could be set up with the statements jmenuitem userandomnesstoggle = new jcheckboxmenuitem( use randomness ) userandomnesstoggleaddactionlistener( listener ) // set up a listener userandomnesstogglesetselected( true ) // randomness is initially turned on controlmenuadd( userandomnesstoggle ) // add the menu item to the menu the use randomness” jcheckboxmenuitem corresponds to a boolean-valued instance variable named userandomness in the mosaicdrawcontroller class </s>
<s> this variable is part of the state of the controller object </s>
<s> its value is tested whenever the user draws one of the squares to decide whether or not to add a random variation to the color of the square </s>
<s> when the user selects the use randomness” command from the menu the state of the jcheckboxmenuitem is reversed from selected to not-selected or from not-selected to selected </s>
<s> the actionlistener for the menu item checks whether the menu item is selected or not and it changes the value of userandomness to match </s>
<s> note that selecting the menu command does not have any immediate eﬀect on the picture that is shown in the window </s>
<s> it just changes the state of the program so that future drawing operations on the part of the user will have a diﬀerent eﬀect </s>
<s> the use symmetry” option in the control” menu works in much the same way </s>
<s> the show grouting” 306 chapter 6 </s>
<s> introduction to gui programming option is a little diﬀerent </s>
<s> selecting the show grouting” option does have an immediate eﬀect the picture is redrawn with or without the grouting depending on the state of the menu item my program uses a single actionlistener to respond to all of the menu items in all the menus </s>
<s> this is not a particularly good design but it is easy to implement for a small program like this one </s>
<s> the actionperformed( ) method of the listener object uses the statement string command = evtgetactioncommand( ) to get the action command of the source of the event this will be the text of the menu item the listener tests the value of command to determine which menu item was selected by the user if the menu item is a jcheckboxmenuitem the listener must check the state of the menu item the menu item is the source of the event that is being processed </s>
<s> the listener can get its hands on the menu item object by calling evtgetsource( ) </s>
<s> since the return value of getsource( ) is of type object the return value must be type-cast to the correct type </s>
<s> here for example is the code that handles the use randomness” command if ( commandequals( use randomness ) ) { // set the value of userandomness depending on the menu item’s state jcheckboxmenuitem toggle = ( jcheckboxmenuitem )evtgetsource( ) userandomness = toggleisselected( ) } ( the actionperformed( ) method uses a rather long ifthenelse statement to check all the possible action commands </s>
<s> this would be a natural place to use a switch statement with command as the selector and all the possible action commands as cases </s>
<s> however this can only be done if you are sure that the program will be run using java 7 or later since strings were not allowed in switch statements in earlier versions of java ) ∗ ∗ ∗ in addition to menu items a menu can contain lines that separate the menu items into groups </s>
<s> in the mosaicdraw program the control” menu contains such a separator </s>
<s> a jmenu has an instance method addseparator( ) that can be used to add a separator to the menu </s>
<s> for example the separator in the control” menu was created with the statement controlmenuaddseparator( ) a menu can also contain a submenu </s>
<s> the name of the submenu appears as an item in the main menu </s>
<s> when the user moves the mouse over the submenu name the submenu pops up ( there is no example of this in the mosaicdraw program ) it is very easy to do this in java you can add one jmenu to another jmenu using a statement such as mainmenuadd( submenu ) 682 dialogs one of the commands in the color” menu of the mosaicdraw program is custom color ” when the user selects this command a new window appears where the user can select a color this window is an example of a dialog or dialog box </s>
<s> a dialog is a type of window that is generally used for short single purpose interactions with the user </s>
<s> for example a dialog box can be used to display a message to the user to ask the user a question to let the user select a ﬁle to be opened or to let the user select a color </s>
<s> in swing a dialog box is represented by an object belonging to the class jdialog or to a subclass the jdialog class is very similar to jframe and is used in much the same way </s>
<s> like a frame a dialog box is a separate window </s>
<s> unlike a frame however a dialog is not completely independent </s>
<s> every dialog is associated with a frame ( or another dialog ) which is called 68 </s>
<s> menus and dialogs 307 its parent window </s>
<s> the dialog box is dependent on its parent </s>
<s> for example if the parent is closed the dialog box will also be closed </s>
<s> it is possible to create a dialog box without specifying a parent but in that case an invisible frame is created by the system to serve as the parent dialog boxes can be either modal or modeless </s>
<s> when a modal dialog is created its parent frame is blocked </s>
<s> that is the user will not be able to interact with the parent until the dialog box is closed </s>
<s> modeless dialog boxes do not block their parents in the same way so they seem a lot more like independent windows </s>
<s> in practice modal dialog boxes are easier to use and are much more common than modeless dialogs </s>
<s> all the examples we will look at are modal aside from having a parent a jdialog can be created and used in the same way as a jframe </s>
<s> however i will not give any examples here of using jdialog directly </s>
<s> swing has many convenient methods for creating common types of dialog boxes </s>
<s> for example the color choice dialog that appears when the user selects the custom color” command in the mosaicdraw program belongs to the class jcolorchooser which is a subclass of jdialog </s>
<s> the jcolorchooser class has a static method that makes color choice dialogs very easy to use color jcolorchoosershowdialog( component parentcomp string title color initialcolor ) when you call this method a dialog box appears that allows the user to select a color </s>
<s> the ﬁrst parameter speciﬁes the parent of the dialog the parent window of the dialog will be the window ( if any ) that contains parentcomp this parameter can be null and it can itself be a frame or dialog object </s>
<s> the second parameter is a string that appears in the title bar of the dialog box </s>
<s> and the third parameter initialcolor speciﬁes the color that is selected when the color choice dialog ﬁrst appears </s>
<s> the dialog has a sophisticated interface that allows the user to change the selected color </s>
<s> when the user presses an ok” button the dialog box closes and the selected color is returned as the value of the method </s>
<s> the user can also click a cancel” button or close the dialog box in some other way in that case null is returned as the value of the method </s>
<s> this is a modal dialog and the showdialog( ) does not return until the user dismisses the dialog box in some way </s>
<s> by using this predeﬁned color chooser dialog you can write one line of code that will let the user select an arbitrary color </s>
<s> swing also has a jfilechooser class that makes it almost as easy to show a dialog box that lets the user select a ﬁle to be opened or saved the joptionpane class includes a variety of methods for making simple dialog boxes that are variations on three basic types a message” dialog a conﬁrm” dialog and an input” dialog ( the variations allow you to provide a title for the dialog box to specify the icon that appears in the dialog and to add other components to the dialog box </s>
<s> i will only cover the most basic forms here ) the on-line version of this section includes an applet that demonstrates joptionpane as well as jcolorchooser a message dialog simply displays a message string to the user </s>
<s> the user ( hopefully ) reads the message and dismisses the dialog by clicking the ok” button </s>
<s> a message dialog can be shown by calling the static method void joptionpaneshowmessagedialog( component parentcomp string message ) the message can be more than one line long </s>
<s> lines in the message should be separated by newline characters n </s>
<s> new lines will not be inserted automatically even if the message is very long an input dialog displays a question or request and lets the user type in a string as a response you can show an input dialog by calling string joptionpaneshowinputdialog( component parentcomp string question ) 308 chapter 6 </s>
<s> introduction to gui programming again the question can include newline characters </s>
<s> the dialog box will contain an input box an ok” button and a cancel” button </s>
<s> if the user clicks cancel” or closes the dialog box in some other way then the return value of the method is null </s>
<s> if the user clicks ok” then the return value is the string that was entered by the user </s>
<s> note that the return value can be an empty string ( which is not the same as a null value ) if the user clicks ok” without typing anything in the input box </s>
<s> if you want to use an input dialog to get a numerical value from the user you will have to convert the return value into a number see subsection 372 finally a conﬁrm dialog presents a question and three response buttons yes” no” and cancel” </s>
<s> a conﬁrm dialog can be shown by calling int joptionpaneshowconfirmdialog( component parentcomp string question ) the return value tells you the user’s response </s>
<s> it is one of the following constants • joptionpaneyes option — the user clicked the yes” button • joptionpaneno option — the user clicked the no” button • joptionpanecancel option — the user clicked the cancel” button • joptionpaneclose option — the dialog was closed in some other way by the way it is possible to omit the cancel button from a conﬁrm dialog by calling one of the other methods in the joptionpane class </s>
<s> just call joptionpaneshowconfirmdialog( parent question title joptionpaneyes no option ) the ﬁnal parameter is a constant which speciﬁes that only a yes” button and a no” button should be used </s>
<s> the third parameter is a string that will be displayed as the title of the dialog box window if you would like to see how dialogs are created and used in the sample applet you can ﬁnd the source code in the ﬁle simpledialogdemojava 683 fine points of frames in previous sections whenever i used a frame i created a jframe object in a main( ) routine and installed a panel as the content pane of that frame </s>
<s> this works ﬁne but a more objectoriented approach is to deﬁne a subclass of jframe and to set up the contents of the frame in the constructor of that class </s>
<s> this is what i did in the case of the mosaicdraw program mosaicdrawframe is deﬁned as a subclass of jframe </s>
<s> the deﬁnition of this class is very short but it illustrates several new features of frames that i want to discuss public class mosaicdrawframe extends jframe { public static void main( string[] args ) { jframe window = new mosaicdrawframe( ) windowsetdefaultcloseoperation( jframeexit on close ) windowsetvisible( true ) } public mosaicdrawframe( ) { super( mosaic draw ) mosaicdrawcontroller controller = new mosaicdrawcontroller( ) setcontentpane( controllergetmosaicpanel( ) ) setjmenubar( controllergetmenubar( ) ) pack( ) 68 </s>
<s> menus and dialogs 309 dimension screensize = toolkitgetdefaulttoolkit( )getscreensize( ) setlocation( ( screensizewidth - getwidth( ) )/2 ( screensizeheight - getheight( ) )/2 ) } } the constructor in this class begins with the statement super( mosaic draw ) which calls the constructor in the superclass jframe </s>
<s> the parameter speciﬁes a title that will appear in the title bar of the window </s>
<s> the next three lines of the constructor set up the contents of the window a mosaicdrawcontroller is created and the content pane and menu bar of the window are obtained from the controller </s>
<s> the next line is something new </s>
<s> if window is a variable of type jframe ( or jdialog ) then the statement windowpack( ) will resize the window so that its size matches the preferred size of its contents ( in this case of course pack( )” is equivalent to thispack( )” that is it refers to the window that is being created by the constructor ) the pack( ) method is usually the best way to set the size of a window </s>
<s> note that it will only work correctly if every component in the window has a correct preferred size </s>
<s> this is only a problem in two cases when a panel is used as a drawing surface and when a panel is used as a container with a null layout manager </s>
<s> in both these cases there is no way for the system to determine the correct preferred size automatically and you should set a preferred size by hand for example panelsetpreferredsize( new dimension( 400 250 ) ) the last two lines in the constructor position the window so that it is exactly centered on the screen </s>
<s> the line dimension screensize = toolkitgetdefaulttoolkit( )getscreensize( ) determines the size of the screen </s>
<s> the size of the screen is screensizewidth pixels in the horizontal direction and screensizeheight pixels in the vertical direction </s>
<s> the setlocation( ) method of the frame sets the position of the upper left corner of the frame on the screen </s>
<s> the expression screensizewidth - getwidth( )” is the amount of horizontal space left on the screen after subtracting the width of the window </s>
<s> this is divided by 2 so that half of the empty space will be to the left of the window leaving the other half of the space to the right of the window </s>
<s> similarly half of the extra vertical space is above the window and half is below note that the constructor has created the window and set its size and position but that at the end of the constructor the window is not yet visible on the screen ( more exactly the constructor has created the window object but the visual representation of that object on the screen has not yet been created ) to show the window on the screen it will be necessary to call its instance method windowsetvisible( true ) in addition to the constructor the mosaicdrawframe class includes a main( ) routine </s>
<s> this makes it possible to run mosaicdrawframe as a stand-alone application ( the main( ) routine as a static method has nothing to do with the function of a mosaicdrawframe object and it could ( and perhaps should ) be in a separate class ) the main( ) routine creates a mosaicdrawframe and makes it visible on the screen </s>
<s> it also calls windowsetdefaultcloseoperation( jframeexit on close ) which means that the program will end when the user closes the window </s>
<s> note that this is not done in the constructor because doing it there would make mosaicdrawframe less ﬂexible it is possible for example to write a program that lets the user open multiple mosaicdraw windows </s>
<s> in that case we don’t want to end the program just because the user has closed one 310 chapter 6 </s>
<s> introduction to gui programming of the windows </s>
<s> furthermore it is possible for an applet to create a frame which will open as a separate window on the screen </s>
<s> an applet is not allowed to terminate the program” ( and it’s not even clear what that should mean in the case of an applet ) and attempting to do so will produce an exception </s>
<s> there are other possible values for the default close operation of a window • jframedo nothing on close — the user’s attempts to close the window by clicking its close box will be ignored • jframehide on close — when the user clicks its close box the window will be hidden just as if windowsetvisible( false ) were called </s>
<s> the window can be made visible again by calling windowsetvisible( true ) </s>
<s> this is the value that is used if you do not specify another value by calling setdefaultcloseoperation • jframedispose on close — the window is closed and any operating system resources used by the window are released </s>
<s> it is not possible to make the window visible again ( this is the proper way to permanently get rid of a window without ending the program you can accomplish the same thing by calling the instance method windowdispose( ) ) i’ve written an applet version of the mosaicdraw program that appears on a web page as a single button </s>
<s> when the user clicks the button the applet opens a mosaicdrawframe </s>
<s> in this case the applet sets the default close operation of the window to jframedispose on close you can try the applet in the on-line version of this section the ﬁle mosaicdrawlauncherappletjava contains the source code for the applet </s>
<s> one interesting point in the applet is that the text of the button changes depending on whether a window is open or not </s>
<s> if there is no window the text reads launch mosaicdraw” </s>
<s> when the window is open it changes to close mosaicdraw” and clicking the button will close the window </s>
<s> the change is implemented by attaching a windowlistener to the window </s>
<s> the listener responds to windowevents that are generated when the window opens and closes </s>
<s> although i will not discuss window events further here you can look at the source code for an example of how they can be used 684 creating jar files as the ﬁnal topic for this chapter we look again at jar ﬁles </s>
<s> recall that a jar ﬁle is a java archive” that can contain a number of class ﬁles </s>
<s> when creating a program that uses more than one class it’s usually a good idea to place all the classes that are required by the program into a jar ﬁle </s>
<s> if that is done then a user will only need that one ﬁle to run the program subsection 624 discusses how a jar ﬁle can be used for an applet </s>
<s> jar ﬁles can also be used for stand-alone applications </s>
<s> in fact it is possible to make a so-called executable jar ﬁle </s>
<s> a user can run an executable jar ﬁle in much the same way as any other application usually by double-clicking the icon of the jar ﬁle ( the user’s computer must have a correct version of java installed and the computer must be conﬁgured correctly for this to work </s>
<s> the conﬁguration is usually done automatically when java is installed at least on windows and mac os ) the question then is how to create a jar ﬁle </s>
<s> the answer depends on what programming environment you are using </s>
<s> the two basic types of programming environment—command line and ide—were discussed in section 26 </s>
<s> any ide ( integrated programming environment ) for java should have a command for creating jar ﬁles </s>
<s> in the eclipse ide for example it can be done as follows in the package explorer pane select the programming project ( or just all the individual source code ﬁles that you need ) </s>
<s> right-click on the selection and choose export” 311 68 </s>
<s> menus and dialogs from the menu that pops up </s>
<s> in the window that appears select jar ﬁle” and click next” in the window that appears next enter a name for the jar ﬁle in the box labeled jar ﬁle” ( click the browse” button next to this box to select the ﬁle name using a ﬁle dialog box ) the name of the ﬁle should end with jar” </s>
<s> if you are creating a regular jar ﬁle not an executable one you can hit finish” at this point and the jar ﬁle will be created </s>
<s> you could do this for example if the jar ﬁle contains an applet but no main program </s>
<s> to create an executable ﬁle hit the next” button twice to get to the jar manifest speciﬁcation” screen </s>
<s> at the bottom of this screen is an input box labeled main class” </s>
<s> you have to enter the name of the class that contains the main( ) routine that will be run when the jar ﬁle is executed </s>
<s> if you hit the browse” button next to the main class” box you can select the class from a list of classes that contain main( ) routines </s>
<s> once you’ve selected the main class you can click the finish” button to create the executable jar ﬁle ( note that newer versions of eclipse also have an option for exporting an executable jar ﬁle in fewer steps ) it is also possible to create jar ﬁles on the command line </s>
<s> the java development kit includes a command-line program named jar that can be used to create jar ﬁles </s>
<s> if all your classes are in the default package ( like most of the examples in this book ) then the jar command is easy to use </s>
<s> to create a non-executable jar ﬁle on the command line change to the directory that contains the class ﬁles that you want to include in the jar </s>
<s> then give the command jar cf jarfilenamejar *class where jarfilename can be any name that you want to use for the jar ﬁle </s>
<s> the *” in *class” is a wildcard that makes *class match every class ﬁle in the current directory </s>
<s> this means that all the class ﬁles in the directory will be included in the jar ﬁle </s>
<s> if you want to include only certain class ﬁles you can name them individually separated by spaces ( things get more complicated if your classes are not in the default package </s>
<s> in that case the class ﬁles must be in subdirectories of the directory in which you issue the jar command </s>
<s> see subsection 264 ) making an executable jar ﬁle on the command line is more complicated </s>
<s> there has to be some way of specifying which class contains the main( ) routine </s>
<s> this is done by creating a manifest ﬁle </s>
<s> the manifest ﬁle can be a plain text ﬁle containing a single line of the form main-class classname where classname should be replaced by the name of the class that contains the main( ) routine for example if the main( ) routine is in the class mosaicdrawframe then the manifest ﬁle should read main-class mosaicdrawframe” </s>
<s> you can give the manifest ﬁle any name you like put it in the same directory where you will issue the jar command and use a command of the form jar cmf manifestfilename jarfilenamejar *class to create the jar ﬁle ( the jar command is capable of performing a variety of diﬀerent operations </s>
<s> the ﬁrst parameter to the command such as cf” or cmf” tells it which operation to perform ) by the way if you have successfully created an executable jar ﬁle you can run it on the command line using the command java -jar” </s>
<s> for example java -jar jarfilenamejar 312 chapter 6 </s>
<s> introduction to gui programming exercises for chapter 6 1 </s>
<s> in the simplestamperpanel example from subsection 642 a rectangle or oval is drawn on the panel when the user clicks the mouse except that when the user shift-clicks the panel is cleared instead </s>
<s> modify this class so that the modiﬁed version will continue to draw ﬁgures as the user drags the mouse </s>
<s> that is the mouse will leave a trail of ﬁgures as the user drags </s>
<s> however if the user shift-clicks the panel should simply be cleared and no ﬁgures should be drawn even if the user drags the mouse after shift-clicking </s>
<s> use your panel either in an applet or in a stand-alone application ( or both ) </s>
<s> here is a picture of my solution the source code for the original panel class is simplestamperpaneljava </s>
<s> an applet that uses this class can be found in simplestamperappletjava and a main program that uses the panel in a frame is in simplestamperjava </s>
<s> see the discussion of dragging in subsection 644 ( note that in the original version i drew a black outline around each shape </s>
<s> in the modiﬁed version i decided that it would look better to draw a gray outline instead ) if you want to make the problem a little more challenging when drawing shapes during a drag operation make sure that the shapes that are drawn are at least say 5 pixels apart to implement this you have to keep track of the position of the last shape that was drawn 2 </s>
<s> write a panel that shows a small red square and a small blue square </s>
<s> the user should be able to drag either square with the mouse ( you’ll need an instance variable to remember which square the user is dragging ) the user can drag the square oﬀ the applet if she wants if she does this there is no way to get it back </s>
<s> use your panel in either an applet or a stand-alone application note that for this exercise you should do all the drawing in the paintcomponent( ) method ( as indeed you should whenever possible ) 3 </s>
<s> write a panel that shows a pair of dice </s>
<s> when the user clicks on the panel the dice should be rolled ( that is the dice should be assigned newly computed random values ) </s>
<s> each die should be drawn as a square showing from 1 to 6 dots </s>
<s> since you have to draw two dice its a good idea to write a subroutine void drawdie( graphics g int val int x int y )” to draw a die at the speciﬁed ( xy ) coordinates </s>
<s> the second parameter val speciﬁes the value that is showing on the die </s>
<s> assume that the size of the panel is 100 exercises 313 by 100 pixels </s>
<s> also write an applet that uses your panel as its content pane </s>
<s> here is a picture of the applet 4 </s>
<s> in exercise 63 you wrote a pair-of-dice panel where the dice are rolled when the user clicks on the panel </s>
<s> now make a pair-of-dice program in which the user rolls the dice by clicking a button </s>
<s> the button should appear under the panel that shows the dice also make the following change when the dice are rolled instead of just showing the new value show a short animation during which the values on the dice are changed in every frame </s>
<s> the animation is supposed to make the dice look more like they are actually rolling </s>
<s> write your program as a stand-alone application 5 </s>
<s> in exercise 36 you drew a checkerboard </s>
<s> for this exercise write a checkerboard applet where the user can select a square by clicking on it </s>
<s> highlight the selected square by drawing a colored border around it </s>
<s> when the applet is ﬁrst created no square is selected when the user clicks on a square that is not currently selected it becomes selected ( and the previously selected square if any is unselected ) </s>
<s> if the user clicks the square that is selected it becomes unselected </s>
<s> assume that the size of the applet is exactly 160 by 160 pixels so that each square on the checkerboard is 20 by 20 pixels 6 </s>
<s> for this exercise you should modify the subkiller game from subsection 654 </s>
<s> you can start with the existing source code from the ﬁle subkillerpaneljava </s>
<s> modify the game so it keeps track of the number of hits and misses and displays these quantities </s>
<s> that is every time the depth charge blows up the sub the number of hits goes up by one every time the depth charge falls oﬀ the bottom of the screen without hitting the sub the number of misses goes up by one </s>
<s> there is room at the top of the panel to display these numbers </s>
<s> to do this exercise you only have to add a half-dozen lines to the source code but you have to ﬁgure out what they are and where to add them </s>
<s> to do this you’ll have to read the source code closely enough to understand how it works 7 </s>
<s> exercise 52 involved a class statcalcjava that could compute some statistics of a set of numbers </s>
<s> write a program that uses the statcalc class to compute and display statistics of numbers entered by the user </s>
<s> the panel will have an instance variable of type statcalc that does the computations </s>
<s> the panel should include a jtextfield where the user enters a number </s>
<s> it should have four labels that display four statistics for the numbers that have been entered the number of numbers the sum the mean and the standard deviation every time the user enters a new number the statistics displayed on the labels should change </s>
<s> the user enters a number by typing it into the jtextfield and pressing return there should be a clear” button that clears out all the data </s>
<s> this means creating a new statcalc object and resetting the displays on the labels </s>
<s> my panel also has an enter” button that does the same thing as pressing the return key in the jtextfield ( recall that a jtextfield generates an actionevent when the user presses return so your panel should 314 chapter 6 </s>
<s> introduction to gui programming register itself to listen for actionevents from the jtextfield ) write your program as a stand-alone application </s>
<s> here is a picture of my solution to this problem 8 </s>
<s> write a panel with a jtextarea where the user can enter some text </s>
<s> the panel should have a button </s>
<s> when the user clicks on the button the panel should count the number of lines in the user’s input the number of words in the user’s input and the number of characters in the user’s input </s>
<s> this information should be displayed on three labels in the panel </s>
<s> recall that if textinput is a jtextarea then you can get the contents of the jtextarea by calling the function textinputgettext( ) </s>
<s> this function returns a string containing all the text from the text area </s>
<s> the number of characters is just the length of this string </s>
<s> lines in the string are separated by the new line character ’n’ so the number of lines is just the number of new line characters in the string plus one </s>
<s> words are a little harder to count </s>
<s> exercise 34 has some advice about ﬁnding the words in a string </s>
<s> essentially you want to count the number of characters that are ﬁrst characters in words </s>
<s> don’t forget to put your jtextarea in a jscrollpane and add the scroll pane to the container not the text area </s>
<s> scrollbars should appear when the user types more text than will ﬁt in the available area </s>
<s> here is a picture of my solution 9 </s>
<s> write a gui blackjack program that lets the user play a game of blackjack with the computer as the dealer </s>
<s> the applet should draw the user’s cards and the dealer’s cards exercises 315 just as was done for the graphical highlow card game in subsection 676 </s>
<s> you can use the source code for that game highlowguijava for some ideas about how to write your blackjack game </s>
<s> the structures of the highlow panel and the blackjack panel are very similar </s>
<s> you will certainly want to use the drawcard( ) method from the highlow program you can ﬁnd a description of the game of blackjack in exercise 55 </s>
<s> add the following rule to that description if a player takes ﬁve cards without going over 21 that player wins immediately </s>
<s> this rule is used in some casinos </s>
<s> for your program it means that you only have to allow room for ﬁve cards </s>
<s> you should assume that the panel is just wide enough to show ﬁve cards and that it is tall enough show the user’s hand and the dealer’s hand note that the design of a gui blackjack game is very diﬀerent from the design of the text-oriented program that you wrote for exercise 55 </s>
<s> the user should play the game by clicking on hit” and stand” buttons </s>
<s> there should be a new game” button that can be used to start another game after one game ends </s>
<s> you have to decide what happens when each of these buttons is pressed </s>
<s> you don’t have much chance of getting this right unless you think in terms of the states that the game can be in and how the state can change your program will need the classes deﬁned in cardjava handjava deckjava and blackjackhandjava 10 </s>
<s> in the blackjack game from exercise 69 the user can click on the hit” stand” and newgame” buttons even when it doesn’t make sense to do so </s>
<s> it would be better if the buttons were disabled at the appropriate times </s>
<s> the new game” button should be disabled when there is a game in progress </s>
<s> the hit” and stand” buttons should be disabled when there is not a game in progress </s>
<s> the instance variable gameinprogress tells whether or not a game is in progress so you just have to make sure that the buttons are properly enabled and disabled whenever this variable changes value </s>
<s> i strongly advise writing a subroutine that can be called whenever it is necessary to set the value of the gameinprogress variable </s>
<s> then the subroutine can take responsibility for enabling and disabling the buttons </s>
<s> recall that if bttn is a variable of type jbutton then bttnsetenabled( false ) disables the button and bttnsetenabled( true ) enables the button as a second ( and more diﬃcult ) improvement make it possible for the user to place bets on the blackjack game </s>
<s> when the applet starts give the user $100 </s>
<s> add a jtextfield to the strip of controls along the bottom of the applet </s>
<s> the user can enter the bet in this jtextfield </s>
<s> when the game begins check the amount of the bet </s>
<s> you should do this when the game begins not when it ends because several errors can occur the contents of the jtextfield might not be a legal number </s>
<s> the bet that the user places might be more money than the user has or it might be <= 0 </s>
<s> you should detect these errors and show an error message instead of starting the game </s>
<s> the user’s bet should be an integral number of dollars it would be a good idea to make the jtextfield uneditable while the game is in progress if betinput is the jtextfield you can make it editable and uneditable by the user with the commands betinputseteditable( true ) and betinputseteditable( false ) in the paintcomponent( ) method you should include commands to display the amount of money that the user has left there is one other thing to think about ideally the applet should not start a new game when it is ﬁrst created </s>
<s> the user should have a chance to set a bet amount before the game starts </s>
<s> so in the constructor for the drawing surface class you should not call 316 chapter 6 </s>
<s> introduction to gui programming donewgame( ) </s>
<s> you might want to display a message such as welcome to blackjack” before the ﬁrst game starts here is a picture of my program 317 quiz quiz on chapter 6 1 </s>
<s> programs written for a graphical user interface have to deal with events” explain what is meant by the term event </s>
<s> give at least two diﬀerent examples of events and discuss how a program might respond to those events 2 </s>
<s> explain carefully what the repaint( ) method does 3 </s>
<s> what is html 4 </s>
<s> java has a standard class called jpanel </s>
<s> discuss two ways in which jpanels can be used 5 </s>
<s> draw the picture that will be produced by the following paintcomponent( ) method public static void paintcomponent( graphics g ) { superpaintcomponent( g ) for ( int i=10 i <= 210 i = i + 50 ) for ( int j = 10 j <= 210 j = j + 50 ) gdrawline( i10j60 ) } 6 </s>
<s> suppose you would like a panel that displays a green square inside a red circle as illustrated </s>
<s> write a paintcomponent( ) method for the panel class that will draw the image 7 </s>
<s> java has a standard class called mouseevent </s>
<s> what is the purpose of this class what does an object of type mouseevent do 8 </s>
<s> one of the main classes in swing is the jcomponent class </s>
<s> what is meant by a component what are some examples 9 </s>
<s> what is the function of a layoutmanager in java 10 </s>
<s> what type of layout manager is being used for each of the three panels in the following illustration from section 67 318 chapter 6 </s>
<s> introduction to gui programming three panels shown in color containing six other components shown in gray 11 </s>
<s> explain how timers are used to do animation 12 </s>
<s> what is a jcheckbox and how is it used chapter 7 arrays computers get a lot of their power from working with data structures </s>
<s> a data structure is an organized collection of related data </s>
<s> an object is a data structure but this type of data structure—consisting of a fairly small number of named instance variables—is just the beginning </s>
<s> in many cases programmers build complicated data structures by hand by linking objects together </s>
<s> we’ll look at these custom-built data structures in chapter 9 </s>
<s> but there is one type of data structure that is so important and so basic that it is built into every programming language the array an array is a data structure consisting of a numbered list of items where all the items are of the same type </s>
<s> in java the items in an array are always numbered from zero up to some maximum value which is set when the array is created </s>
<s> for example an array might contain 100 integers numbered from zero to 99 </s>
<s> the items in an array can belong to one of java’s primitive types </s>
<s> they can also be references to objects so that you could for example make an array containing all the buttons in a gui program this chapter discusses how arrays are created and used in java </s>
<s> it also covers the standard class javautilarraylist </s>
<s> an object of type arraylist is very similar to an array of objects but it can grow to hold any number of items 71 creating and using arrays when a number of data items are chunked together into a unit the result is a data structure </s>
<s> data structures can be very complex but in many applications the appropriate data structure consists simply of a sequence of data items </s>
<s> data structures of this simple variety can be either arrays or records the term record” is not used in java </s>
<s> a record is essentially the same as a java object that has instance variables only but no instance methods </s>
<s> some other languages which do not support objects in general nevertheless do support records </s>
<s> the c programming language for example is not object-oriented but it has records which in c go by the name struct” the data items in a record—in java an object’s instance variables—are called the ﬁelds of the record </s>
<s> each item is referred to using a ﬁeld name </s>
<s> in java ﬁeld names are just the names of the instance variables </s>
<s> the distinguishing characteristics of a record are that the data items in the record are referred to by name and that diﬀerent ﬁelds in a record are allowed to be of diﬀerent types </s>
<s> for example if the class person is deﬁned as class person { string name 319 320 chapter 7 </s>
<s> arrays int id number date birthday int age } then an object of class person could be considered to be a record with four ﬁelds </s>
<s> the ﬁeld names are name id number birthday and age </s>
<s> note that the ﬁelds are of various types string int and date because records are just a special type of object i will not discuss them further 711 arrays ike a record an array is a sequence of items </s>
<s> however where items in a record are referred to by name the items in an array are numbered and individual items are referred to by their position number </s>
<s> furthermore all the items in an array must be of the same type </s>
<s> the deﬁnition of an array is a numbered sequence of items which are all of the same type </s>
<s> the number of items in an array is called the length of the array </s>
<s> the position number of an item in an array is called the index of that item </s>
<s> the type of the individual items in an array is called the base type of the array the base type of an array can be any java type that is one of the primitive types or a class name or an interface name </s>
<s> if the base type of an array is int it is referred to as an array of ints” an array with base type string is referred to as an array of strings” however an array is not properly speaking a list of integers or strings or other values </s>
<s> it is better thought of as a list of variables of type int or a list of variables of type string or of some other type </s>
<s> as always there is some potential for confusion between the two uses of a variable as a name for a memory location and as a name for the value stored in that memory location </s>
<s> each position in an array acts as a variable </s>
<s> each position can hold a value of a speciﬁed type ( the base type of the array ) </s>
<s> the value can be changed at any time </s>
<s> values are stored in an array </s>
<s> the array is the container not the values the items in an array—really the individual variables that make up the array—are more often referred to as the elements of the array </s>
<s> in java the elements in an array are always numbered starting from zero </s>
<s> that is the index of the ﬁrst element in the array is zero </s>
<s> if the length of the array is n then the index of the last element in the array is n-1 </s>
<s> once an array has been created its length cannot be changed java arrays are objects </s>
<s> this has several consequences </s>
<s> arrays are created using a special form of the new operator </s>
<s> no variable can ever hold an array a variable can only refer to an array </s>
<s> any variable that can refer to an array can also hold the value null meaning that it doesn’t at the moment refer to anything </s>
<s> like any object an array belongs to a class which like all classes is a subclass of the class object </s>
<s> the elements of the array are essentially instance variables in the array object except that they are referred to by number rather than by name nevertheless even though arrays are objects there are diﬀerences between arrays and other kinds of objects and there are a number of special language features in java for creating and using arrays 712 using arrays suppose that a is a variable that refers to an array </s>
<s> then the element at index k in a is referred to as a[k] </s>
<s> the ﬁrst element is a[0] the second is a[1] and so forth a[k]” is really a variable and it can be used just like any other variable </s>
<s> you can assign values to it you can 321 71 </s>
<s> creating and using arrays use it in expressions and you can pass it as a parameter to a subroutine </s>
<s> all of this will be discussed in more detail below </s>
<s> for now just keep in mind the syntax array-variable [ integer-expression ] for referring to an element of an array although every array as an object belongs to some class array classes never have to be deﬁned </s>
<s> once a type exists the corresponding array class exists automatically </s>
<s> if the name of the type is basetype then the name of the associated array class is basetype[ ] </s>
<s> that is to say an object belonging to the class basetype[ ] is an array of items where each item is a variable of type basetype </s>
<s> the brackets []” are meant to recall the syntax for referring to the individual items in the array basetype[ ]” is read as array of basetype” or basetype array” it might be worth mentioning here that if classa is a subclass of classb then the class classa[ ] is automatically a subclass of classb[ ] the base type of an array can be any legal java type </s>
<s> from the primitive type int the array type int[ ] is derived </s>
<s> each element in an array of type int[ ] is a variable of type int which holds a value of type int </s>
<s> from a class named shape the array type shape[ ] is derived </s>
<s> each item in an array of type shape[ ] is a variable of type shape which holds a value of type shape this value can be either null or a reference to an object belonging to the class shape ( this includes objects belonging to subclasses of shape ) ∗ ∗ ∗ et’s try to get a little more concrete about all this using arrays of integers as our ﬁrst example </s>
<s> since int[ ] is a class it can be used to declare variables </s>
<s> for example int[] list creates a variable named list of type int[ ] </s>
<s> this variable is capable of referring to an array of ints but initially its value is null ( if list is a member variable in a class ) or undeﬁned ( if list is a local variable in a method ) </s>
<s> the new operator is used to create a new array object which can then be assigned to list </s>
<s> the syntax for using new with arrays is diﬀerent from the syntax you learned previously </s>
<s> as an example list = new int[5] creates an array of ﬁve integers </s>
<s> more generally the constructor new basetype[n]” is used to create an array belonging to the class basetype[ ] </s>
<s> the value n in brackets speciﬁes the length of the array that is the number of elements that it contains </s>
<s> note that the array knows” how long it is </s>
<s> the length of the array is an instance variable in the array object </s>
<s> in fact the length of an array list can be referred to as listlength ( however you are not allowed to change the value of listlength so it’s really a final” instance variable that is one whose value cannot be changed after it has been initialized ) the situation produced by the statement list = new int[5]” can be pictured like this list the statement list = new int[5] creates an array that can hold ﬁve ints and sets list to refer to it ( 5 ) 0 0 0 0 0 listlength list[0] the array object contains list[1] ﬁve integers which are list[2] referred to as list[0] list[1] list[3] and so on </s>
<s> it also contains list[4] listlength which gives the number of items in the array listlength can't be changed 322 chapter 7 </s>
<s> arrays note that the newly created array of integers is automatically ﬁlled with zeros </s>
<s> in java a newly created array is always ﬁlled with a known default value zero for numbers false for boolean the character with unicode number zero for char and null for objects the elements in the array list are referred to as list[0] list[1] list[2] list[3] and list[4] ( note again that the index for the last item is one less than listlength ) however array references can be much more general than this </s>
<s> the brackets in an array reference can contain any expression whose value is an integer </s>
<s> for example if indx is a variable of type int then list[indx] and list[2*indx+7] are syntactically correct references to elements of the array list </s>
<s> thus the following loop would print all the integers in the array list to standard output for ( int i = 0 i < listlength i++ ) { systemoutprintln( list[i] ) } the ﬁrst time through the loop i is 0 and list[i] refers to list[0] </s>
<s> so it is the value stored in the variable list[0] that is printed </s>
<s> the second time through the loop i is 1 and the value stored in list[1] is printed </s>
<s> the loop ends after printing the value of list[4] when i becomes equal to 5 and the continuation condition i < listlength” is no longer true </s>
<s> this is a typical example of using a loop to process an array </s>
<s> i’ll discuss more examples of array processing throughout this chapter every use of a variable in a program speciﬁes a memory location </s>
<s> think for a moment about what the computer does when it encounters a reference to an array element list[k] while it is executing a program </s>
<s> the computer must determine which memory location is being referred to </s>
<s> to the computer list[k] means something like this get the pointer that is stored in the variable list </s>
<s> follow this pointer to ﬁnd an array object </s>
<s> get the value of k go to the k-th position in the array and that’s the memory location you want” there are two things that can go wrong here </s>
<s> suppose that the value of list is null </s>
<s> if that is the case then list doesn’t even refer to an array </s>
<s> the attempt to refer to an element of an array that doesn’t exist is an error that will cause an exception of type nullpointerexception to be thrown the second possible error occurs if list does refer to an array but the value of k is outside the legal range of indices for that array </s>
<s> this will happen if k < 0 or if k >= listlength </s>
<s> this is called an array index out of bounds” error </s>
<s> when an error of this type occurs an exception of type arrayindexoutofboundsexception is thrown </s>
<s> when you use arrays in a program you should be mindful that both types of error are possible </s>
<s> however array index out of bounds errors are by far the most common error when working with arrays 713 array initialization for an array variable just as for any variable you can declare the variable and initialize it in a single step </s>
<s> for example int[] list = new int[5] if list is a local variable in a subroutine then this is exactly equivalent to the two statements int[] list list = new int[5] ( if list is an instance variable then of course you can’t simply replace int[] list = new int[5]” with int[] list list = new int[5]” since the assignment statement list = new int[5]” is only legal inside a subroutine ) 323 71 </s>
<s> creating and using arrays the new array is ﬁlled with the default value appropriate for the base type of the array—zero for int and null for class types for example </s>
<s> however java also provides a way to initialize an array variable with a new array ﬁlled with a speciﬁed list of values </s>
<s> in a declaration statement that creates a new array this is done with an array initializer </s>
<s> for example int[] list = { 1 4 9 16 25 36 49 } creates a new array containing the seven values 1 4 9 16 25 36 and 49 and sets list to refer to that new array </s>
<s> the value of list[0] will be 1 the value of list[1] will be 4 and so forth </s>
<s> the length of list is seven since seven values are provided in the initializer an array initializer takes the form of a list of values separated by commas and enclosed between braces </s>
<s> the length of the array does not have to be speciﬁed because it is implicit in the list of values </s>
<s> the items in an array initializer don’t have to be constants </s>
<s> they can be variables or arbitrary expressions provided that their values are of the appropriate type </s>
<s> for example the following declaration creates an array of eight colors </s>
<s> some of the colors are given by expressions of the form new color( rgb )” instead of by constants color[] palette = { colorblack colorred colorpink new color( 01800 ) // dark green colorgreen colorblue new color( 180180255 ) // light blue colorwhite } a list initializer of this form can be used only in a declaration statement to give an initial value to a newly declared array variable </s>
<s> it cannot be used in an assignment statement to assign a value to a variable that has been previously declared </s>
<s> however there is another similar notation for creating a new array that can be used in an assignment statement or passed as a parameter to a subroutine </s>
<s> the notation uses another form of the new operator to both create and initialize a new array object at the same time ( the rather odd syntax is similar to the syntax for anonymous classes which were discussed in subsection 573 ) for example to assign a new value to an array variable list that was declared previously you could use list = new int[] { 1 8 27 64 125 216 343 } the general syntax for this form of the new operator is new base-type [ ] { list-of-values } this is actually an expression whose value is a reference to a newly created array object </s>
<s> this means that it can be used in any context where an object of type base-type [] is expected for example if makebuttons is a method that takes an array of strings as a parameter you could say makebuttons( new string[] { stop go next previous } ) being able to create and use an array in place” in this way can be very convenient in the same way that anonymous nested classes are convenient by the way it is perfectly legal to use the new basetype[] { }” syntax instead of the array initializer syntax in the declaration of an array variable </s>
<s> for example instead of saying 324 chapter 7 </s>
<s> arrays int[] primes = { 2 3 5 7 11 13 17 19 } you can say equivalently int[] primes = new int[] { 2 3 5 7 11 17 19 } in fact rather than use a special notation that works only in the context of declaration statements i prefer to use the second form ∗ ∗ ∗ one ﬁnal note for historical reasons an array declaration such as int[] list can also be written as int list[] which is a syntax used in the languages c and c++ </s>
<s> however this alternative syntax does not really make much sense in the context of java and it is probably best avoided </s>
<s> after all the intent is to declare a variable of a certain type and the name of that type is int[ ]” </s>
<s> it makes sense to follow the type-name variable-name ” syntax for such declarations 72 programming with arrays arrays are the most basic and the most important type of data structure and techniques for processing arrays are among the most important programming techniques you can learn </s>
<s> two fundamental array processing techniques—searching and sorting—will be covered in section 74 </s>
<s> this section introduces some of the basic ideas of array processing in general 721 arrays and for loops in many cases processing an array means applying the same operation to each item in the array </s>
<s> this is commonly done with a for loop </s>
<s> a loop for processing all the elements of an array a has the form // do any necessary initialization for ( int i = 0 i < alength i++ ) { // process a[i] } suppose for example that a is an array of type double[ ] </s>
<s> suppose that the goal is to add up all the numbers in the array </s>
<s> an informal algorithm for doing this would be start with sum = 0 add a[0] to sum ( process the first item in a ) add a[1] to sum ( process the second item in a ) add a[ alength - 1 ] to sum ( process the last item in a ) putting the obvious repetition into a loop this becomes 72 </s>
<s> programming with arrays 325 double sum // the sum of the numbers in a sum = 0 // start with 0 for ( int i = 0 i < alength i++ ) sum += a[i] // add a[i] to the sum for // i = 0 1 alength - 1 note that the continuation condition i < alength” implies that the last value of i that is actually processed is alength-1 which is the index of the ﬁnal item in the array </s>
<s> it’s important to use <” here not <=” since <=” would give an array index out of bounds error there is no element at position alength in a eventually you should just about be able to write loops similar to this one in your sleep i will give a few more simple examples </s>
<s> here is a loop that will count the number of items in the array a which are less than zero int count // for counting the items count = 0 // start with 0 items counted for ( int i = 0 i < alength i++ ) { if ( a[i] < 00 ) // if this item is less than zero count++ // then count it } // at this point the value of count is the number // of items that have passed the test of being < 0 replace the test a[i] < 00” if you want to count the number of items in an array that satisfy some other property </s>
<s> here is a variation on the same theme </s>
<s> suppose you want to count the number of times that an item in the array a is equal to the item that follows it </s>
<s> the item that follows a[i] in the array is a[i+1] so the test in this case is if ( a[i] == a[i+1] )” but there is a catch this test cannot be applied when a[i] is the last item in the array since then there is no such item as a[i+1] </s>
<s> the result of trying to apply the test in this case would be an arrayindexoutofboundsexception </s>
<s> this just means that we have to stop one item short of the ﬁnal item int count = 0 for ( int i = 0 i < alength - 1 i++ ) { if ( a[i] == a[i+1] ) count++ } another typical problem is to ﬁnd the largest number in a </s>
<s> the strategy is to go through the array keeping track of the largest number found so far </s>
<s> we’ll store the largest number found so far in a variable called max </s>
<s> as we look through the array whenever we ﬁnd a number larger than the current value of max we change the value of max to that larger value </s>
<s> after the whole array has been processed max is the largest item in the array overall </s>
<s> the only question is what should the original value of max be one possibility is to start with max equal to a[0] and then to look through the rest of the array starting from a[1] for larger items double max = a[0] for ( int i = 1 i < alength i++ ) { if ( a[i] > max ) max = a[i] } // at this point max is the largest item in a 326 chapter 7 </s>
<s> arrays ( there is one subtle problem here </s>
<s> it’s possible in java for an array to have length zero </s>
<s> in that case a[0] doesn’t exist and the reference to a[0] in the ﬁrst line gives an array index out of bounds error </s>
<s> however zero-length arrays are normally something that you want to avoid in real problems </s>
<s> anyway what would it mean to ask for the largest item in an array that contains no items at all ) as a ﬁnal example of basic array operations consider the problem of copying an array </s>
<s> to make a copy of our sample array a it is not suﬃcient to say double[] b = a since this does not create a new array object </s>
<s> all it does is declare a new array variable and make it refer to the same object to which a refers ( so that for example a change to a[i] will automatically change b[i] as well ) remember that arrays are objects and array variables hold pointers to objects the assignment b = a just copies a pointer </s>
<s> to make a new array that is a copy of a it is necessary to make a new array object and to copy each of the individual items from a into the new array double[] b = new double[alength] // make a new array object // the same size as a for ( int i = 0 i < alength i++ ) b[i] = a[i] // copy each item from a to b copying values from one array to another is such a common operation that java has a predeﬁned subroutine to do it </s>
<s> the subroutine systemarraycopy( ) is a static method in the standard system class </s>
<s> its declaration has the form public static void arraycopy( object sourcearray int sourcestartindex object destarray int deststartindex int count ) where sourcearray and destarray can be arrays with any base type </s>
<s> values are copied from sourcearray to destarray </s>
<s> the count tells how many elements to copy </s>
<s> values are taken from sourcearray starting at position sourcestartindex and are stored in destarray starting at position deststartindex </s>
<s> for example to make a copy of the array a using this subroutine you would say double b = new double[alength] systemarraycopy( a 0 b 0 alength ) 722 arrays and for-each loops java 50 introduced a new form of the for loop the for-each loop” that was discussed in subsection 344 </s>
<s> the for-each loop is meant speciﬁcally for processing all the values in a data structure </s>
<s> when used to process an array a for-each loop can be used to perform the same operation on each value that is stored in the array </s>
<s> if anarray is an array of type basetype[ ] then a for-each loop for anarray has the form for ( basetype item anarray ) { // process the item } 72 </s>
<s> programming with arrays 327 in this loop item is the loop control variable </s>
<s> it is being declared as a variable of type basetype where basetype is the base type of the array ( in a for-each loop the loop control variable must be declared in the loop ) when this loop is executed each value from the array is assigned to item in turn and the body of the loop is executed for each value </s>
<s> thus the above loop is exactly equivalent to for ( int index = 0 index < anarraylength index++ ) { basetype item item = anarray[index] // get one of the values from the array // process the item } for example if a is an array of type int[ ] then we could print all the values from a with the for-each loop for ( int item a ) systemoutprintln( item ) and we could add up all the positive integers in a with int sum = 0 // this will be the sum of all the positive numbers in a for ( int item a ) { if ( item > 0 ) sum = sum + item } the for-each loop is not always appropriate </s>
<s> for example there is no simple way to use it to process the items in just a part of an array </s>
<s> however it does make it a little easier to process all the values in an array since it eliminates any need to use array indices it’s important to note that a for-each loop processes the values in the array not the elements ( where an element means the actual memory location that is part of the array ) </s>
<s> for example consider the following incorrect attempt to ﬁll an array of integers with 17’s int[] intlist = new int[10] for ( int item intlist ) { item = 17 } // incorrect! does not modify the array! the assignment statement item = 17 assigns the value 17 to the loop control variable item however this has nothing to do with the array </s>
<s> when the body of the loop is executed the value from one of the elements of the array is copied into item </s>
<s> the statement item = 17 replaces that copied value but has no eﬀect on the array element from which it was copied the value in the array is not changed 723 array types in subroutines any array type such as double[ ] is a full-ﬂedged java type so it can be used in all the ways that any other java type can be used </s>
<s> in particular it can be used as the type of a formal parameter in a subroutine </s>
<s> it can even be the return type of a function </s>
<s> for example it might be useful to have a function that makes a copy of an array of double 328 chapter 7 </s>
<s> arrays /** * create a new array of doubles that is a copy of a given array * @param source the array that is to be copied the value can be null * @return a copy of source if source is null then the return value is also null */ public static double[] copy( double[] source ) { if ( source == null ) return null double[] cpy // a copy of the source array cpy = new double[sourcelength] systemarraycopy( source 0 cpy 0 sourcelength ) return cpy } the main( ) routine of a program has a parameter of type string[ ] </s>
<s> you’ve seen this used since all the way back in section 21 but i haven’t really been able to explain it until now the parameter to the main( ) routine is an array of strings </s>
<s> when the system calls the main( ) routine it passes an actual array of strings which becomes the value of this parameter </s>
<s> where do the strings come from the strings in the array are the command-line arguments from the command that was used to run the program </s>
<s> when using a command-line interface the user types a command to tell the system to execute a program </s>
<s> the user can include extra input in this command beyond the name of the program </s>
<s> this extra input becomes the command-line arguments </s>
<s> for example if the name of the class that contains the main( ) routine is myprog then the user can type java myprog” to execute the program </s>
<s> in this case there are no command-line arguments </s>
<s> but if the user types the command java myprog one two three then the command-line arguments are the strings one” two” and three” </s>
<s> the system puts these strings into an array of strings and passes that array as a parameter to the main( ) routine here for example is a short program that simply prints out any command line arguments entered by the user public class cldemo { public static void main( string[] args ) { systemoutprintln( you entered + argslength + command-line arguments ) if ( argslength > 0 ) { systemoutprintln( they were ) for ( int i = 0 i < argslength i++ ) systemoutprintln( + args[i] ) } } // end main( ) } // end class cldemo note that the parameter args is never null when main( ) is called by the system but it might be an array of length zero in practice command-line arguments are often the names of ﬁles to be processed by the program </s>
<s> i will give some examples of this in chapter 11 when i discuss ﬁle processing 72 </s>
<s> programming with arrays 724 329 random access so far all my examples of array processing have used sequential access </s>
<s> that is the elements of the array were processed one after the other in the sequence in which they occur in the array but one of the big advantages of arrays is that they allow random access </s>
<s> that is every element of the array is equally accessible at any given time as an example let’s look at a well-known problem called the birthday problem suppose that there are n people in a room </s>
<s> what’s the chance that there are two people in the room who have the same birthday ( that is they were born on the same day in the same month but not necessarily in the same year ) most people severely underestimate the probability </s>
<s> we will actually look at a diﬀerent version of the question suppose you choose people at random and check their birthdays </s>
<s> how many people will you check before you ﬁnd one who has the same birthday as someone you’ve already checked of course the answer in a particular case depends on random factors but we can simulate the experiment with a computer program and run the program several times to get an idea of how many people need to be checked on average to simulate the experiment we need to keep track of each birthday that we ﬁnd </s>
<s> there are 365 diﬀerent possible birthdays ( we’ll ignore leap years ) for each possible birthday we need to keep track of whether or not we have already found a person who has that birthday </s>
<s> the answer to this question is a boolean value true or false </s>
<s> to hold the data for all 365 possible birthdays we can use an array of 365 boolean values boolean[] used used = new boolean[365] the days of the year are numbered from 0 to 364 </s>
<s> the value of used[i] is true if someone has been selected whose birthday is day number i </s>
<s> initially all the values in the array used are false </s>
<s> when we select someone whose birthday is day number i we ﬁrst check whether used[i] is true </s>
<s> if it is true then this is the second person with that birthday </s>
<s> we are done </s>
<s> if used[i] is false we set used[i] to be true to record the fact that we’ve encountered someone with that birthday and we go on to the next person </s>
<s> here is a subroutine that carries out the simulated experiment ( of course in the subroutine there are no simulated people only simulated birthdays ) /** * simulate choosing people at random and checking the day of the year they * were born on </s>
<s> if the birthday is the same as one that was seen previously * stop and output the number of people who were checked */ private static void birthdayproblem( ) { boolean[] used // for recording the possible birthdays // that have been seen so far </s>
<s> a value // of true in used[i] means that a person // whose birthday is the i-th day of the // year has been found int count // the number of people who have been checked used = new boolean[365] // initially all entries are false count = 0 while ( true ) { // select a birthday at random from 0 to 364 330 chapter 7 </s>
<s> arrays // if the birthday has already been used quit // otherwise record the birthday as used int birthday // the selected birthday birthday = ( int )( mathrandom( )*365 ) count++ if ( used[birthday] ) // this day was found before it’s a duplicate break used[birthday] = true } systemoutprintln( a duplicate birthday was found after + count + tries ) } // end birthdayproblem( ) this subroutine makes essential use of the fact that every element in a newly created array of boolean is set to be false </s>
<s> if we wanted to reuse the same array in a second simulation we would have to reset all the elements in it to be false with a for loop for ( int i = 0 i < 365 i++ ) used[i] = false the sample program that uses this subroutine is birthdayproblemdemojava </s>
<s> an applet version of the program can be found in the online version of this section 725 arrays of objects one of the examples in subsection 642 was an applet that shows multiple copies of a message in random positions colors and fonts </s>
<s> when the user clicks on the applet the positions colors and fonts are changed to new random values </s>
<s> like several other examples from that chapter the applet had a ﬂaw it didn’t have any way of storing the data that would be necessary to redraw itself </s>
<s> arrays provide us with one possible solution to this problem </s>
<s> we can write a new version of the randomstrings applet that uses an array to store the position font and color of each string </s>
<s> when the content pane of the applet is painted this information is used to draw the strings so the applet will paint itself correctly whenever it has to be redrawn </s>
<s> when the user clicks on the applet the array is ﬁlled with new random values and the applet is repainted using the new data </s>
<s> so the only time that the picture will change is in response to a mouse click in this applet the number of copies of the message is given by a named constant message count </s>
<s> one way to store the position color and font of message count strings would be to use four arrays int[] x = new int[] y = new color[] color font[] font = int[message count] int[message count] = new color[message count] new font[message count] these arrays would be ﬁlled with random values </s>
<s> in the paintcomponent( ) method the i-th copy of the string would be drawn at the point ( x[i]y[i] ) </s>
<s> its color would be given by color[i] </s>
<s> and it would be drawn in the font font[i] </s>
<s> this would be accomplished by the paintcomponent( ) method 72 </s>
<s> programming with arrays 331 public void paintcomponent( graphics g ) { superpaintcomponent( ) // ( fill with background color ) for ( int i = 0 i < message count i++ ) { gsetcolor( color[i] ) gsetfont( font[i] ) gdrawstring( message x[i] y[i] ) } } this approach is said to use parallel arrays </s>
<s> the data for a given copy of the message is spread out across several arrays </s>
<s> if you think of the arrays as laid out in parallel columns— array x in the ﬁrst column array y in the second array color in the third and array font in the fourth—then the data for the i-th string can be found along the i-th row </s>
<s> there is nothing wrong with using parallel arrays in this simple example but it does go against the object-oriented philosophy of keeping related data in one object </s>
<s> if we follow this rule then we don’t have to imagine the relationship among the data because all the data for one copy of the message is physically in one place </s>
<s> so when i wrote the applet i made a simple class to represent all the data that is needed for one copy of the message /** * an object of this type holds the position color and font * of one copy of the string */ private static class stringdata { int x y // the coordinates of the left end of baseline of string color color // the color in which the string is drawn font font // the font that is used to draw the string } ( this class is actually deﬁned as a static nested class in the main applet class ) to store the data for multiple copies of the message i use an array of type stringdata[ ] </s>
<s> the array is declared as an instance variable with the name stringdata stringdata[] stringdata of course the value of stringdata is null until an actual array is created and assigned to it this is done in the init( ) method of the applet with the statement stringdata = new stringdata[message count] the base type of this array is stringdata which is a class </s>
<s> we say that stringdata is an array of objects </s>
<s> this means that the elements of the array are variables of type stringdata </s>
<s> like any object variable each element of the array can either be null or can hold a reference to an object ( note that the term array of objects” is a little misleading since the objects are not in the array the array can only contain references to objects ) when the stringdata array is ﬁrst created the value of each element in the array is null the data needed by the randomstrings program will be stored in objects of type stringdata but no such objects exist yet </s>
<s> all we have so far is an array of variables that are capable of referring to such objects </s>
<s> i decided to create the stringdata objects in the applet’s init method ( it could be done in other places—just so long as we avoid trying to use an object that doesn’t exist </s>
<s> this is important remember that a newly created array whose base type is an object type is always ﬁlled with null elements </s>
<s> there are no objects in the array until you put them there ) the objects are created with the for loop 332 chapter 7 </s>
<s> arrays for ( int i = 0 i < message count i++ ) stringdata[i] = new stringdata( ) for the randomstrings applet the idea is to store data for the i-th copy of the message in the variables stringdata[i]x stringdata[i]y stringdata[i]color and stringdata[i]font </s>
<s> make sure that you understand the notation here stringdata[i] refers to an object </s>
<s> that object contains instance variables </s>
<s> the notation stringdata[i]x tells the computer find your way to the object that is referred to by stringdata[i] </s>
<s> then go to the instance variable named x in that object” variable names can get even more complicated than this so it is important to learn how to read them </s>
<s> using the array stringdata the paintcomponent( ) method for the applet could be written public void paintcomponent( graphics g ) { superpaintcomponent( g ) // ( fill with background color ) for ( int i = 0 i < message count i++ ) { gsetcolor( stringdata[i]color ) gsetfont( stringdata[i]font ) gdrawstring( message stringdata[i]x stringdata[i] y ) } } however since the for loop is processing every value in the array an alternative would be to use a for-each loop public void paintcomponent( graphics g ) { superpaintcomponent( g ) for ( stringdata data stringdata ) { // draw a copy of the message in the position color // and font stored in data gsetcolor( datacolor ) gsetfont( datafont ) gdrawstring( message datax datay ) } } in this loop the loop control variable data holds a copy of one of the values from the array that value is a reference to an object of type stringdata which has instance variables named color font x and y </s>
<s> once again the use of a for-each loop has eliminated the need to work with array indices there is still the matter of ﬁlling the array data with random values </s>
<s> if you are interested you can look at the source code for the applet randomstringswitharrayjava ∗ ∗ ∗ the randomstrings applet uses one other array of objects </s>
<s> the font for a given copy of the message is chosen at random from a set of ﬁve possible fonts </s>
<s> in the original version of the applet there were ﬁve variables of type font to represent the fonts </s>
<s> the variables were named font1 font2 font3 font4 and font5 </s>
<s> to select one of these fonts at random a switch statement could be used font randomfont int rand // one of the 5 fonts chosen at random // a random integer in the range 0 to 4 rand = ( int )( mathrandom( ) * 5 ) switch ( rand ) { case 0 333 72 </s>
<s> programming with arrays randomfont break case 1 randomfont break case 2 randomfont break case 3 randomfont break case 4 randomfont break = font1 = font2 = font3 = font4 = font5 } in the new version of the applet the ﬁve fonts are stored in an array which is named fonts this array is declared as an instance variable of type font[ ] font[] fonts the array is created in the init( ) method of the applet and each element of the array is set to refer to a new font object fonts = new font[5] fonts[0] fonts[1] fonts[2] fonts[3] fonts[4] = = = = = new new new new new // create the array to hold the five fonts font( serif fontbold 14 ) font( sansserif fontbold + fontitalic 24 ) font( monospaced fontplain 20 ) font( dialog fontplain 30 ) font( serif fontitalic 36 ) this makes it much easier to select one of the fonts at random </s>
<s> it can be done with the statements font randomfont // one of the 5 fonts chosen at random int fontindex // a random number in the range 0 to 4 fontindex = ( int )( mathrandom( ) * 5 ) randomfont = fonts[ fontindex ] the switch statement has been replaced by a single line of code </s>
<s> in fact the preceding four lines could be replaced by the single line font randomfont = fonts[ ( int )( mathrandom( ) * 5 ) ] this is a very typical application of arrays </s>
<s> note that this example uses the random access property of arrays we can pick an array index at random and go directly to the array element at that index here is another example of the same sort of thing </s>
<s> months are often stored as numbers 1 2 3 12 </s>
<s> sometimes however these numbers have to be translated into the names january february december </s>
<s> the translation can be done with an array </s>
<s> the array can be declared and initialized as static string[] monthname = { january april july october february may august november march june september december } 334 chapter 7 </s>
<s> arrays if mnth is a variable that holds one of the integers 1 through 12 then monthname[mnth-1] is the name of the corresponding month </s>
<s> we need the -1” because months are numbered starting from 1 while array elements are numbered starting from 0 </s>
<s> simple array indexing does the translation for us! 726 variable arity methods arrays are used in the implementation of a feature that was introduced in java 50 </s>
<s> before version 50 every method in java had a ﬁxed arity ( the arity of a subroutine is deﬁned as the number of parameters in a call to the method ) in a ﬁxed arity method the number of parameters must be the same in every call to the method </s>
<s> java 50 introduced variable arity methods </s>
<s> in a variable arity method diﬀerent calls to the method can have diﬀerent numbers of parameters </s>
<s> for example the formatted output method systemoutprintf which was introduced in subsection 244 is a variable arity method </s>
<s> the ﬁrst parameter of systemoutprintf must be a string but it can have any number of additional parameters of any types calling a variable arity method is no diﬀerent from calling any other sort of method but writing one requires some new syntax </s>
<s> as an example consider a method that can compute the average of any number of values of type double </s>
<s> the deﬁnition of such a method could begin with public static double average( double numbers ) { here the after the type name double indicates that any number of values of type double can be provided when the subroutine is called so that for example average( 14916 ) average( 314217 ) average( 0375 ) and even average( ) are all legal calls to this method note that actual parameters of type int can be passed to average </s>
<s> the integers will as usual be automatically converted to real numbers when the method is called the values of all the actual parameters that correspond to the variable arity parameter are placed into an array and it is this array that is actually passed to the method </s>
<s> that is in the body of a method a variable arity parameter of type t actually looks like an ordinary parameter of type t[ ] </s>
<s> the length of the array tells you how many actual parameters were provided in the method call </s>
<s> in the average example the body of the method would see an array named numbers of type double[ ] </s>
<s> the number of actual parameters in the method call would be numberslength and the values of the actual parameters would be numbers[0] numbers[1] and so on </s>
<s> a complete deﬁnition of the method would be public static double average( double numbers ) { double sum // the sum of all the actual parameters double average // the average of all the actual parameters sum = 0 for ( int i = 0 i < numberslength i++ ) { sum = sum + numbers[i] // add one of the actual parameters to the sum } average = sum / numberslength return average } note that the ” can be applied only to the last formal parameter in a method deﬁnition note also that it is possible to pass an actual array to the method instead of a list of individual values </s>
<s> for example if salesdata is a variable of type double[ ] then it would be legal to call average( salesdata ) and this would compute the average of all the numbers in the array 73 </s>
<s> dynamic arrays and arraylists 335 as another example consider a method that can draw a polygon through any number of points </s>
<s> the points are given as values of type point where an object of type point has two instance variables x and y of type int </s>
<s> in this case the method has one ordinary parameter— the graphics context that will be used to draw the polygon—in addition to the variable arity parameter public static void drawpolygon( graphics g point points ) { if ( pointslength > 1 ) { // ( need at least 2 points to draw anything ) for ( int i = 0 i < pointslength - 1 i++ ) { // draw a line from i-th point to ( i+1 )-th point gdrawline( points[i]x points[i]y points[i+1]x points[i+1]y ) } // now draw a line back to the starting point gdrawline( points[pointslength-1]x points[pointslength-1]y points[0]x points[0]y ) } } because of automatic type conversion a variable arity parameter of type object” can take actual parameters of any type whatsoever </s>
<s> even primitive type values are allowed because of autoboxing ( a primitive type value belonging to a type such as int is converted to an object belonging to a wrapper” class such as integer </s>
<s> see subsection 532 ) for example the method deﬁnition for systemoutprintf could begin public void printf( string format object values ) { this allows the printf method to output values of any type </s>
<s> similarly we could write a method that strings together the string representations of all its parameters into one long string public static string concat( object values ) { stringbuffer buffer // use a stringbuffer for more efficient concatenation buffer = new stringbuffer( ) // start with an empty buffer for ( object obj values ) { // a for each loop for processing the values bufferappend( obj ) // add string representation of obj to the buffer } return buffertostring( ) // return the contents of the buffer } 73 dynamic arrays and arraylists the size of an array is ﬁxed when it is created </s>
<s> in many cases however the number of data items that are actually stored in the array varies with time </s>
<s> consider the following examples an array that stores the lines of text in a word-processing program </s>
<s> an array that holds the list of computers that are currently downloading a page from a web site </s>
<s> an array that contains the shapes that have been added to the screen by the user of a drawing program </s>
<s> clearly we need some way to deal with cases where the number of data items in an array is not ﬁxed 731 partially full arrays consider an application where the number of items that we want to store in an array changes as the program runs </s>
<s> since the size of the array can’t actually be changed a separate counter variable must be used to keep track of how many spaces in the array are in use ( of course 336 chapter 7 </s>
<s> arrays every space in the array has to contain something the question is how many spaces contain useful or valid items ) consider for example a program that reads positive integers entered by the user and stores them for later processing </s>
<s> the program stops reading when the user inputs a number that is less than or equal to zero </s>
<s> the input numbers can be kept in an array numbers of type int[ ] et’s say that no more than 100 numbers will be input </s>
<s> then the size of the array can be ﬁxed at 100 </s>
<s> but the program must keep track of how many numbers have actually been read and stored in the array </s>
<s> for this it can use an integer variable numcount </s>
<s> each time a number is stored in the array numcount must be incremented by one </s>
<s> as a rather silly example let’s write a program that will read the numbers input by the user and then print them in the reverse of the order in which they were entered ( this is at least a processing task that requires that the numbers be saved in an array </s>
<s> remember that many types of processing such as ﬁnding the sum or average or maximum of the numbers can be done without saving the individual numbers ) public class reverseinputnumbers { public static void main( string[] args ) { int[] numbers int numcount int num // an array for storing the input values // the number of numbers saved in the array // one of the numbers input by the user numbers = new int[100] numcount = 0 // space for 100 ints // no numbers have been saved yet textioputln( enter up to 100 positive integers enter 0 to end ) while ( true ) { // get the numbers and put them in the array textioput( ) num = textiogetlnint( ) if ( num <= 0 ) break numbers[numcount] = num numcount++ } textioputln( nyour numbers in reverse order aren ) for ( int i = numcount - 1 i >= 0 i -- ) { textioputln( numbers[i] ) } } // end main( ) } // end class reverseinputnumbers it is especially important to note that the variable numcount plays a dual role </s>
<s> it is the number of items that have been entered into the array </s>
<s> but it is also the index of the next available spot in the array </s>
<s> for example if 4 numbers have been stored in the array they occupy locations number 0 1 2 and 3 </s>
<s> the next available spot is location 4 </s>
<s> when the time comes to print out the numbers in the array the last occupied spot in the array is location numcount - 1 so the for loop prints out values starting from location numcount - 1 and going down to 0 et’s look at another more realistic example </s>
<s> suppose that you write a game program and that players can join the game and leave the game as it progresses </s>
<s> as a good object-oriented 73 </s>
<s> dynamic arrays and arraylists 337 programmer you probably have a class named player to represent the individual players in the game </s>
<s> a list of all players who are currently in the game could be stored in an array playerlist of type player[ ] </s>
<s> since the number of players can change you will also need a variable playerct to record the number of players currently in the game </s>
<s> assuming that there will never be more than 10 players in the game you could declare the variables as player[] playerlist = new player[10] // up to 10 players int playerct = 0 // at the start there are no players after some players have joined the game playerct will be greater than 0 and the player objects representing the players will be stored in the array elements playerlist[0] playerlist[1] playerlist[playerct-1] </s>
<s> note that the array element playerlist[playerct] is not in use </s>
<s> the procedure for adding a new player newplayer to the game is simple playerlist[playerct] = newplayer // put new player in next // available spot playerct++ // and increment playerct to count the new player deleting a player from the game is a little harder since you don’t want to leave a hole” in the array </s>
<s> suppose you want to delete the player at index k in playerlist </s>
<s> if you are not worried about keeping the players in any particular order then one way to do this is to move the player from the last occupied position in the array into position k and then to decrement the value of playerct playerlist[k] = playerlist[playerct - 1] playerct -- the player previously in position k is no longer in the array </s>
<s> the player previously in position playerct - 1 is now in the array twice </s>
<s> but it’s only in the occupied or valid part of the array once since playerct has decreased by one </s>
<s> remember that every element of the array has to hold some value but only the values in positions 0 through playerct - 1 will be looked at or processed in any way ( by the way you should think about what happens if the player that is being deleted is in the last position in the list </s>
<s> the code does still work in this case </s>
<s> what exactly happens ) suppose that when deleting the player in position k you’d like to keep the remaining players in the same order ( maybe because they take turns in the order in which they are stored in the array ) to do this all the players in positions k+1 and above must move down one position in the array </s>
<s> player k+1 replaces player k who is out of the game </s>
<s> player k+2 ﬁlls the spot left open when player k+1 is moved </s>
<s> and so on </s>
<s> the code for this is for ( int i = k+1 i < playerct i++ ) { playerlist[i-1] = playerlist[i] } playerct -- ∗ ∗ ∗ it’s worth emphasizing that the player example deals with an array whose base type is a class </s>
<s> an item in the array is either null or is a reference to an object belonging to the class player </s>
<s> the player objects themselves are not really stored in the array only references to them </s>
<s> note that because of the rules for assignment in java the objects can actually belong to subclasses of player </s>
<s> thus there could be diﬀerent classes of players such as computer players 338 chapter 7 </s>
<s> arrays regular human players players who are wizards all represented by diﬀerent subclasses of player as another example suppose that a class shape represents the general idea of a shape drawn on a screen and that it has subclasses to represent speciﬁc types of shapes such as lines rectangles rounded rectangles ovals ﬁlled-in ovals and so forth ( shape itself would be an abstract class as discussed in subsection 555 ) then an array of type shape[ ] can hold references to objects belonging to the subclasses of shape </s>
<s> for example the situation created by the statements shape[] shapes = new shape[100] // array to hold up to 100 shapes shapes[0] = new rect( ) // put some objects in the array shapes[1] = new line( ) shapes[2] = new filledoval( ) int shapect = 3 // keep track of number of objects in array could be illustrated as shapes shapeslength ( 100 ) shapes[0] shapes[1] shapes[2] shapes[3] null shapes[4] null object of class rect object of class line object of class filledoval such an array would be useful in a drawing program </s>
<s> the array could be used to hold a list of shapes to be displayed </s>
<s> if the shape class includes a method void redraw( graphics g )” for drawing the shape in a graphics context g then all the shapes in the array could be redrawn with a simple for loop for ( int i = 0 i < shapect i++ ) shapes[i]redraw( g ) the statement shapes[i]redraw( g )” calls the redraw( ) method belonging to the particular shape at index i in the array </s>
<s> each object knows how to redraw itself so that repeated executions of the statement can produce a variety of diﬀerent shapes on the screen </s>
<s> this is nice example both of polymorphism and of array processing 732 dynamic arrays in each of the above examples an arbitrary limit was set on the number of items—100 ints 10 players 100 shapes </s>
<s> since the size of an array is ﬁxed a given array can only hold a certain maximum number of items </s>
<s> in many cases such an arbitrary limit is undesirable </s>
<s> why should a program work for 100 data values but not for 101 the obvious alternative of making an array that’s so big that it will work in any practical case is not usually a good solution to the problem </s>
<s> it means that in most cases a lot of computer memory will be wasted on unused space in the array </s>
<s> that memory might be better used for something else </s>
<s> and what if someone is 73 </s>
<s> dynamic arrays and arraylists 339 using a computer that could handle as many data values as the user actually wants to process but doesn’t have enough memory to accommodate all the extra space that you’ve allocated for your huge array clearly it would be nice if we could increase the size of an array at will </s>
<s> this is not possible but what is possible is almost as good </s>
<s> remember that an array variable does not actually hold an array </s>
<s> it just holds a reference to an array object </s>
<s> we can’t make the array bigger but we can make a new bigger array object and change the value of the array variable so that it refers to the bigger array </s>
<s> of course we also have to copy the contents of the old array into the new array </s>
<s> the array variable then refers to an array object that contains all the data of the old array with room for additional data </s>
<s> the old array will be garbage collected since it is no longer in use et’s look back at the game example in which playerlist is an array of type player[ ] and playerct is the number of spaces that have been used in the array </s>
<s> suppose that we don’t want to put a pre-set limit on the number of players </s>
<s> if a new player joins the game and the current array is full we just make a new bigger one </s>
<s> the same variable playerlist will refer to the new array </s>
<s> note that after this is done playerlist[0] will refer to a diﬀerent memory location but the value stored in playerlist[0] will still be the same as it was before </s>
<s> here is some code that will do this // add a new player even if the current array is full if ( playerct == playerlistlength ) { // array is full </s>
<s> make a new bigger array // copy the contents of the old array into it // and set playerlist to refer to the new array int newsize = 2 * playerlistlength // size of new array player[] temp = new player[newsize] // the new array systemarraycopy( playerlist 0 temp 0 playerlistlength ) playerlist = temp // set playerlist to refer to new array } // at this point we know there is room in the array playerlist[playerct] = newplayer // add the new player playerct++ // and count it if we are going to be doing things like this regularly it would be nice to deﬁne a reusable class to handle the details </s>
<s> an array-like object that changes size to accommodate the amount of data that it actually contains is called a dynamic array </s>
<s> a dynamic array supports the same operations as an array putting a value at a given position and getting the value that is stored at a given position </s>
<s> but there is no upper limit on the positions that can be used ( except those imposed by the size of the computer’s memory ) </s>
<s> in a dynamic array class the put and get operations must be implemented as instance methods </s>
<s> here for example is a class that implements a dynamic array of ints /** * an * of * of */ public object of type dynamicarrayofint acts like an array of int unlimited size </s>
<s> the notation aget( i ) must be used instead a[i] and aset( iv ) must be used instead of a[i] = v class dynamicarrayofint { private int[] data // an array to hold the data 340 chapter 7 </s>
<s> arrays /** * constructor creates an array with an initial size of 1 * but the array size will be increased whenever a reference * is made to an array position that does not yet exist */ public dynamicarrayofint( ) { data = new int[1] } /** * get the value from the specified position in the array * since all array elements are initialized to zero when the * specified position lies outside the actual physical size * of the data array a value of 0 is returned </s>
<s> note that * a negative value of position will still produce an * arrayindexoutofboundsexception */ public int get( int position ) { if ( position >= datalength ) return 0 else return data[position] } /** * store the value in the specified position in the array * the data array will increase in size to include this * position if necessary */ public void put( int position int value ) { if ( position >= datalength ) { // the specified position is outside the actual size of // the data array </s>
<s> double the size or if that still does // not include the specified position set the new size // to 2*position int newsize = 2 * datalength if ( position >= newsize ) newsize = 2 * position int[] newdata = new int[newsize] systemarraycopy( data 0 newdata 0 datalength ) data = newdata // the following line is for demonstration purposes only !! systemoutprintln( size of dynamic array increased to + newsize ) } data[position] = value } } // end class dynamicarrayofint the data in a dynamicarrayofint object is actually stored in a regular array but that array is discarded and replaced by a bigger array whenever necessary </s>
<s> if numbers is a variable of type dynamicarrayofint then the command numbersput( posval ) stores the value val at position number pos in the dynamic array </s>
<s> the function numbersget( pos ) returns the value stored at position number pos 73 </s>
<s> dynamic arrays and arraylists 341 the ﬁrst example in this section used an array to store positive integers input by the user </s>
<s> we can rewrite that example to use a dynamicarrayofint </s>
<s> a reference to numbers[i] is replaced by numbersget( i ) </s>
<s> the statement numbers[numcount] = num” is replaced by numbersput( numcountnum )” </s>
<s> here’s the program public class reversewithdynamicarray { public static void main( string[] args ) { dynamicarrayofint numbers // to hold the input numbers int numcount // the number of numbers stored in the array int num // one of the numbers input by the user numbers = new dynamicarrayofint( ) numcount = 0 textioputln( enter some positive integers enter 0 to end ) while ( true ) { // get numbers and put them in the dynamic array textioput( ) num = textiogetlnint( ) if ( num <= 0 ) break numbersput( numcount num ) // store num in the dynamic array numcount++ } textioputln( nyour numbers in reverse order aren ) for ( int i = numcount - 1 i >= 0 i -- ) { textioputln( numbersget( i ) ) // print the i-th number } } // end main( ) } // end class reversewithdynamicarray you can ﬁnd an applet that simulates the program in the on-line version of this section 733 arrraylists the dynamicarrayofint class could be used in any situation where an array of int with no preset limit on the size is needed </s>
<s> however if we want to store shapes instead of ints we would have to deﬁne a new class to do it </s>
<s> that class probably named dynamicarrayofshape” would look exactly the same as the dynamicarrayofint class except that everywhere the type int” appears it would be replaced by the type shape” </s>
<s> similarly we could deﬁne a dynamicarrayofdouble class a dynamicarrayofplayer class and so on </s>
<s> but there is something a little silly about this since all these classes are close to being identical </s>
<s> it would be nice to be able to write some kind of source code once and for all that could be used to generate any of these classes on demand given the type of value that we want to store </s>
<s> this would be an example of generic programming </s>
<s> some programming languages including c++ have had support for generic programming for some time </s>
<s> with version 50 java introduced true generic programming but even before that it had something that was very similar one can come close to generic programming in java by working with data structures that contain elements of type object we will ﬁrst consider the almost-generic programming that has been available in java from 342 chapter 7 </s>
<s> arrays the beginning and then we will look at the change that was introduced in java 50 </s>
<s> a full discussion of generic programming will be given in chapter 10 in java every class is a subclass of the class named object </s>
<s> this means that every object can be assigned to a variable of type object </s>
<s> any object can be put into an array of type object[ ] if we deﬁned a dynamicarrayofobject class then we could store objects of any type </s>
<s> this is not true generic programming and it doesn’t apply to the primitive types such as int and double but it does come close </s>
<s> in fact there is no need for us to deﬁne a dynamicarrayofobject class java already has a standard class named arraylist that serves much the same purpose </s>
<s> the arraylist class is in the package javautil so if you want to use it in a program you should put the directive import javautilarraylist” at the beginning of your source code ﬁle the arraylist class diﬀers from my dynamicarrayofint class in that an arraylist object always has a deﬁnite size and it is illegal to refer to a position in the arraylist that lies outside its size </s>
<s> in this an arraylist is more like a regular array </s>
<s> however the size of an arraylist can be increased at will </s>
<s> the arraylist class deﬁnes many instance methods </s>
<s> i’ll describe some of the most useful </s>
<s> suppose that list is a variable of type arraylist </s>
<s> then we have • listsize( ) — this function returns the current size of the arraylist </s>
<s> the only valid positions in the list are numbers in the range 0 to listsize( )-1 </s>
<s> note that the size can be zero </s>
<s> a call to the default constructor new arraylist( ) creates an arraylist of size zero • listadd( obj ) — adds an object onto the end of the list increasing the size by 1 </s>
<s> the parameter obj can refer to an object of any type or it can be null • listget( n ) — this function returns the value stored at position n in the arraylist </s>
<s> n must be an integer in the range 0 to listsize( )-1 </s>
<s> if n is outside this range an error of type indexoutofboundsexception occurs </s>
<s> calling this function is similar to referring to a[n] for an array a except that you can’t use listget( n ) on the left side of an assignment statement • listset( n obj ) — assigns the object obj to position n in the arraylist replacing the item previously stored at position n </s>
<s> the integer n must be in the range from 0 to listsize( )-1 </s>
<s> a call to this function is equivalent to the command a[n] = obj for an array a • listremove( obj ) — if the speciﬁed object occurs somewhere in the arraylist it is removed from the list </s>
<s> any items in the list that come after the removed item are moved down one position </s>
<s> the size of the arraylist decreases by 1 </s>
<s> if obj occurs more than once in the list only the ﬁrst copy is removed • listremove( n ) — for an integer n this removes the n-th item in the arraylist </s>
<s> n must be in the range 0 to listsize( )-1 </s>
<s> any items in the list that come after the removed item are moved down one position </s>
<s> the size of the arraylist decreases by 1 • listindexof( obj ) — a function that searches for the object obj in the arraylist </s>
<s> if the object is found in the list then the position number where it is found is returned </s>
<s> if the object is not found then -1 is returned for example suppose again that players in a game are represented by objects of type player the players currently in the game could be stored in an arraylist named players </s>
<s> this variable would be declared as arraylist players and initialized to refer to a new empty arraylist object with 73 </s>
<s> dynamic arrays and arraylists 343 players = new arraylist( ) if newplayer is a variable that refers to a player object the new player would be added to the arraylist and to the game by saying playersadd( newplayer ) and if player number i leaves the game it is only necessary to say playersremove( i ) or if player is a variable that refers to the player that is to be removed you could say playersremove( player ) all this works very nicely </s>
<s> the only slight diﬃculty arises when you use the function playersget( i ) to get the value stored at position i in the arraylist </s>
<s> the return type of this function is object </s>
<s> in this case the object that is returned by the function is actually of type player </s>
<s> in order to do anything useful with the returned value it’s usually necessary to type-cast it to type player player plr = ( player )playersget( i ) for example if the player class includes an instance method makemove( ) that is called to allow a player to make a move in the game then the code for letting every player make a move is for ( int i = 0 i < playerssize( ) i++ ) { player plr = ( player )playersget( i ) plrmakemove( ) } the two lines inside the for loop can be combined into a single line ( ( player )playersget( i ) )makemove( ) this gets an item from the list type-casts it and then calls the makemove( ) method on the resulting player </s>
<s> the parentheses around ( player )playersget( i )” are required because of java’s precedence rules </s>
<s> the parentheses force the type-cast to be performed before the makemove( ) method is called for-each loops work for arraylists just as they do for arrays </s>
<s> but note that since the items in an arraylist are only known to be objects the type of the loop control variable must be object </s>
<s> for example the for loop used above to let each player make a move could be written as the for-each loop for ( object plrobj players ) { player plr = ( player )plrobj plrmakemove( ) } in the body of the loop the value of the loop control variable plrobj is one of the objects from the list players </s>
<s> this object must be type-cast to type player before it can be used ∗ ∗ ∗ in subsection 555 i discussed a program shapedraw that uses arraylists </s>
<s> here is another version of the same idea simpliﬁed to make it easier to see how arraylist is being used </s>
<s> the program supports the following operations click the large white drawing area to add a colored rectangle ( the color of the rectangle is given by a rainbow palette” along the bottom of the applet click the palette to select a new color ) drag rectangles using the right mouse button 344 chapter 7 </s>
<s> arrays hold down the alt key and click on a rectangle to delete it ( or click it with the middle mouse button ) </s>
<s> shift-click a rectangle to move it out in front of all the other rectangles </s>
<s> you can try an applet version of the program in the on-line version of this section source code for the main panel for this program can be found in simpledrawrectsjava you should be able to follow the source code in its entirety ( you can also take a look at the ﬁle rainbowpalettejava which deﬁnes the color palette shown at the bottom of the applet if you like ) here i just want to look at the parts of the program that use an arraylist the applet uses a variable named rects of type arraylist to hold information about the rectangles that have been added to the drawing area </s>
<s> the objects that are stored in the list belong to a static nested class coloredrect that is deﬁned as /** * an object of type coloredrect holds the data for one colored rectangle */ private static class coloredrect { int xy // upper left corner of the rectangle int widthheight // size of the rectangle color color // color of the rectangle } if g is a variable of type graphics then the following code draws all the rectangles that are stored in the list rects ( with a black outline around each rectangle ) for ( int i = 0 i < rectssize( ) i++ ) { coloredrect rect = ( coloredrect )rectsget( i ) gsetcolor( rectcolor ) gfillrect( rectx recty rectwidth rectheight ) gsetcolor( colorblack ) gdrawrect( rectx recty rectwidth - 1 rectheight - 1 ) } the i-th rectangle in the list is obtained by calling rectsget( i ) </s>
<s> since this method returns a value of type object the return value must be typecast to its actual type coloredrect to get access to the data that it contains to implement the mouse operations it must be possible to ﬁnd the rectangle if any that contains the point where the user clicked the mouse </s>
<s> to do this i wrote the function /** * find the topmost rect that contains the point ( xy ) </s>
<s> return null * if no rect contains that point </s>
<s> the rects in the arraylist are * considered in reverse order so that if one lies on top of another * the one on top is seen first and is returned */ coloredrect findrect( int x int y ) { for ( int i = rectssize( ) - 1 i >= 0 i -- ) { coloredrect rect = ( coloredrect )rectsget( i ) if ( x >= rectx && x < rectx + rectwidth && y >= recty && y < recty + rectheight ) return rect // ( xy ) is inside this rect } return null } // no rect containing ( xy ) was found 73 </s>
<s> dynamic arrays and arraylists 345 the code for removing a coloredrect rect from the drawing area is simply rectsremove( rect ) ( followed by a repaint( ) ) </s>
<s> bringing a given rectangle out in front of all the other rectangles is just a little harder </s>
<s> since the rectangles are drawn in the order in which they occur in the arraylist the rectangle that is in the last position in the list is in front of all the other rectangles on the screen </s>
<s> so we need to move the selected rectangle to the last position in the list </s>
<s> this can most easily be done in a slightly tricky way using built-in arraylist operations the rectangle is simply removed from its current position in the list and then added back at the end of the list void bringtofront( coloredrect rect ) { if ( rect != null ) { rectsremove( rect ) // remove rect from the list rectsadd( rect ) // add it back it will be placed in the last position repaint( ) } } this should be enough to give you the basic idea </s>
<s> you can look in the source code for more details 734 parameterized types the main diﬀerence between true generic programming and the arraylist examples in the previous subsection is the use of the type object as the basic type for objects that are stored in a list </s>
<s> this has at least two unfortunate consequences first it makes it necessary to use type-casting in almost every case when an element is retrieved from that list </s>
<s> second since any type of object can legally be added to the list there is no way for the compiler to detect an attempt to add the wrong type of object to the list the error will be detected only at run time when the object is retrieved from the list and the attempt to type-cast the object fails compare this to arrays </s>
<s> an array of type basetype[ ] can only hold objects of type basetype an attempt to store an object of the wrong type in the array will be detected by the compiler and there is no need to type-cast items that are retrieved from the array back to type basetype to address this problem java 50 introduced parameterized types </s>
<s> arraylist is an example instead of using the plain arraylist” type it is possible to use arraylist<basetype> where basetype is any object type that is the name of a class or of an interface ( basetype cannot be one of the primitive types ) arraylist<basetype> can be used to create lists that can hold only objects of type basetype </s>
<s> for example arraylist<coloredrect> rects declares a variable named rects of type arraylist<coloredrect> and rects = new arraylist<coloredrect>( ) sets rects to refer to a newly created list that can only hold objects belonging to the class coloredrect ( or to a subclass ) </s>
<s> the funny-looking name arraylist<coloredrect>” is being used here in exactly the same way as an ordinary class name—don’t let the <coloredrect>” confuse you it’s just part of the name of the type just as it would be in the array type coloredrect[ ] </s>
<s> when a statement such as rectsadd( x ) occurs in the program the compiler can check whether x is in fact of type coloredrect </s>
<s> if not the compiler will report a syntax error </s>
<s> when an object is retrieved from the list the compiler knows that the object must be of type coloredrect so no type-cast is necessary </s>
<s> you can say simply 346 chapter 7 </s>
<s> arrays coloredrect rect = rectsget( i ) you can even refer directly to an instance variable in the object such as rectsget( i )color this makes using arraylist<coloredrect> very similar to using coloredrect[ ] with the added advantage that the list can grow to any size </s>
<s> note that if a for-each loop is used to process the items in rects the type of the loop control variable can be coloredrect and no type-cast is necessary </s>
<s> for example when using arraylist<coloredrect> as the type for the list rects the code for drawing all the rectangles in the list could be rewritten as for ( coloredrect rect rects ) { gsetcolor( rectcolor ) gfillrect( rectx recty rectwidth rectheight ) gsetcolor( colorblack ) gdrawrect( rectx recty rectwidth - 1 rectheight - 1 ) } you can use arraylist<coloredrect> anyplace where you could use a normal type to declare variables as the type of a formal parameter in a subroutine or as the return type of a subroutine you can even create a subclass of arraylist<coloredrect>! ( nevertheless technically speaking arraylist<coloredrect> is not considered to be a separate class from arraylist </s>
<s> an object of type arraylist<coloredrect> actually belongs to the class arraylist but the compiler restricts the type of objects that can be added to the list ) the only drawback to using parameterized types is that the base type cannot be a primitive type </s>
<s> for example there is no such thing as arraylist<int>” </s>
<s> however this is not such a big drawback as it might seem at ﬁrst because of the wrapper types” and autoboxing” that were introduced in subsection 532 </s>
<s> a wrapper type such as double or integer can be used as a base type for a parameterized type </s>
<s> an object of type arraylist<double> can hold objects of type double </s>
<s> since each object of type double holds a value of type double it’s almost like having a list of doubles </s>
<s> if numlist is declared to be of type arraylist<double> and if x is of type double then the value of x can be added to the list by saying numlistadd( new double( x ) ) furthermore because of autoboxing the compiler will automatically do double-to-double and double-to-double type conversions when necessary </s>
<s> this means that the compiler will treat numlistadd( x )” as being equivalent to numlistadd( new double( x ) )” </s>
<s> so behind the scenes numlistadd( x )” is actually adding an object to the list but it looks a lot as if you are working with a list of doubles ∗ ∗ ∗ the sample program simplepaint2java demonstrates the use of parameterized types </s>
<s> in this program the user can sketch curves in a drawing area by clicking and dragging with the mouse </s>
<s> the curves can be of any color and the user can select the drawing color using a menu the background color of the drawing area can also be selected using a menu </s>
<s> and there is a control” menu that contains several commands an undo” command which removes the most recently drawn curve from the screen a clear” command that removes all the curves and a use symmetry” checkbox that turns a symmetry feature on and oﬀ </s>
<s> curves that are drawn by the user when the symmetry option is on are reﬂected horizontally and vertically to produce a symmetric pattern </s>
<s> you can try an applet version of the program in the on-line version of this section unlike the original simplepaint program in subsection 644 this new version uses a data structure to store information about the picture that has been drawn by the user </s>
<s> this data 347 73 </s>
<s> dynamic arrays and arraylists is used in the paintcomponent( ) method to redraw the picture whenever necessary </s>
<s> thus the picture doesn’t disappear when for example the picture is covered and then uncovered </s>
<s> the data structure is implemented using arraylists the main data for a curve consists of a list of the points on the curve </s>
<s> this data can be stored in an object of type arraylist<point> where javaawtpoint is one of java’s standard classes ( a point object contains two public integer variables x and y that represent the coordinates of a point ) however to redraw the curve we also need to know its color and we need to know whether the symmetry option should be applied to the curve </s>
<s> all the data that is needed to redraw the curve can be grouped into an object of type curvedata that is deﬁned as private static class curvedata { color color // the color of the curve boolean symmetric // are horizontal and vertical reflections also drawn arraylist<point> points // the points on the curve } however a picture can contain many curves not just one so to store all the data necessary to redraw the entire picture we need a list of objects of type curvedata </s>
<s> for this list we can use a variable curves declared as arraylist<curvedata> curves = new arraylist<curvedata>( ) here we have a list of objects where each object contains a list of points as part of its data! et’s look at a few examples of processing this data structure </s>
<s> when the user clicks the mouse on the drawing surface it’s the start of a new curve and a new curvedata object must be created and added to the list of curves </s>
<s> the instance variables in the new curvedata object must also be initialized </s>
<s> here is the code from the mousepressed( ) routine that does this currentcurve = new curvedata( ) // create a new curvedata object currentcurvecolor = currentcolor // the color of the curve is taken from an // instance variable that represents the // currently selected drawing color currentcurvesymmetric = usesymmetry // the symmetric property of the curve // is also copied from the current value // of an instance variable usesymmetry currentcurvepoints = new arraylist<point>( ) // create a new point list object currentcurvepointsadd( new point( evtgetx( ) evtgety( ) ) ) // the point where the user pressed the mouse is the first point on // the curve </s>
<s> a new point object is created to hold the coordinates // of that point and is added to the list of points for the curve curvesadd( currentcurve ) // add the curvedata object to the list of curves as the user drags the mouse new points are added to currentcurve and repaint( ) is called when the picture is redrawn the new point will be part of the picture the paintcomponent( ) method has to use the data in curves to draw all the curves </s>
<s> the basic structure is a for-each loop that processes the data for each individual curve in turn </s>
<s> this has the form for ( curvedata curve curves ) { // draw the curve represented by the object curve of type curvedata 348 chapter 7 </s>
<s> arrays } in the body of this loop curvepoints is a variable of type arraylist<point> that holds the list of points on the curve </s>
<s> the i-th point on the curve can be obtained by calling the get( ) method of this list curvepointsget( i ) </s>
<s> this returns a value of type point which contains instance variables named x and y </s>
<s> we can refer directly to the x-coordinate of the i-th point as curvepointsget( i )x this might seem rather complicated but it’s a nice example of a complex name that speciﬁes a path to a desired piece of data go to the object curve </s>
<s> inside curve go to points </s>
<s> inside points get the i-th item </s>
<s> and from that item get the instance variable named x </s>
<s> here is the complete deﬁnition of the paintcomponent( ) method public void paintcomponent( graphics g ) { superpaintcomponent( g ) for ( curvedata curve curves ) { gsetcolor( curvecolor ) for ( int i = 1 i < curvepointssize( ) i++ ) { // draw a line segment from point number i-1 to point number i int x1 = curvepointsget( i-1 )x int y1 = curvepointsget( i-1 )y int x2 = curvepointsget( i )x int y2 = curvepointsget( i )y gdrawline( x1y1x2y2 ) if ( curvesymmetric ) { // also draw the horizontal and vertical reflections // of the line segment int w = getwidth( ) int h = getheight( ) gdrawline( w-x1y1w-x2y2 ) gdrawline( x1h-y1x2h-y2 ) gdrawline( w-x1h-y1w-x2h-y2 ) } } } } // end paintcomponent( ) i encourage you to read the full source code simplepaint2java </s>
<s> in addition to serving as an example of using parameterized types it also serves as another example of creating and using menus 735 vectors the arraylist class was introduced in java version 12 as one of a group of classes designed for working with collections of objects </s>
<s> we’ll look at these collection classes” in chapter 10 early versions of java did not include arraylist but they did have a very similar class named javautilvector </s>
<s> you can still see vectors used in older code and in many of java’s standard classes so it’s worth knowing about them </s>
<s> using a vector is similar to using an arraylist except that diﬀerent names are used for some commonly used instance methods and some instance methods in one class don’t correspond to any instance method in the other class 74 </s>
<s> searching and sorting 349 ike an arraylist a vector is similar to an array of objects that can grow to be as large as necessary </s>
<s> the default constructor new vector( ) creates a vector with no elements </s>
<s> suppose that vec is a vector </s>
<s> then we have • vecsize( ) — a function that returns the number of elements currently in the vector • vecelementat( n ) — returns the n-th element of the vector for an integer n </s>
<s> n must be in the range 0 to vecsize( )-1 </s>
<s> this is the same as get( n ) for an arraylist • vecsetelementat( objn ) — sets the n-th element in the vector to be obj </s>
<s> n must be in the range 0 to vecsize( )-1 </s>
<s> this is the same as set( nobj ) for an arraylist • vecaddelement( obj ) — adds the object obj to the end of the vector </s>
<s> this is the same as the add( ) method of an arraylist • vecremoveelement( obj ) — removes obj from the vector if it occurs </s>
<s> only the ﬁrst occurrence is removed </s>
<s> this is the same as remove( obj ) for an arraylist • vecremoveelementat( n ) — removes the n-th element for an integer n </s>
<s> n must be in the range 0 to vecsize( )-1 </s>
<s> this is the same as remove( n ) for an arraylist • vecsetsize( n ) — sets the size of the vector to n </s>
<s> if there were more than n elements in vec the extra elements are removed </s>
<s> if there were fewer than n elements extra spaces are ﬁlled with null </s>
<s> the arraylist class unfortunately does not have a setsize( ) method the vector class includes many more methods but these are probably the most commonly used </s>
<s> note that in java 50 vector can be used as a parameterized type in exactly the same way as arraylist </s>
<s> that is if basetype is any class or interface name then vector<basetype> represents vectors that can hold only objects of type basetype 74 searching and sorting two array processing techniques that are particularly common are searching and sorting </s>
<s> searching here refers to ﬁnding an item in the array that meets some speciﬁed criterion sorting refers to rearranging all the items in the array into increasing or decreasing order ( where the meaning of increasing and decreasing can depend on the context ) sorting and searching are often discussed in a theoretical sort of way using an array of numbers as an example </s>
<s> in practical situations though more interesting types of data are usually involved </s>
<s> for example the array might be a mailing list and each element of the array might be an object containing a name and address </s>
<s> given the name of a person you might want to look up that person’s address </s>
<s> this is an example of searching since you want to ﬁnd the object in the array that contains the given name </s>
<s> it would also be useful to be able to sort the array according to various criteria </s>
<s> one example of sorting would be ordering the elements of the array so that the names are in alphabetical order </s>
<s> another example would be to order the elements of the array according to zip code before printing a set of mailing labels ( this kind of sorting can get you a cheaper postage rate on a large mailing ) this example can be generalized to a more abstract situation in which we have an array that contains objects and we want to search or sort the array based on the value of one of the instance variables in that array </s>
<s> we can use some terminology here that originated in work with databases” which are just large organized collections of data </s>
<s> we refer to each of the objects in the array as a record </s>
<s> the instance variables in an object are then called ﬁelds of the record </s>
<s> in the mailing list example each record would contain a name and address </s>
<s> the ﬁelds of the record might be the ﬁrst name last name street address state city and zip code 350 chapter 7 </s>
<s> arrays for the purpose of searching or sorting one of the ﬁelds is designated to be the key ﬁeld searching then means ﬁnding a record in the array that has a speciﬁed value in its key ﬁeld sorting means moving the records around in the array so that the key ﬁelds of the record are in increasing ( or decreasing ) order in this section most of my examples follow the tradition of using arrays of numbers </s>
<s> but i’ll also give a few examples using records and keys to remind you of the more practical applications 741 searching there is an obvious algorithm for searching for a particular item in an array look at each item in the array in turn and check whether that item is the one you are looking for </s>
<s> if so the search is ﬁnished </s>
<s> if you look at every item without ﬁnding the one you want then you can be sure that the item is not in the array </s>
<s> it’s easy to write a subroutine to implement this algorithm </s>
<s> let’s say the array that you want to search is an array of ints </s>
<s> here is a method that will search the array for a speciﬁed integer </s>
<s> if the integer is found the method returns the index of the location in the array where it is found </s>
<s> if the integer is not in the array the method returns the value -1 as a signal that the integer could not be found /** * searches the array a for the integer n </s>
<s> if n is not in the array * then -1 is returned </s>
<s> if n is in the array then the return value is * the first integer i that satisfies a[i] == n */ static int find( int[] a int n ) { for ( int index = 0 index < alength index++ ) { if ( a[index] == n ) return index // n has been found at this index! } // if we get this far then n has not been found // anywhere in the array </s>
<s> return a value of -1 return -1 } this method of searching an array by looking at each item in turn is called linear search if nothing is known about the order of the items in the array then there is really no better alternative algorithm </s>
<s> but if the elements in the array are known to be in increasing or decreasing order then a much faster search algorithm can be used </s>
<s> an array in which the elements are in order is said to be sorted </s>
<s> of course it takes some work to sort an array but if the array is to be searched many times then the work done in sorting it can really pay oﬀ binary search is a method for searching for a given item in a sorted array </s>
<s> although the implementation is not trivial the basic idea is simple if you are searching for an item in a sorted list then it is possible to eliminate half of the items in the list by inspecting a single item </s>
<s> for example suppose that you are looking for the number 42 in a sorted array of 1000 integers </s>
<s> let’s assume that the array is sorted into increasing order </s>
<s> suppose you check item number 500 in the array and ﬁnd that the item is 93 </s>
<s> since 42 is less than 93 and since the elements in the array are in increasing order we can conclude that if 42 occurs in the array at all then it must occur somewhere before location 500 </s>
<s> all the locations numbered 500 or 351 74 </s>
<s> searching and sorting above contain values that are greater than or equal to 93 </s>
<s> these locations can be eliminated as possible locations of the number 42 the next obvious step is to check location 250 </s>
<s> if the number at that location is say -21 then you can eliminate locations before 250 and limit further search to locations between 251 and 499 </s>
<s> the next test will limit the search to about 125 locations and the one after that to about 62 </s>
<s> after just 10 steps there is only one location left </s>
<s> this is a whole lot better than looking through every element in the array </s>
<s> if there were a million items it would still take only 20 steps for binary search to search the array! ( mathematically the number of steps is approximately equal to the logarithm in the base 2 of the number of items in the array ) in order to make binary search into a java subroutine that searches an array a for an item n we just have to keep track of the range of locations that could possibly contain n </s>
<s> at each step as we eliminate possibilities we reduce the size of this range </s>
<s> the basic operation is to look at the item in the middle of the range </s>
<s> if this item is greater than n then the second half of the range can be eliminated </s>
<s> if it is less than n then the ﬁrst half of the range can be eliminated </s>
<s> if the number in the middle just happens to be n exactly then the search is ﬁnished </s>
<s> if the size of the range decreases to zero then the number n does not occur in the array </s>
<s> here is a subroutine that returns the location of n in a sorted array a </s>
<s> if n cannot be found in the array then a value of -1 is returned instead /** * searches the array a for the integer * precondition a must be sorted into * postcondition if n is in the array * satisfies a[i] == n </s>
<s> if n is not * return value is -1 */ static int binarysearch( int[] a int n ) n increasing order then the return value i in the array then the { int lowestpossibleloc = 0 int highestpossibleloc = alength - 1 while ( highestpossibleloc >= lowestpossibleloc ) { int middle = ( lowestpossibleloc + highestpossibleloc ) / 2 if ( a[middle] == n ) { // n has been found at this index! return middle } else if ( a[middle] > n ) { // eliminate locations >= middle highestpossibleloc = middle - 1 } else { // eliminate locations <= middle lowestpossibleloc = middle + 1 } } // at this point highestpossibleloc < lowestpossibleloc // which means that n is known to be not in the array </s>
<s> return // a -1 to indicate that n could not be found in the array return -1 } 352 742 chapter 7 </s>
<s> arrays association lists one particularly common application of searching is with association lists </s>
<s> the standard example of an association list is a dictionary </s>
<s> a dictionary associates deﬁnitions with words given a word you can use the dictionary to look up its deﬁnition </s>
<s> we can think of the dictionary as being a list of pairs of the form ( wd ) where w is a word and d is its deﬁnition </s>
<s> a general association list is a list of pairs ( kv ) where k is some key” value and v is a value associated to that key </s>
<s> in general we want to assume that no two pairs in the list have the same key there are two basic operations on association lists given a key k ﬁnd the value v associated with k if any </s>
<s> and given a key k and a value v add the pair ( kv ) to the association list ( replacing the pair if any that had the same key value ) </s>
<s> the two operations are usually called get and put association lists are very widely used in computer science </s>
<s> for example a compiler has to keep track of the location in memory associated with each variable </s>
<s> it can do this with an association list in which each key is a variable name and the associated value is the address of that variable in memory </s>
<s> another example would be a mailing list if we think of it as associating an address to each name on the list </s>
<s> as a related example consider a phone directory that associates a phone number to each name </s>
<s> we’ll look at a highly simpliﬁed version of this example </s>
<s> and note that things can be done much more eﬃciently as you’ll learn in chapter 10 the items in the phone directory’s association list could be objects belonging to the class class phoneentry { string name string phonenum } the data for a phone directory consists of an array of type phoneentry[ ] and an integer variable to keep track of how many entries are actually stored in the directory </s>
<s> the technique of dynamic arrays” ( subsection 732 ) can be used in order to avoid putting an arbitrary limit on the number of entries that the phone directory can hold </s>
<s> using an arraylist would be another possibility </s>
<s> a phonedirectory class should include instance methods that implement the get” and put” operations </s>
<s> here is one possible simple deﬁnition of the class /** * a phonedirectory holds a list of names with a phone number for * each name </s>
<s> it is possible to find the number associated with * a given name and to specify the phone number for a given name */ public class phonedirectory { /** * an object of type phoneentry holds one name/number pair */ private static class phoneentry { string name // the name string number // the associated phone number } private phoneentry[] data private int datacount /** // array that holds the name/number pairs // the number of pairs stored in the array 74 </s>
<s> searching and sorting 353 * constructor creates an initially empty directory */ public phonedirectory( ) { data = new phoneentry[1] datacount = 0 } /** * looks for a name/number pair with a given name </s>
<s> if found the index * of the pair in the data array is returned </s>
<s> if no pair contains the * given name then the return value is -1 </s>
<s> this private method is * used internally in getnumber( ) and putnumber( ) */ private int find( string name ) { for ( int i = 0 i < datacount i++ ) { if ( data[i]nameequals( name ) ) return i // the name has been found in position i } return -1 // the name does not exist in the array } /** * finds the phone number if any for a given name * @return the phone number associated with the name if the name does * not occur in the phone directory then the return value is null */ public string getnumber( string name ) { int position = find( name ) if ( position == -1 ) return null // there is no phone entry for the given name else return data[position]number } /** * associates a given name with a given phone number </s>
<s> if the name * already exists in the phone directory then the new number replaces * the old one </s>
<s> otherwise a new name/number pair is added </s>
<s> the * name and number should both be non-null </s>
<s> an illegalargumentexception * is thrown if this is not the case */ public void putnumber( string name string number ) { if ( name == null || number == null ) throw new illegalargumentexception( name and number cannot be null ) int i = find( name ) if ( i >= 0 ) { // the name already exists in position i in the array // just replace the old number at that position with the new data[i]number = number } else { // add a new name/number pair to the array </s>
<s> if the array is // already full first create a new larger array if ( datacount == datalength ) { phoneentry[] newdata = new phoneentry[ 2*datalength ] 354 chapter 7 </s>
<s> arrays systemarraycopy( data0newdata0datacount ) data = newdata } phoneentry newentry = new phoneentry( ) // create a new pair newentryname = name newentrynumber = number data[datacount] = newentry // add the new pair to the array datacount++ } } } // end class phonedirectory the class deﬁnes a private instance method find( ) that uses linear search to ﬁnd the position of a given name in the array of name/number pairs </s>
<s> the find( ) method is used both in the getnumber( ) method and in the putnumber( ) method </s>
<s> note in particular that putnumber( namenumber ) has to check whether the name is in the phone directory </s>
<s> if so it just changes the number in the existing entry if not it has to create a new phone entry and add it to the array this class could use a lot of improvement </s>
<s> for one thing it would be nice to use binary search instead of simple linear search in the getnumber method </s>
<s> however we could only do that if the list of phoneentries were sorted into alphabetical order according to name </s>
<s> in fact it’s really not all that hard to keep the list of entries in sorted order as you’ll see in the next subsection 743 insertion sort we’ve seen that there are good reasons for sorting arrays </s>
<s> there are many algorithms available for doing so </s>
<s> one of the easiest to understand is the insertion sort algorithm </s>
<s> this method is also applicable to the problem of keeping a list in sorted order as you add new items to the list </s>
<s> let’s consider that case ﬁrst suppose you have a sorted list and you want to add an item to that list </s>
<s> if you want to make sure that the modiﬁed list is still sorted then the item must be inserted into the right location with all the smaller items coming before it and all the bigger items after it </s>
<s> this will mean moving each of the bigger items up one space to make room for the new item /* * precondition itemsinarray is the number of items that are * stored in a </s>
<s> these items must be in increasing order * ( a[0] <= a[1] <= <= a[itemsinarray-1] ) * the array size is at least one greater than itemsinarray * postcondition the number of items has increased by one * newitem has been added to the array and all the items * in the array are still in increasing order * note to complete the process of inserting an item in the * array the variable that counts the number of items * in the array must be incremented after calling this * subroutine */ static void insert( int[] a int itemsinarray int newitem ) { int loc = itemsinarray - 1 // start at the end of the array 355 74 </s>
<s> searching and sorting /* move items bigger than newitem up one space stop when a smaller item is encountered or when the beginning of the array ( loc == 0 ) is reached */ while ( loc >= 0 && a[loc] > newitem ) { a[loc + 1] = a[loc] // bump item from a[loc] up to loc+1 loc = loc - 1 // go on to next location } a[loc + 1] = newitem // put newitem in last vacated space } conceptually this could be extended to a sorting method if we were to take all the items out of an unsorted array and then insert them back into the array one-by-one keeping the list in sorted order as we do so </s>
<s> each insertion can be done using the insert routine given above in the actual algorithm we don’t really take all the items from the array we just remember what part of the array has been sorted static void insertionsort( int[] a ) { // sort the array a into increasing order int itemssorted // number of items that have been sorted so far for ( itemssorted = 1 itemssorted < alength itemssorted++ ) { // assume that items a[0] a[1] </s>
<s> a[itemssorted-1] // have already been sorted </s>
<s> insert a[itemssorted] // into the sorted part of the list int temp = a[itemssorted] int loc = itemssorted - 1 // the item to be inserted // start at end of list while ( loc >= 0 && a[loc] > temp ) { a[loc + 1] = a[loc] // bump item from a[loc] up to loc+1 loc = loc - 1 // go on to next location } a[loc + 1] = temp // put temp in last vacated space } } the following is an illustration of one stage in insertion sort </s>
<s> it shows what happens during one execution of the for loop in the above method when itemssorted is 5 356 chapter 7 </s>
<s> arrays start with a partially sorted list of items sorted items items still to be sorted 4 11 13 17 35 15 7 45 12 19 3 22 temp 15 4 11 13 17 35 copy next unsorted item into temp leaving a hole in the array 7 45 12 19 3 22 move items in sorted part of temp 15 array to make room for temp 4 11 13 15 17 35 7 45 12 19 3 22 sorted items items still to be sorted 4 11 13 15 17 35 7 45 12 19 3 22 now the sorted part of the list has increased in size by one item 744 selection sort another typical sorting method uses the idea of ﬁnding the biggest item in the list and moving it to the end—which is where it belongs if the list is to be in increasing order </s>
<s> once the biggest item is in its correct location you can then apply the same idea to the remaining items </s>
<s> that is ﬁnd the next-biggest item and move it into the next-to-last space and so forth </s>
<s> this algorithm is called selection sort </s>
<s> it’s easy to write static void selectionsort( int[] a ) { // sort a into increasing order using selection sort for ( int // // // // lastplace = alength-1 lastplace > 0 lastplace -- ) { find the largest item among a[0] a[1] a[lastplace] and move it into position lastplace by swapping it with the number that is currently in position lastplace int maxloc = 0 // location of largest item seen so far for ( int j = 1 j <= lastplace j++ ) { if ( a[j] > a[maxloc] ) { // since a[j] is bigger than the maximum we’ve seen // so far j is the new location of the maximum value // we’ve seen so far maxloc = j } 357 74 </s>
<s> searching and sorting } int temp = a[maxloc] // swap largest item with a[lastplace] a[maxloc] = a[lastplace] a[lastplace] = temp } // end of for loop } insertion sort and selection sort are suitable for sorting fairly small arrays ( up to a few hundred elements say ) </s>
<s> there are more complicated sorting algorithms that are much faster than insertion sort and selection sort for large arrays </s>
<s> i’ll discuss one such algorithm in chapter 9 ∗ ∗ ∗ a variation of selection sort is used in the hand class that was introduced in subsection 541 ( by the way you are ﬁnally in a position to fully understand the source code for both the hand class and the deck class from that section </s>
<s> see the source ﬁles deckjava and handjava ) in the hand class a hand of playing cards is represented by an arraylist </s>
<s> the objects stored in the arraylist are of type card </s>
<s> a card object contains instance methods getsuit( ) and getvalue( ) that can be used to determine the suit and value of the card </s>
<s> in my sorting method i actually create a new list and move the cards one-by-one from the old list to the new list </s>
<s> the cards are selected from the old list in increasing order </s>
<s> in the end the new list becomes the hand and the old list is discarded </s>
<s> this is certainly not the most eﬃcient procedure! but hands of cards are so small that the ineﬃciency is negligible </s>
<s> here is the code for sorting cards by suit /** * sorts the cards in the hand so that cards of the same suit are * grouped together and within a suit the cards are sorted by value * note that aces are considered to have the lowest value 1 */ public void sortbysuit( ) { arraylist newhand = new arraylist( ) while ( handsize( ) > 0 ) { int pos = 0 // position of minimal card card c = ( card )handget( 0 ) // minimal card for ( int i = 1 i < handsize( ) i++ ) { card c1 = ( card )handget( i ) if ( c1getsuit( ) < cgetsuit( ) || ( c1getsuit( ) == cgetsuit( ) && c1getvalue( ) < cgetvalue( ) ) ) { pos = i c = c1 } } handremove( pos ) newhandadd( c ) } hand = newhand } this example illustrates the fact that comparing items in a list is not usually as simple as using the operator <” </s>
<s> in this case we consider one card to be less than another if the suit of the ﬁrst card is less than the suit of the second and also if the suits are the same and the 358 chapter 7 </s>
<s> arrays value of the second card is less than the value of the ﬁrst </s>
<s> the second part of this test ensures that cards with the same suit will end up sorted by value sorting a list of strings raises a similar problem the <” operator is not deﬁned for strings however the string class does deﬁne a compareto method </s>
<s> if str1 and str2 are of type string then str1compareto( str2 ) returns an int that is 0 when str1 is equal to str2 is less than 0 when str1 precedes str2 and is greater than 0 when str1 follows str2 </s>
<s> the deﬁnition of succeeds” and follows” for strings uses what is called lexicographic ordering which is based on the unicode values of the characters in the strings </s>
<s> lexicographic ordering is not the same as alphabetical ordering even for strings that consist entirely of letters ( because in lexicographic ordering all the upper case letters come before all the lower case letters ) </s>
<s> however for words consisting strictly of the 26 lower case letters in the english alphabet lexicographic and alphabetic ordering are the same ( the same holds true for uppercase letters ) thus if str1 and str2 are strings containing only letters from the english alphabet then the test str1tolowercase( )compareto( str2tolowercase( ) ) < 0 is true if and only if str1 comes before str2 in alphabetical order 745 unsorting i can’t resist ending this section on sorting with a related problem that is much less common but is a bit more fun </s>
<s> that is the problem of putting the elements of an array into a random order </s>
<s> the typical case of this problem is shuﬄing a deck of cards </s>
<s> a good algorithm for shuﬄing is similar to selection sort except that instead of moving the biggest item to the end of the list an item is selected at random and moved to the end of the list </s>
<s> here is a subroutine to shuﬄe an array of ints /** * postcondition the items in a have been rearranged into a random order */ static void shuffle( int[] a ) { for ( int lastplace = alength-1 lastplace > 0 lastplace -- ) { // choose a random location from among 01lastplace int randloc = ( int )( mathrandom( )*( lastplace+1 ) ) // swap items in locations randloc and lastplace int temp = a[randloc] a[randloc] = a[lastplace] a[lastplace] = temp } } 75 any multi-dimensional arrays type can be used as the base type of an array </s>
<s> you can have an array of ints an array of strings an array of objects and so on </s>
<s> in particular since an array type is a ﬁrst-class java type you can have an array of arrays </s>
<s> for example an array of ints has type int[ ] </s>
<s> this means that there is automatically another type int[ ][ ] which represents an array of arrays of ints” </s>
<s> such an array is said to be a two-dimensional array </s>
<s> of course once you have the 359 75 </s>
<s> multi-dimensional arrays type int[ ][ ] there is nothing to stop you from forming the type int[ ][ ][ ] which represents a three-dimensional array —and so on </s>
<s> there is no limit on the number of dimensions that an array type can have </s>
<s> however arrays of dimension three or higher are fairly uncommon and i concentrate here mainly on two-dimensional arrays </s>
<s> the type basetype[ ][ ] is usually read two-dimensional array of basetype” or basetype array array” 751 creating two-dimensional arrays the declaration statement int[][] a” declares a variable named a of type int[ ][ ] </s>
<s> this variable can hold a reference to an object of type int[ ][ ] </s>
<s> the assignment statement a = new int[3][4]” creates a new two-dimensional array object and sets a to point to the newly created object </s>
<s> as usual the declaration and assignment could be combined in a single declaration statement int[][] a = new int[3][4]” </s>
<s> the newly created object is an array of arrays-of-ints </s>
<s> the notation int[3][4] indicates that there are 3 arrays-of-ints in the array a and that there are 4 ints in each array-of-ints </s>
<s> however trying to think in such terms can get a bit confusing—as you might have already noticed </s>
<s> so it is customary to think of a two-dimensional array of items as a rectangular grid or matrix of items </s>
<s> the notation new int[3][4]” can then be taken to describe a grid of ints with 3 rows and 4 columns the following picture might help a 1 0 12 -1 7 -3 2 5 -5 -2 2 -9 if you create an array a = new int[3][4] you should think of it as a matrix with 3 rows and 4 columns ( 3 ) ( 4 ) 1 0 12 -1 a but in reality a holds a reference to an array of 3 items where each item is a reference to an array of 4 ints ( 4 ) -5 -2 2 -9 ( 4 ) 7 -3 2 5 for the most part you can ignore the reality and keep the picture of a grid in mind sometimes though you will need to remember that each row in the grid is really an array in itself </s>
<s> these arrays can be referred to as a[0] a[1] and a[2] </s>
<s> each row is in fact a value of type int[ ] </s>
<s> it could for example be passed to a subroutine that asks for a parameter of type int[ ] the notation a[1] refers to one of the rows of the array a </s>
<s> since a[1] is itself an array of ints you can use another subscript to refer to one of the positions in that row </s>
<s> for example a[1][3] refers to item number 3 in row number 1 </s>
<s> keep in mind of course that both rows and columns are numbered starting from zero </s>
<s> so in the above example a[1][3] is 5 </s>
<s> more 360 chapter 7 </s>
<s> arrays generally a[i][j] refers to the grid position in row number i and column number j </s>
<s> the 12 items in a are named as follows a[0][0] a[1][0] a[2][0] a[0][1] a[1][1] a[2][1] a[0][2] a[1][2] a[2][2] a[0][3] a[1][3] a[2][3] a[i][j] is actually a variable of type int </s>
<s> you can assign integer values to it or use it in any other context where an integer variable is allowed it might be worth noting that alength gives the number of rows of a </s>
<s> to get the number of columns in a you have to ask how many ints there are in a row this number would be given by a[0]length or equivalently by a[1]length or a[2]length ( there is actually no rule that says that all the rows of an array must have the same length and some advanced applications of arrays use varying-sized rows </s>
<s> but if you use the new operator to create an array in the manner described above you’ll always get an array with equal-sized rows ) three-dimensional arrays are treated similarly </s>
<s> for example a three-dimensional array of ints could be created with the declaration statement int[][][] b = new int[7][5][11]” it’s possible to visualize the value of b as a solid 7-by-5-by-11 block of cells </s>
<s> each cell holds an int and represents one position in the three-dimensional array </s>
<s> individual positions in the array can be referred to with variable names of the form b[i][j][k] </s>
<s> higher-dimensional arrays follow the same pattern although for dimensions greater than three there is no easy way to visualize the structure of the array it’s possible to ﬁll a multi-dimensional array with speciﬁed items at the time it is declared recall that when an ordinary one-dimensional array variable is declared it can be assigned an array initializer” which is just a list of values enclosed between braces { and } </s>
<s> array initializers can also be used when a multi-dimensional array is declared </s>
<s> an initializer for a two-dimensional array consists of a list of one-dimensional array initializers one for each row in the two-dimensional array </s>
<s> for example the array a shown in the picture above could be created with int[][] a = { { 1 0 12 -1 } { 7 -3 2 5 } { -5 -2 2 -9 } } if no initializer is provided for an array then when the array is created it is automatically ﬁlled with the appropriate value zero for numbers false for boolean and null for objects 752 using two-dimensional arrays just as in the case of one-dimensional arrays two-dimensional arrays are often processed using for statements </s>
<s> to process all the items in a two-dimensional array you have to use one for statement nested inside another </s>
<s> if the array a is declared as int[][] a = new int[3][4] then you could store a 17 into each location in a with for ( int row = 0 row < 3 row++ ) { for ( int column = 0 column < 4 column++ ) { a[row][column] = 17 } } 361 75 </s>
<s> multi-dimensional arrays the ﬁrst time the outer for loop executes ( with row = 0 ) the inner for loop ﬁlls in the four values in the ﬁrst row of a namely a[0][0] = 17 a[0][1] = 17 a[0][2] = 17 and a[0][3] = 17 </s>
<s> the next execution of the outer for loop ﬁlls in the second row of a </s>
<s> and the third and ﬁnal execution of the outer loop ﬁlls in the ﬁnal row of a similarly you could add up all the items in a with int sum = 0 for ( int i = 0 i < 3 i++ ) for ( int j = 0 j < 4 j++ ) sum = sum + a[i][j] this could even be done with nested for-each loops </s>
<s> keep in mind that the elements in a are objects of type int[ ] while the elements in each row of a are of type int int sum = 0 for ( int[] row a ) { for ( int item row ) sum = sum + item } // for each row in a // for each item in that row // add item to the sum to process a three-dimensional array you would of course use triply nested for loops ∗ ∗ ∗ a two-dimensional array can be used whenever the data that is being represented can be arranged into rows and columns in a natural way </s>
<s> often the grid is built into the problem for example a chess board is a grid with 8 rows and 8 columns </s>
<s> if a class named chesspiece is available to represent individual chess pieces then the contents of a chess board could be represented by a two-dimensional array chesspiece[][] board = new chesspiece[8][8] or consider the mosaic” of colored rectangles used in an example in subsection 462 </s>
<s> the mosaic is implemented by a class named mosaiccanvasjava </s>
<s> the data about the color of each of the rectangles in the mosaic is stored in an instance variable named grid of type color[ ][ ] each position in this grid is occupied by a value of type color </s>
<s> there is one position in the grid for each colored rectangle in the mosaic </s>
<s> the actual two-dimensional array is created by the statement grid = new color[rows][columns] where rows is the number of rows of rectangles in the mosaic and columns is the number of columns </s>
<s> the value of the color variable grid[i][j] is the color of the rectangle in row number i and column number j </s>
<s> when the color of that rectangle is changed to some color c the value stored in grid[i][j] is changed with a statement of the form grid[i][j] = c” </s>
<s> when the mosaic is redrawn the values stored in the two-dimensional array are used to decide what color to make each rectangle </s>
<s> here is a simpliﬁed version of the code from the mosaiccanvas class that draws all the colored rectangles in the grid </s>
<s> you can see how it uses the array int rowheight = getheight( ) / rows int colwidth = getwidth( ) / columns for ( int row = 0 row < rows row++ ) { for ( int col = 0 col < columns col++ ) { gsetcolor( grid[row][col] ) // get color from array gfillrect( col*colwidth row*rowheight colwidth rowheight ) } } 362 chapter 7 </s>
<s> arrays sometimes two-dimensional arrays are used in problems in which the grid is not so visually obvious </s>
<s> consider a company that owns 25 stores </s>
<s> suppose that the company has data about the proﬁt earned at each store for each month in the year 2010 </s>
<s> if the stores are numbered from 0 to 24 and if the twelve months from january ’10 through december ’10 are numbered from 0 to 11 then the proﬁt data could be stored in an array profit constructed as follows double[][] profit = new double[25][12] profit[3][2] would be the amount of proﬁt earned at store number 3 in march and more generally profit[storenum][monthnum] would be the amount of proﬁt earned in store number storenum in month number monthnum </s>
<s> in this example the one-dimensional array profit[storenum] has a very useful meaning it is just the proﬁt data for one particular store for all the months in the whole year et’s assume that the profit array has already been ﬁlled with data </s>
<s> this data can be processed in a lot of interesting ways </s>
<s> for example the total proﬁt for the company—for the whole year from all its stores—can be calculated by adding up all the entries in the array double totalprofit // company’s total profit in 2010 totalprofit = 0 for ( int store = 0 store < 25 store++ ) { for ( int month = 0 month < 12 month++ ) totalprofit += profit[store][month] } sometimes it is necessary to process a single row or a single column of an array not the entire array </s>
<s> for example to compute the total proﬁt earned by the company in december that is in month number 11 you could use the loop double decemberprofit = 00 for ( storenum = 0 storenum < 25 storenum++ ) decemberprofit += profit[storenum][11] et’s extend this idea to create a one-dimensional array that contains the total proﬁt for each month of the year double[] monthlyprofit // holds profit for each month monthlyprofit = new double[12] for ( int month = 0 month < 12 month++ ) { // compute the total profit from all stores in this month monthlyprofit[month] = 00 for ( int store = 0 store < 25 store++ ) { // add the profit from this store in this month // into the total profit figure for the month monthlyprofit[month] += profit[store][month] } } as a ﬁnal example of processing the proﬁt array suppose that we wanted to know which store generated the most proﬁt over the course of the year </s>
<s> to do this we have to add up the monthly proﬁts for each store </s>
<s> in array terms this means that we want to ﬁnd the sum of each row in the array </s>
<s> as we do this we need to keep track of which row produces the largest total 75 </s>
<s> multi-dimensional arrays 363 double maxprofit // maximum profit earned by a store int beststore // the number of the store with the // maximum profit double total // total profit for one store // first compute the profit from store number 0 total = 00 for ( month = 0 month < 12 month++ ) total += profit[0][month] beststore = 0 maxprofit = total // start by assuming that the best // store is store number 0 // now go through the other stores and whenever we // find one with a bigger profit than maxprofit revise // the assumptions about beststore and maxprofit for ( store = 1 store < 25 store++ ) { // compute this store’s profit for the year total = 00 for ( month = 0 month < 12 month++ ) total += profit[store][month] // compare this store’s profits with the highest // profit we have seen among the preceding stores if ( total > maxprofit ) { maxprofit = total // best profit seen so far! beststore = store // it came from this store } } // end for // // // // 753 at this point maxprofit is the best profit of any of the 25 stores and beststore is a store that generated that profit ( note that there could also be other stores that generated exactly the same profit ) example checkers for the rest of this section we’ll look at a more substantial example </s>
<s> we look at a program that lets two users play checkers against each other </s>
<s> a player moves by clicking on the piece to be moved and then on the empty square to which it is to be moved </s>
<s> the squares that the current player can legally click are highlighted </s>
<s> the square containing a piece that has been selected to be moved is surrounded by a white border </s>
<s> other pieces that can legally be moved are surrounded by a cyan-colored border </s>
<s> if a piece has been selected each empty square that it can legally move to is highlighted with a green border </s>
<s> the game enforces the rule that if the current player can jump one of the opponent’s pieces then the player must jump </s>
<s> when a player’s piece becomes a king by reaching the opposite end of the board a big white k” is drawn on the piece </s>
<s> you can try an applet version of the program in the on-line version of this section </s>
<s> here is what it looks like 364 chapter 7 </s>
<s> arrays i will only cover a part of the programming of this applet </s>
<s> i encourage you to read the complete source code checkersjava </s>
<s> at over 750 lines this is a more substantial example than anything you’ve seen before in this course but it’s an excellent example of state-based event-driven programming the data about the pieces on the board are stored in a two-dimensional array </s>
<s> because of the complexity of the program i wanted to divide it into several classes </s>
<s> in addition to the main class there are several nested classes </s>
<s> one of these classes is checkersdata which handles the data for the board </s>
<s> it is mainly this class that i want to talk about the checkersdata class has an instance variable named board of type int[][] </s>
<s> the value of board is set to new int[8][8]” an 8-by-8 grid of integers </s>
<s> the values stored in the grid are deﬁned as constants representing the possible contents of a square on a checkerboard static final int empty = 0 red = 1 red king = 2 black = 3 black king = 4 // // // // // value representing an empty square a regular red piece a red king a regular black piece a black king the constants red and black are also used in my program ( or perhaps misused ) to represent the two players in the game </s>
<s> when a game is started the values in the variable board are set to represent the initial state of the board </s>
<s> the grid of values looks like 0 1 0 black empty 1 empty 2 black empty black empty black empty black empty 3 empty empty empty empty empty empty empty empty 4 empty empty empty empty empty empty empty empty 5 empty 6 red 7 empty black red empty red 2 black empty empty red empty 3 4 5 empty black empty black red empty red empty empty red empty black red empty red 6 black empty empty red empty 7 empty black red empty red 75 </s>
<s> multi-dimensional arrays 365 a regular black piece can only move down” the grid </s>
<s> that is the row number of the square it moves to must be greater than the row number of the square it comes from </s>
<s> a regular red piece can only move up the grid </s>
<s> kings of either color of course can move in both directions one function of the checkersdata class is to take care of all the details of making moves on the board </s>
<s> an instance method named makemove( ) is provided to do this </s>
<s> when a player moves a piece from one square to another the values stored at two positions in the array are changed </s>
<s> but that’s not all </s>
<s> if the move is a jump then the piece that was jumped is removed from the board ( the method checks whether the move is a jump by checking if the square to which the piece is moving is two rows away from the square where it starts ) furthermore a red piece that moves to row 0 or a black piece that moves to row 7 becomes a king </s>
<s> this is good programming the rest of the program doesn’t have to worry about any of these details it just calls this makemove( ) method /** * make the move from ( fromrowfromcol ) to ( torowtocol ) </s>
<s> it is * assumed that this move is legal! if the move is a jump the * jumped piece is removed from the board </s>
<s> if a piece moves * to the last row on the opponent’s side of the board the * piece becomes a king */ void makemove( int fromrow int fromcol int torow int tocol ) { board[torow][tocol] = board[fromrow][fromcol] // move the piece board[fromrow][fromcol] = empty if ( fromrow - torow == 2 || fromrow - torow == -2 ) { // the move is a jump </s>
<s> remove the jumped piece from the board int jumprow = ( fromrow + torow ) / 2 // row of the jumped piece int jumpcol = ( fromcol + tocol ) / 2 // column of the jumped piece board[jumprow][jumpcol] = empty } if ( torow == 0 && board[torow][tocol] == red ) board[torow][tocol] = red king // red piece becomes a king if ( torow == 7 && board[torow][tocol] == black ) board[torow][tocol] = black king // black piece becomes a king } // end makemove( ) an even more important function of the checkersdata class is to ﬁnd legal moves on the board </s>
<s> in my program a move in a checkers game is represented by an object belonging to the following class /** * a checkersmove object represents a move in the game of * checkers </s>
<s> it holds the row and column of the piece that is * to be moved and the row and column of the square to which * it is to be moved ( this class makes no guarantee that * the move is legal ) */ private static class checkersmove { int fromrow fromcol int torow tocol // position of piece to be moved // square it is to move to checkersmove( int r1 int c1 int r2 int c2 ) { 366 chapter 7 </s>
<s> arrays // constructor fromrow = r1 fromcol = c1 torow = r2 tocol = c2 set the values of the instance variables } boolean isjump( ) { // test whether this move is a jump // the move is legal </s>
<s> in a jump the // rows ( in a regular move it only return ( fromrow - torow == 2 || fromrow } } it is assumed that piece moves two moves one row ) - torow == -2 ) // end class checkersmove the checkersdata class has an instance method which ﬁnds all the legal moves that are currently available for a speciﬁed player </s>
<s> this method is a function that returns an array of type checkersmove[ ] </s>
<s> the array contains all the legal moves represented as checkersmove objects </s>
<s> the speciﬁcation for this method reads /** * return an array containing all the legal checkersmoves * for the specified player on the current board </s>
<s> if the player * has no legal moves null is returned </s>
<s> the value of player * should be one of the constants red or black if not null * is returned </s>
<s> if the returned value is non-null it consists * entirely of jump moves or entirely of regular moves since * if the player can jump only jumps are legal moves */ checkersmove[] getlegalmoves( int player ) a brief pseudocode algorithm for the method is start with an empty list of moves find any legal jumps and add them to the list if there are no jumps find any other legal moves and add them to the list if the list is empty return null else return the list now what is this list” we have to return the legal moves in an array </s>
<s> but since an array has a ﬁxed size we can’t create the array until we know how many moves there are and we don’t know that until near the end of the method after we’ve already made the list! a neat solution is to use an arraylist instead of an array to hold the moves as we ﬁnd them </s>
<s> in fact i use an object deﬁned by the parameterized type arraylist<checkersmove> so that the list is restricted to holding objects of type checkersmove </s>
<s> as we add moves to the list it will grow just as large as necessary </s>
<s> at the end of the method we can create the array that we really want and copy the data into it et moves be an empty arraylist<checkersmove> find any legal jumps and add them to moves if movessize( ) is 0 find any other legal moves and add them to moves 367 75 </s>
<s> multi-dimensional arrays if movessize( ) is 0 return null else et movearray be an array of checkersmoves of length movessize( ) copy the contents of moves into movearray return movearray now how do we ﬁnd the legal jumps or the legal moves the information we need is in the board array but it takes some work to extract it </s>
<s> we have to look through all the positions in the array and ﬁnd the pieces that belong to the current player </s>
<s> for each piece we have to check each square that it could conceivably move to and check whether that would be a legal move </s>
<s> if we are looking for legal jumps we want to look at squares that are two rows and two columns away from the piece </s>
<s> there are four squares to consider </s>
<s> thus the line in the algorithm that says find any legal jumps and add them to moves” expands to for each row of the board for each column of the board if one of the player’s pieces is if it is legal to jump to row add this move to moves if it is legal to jump to row add this move to moves if it is legal to jump to row add this move to moves if it is legal to jump to row add this move to moves at this location + 2 column + 2 - 2 column + 2 + 2 column - 2 - 2 column - 2 the line that says find any other legal moves and add them to moves” expands to something similar except that we have to look at the four squares that are one column and one row away from the piece </s>
<s> testing whether a player can legally move from one given square to another given square is itself non-trivial </s>
<s> the square the player is moving to must actually be on the board and it must be empty </s>
<s> furthermore regular red and black pieces can only move in one direction </s>
<s> i wrote the following utility method to check whether a player can make a given non-jump move /** * this is called by the getlegalmoves( ) method to determine * whether the player can legally move from ( r1c1 ) to ( r2c2 ) * it is assumed that ( r1c1 ) contains one of the player’s * pieces and that ( r2c2 ) is a neighboring square */ private boolean canmove( int player int r1 int c1 int r2 int c2 ) { if ( r2 < 0 || r2 >= 8 || c2 < 0 || c2 >= 8 ) return false // ( r2c2 ) is off the board if ( board[r2][c2] != empty ) return false // ( r2c2 ) already contains a piece if ( player == red ) { if ( board[r1][c1] == red && r2 > r1 ) return false // regular red piece can only move down return true // the move is legal } else { 368 chapter 7 </s>
<s> arrays if ( board[r1][c1] == black && r2 < r1 ) return false // regular black piece can only move up return true // the move is legal } } // end canmove( ) this method is called by my getlegalmoves( ) method to check whether one of the possible moves that it has found is actually legal </s>
<s> i have a similar method that is called to check whether a jump is legal </s>
<s> in this case i pass to the method the square containing the player’s piece the square that the player might move to and the square between those two which the player would be jumping over </s>
<s> the square that is being jumped must contain one of the opponent’s pieces </s>
<s> this method has the speciﬁcation /** * this is called by other methods to check whether * the player can legally jump from ( r1c1 ) to ( r3c3 ) * it is assumed that the player has a piece at ( r1c1 ) that * ( r3c3 ) is a position that is 2 rows and 2 columns distant * from ( r1c1 ) and that ( r2c2 ) is the square between ( r1c1 ) * and ( r3c3 ) */ private boolean canjump( int player int r1 int c1 int r2 int c2 int r3 int c3 ) { given all this you should be in a position to understand the complete getlegalmoves( ) method </s>
<s> it’s a nice way to ﬁnish oﬀ this chapter since it combines several topics that we’ve looked at one-dimensional arrays arraylists and two-dimensional arrays checkersmove[] getlegalmoves( int player ) { if ( player != red && player != black ) return null int playerking // the constant for a king belonging to the player if ( player == red ) playerking = red king else playerking = black king arraylist<checkersmove> moves = new arraylist<checkersmove>( ) // moves will be stored in this list /* first check for any possible jumps </s>
<s> look at each square on the board </s>
<s> if that square contains one of the player’s pieces look at a possible jump in each of the four directions from that square </s>
<s> if there is a legal jump in that direction put it in the moves arraylist */ for ( int row = 0 row < 8 row++ ) { for ( int col = 0 col < 8 col++ ) { if ( board[row][col] == player || board[row][col] == playerking ) { if ( canjump( player row col row+1 col+1 row+2 col+2 ) ) movesadd( new checkersmove( row col row+2 col+2 ) ) if ( canjump( player row col row-1 col+1 row-2 col+2 ) ) movesadd( new checkersmove( row col row-2 col+2 ) ) 75 </s>
<s> multi-dimensional arrays if ( canjump( player row col row+1 col-1 row+2 col-2 ) ) movesadd( new checkersmove( row col row+2 col-2 ) ) if ( canjump( player row col row-1 col-1 row-2 col-2 ) ) movesadd( new checkersmove( row col row-2 col-2 ) ) } } } /* if any jump moves were found then the user must jump so we don’t add any regular moves </s>
<s> however if no jumps were found check for any legal regular moves </s>
<s> look at each square on the board </s>
<s> if that square contains one of the player’s pieces look at a possible move in each of the four directions from that square </s>
<s> if there is a legal move in that direction put it in the moves arraylist */ if ( movessize( ) == 0 ) { for ( int row = 0 row < 8 row++ ) { for ( int col = 0 col < 8 col++ ) { if ( board[row][col] == player || board[row][col] == playerking ) { if ( canmove( playerrowcolrow+1col+1 ) ) movesadd( new checkersmove( rowcolrow+1col+1 ) ) if ( canmove( playerrowcolrow-1col+1 ) ) movesadd( new checkersmove( rowcolrow-1col+1 ) ) if ( canmove( playerrowcolrow+1col-1 ) ) movesadd( new checkersmove( rowcolrow+1col-1 ) ) if ( canmove( playerrowcolrow-1col-1 ) ) movesadd( new checkersmove( rowcolrow-1col-1 ) ) } } } } /* if no legal moves have been found return null </s>
<s> otherwise create an array just big enough to hold all the legal moves copy the legal moves from the arraylist into the array and return the array */ if ( movessize( ) == 0 ) return null else { checkersmove[] movearray = new checkersmove[movessize( )] for ( int i = 0 i < movessize( ) i++ ) movearray[i] = movesget( i ) return movearray } } // end getlegalmoves 369 370 chapter 7 </s>
<s> arrays exercises for chapter 7 1 </s>
<s> an example in subsection 724 tried to answer the question how many random people do you have to select before you ﬁnd a duplicate birthday the source code for that program can be found in the ﬁle birthdayproblemdemojava </s>
<s> here are some related questions • how many random people do you have to select before you ﬁnd three people who share the same birthday ( that is all three people were born on the same day in the same month but not necessarily in the same year ) • suppose you choose 365 people at random </s>
<s> how many diﬀerent birthdays will they have ( the number could theoretically be anywhere from 1 to 365 ) • how many diﬀerent people do you have to check before you’ve found at least one person with a birthday on each of the 365 days of the year write three programs to answer these questions </s>
<s> each of your programs should simulate choosing people at random and checking their birthdays ( in each case ignore the possibility of leap years ) 2 </s>
<s> write a program that will read a sequence of positive real numbers entered by the user and will print the same numbers in sorted order from smallest to largest </s>
<s> the user will input a zero to mark the end of the input </s>
<s> assume that at most 100 positive numbers will be entered 3 </s>
<s> a polygon is a geometric ﬁgure made up of a sequence of connected line segments </s>
<s> the points where the line segments meet are called the vertices of the polygon </s>
<s> the graphics class includes commands for drawing and ﬁlling polygons </s>
<s> for these commands the coordinates of the vertices of the polygon are stored in arrays </s>
<s> if g is a variable of type graphics then • gdrawpolygon( xcoords ycoords pointct ) will draw the outline of the polygon with vertices at the points ( xcoords[0]ycoords[0] ) ( xcoords[1]ycoords[1] ) ( xcoords[pointct-1]ycoords[pointct-1] ) </s>
<s> the third parameter pointct is an int that speciﬁes the number of vertices of the polygon its value should be 3 or greater the ﬁrst two parameters are arrays of type int[] note that the polygon automatically includes a line from the last point ( xcoords[pointct-1]ycoords[pointct-1] ) back to the starting point ( xcoords[0]ycoords[0] ) • gfillpolygon( xcoords ycoords pointct ) ﬁlls the interior of the polygon with the current drawing color </s>
<s> the parameters have the same meaning as in the drawpolygon( ) method </s>
<s> note that it is ok for the sides of the polygon to cross each other but the interior of a polygon with self-intersections might not be exactly what you expect write a panel class that lets the user draw polygons and use your panel as the content pane in an applet ( or standalone application ) </s>
<s> as the user clicks a sequence of points count them and store their x- and y-coordinates in two arrays </s>
<s> these points will be the vertices of the polygon </s>
<s> also draw a line between each consecutive pair of points to give the user some visual feedback </s>
<s> when the user clicks near the starting point draw the 371 exercises complete polygon </s>
<s> draw it with a red interior and a black border </s>
<s> the user should then be able to start drawing a new polygon </s>
<s> when the user shift-clicks on the applet clear it for this exercise there is no need to store information about the contents of the applet do the drawing directly in the mousepressed( ) routine and use the getgraphics( ) method to get a graphics object that you can use to draw the line ( remember though that this is considered to be bad style ) you will not need a paintcomponent( ) method since the default action of ﬁlling the panel with its background color is good enough here is a picture of my solution after the user has drawn a few polygons 4 </s>
<s> for this problem you will need to use an array of objects </s>
<s> the objects belong to the class movingball which i have already written </s>
<s> you can ﬁnd the source code for this class in the ﬁle movingballjava </s>
<s> a movingball represents a circle that has an associated color radius direction and speed </s>
<s> it is restricted to moving inside some rectangle in the ( xy ) plane it will bounce back” when it hits one of the sides of this rectangle </s>
<s> a movingball does not actually move by itself </s>
<s> it’s just a collection of data </s>
<s> you have to call instance methods to tell it to update its position and to draw itself </s>
<s> the constructor for the movingball class takes the form new movingball( xmin xmax ymin ymax ) where the parameters are integers that specify the limits on the x and y coordinates of the ball ( this sets the rectangle inside which the ball will stay ) in this exercise you will want balls to bounce oﬀ the sides of the applet so you will create them with the constructor call new movingball( 0 getwidth( ) 0 getheight( ) ) the constructor creates a ball that initially is colored red has a radius of 5 pixels is located at the center of its range has a random speed between 4 and 12 and is headed in a random direction </s>
<s> there is one problem here you can’t use this constructor until the width and height of the component are known </s>
<s> it would be ok to use it in the init( ) method of an applet but not in the constructor of an applet or panel class </s>
<s> if you are using a panel class to display the ball one slightly messy solution is to create the movingball objects in the panel’s paintcomponent( ) method the ﬁrst time that method is called </s>
<s> you 372 chapter 7 </s>
<s> arrays can be sure that the size of the panel has been determined before paintcomponent( ) is called </s>
<s> this is what i did in my own solution to this exercise if ball is a variable of type movingball then the following methods are available • balldraw( g ) — draw the ball in a graphics context </s>
<s> the parameter g must be of type graphics ( the drawing color in g will be changed to the color of the ball ) • balltravel( ) — change the ( xy )-coordinates of the ball by an amount equal to its speed </s>
<s> the ball has a certain direction of motion and the ball is moved in that direction </s>
<s> ordinarily you will call this once for each frame of an animation so the speed is given in terms of pixels per frame” </s>
<s> calling this routine does not move the ball on the screen </s>
<s> it just changes the values of some instance variables in the object </s>
<s> the next time the object’s draw( ) method is called the ball will be drawn in the new position • ballheadtowards( xy ) — change the direction of motion of the ball so that it is headed towards the point ( xy ) </s>
<s> this does not aﬀect the speed these are the methods that you will need for this exercise </s>
<s> there are also methods for setting various properties of the ball such as ballsetcolor( color ) for changing the color and ballsetradius( radius ) for changing its size </s>
<s> see the source code for more information </s>
<s> a nice variation on the exercise would be to use random colors and sizes for the balls for this exercise you should create an applet that shows an animation of balls bouncing around on a black background </s>
<s> use a timer to drive the animation ( see subsection 651 ) use an array of type movingball[] to hold the data for the balls </s>
<s> in addition your program should listen for mouse and mouse motion events </s>
<s> when the user presses the mouse or drags the mouse call each of the ball’s headtowards( ) methods to make the balls head towards the mouse’s location </s>
<s> my solution uses 50 balls and a time delay of 50 milliseconds for the timer 5 </s>
<s> the sample program randomartpaneljava from subsection 651 shows a diﬀerent random artwork” every four seconds </s>
<s> there are three types of art” one made from lines one from circles and one from ﬁlled squares </s>
<s> however the program does not save the data for the picture that is shown on the screen </s>
<s> as a result the picture cannot be redrawn when necessary </s>
<s> in fact every time paintcomponent( ) is called a new picture is drawn write a new version of randomartpaneljava that saves the data needed to redraw its pictures </s>
<s> the paintcomponent( ) method should simply use the data to draw the picture new data should be recomputed only every four seconds in response to an event from the timer that drives the program to make this interesting write a separate class for each of the three diﬀerent types of art </s>
<s> also write an abstract class to serve as the common base class for the three classes since all three types of art use a random gray background the background color can be deﬁned in their superclass </s>
<s> the superclass also contains a draw( ) method that draws the picture this is an abstract method because its implementation depends on the particular type of art that is being drawn </s>
<s> the abstract class can be deﬁned as private abstract class artdata { color backgroundcolor // the background color for the art artdata( ) { // constructor sets background color to be a random gray int x = ( int )( 256*mathrandom( ) ) 373 exercises backgroundcolor = new color( x x x ) } abstract void draw( graphics g ) // draws this artwork } each of the three subclasses of artdata must deﬁne its own draw( ) method </s>
<s> it must also deﬁne instance variables to hold the data necessary to draw the picture </s>
<s> i suggest that you should create random data for the picture in the constructor of the class so that constructing the object will automatically create the data for the random artwork ( one problem with this is that you can’t create the data until you know the size of the panel so you can’t create an artdata object in the constructor of the panel </s>
<s> one solution is to create an artdata object at the beginning of the paintcomponent( ) method if the object has not already been created ) in all three subclasses you will need to use several arrays to store the data the ﬁle randomartpaneljava only deﬁnes a panel class </s>
<s> a main program that uses this panel can be found in randomartjava and an applet that uses it can be found in randomartappletjava </s>
<s> you only need to modify randomartpanel 6 </s>
<s> write a program that will read a text ﬁle selected by the user and will make an alphabetical list of all the diﬀerent words in that ﬁle </s>
<s> all words should be converted to lower case and duplicates should be eliminated from the list </s>
<s> the list should be written to an output ﬁle selected by the user </s>
<s> as discussed in subsection 245 you can use textio to read and write ﬁles </s>
<s> use a variable of type arraylist<string> to store the words ( see subsection 734 ) it is not easy to separate a ﬁle into words as you are reading it </s>
<s> you can use the following method /** * read the next word from textio if there is one </s>
<s> first skip past * any non-letters in the input </s>
<s> if an end-of-file is encountered before * a word is found return null </s>
<s> otherwise read and return the word * a word is defined as a sequence of letters </s>
<s> also a word can include * an apostrophe if the apostrophe is surrounded by letters on each side * @return the next word from textio or null if an end-of-file is * encountered */ private static string readnextword( ) { char ch = textiopeek( ) // look at next character in input while ( ch != textioeof && ! characterisletter( ch ) ) { // skip past non-letters textiogetanychar( ) // read the character ch = textiopeek( ) // look at the next character } if ( ch == textioeof ) // encountered end-of-file return null // at this point we know the next character is a letter so read a word string word = // this will be the word that is read while ( true ) { word += textiogetanychar( ) // append the letter onto word ch = textiopeek( ) // look at next character if ( ch == ’ ) { // the next character is an apostrophe </s>
<s> read it and // if the following character is a letter add both the 374 chapter 7 </s>
<s> arrays // apostrophe and the letter onto the word and continue // reading the word </s>
<s> if the character after the apostrophe // is not a letter the word is done so break out of the loop textiogetanychar( ) // read the apostrophe ch = textiopeek( ) // look at char that follows apostrophe if ( characterisletter( ch ) ) { word += ’ + textiogetanychar( ) ch = textiopeek( ) // look at next char } else break } if ( ! characterisletter( ch ) ) { // if the next character is not a letter the word is // finished so break out of the loop break } // if we haven’t broken out of the loop next char is a letter } return word // return the word that has been read } note that this method will return null when the ﬁle has been entirely read </s>
<s> you can use this as a signal to stop processing the input ﬁle 7 </s>
<s> the game of go moku ( also known as pente or five stones ) is similar to tic-tac-toe except that it is played on a much larger board and the object is to get ﬁve squares in a row rather than three </s>
<s> players take turns placing pieces on a board </s>
<s> a piece can be placed in any empty square </s>
<s> the ﬁrst player to get ﬁve pieces in a row—horizontally vertically or diagonally—wins </s>
<s> if all squares are ﬁlled before either player wins then the game is a draw </s>
<s> write a program that lets two players play go moku against each other your program will be simpler than the checkers program from subsection 753 </s>
<s> play alternates strictly between the two players and there is no need to highlight the legal moves </s>
<s> you will only need two classes a short panel class to set up the interface and a board class to draw the board and do all the work of the game </s>
<s> nevertheless you will probably want to look at the source code for the checkers program checkersjava for ideas about the general outline of the program the hardest part of the program is checking whether the move that a player makes is a winning move </s>
<s> to do this you have to look in each of the four possible directions from the square where the user has placed a piece </s>
<s> you have to count how many pieces that player has in a row in that direction </s>
<s> if the number is ﬁve or more in any direction then that player wins </s>
<s> as a hint here is part of the code from my applet </s>
<s> this code counts the number of pieces that the user has in a row in a speciﬁed direction </s>
<s> the direction is speciﬁed by two integers dirx and diry </s>
<s> the values of these variables are 0 1 or -1 and at least one of them is non-zero </s>
<s> for example to look in the horizontal direction dirx is 1 and diry is 0 int ct = 1 // number of pieces in a row belonging to the player int r c // a row and column to be examined r = row + dirx // look at square in specified direction 375 exercises c = col + diry while ( r >= 0 && r < 13 && c >= 0 && c < 13 && board[r][c] == player ) { // square is on the board and it // contains one of the players’ pieces ct++ r += dirx // go on to next square in this direction c += diry } r = row - dirx // now look in the opposite direction c = col - diry while ( r >= 0 && r < 13 && c >= 0 && c < 13 && board[r][c] == player ) { ct++ r -= dirx // go on to next square in this direction c -= diry } here is a picture of my program it uses a 13-by-13 board </s>
<s> you can do the same or use a normal 8-by-8 checkerboard 376 chapter 7 </s>
<s> arrays quiz on chapter 7 1 </s>
<s> what does the computer do when it executes the following statement try to give as complete an answer as possible color[] palette = new color[12] 2 </s>
<s> what is meant by the basetype of an array 3 </s>
<s> what does it mean to sort an array 4 </s>
<s> what is the main advantage of binary search over linear search what is the main disadvantage 5 </s>
<s> what is meant by a dynamic array what is the advantage of a dynamic array over a regular array 6 </s>
<s> suppose that a variable strlst has been declared as arraylist<string> strlst = new arraylist<string>( ) assume that the list is not empty and that all the items in the list are non-null </s>
<s> write a code segment that will ﬁnd and print the string in the list that comes ﬁrst in lexicographic order </s>
<s> how would your answer change if strlst were declared to be of type arraylist instead of arraylist<string> 7 </s>
<s> what is the purpose of the following subroutine what is the meaning of the value that it returns in terms of the value of its parameter static string concat( string[] str ) { if ( str == null ) return string ans = for ( int i = 0 i < strlength i++ ) { ans = ans + str[i] return ans } 8 </s>
<s> show the exact output produced by the following code segment char[][] pic = new char[6][6] for ( int i = 0 i < 6 i++ ) for ( int j = 0 j < 6 j++ ) { if ( i == j || i == 0 || i == 5 ) pic[i][j] = ’*’ else pic[i][j] = } for ( int i = 0 i < 6 i++ ) { for ( int j = 0 j < 6 j++ ) systemoutprint( pic[i][j] ) systemoutprintln( ) } 377 quiz 9 </s>
<s> write a complete static method that ﬁnds the largest value in an array of ints </s>
<s> the method should have one parameter which is an array of type int[] </s>
<s> the largest number in the array should be returned as the value of the method 10 </s>
<s> suppose that temperature measurements were made on each day of 1999 in each of 100 cities </s>
<s> the measurements have been stored in an array int[][] temps = new int[100][365] where temps[c][d] holds the measurement for city number c on the dth day of the year write a code segment that will print out the average temperature over the course of the whole year for each city </s>
<s> the average temperature for a city can be obtained by adding up all 365 measurements for that city and dividing the answer by 3650 11 </s>
<s> suppose that a class employee is deﬁned as follows class employee { string lastname string firstname double hourlywage int yearswithcompany } suppose that data about 100 employees is already stored in an array employee[] employeedata = new employee[100] write a code segment that will output the ﬁrst name last name and hourly wage of each employee who has been with the company for 20 years or more 12 </s>
<s> suppose that a has been declared and initialized with the statement double[] a = new double[20] and suppose that a has already been ﬁlled with 20 values </s>
<s> write a program segment that will ﬁnd the average of all the non-zero numbers in the array ( the average is the sum of the numbers divided by the number of numbers </s>
<s> note that you will have to count the number of non-zero entries in the array ) declare any variables that you use 378 chapter 7 </s>
<s> arrays chapter 8 correctness robustness eﬃciency in previous chapters we have covered the fundamentals of programming the chapters that follow this one will cover more advanced aspects of programming </s>
<s> the ideas that are presented will generally be more complex and the programs that use them a little more complicated </s>
<s> this relatively short chapter is a kind of turning point in which we look at the problem of getting such complex programs right computer programs that fail are much too common </s>
<s> programs are fragile </s>
<s> a tiny error can cause a program to misbehave or crash </s>
<s> most of us are familiar with this from our own experience with computers </s>
<s> and we’ve all heard stories about software glitches that cause spacecraft to crash telephone service to fail and in a few cases people to die programs don’t have to be as bad as they are </s>
<s> it might well be impossible to guarantee that programs are problem-free but careful programming and well-designed programming tools can help keep the problems to a minimum </s>
<s> this chapter will look at issues of correctness and robustness of programs </s>
<s> it also looks more closely at exceptions and the trycatch statement and it introduces assertions another of the tools that java provides as an aid in writing correct programs we will also look at another issue that is important for programs in the real world eﬃciency even a completely correct program is not very useful if it takes an unreasonable amount of time to run </s>
<s> the last section of this chapter introduces techniques for analyzing the run time of algorithms 81 introduction to correctness and robustness a program is correct if it accomplishes the task that it was designed to perform </s>
<s> it is robust if it can handle illegal inputs and other unexpected situations in a reasonable way </s>
<s> for example consider a program that is designed to read some numbers from the user and then print the same numbers in sorted order </s>
<s> the program is correct if it works for any set of input numbers it is robust if it can also deal with non-numeric input by for example printing an error message and ignoring the bad input </s>
<s> a non-robust program might crash or give nonsensical output in the same circumstance every program should be correct ( a sorting program that doesn’t sort correctly is pretty useless ) it’s not the case that every program needs to be completely robust </s>
<s> it depends on who will use it and how it will be used </s>
<s> for example a small utility program that you write for your own use doesn’t have to be particularly robust the question of correctness is actually more subtle than it might appear </s>
<s> a programmer 379 380 chapter 8 </s>
<s> correctness robustness efficiency works from a speciﬁcation of what the program is supposed to do </s>
<s> the programmer’s work is correct if the program meets its speciﬁcation </s>
<s> but does that mean that the program itself is correct what if the speciﬁcation is incorrect or incomplete a correct program should be a correct implementation of a complete and correct speciﬁcation </s>
<s> the question is whether the speciﬁcation correctly expresses the intention and desires of the people for whom the program is being written </s>
<s> this is a question that lies largely outside the domain of computer science 811 horror stories most computer users have personal experience with programs that don’t work or that crash </s>
<s> in many cases such problems are just annoyances but even on a personal computer there can be more serious consequences such as lost work or lost money </s>
<s> when computers are given more important tasks the consequences of failure can be proportionately more serious just about a decade ago the failure of two multi-million dollar space missions to mars was prominent in the news </s>
<s> both failures were probably due to software problems but in both cases the problem was not with an incorrect program as such </s>
<s> in september 1999 the mars climate orbiter burned up in the martian atmosphere because data that was expressed in english units of measurement ( such as feet and pounds ) was entered into a computer program that was designed to use metric units ( such as centimeters and grams ) </s>
<s> a few months later the mars polar lander probably crashed because its software turned oﬀ its landing engines too soon </s>
<s> the program was supposed to detect the bump when the spacecraft landed and turn oﬀ the engines then </s>
<s> it has been determined that deployment of the landing gear might have jarred the spacecraft enough to activate the program causing it to turn oﬀ the engines when the spacecraft was still in the air </s>
<s> the unpowered spacecraft would then have fallen to the martian surface </s>
<s> a more robust system would have checked the altitude before turning oﬀ the engines! there are many equally dramatic stories of problems caused by incorrect or poorly written software </s>
<s> let’s look at a few incidents recounted in the book computer ethics by tom forester and perry morrison ( this book covers various ethical issues in computing </s>
<s> it or something like it is essential reading for any student of computer science ) • in 1985 and 1986 one person was killed and several were injured by excess radiation while undergoing radiation treatments by a mis-programmed computerized radiation machine in another case over a ten-year period ending in 1992 almost 1000 cancer patients received radiation dosages that were 30% less than prescribed because of a programming error • in 1985 a computer at the bank of new york started destroying records of on-going security transactions because of an error in a program </s>
<s> it took less than 24 hours to ﬁx the program but by that time the bank was out $5000000 in overnight interest payments on funds that it had to borrow to cover the problem • the programming of the inertial guidance system of the f-16 ﬁghter plane would have turned the plane upside-down when it crossed the equator if the problem had not been discovered in simulation </s>
<s> the mariner 18 space probe was lost because of an error in one line of a program </s>
<s> the gemini v space capsule missed its scheduled landing target by a hundred miles because a programmer forgot to take into account the rotation of the earth • in 1990 at&t’s long-distance telephone service was disrupted throughout the united states when a newly loaded computer program proved to contain a bug 81 </s>
<s> introduction to correctness and robustness 381 of course there have been more recent problems </s>
<s> for example computer software error contributed to the northeast blackout of 2003 one of the largest power outages in history </s>
<s> in 2006 the airbus a380 was delayed by software incompatibility problems at a cost of perhaps billions of dollars </s>
<s> in 2007 a software problem grounded thousands of planes at the los angeles international airport </s>
<s> on may 6 2010 a ﬂaw in an automatic trading program apparently resulted in a 1000-point drop in the dow jones industrial average these are just a few examples </s>
<s> software problems are all too common </s>
<s> as programmers we need to understand why that is true and what can be done about it 812 java to the rescue part of the problem according to the inventors of java can be traced to programming languages themselves </s>
<s> java was designed to provide some protection against certain types of errors </s>
<s> how can a language feature help prevent errors let’s look at a few examples early programming languages did not require variables to be declared </s>
<s> in such languages when a variable name is used in a program the variable is created automatically </s>
<s> you might consider this more convenient than having to declare every variable explicitly but there is an unfortunate consequence an inadvertent spelling error might introduce an extra variable that you had no intention of creating </s>
<s> this type of error was responsible according to one famous story for yet another lost spacecraft </s>
<s> in the fortran programming language the command do 20 i = 15” is the ﬁrst statement of a counting loop </s>
<s> now spaces are insigniﬁcant in fortran so this is equivalent to do20i=15” </s>
<s> on the other hand the command do20i=15” with a period instead of a comma is an assignment statement that assigns the value 15 to the variable do20i </s>
<s> supposedly the inadvertent substitution of a period for a comma in a statement of this type caused a rocket to blow up on take-oﬀ </s>
<s> because fortran doesn’t require variables to be declared the compiler would be happy to accept the statement do20i=15” it would just create a new variable named do20i </s>
<s> if fortran required variables to be declared the compiler would have complained that the variable do20i was undeclared while most programming languages today do require variables to be declared there are other features in common programming languages that can cause problems </s>
<s> java has eliminated some of these features </s>
<s> some people complain that this makes java less eﬃcient and less powerful </s>
<s> while there is some justice in this criticism the increase in security and robustness is probably worth the cost in most circumstances </s>
<s> the best defense against some types of errors is to design a programming language in which the errors are impossible </s>
<s> in other cases where the error can’t be completely eliminated the language can be designed so that when the error does occur it will automatically be detected </s>
<s> this will at least prevent the error from causing further harm and it will alert the programmer that there is a bug that needs ﬁxing </s>
<s> let’s look at a few cases where the designers of java have taken these approaches an array is created with a certain number of locations numbered from zero up to some speciﬁed maximum index </s>
<s> it is an error to try to use an array location that is outside of the speciﬁed range </s>
<s> in java any attempt to do so is detected automatically by the system </s>
<s> in some other languages such as c and c++ it’s up to the programmer to make sure that the index is within the legal range </s>
<s> suppose that an array a has three locations a[0] a[1] and a[2] then a[3] a[4] and so on refer to memory locations beyond the end of the array </s>
<s> in java an attempt to store data in a[3] will be detected </s>
<s> the program will be terminated ( unless the error is caught” as discussed in section 37 ) </s>
<s> in c or c++ the computer will just go ahead and store the data in memory that is not part of the array </s>
<s> since there is no telling what that memory location is being used for the result will be unpredictable </s>
<s> the consequences could 382 chapter 8 </s>
<s> correctness robustness efficiency be much more serious than a terminated program ( see for example the discussion of buﬀer overﬂow errors later in this section ) pointers are a notorious source of programming errors </s>
<s> in java a variable of object type holds either a pointer to an object or the special value null </s>
<s> any attempt to use a null value as if it were a pointer to an actual object will be detected by the system </s>
<s> in some other languages again it’s up to the programmer to avoid such null pointer errors </s>
<s> in my old macintosh computer a null pointer was actually implemented as if it were a pointer to memory location zero </s>
<s> a program could use a null pointer to change values stored in memory near location zero unfortunately the macintosh stored important system data in those locations </s>
<s> changing that data could cause the whole system to crash a consequence more severe than a single failed program another type of pointer error occurs when a pointer value is pointing to an object of the wrong type or to a segment of memory that does not even hold a valid object at all </s>
<s> these types of errors are impossible in java which does not allow programmers to manipulate pointers directly </s>
<s> in other languages it is possible to set a pointer to point essentially to any location in memory </s>
<s> if this is done incorrectly then using the pointer can have unpredictable results another type of error that cannot occur in java is a memory leak </s>
<s> in java once there are no longer any pointers that refer to an object that object is garbage collected” so that the memory that it occupied can be reused </s>
<s> in other languages it is the programmer’s responsibility to return unused memory to the system </s>
<s> if the programmer fails to do this unused memory can build up leaving less memory for programs and data </s>
<s> there is a story that many common programs for older windows computers had so many memory leaks that the computer would run out of memory after a few days of use and would have to be restarted many programs have been found to suﬀer from buﬀer overﬂow errors </s>
<s> buﬀer overﬂow errors often make the news because they are responsible for many network security problems when one computer receives data from another computer over a network that data is stored in a buﬀer </s>
<s> the buﬀer is just a segment of memory that has been allocated by a program to hold data that it expects to receive </s>
<s> a buﬀer overﬂow occurs when more data is received than will ﬁt in the buﬀer </s>
<s> the question is what happens then if the error is detected by the program or by the networking software then the only thing that has happened is a failed network data transmission </s>
<s> the real problem occurs when the software does not properly detect buﬀer overﬂows </s>
<s> in that case the software continues to store data in memory even after the buﬀer is ﬁlled and the extra data goes into some part of memory that was not allocated by the program as part of the buﬀer </s>
<s> that memory might be in use for some other purpose </s>
<s> it might contain important data </s>
<s> it might even contain part of the program itself </s>
<s> this is where the real security issues come in </s>
<s> suppose that a buﬀer overﬂow causes part of a program to be replaced with extra data received over a network </s>
<s> when the computer goes to execute the part of the program that was replaced it’s actually executing data that was received from another computer </s>
<s> that data could be anything </s>
<s> it could be a program that crashes the computer or takes it over </s>
<s> a malicious programmer who ﬁnds a convenient buﬀer overﬂow error in networking software can try to exploit that error to trick other computers into executing his programs for software written completely in java buﬀer overﬂow errors are impossible </s>
<s> the language simply does not provide any way to store data into memory that has not been properly allocated to do that you would need a pointer that points to unallocated memory or you would have to refer to an array location that lies outside the range allocated for the array </s>
<s> as explained above neither of these is possible in java ( however there could conceivably still be errors in java’s standard classes since some of the methods in these classes are actually written in the 81 </s>
<s> introduction to correctness and robustness 383 c programming language rather than in java ) it’s clear that language design can help prevent errors or detect them when they occur doing so involves restricting what a programmer is allowed to do </s>
<s> or it requires tests such as checking whether a pointer is null that take some extra processing time </s>
<s> some programmers feel that the sacriﬁce of power and eﬃciency is too high a price to pay for the extra security </s>
<s> in some applications this is true </s>
<s> however there are many situations where safety and security are primary considerations </s>
<s> java is designed for such situations 813 problems remain in java there is one area where the designers of java chose not to detect errors automatically numerical computations </s>
<s> in java a value of type int is represented as a 32-bit binary number </s>
<s> with 32 bits it’s possible to represent a little over four billion diﬀerent values </s>
<s> the values of type int range from -2147483648 to 2147483647 </s>
<s> what happens when the result of a computation lies outside this range for example what is 2147483647 + 1 and what is 2000000000 * 2 the mathematically correct result in each case cannot be represented as a value of type int </s>
<s> these are examples of integer overﬂow </s>
<s> in most cases integer overﬂow should be considered an error </s>
<s> however java does not automatically detect such errors </s>
<s> for example it will compute the value of 2147483647 + 1 to be the negative number -2147483648 ( what happens is that any extra bits beyond the 32-nd bit in the correct answer are discarded </s>
<s> values greater than 2147483647 will wrap around” to negative values </s>
<s> mathematically speaking the result is always correct modulo 232 ” ) for example consider the 3n+1 program which was discussed in subsection 322 </s>
<s> starting from a positive integer n the program computes a certain sequence of integers while ( n != 1 ) { if ( n % 2 == 0 ) // if n is even n = n / 2 else n = 3 * n + 1 systemoutprintln( n ) } but there is a problem here if n is too large then the value of 3*n+1 will not be mathematically correct because of integer overﬂow </s>
<s> the problem arises whenever 3*n+1 > 2147483647 that is when n > 2147483646/3 </s>
<s> for a completely correct program we should check for this possibility before computing 3*n+1 while ( n != 1 ) { if ( n % 2 == 0 ) // if n is even n = n / 2 else { if ( n > 2147483646/3 ) { systemoutprintln( sorry but the value of n has become ) systemoutprintln( too large for your computer! ) break } n = 3 * n + 1 } systemoutprintln( n ) } 384 chapter 8 </s>
<s> correctness robustness efficiency the problem here is not that the original algorithm for computing 3n+1 sequences was wrong </s>
<s> the problem is that it just can’t be correctly implemented using 32-bit integers </s>
<s> many programs ignore this type of problem </s>
<s> but integer overﬂow errors have been responsible for their share of serious computer failures and a completely robust program should take the possibility of integer overﬂow into account ( the infamous y2k” bug was in fact just this sort of error ) for numbers of type double there are even more problems </s>
<s> there are still overﬂow errors which occur when the result of a computation is outside the range of values that can be represented as a value of type double </s>
<s> this range extends up to about 17 times 10 to the power 308 </s>
<s> numbers beyond this range do not wrap around” to negative values </s>
<s> instead they are represented by special values that have no real numerical equivalent </s>
<s> the special values doublepositive infinity and doublenegative infinity represent numbers outside the range of legal values </s>
<s> for example 20 * 1e308 is computed to be doublepositive infinity another special value of type double doublenan represents an illegal or undeﬁned result ( nan” stands for not a number” ) for example the result of dividing zero by zero or taking the square root of a negative number is doublenan </s>
<s> you can test whether a number x is this special not-a-number value by calling the boolean-valued function doubleisnan( x ) for real numbers there is the added complication that most real numbers can only be represented approximately on a computer </s>
<s> a real number can have an inﬁnite number of digits after the decimal point </s>
<s> a value of type double is only accurate to about 15 digits </s>
<s> the real number 1/3 for example is the repeating decimal 0333333333333 and there is no way to represent it exactly using a ﬁnite number of digits </s>
<s> computations with real numbers generally involve a loss of accuracy </s>
<s> in fact if care is not exercised the result of a large number of such computations might be completely wrong! there is a whole ﬁeld of computer science known as numerical analysis which is devoted to studying algorithms that manipulate real numbers so you see that not all possible errors are avoided or detected automatically in java </s>
<s> furthermore even when an error is detected automatically the system’s default response is to report the error and terminate the program </s>
<s> this is hardly robust behavior! so a java programmer still needs to learn techniques for avoiding and dealing with errors </s>
<s> these are the main topics of the next three sections 82 writing correct programs correct programs don’t just happen </s>
<s> it takes planning and attention to detail to avoid errors in programs </s>
<s> there are some techniques that programmers can use to increase the likelihood that their programs are correct 821 provably correct programs in some cases it is possible to prove that a program is correct </s>
<s> that is it is possible to demonstrate mathematically that the sequence of computations represented by the program will always produce the correct result </s>
<s> rigorous proof is diﬃcult enough that in practice it can only be applied to fairly small programs </s>
<s> furthermore it depends on the fact that the correct result” has been speciﬁed correctly and completely </s>
<s> as i’ve already pointed out a program that correctly meets its speciﬁcation is not useful if its speciﬁcation was wrong </s>
<s> nevertheless even in everyday programming we can apply some of the ideas and techniques that are used in proving that programs are correct the fundamental ideas are process and state </s>
<s> a state consists of all the information 82 </s>
<s> writing correct programs 385 relevant to the execution of a program at a given moment during its execution </s>
<s> the state includes for example the values of all the variables in the program the output that has been produced any input that is waiting to be read and a record of the position in the program where the computer is working </s>
<s> a process is the sequence of states that the computer goes through as it executes the program </s>
<s> from this point of view the meaning of a statement in a program can be expressed in terms of the eﬀect that the execution of that statement has on the computer’s state </s>
<s> as a simple example the meaning of the assignment statement x = 7” is that after this statement is executed the value of the variable x will be 7 </s>
<s> we can be absolutely sure of this fact so it is something upon which we can build part of a mathematical proof in fact it is often possible to look at a program and deduce that some fact must be true at a given point during the execution of a program </s>
<s> for example consider the do loop do { textioput( enter a positive integer ) n = textiogetlnint( ) } while ( n <= 0 ) after this loop ends we can be absolutely sure that the value of the variable n is greater than zero </s>
<s> the loop cannot end until this condition is satisﬁed </s>
<s> this fact is part of the meaning of the while loop </s>
<s> more generally if a while loop uses the test while ( condition )” then after the loop ends we can be sure that the condition is false </s>
<s> we can then use this fact to draw further deductions about what happens as the execution of the program continues ( with a loop by the way we also have to worry about the question of whether the loop will ever end this is something that has to be veriﬁed separately ) a fact that can be proven to be true after a given program segment has been executed is called a postcondition of that program segment </s>
<s> postconditions are known facts upon which we can build further deductions about the behavior of the program </s>
<s> a postcondition of a program as a whole is simply a fact that can be proven to be true after the program has ﬁnished executing </s>
<s> a program can be proven to be correct by showing that the postconditions of the program meet the program’s speciﬁcation consider the following program segment where all the variables are of type double disc = b*b - 4*a*c x = ( -b + mathsqrt( disc ) ) / ( 2*a ) the quadratic formula ( from high-school mathematics ) assures us that the value assigned to x is a solution of the equation a*x2 + b*x + c = 0 provided that the value of disc is greater than or equal to zero and the value of a is not zero </s>
<s> if we can assume or guarantee that b*b-4*a*c >= 0 and that a != 0 then the fact that x is a solution of the equation becomes a postcondition of the program segment </s>
<s> we say that the condition b*b-4*a*c >= 0 is a precondition of the program segment </s>
<s> the condition that a != 0 is another precondition </s>
<s> a precondition is deﬁned to be a condition that must be true at a given point in the execution of a program in order for the program to continue correctly </s>
<s> a precondition is something that you want to be true </s>
<s> it’s something that you have to check or force to be true if you want your program to be correct we’ve encountered preconditions and postconditions once before in subsection 461 </s>
<s> that section introduced preconditions and postconditions as a way of specifying the contract of a subroutine </s>
<s> as the terms are being used here a precondition of a subroutine is just a precondition of the code that makes up the deﬁnition of the subroutine and the postcondition of a subroutine is a postcondition of the same code </s>
<s> in this section we have generalized these terms to make them more useful in talking about program correctness 386 chapter 8 </s>
<s> correctness robustness efficiency et’s see how this works by considering a longer program segment do { textioputln( enter a b and c </s>
<s> b*b-4*a*c must be >= 0 ) textioput( a = ) a = textiogetlndouble( ) textioput( b = ) b = textiogetlndouble( ) textioput( c = ) c = textiogetlndouble( ) if ( a == 0 || b*b - 4*a*c < 0 ) textioputln( your input is illegal </s>
<s> try again ) } while ( a == 0 || b*b - 4*a*c < 0 ) disc = b*b - 4*a*c x = ( -b + mathsqrt( disc ) ) / ( 2*a ) after the loop ends we can be sure that b*b-4*a*c >= 0 and that a != 0 </s>
<s> the preconditions for the last two lines are fulﬁlled so the postcondition that x is a solution of the equation a*x2 + b*x + c = 0 is also valid </s>
<s> this program segment correctly and provably computes a solution to the equation ( actually because of problems with representing numbers on computers this is not 100% true </s>
<s> the algorithm is correct but the program is not a perfect implementation of the algorithm </s>
<s> see the discussion in subsection 813 ) here is another variation in which the precondition is checked by an if statement </s>
<s> in the ﬁrst part of the if statement where a solution is computed and printed we know that the preconditions are fulﬁlled </s>
<s> in the other parts we know that one of the preconditions fails to hold </s>
<s> in any case the program is correct textioputln( enter your values for a b and c ) textioput( a = ) a = textiogetlndouble( ) textioput( b = ) b = textiogetlndouble( ) textioput( c = ) c = textiogetlndouble( ) if ( a != 0 && b*b - 4*a*c >= 0 ) { disc = b*b - 4*a*c x = ( -b + mathsqrt( disc ) ) / ( 2*a ) textioputln( a solution of a*x*x + b*x + c = 0 is + x ) } else if ( a == 0 ) { textioputln( the value of a cannot be zero ) } else { textioputln( since b*b - 4*a*c is less than zero the ) textioputln( equation a*x*x + b*x + c = 0 has no solution ) } whenever you write a program it’s a good idea to watch out for preconditions and think about how your program handles them </s>
<s> often a precondition can oﬀer a clue about how to write the program for example every array reference such as a[i] has a precondition the index must be within the range of legal indices for the array </s>
<s> for a[i] the precondition is that 0 <= i 82 </s>
<s> writing correct programs 387 < alength </s>
<s> the computer will check this condition when it evaluates a[i] and if the condition is not satisﬁed the program will be terminated </s>
<s> in order to avoid this you need to make sure that the index has a legal value ( there is actually another precondition namely that a is not null but let’s leave that aside for the moment ) consider the following code which searches for the number x in the array a and sets the value of i to be the index of the array element that contains x i = 0 while ( a[i] != x ) { i++ } as this program segment stands it has a precondition namely that x is actually in the array if this precondition is satisﬁed then the loop will end when a[i] == x </s>
<s> that is the value of i when the loop ends will be the position of x in the array </s>
<s> however if x is not in the array then the value of i will just keep increasing until it is equal to alength </s>
<s> at that time the reference to a[i] is illegal and the program will be terminated </s>
<s> to avoid this we can add a test to make sure that the precondition for referring to a[i] is satisﬁed i = 0 while ( i < alength && a[i] != x ) { i++ } now the loop will deﬁnitely end </s>
<s> after it ends i will satisfy either i == alength or a[i] == x </s>
<s> an if statement can be used after the loop to test which of these conditions caused the loop to end i = 0 while ( i < alength && a[i] != x ) { i++ } if ( i == alength ) systemoutprintln( x is not in the array ) else systemoutprintln( x is in position + i ) 822 robust handling of input one place where correctness and robustness are important—and especially diﬃcult—is in the processing of input data whether that data is typed in by the user read from a ﬁle or received over a network </s>
<s> files and networking will be covered in chapter 11 which will make essential use of material that will be covered in the next section of this chapter </s>
<s> for now let’s look at an example of processing user input examples in this textbook use my textio class for reading input from the user </s>
<s> this class has built-in error handling </s>
<s> for example the function textiogetdouble( ) is guaranteed to return a legal value of type double </s>
<s> if the user types an illegal value then textio will ask the user to re-enter their response your program never sees the illegal value </s>
<s> however this approach can be clumsy and unsatisfactory especially when the user is entering complex data in the following example i’ll do my own error-checking sometimes it’s useful to be able to look ahead at what’s coming up in the input without actually reading it </s>
<s> for example a program might need to know whether the next item in 388 chapter 8 </s>
<s> correctness robustness efficiency the input is a number or a word </s>
<s> for this purpose the textio class includes the function textiopeek( ) </s>
<s> this function returns a char which is the next character in the user’s input but it does not actually read that character </s>
<s> if the next thing in the input is an end-of-line then textiopeek( ) returns the new-line character ’n’ often what we really need to know is the next non-blank character in the user’s input before we can test this we need to skip past any spaces ( and tabs ) </s>
<s> here is a function that does this </s>
<s> it uses textiopeek( ) to look ahead and it reads characters until the next character in the input is either an end-of-line or some non-blank character ( the function textiogetanychar( ) reads and returns the next character in the user’s input even if that character is a space </s>
<s> by contrast the more common textiogetchar( ) would skip any blanks and then read and return the next non-blank character </s>
<s> we can’t use textiogetchar( ) here since the object is to skip the blanks without reading the next non-blank character ) /** * reads past any blanks and tabs in the input * postcondition the next character in the input is an * end-of-line or a non-blank character */ static void skipblanks( ) { char ch ch = textiopeek( ) while ( ch == ’ ’ || ch == ’t’ ) { // next character is a space or tab read it // and look at the character that follows it ch = textiogetanychar( ) ch = textiopeek( ) } } // end skipblanks( ) ( in fact this operation is so common that it is built into the most recent version of textio </s>
<s> the method textioskipblanks( ) does essentially the same thing as the skipblanks( ) method presented here ) an example in subsection 353 allowed the user to enter length measurements such as 3 miles” or 1 foot” </s>
<s> it would then convert the measurement into inches feet yards and miles but people commonly use combined measurements such as 3 feet 7 inches” </s>
<s> let’s improve the program so that it allows inputs of this form more speciﬁcally the user will input lines containing one or more measurements such as 1 foot” or 3 miles 20 yards 2 feet” </s>
<s> the legal units of measure are inch foot yard and mile the program will also recognize plurals ( inches feet yards miles ) and abbreviations ( in ft yd mi ) </s>
<s> let’s write a subroutine that will read one line of input of this form and compute the equivalent number of inches </s>
<s> the main program uses the number of inches to compute the equivalent number of feet yards and miles </s>
<s> if there is any error in the input the subroutine will print an error message and return the value -1 </s>
<s> the subroutine assumes that the input line is not empty </s>
<s> the main program tests for this before calling the subroutine and uses an empty line as a signal for ending the program ignoring the possibility of illegal inputs a pseudocode algorithm for the subroutine is inches = 0 // this will be the total number of inches while there is more input on the line read the numerical measurement read the units of measure 82 </s>
<s> writing correct programs 389 add the measurement to inches return inches we can test whether there is more input on the line by checking whether the next non-blank character is the end-of-line character </s>
<s> but this test has a precondition before we can test the next non-blank character we have to skip over any blanks </s>
<s> so the algorithm becomes inches = 0 skipblanks( ) while textiopeek( ) is not ’n’ read the numerical measurement read the unit of measure add the measurement to inches skipblanks( ) return inches note the call to skipblanks( ) at the end of the while loop </s>
<s> this subroutine must be executed before the computer returns to the test at the beginning of the loop </s>
<s> more generally if the test in a while loop has a precondition then you have to make sure that this precondition holds at the end of the while loop before the computer jumps back to re-evaluate the test as well as before the start of the loop what about error checking before reading the numerical measurement we have to make sure that there is really a number there to read </s>
<s> before reading the unit of measure we have to test that there is something there to read ( the number might have been the last thing on the line </s>
<s> an input such as 3” without a unit of measure is not acceptable ) also we have to check that the unit of measure is one of the valid units inches feet yards or miles </s>
<s> here is an algorithm that includes error-checking inches = 0 skipblanks( ) while textiopeek( ) is not ’n’ if the next character is not a digit report an error and return -1 et measurement = textiogetdouble( ) skipblanks( ) // precondition for the next test!! if the next character is end-of-line report an error and return -1 et units = textiogetword( ) if the units are inches add measurement to inches else if the units are feet add 12*measurement to inches else if the units are yards add 36*measurement to inches else if the units are miles add 12*5280*measurement to inches else report an error and return -1 skipblanks( ) return inches 390 chapter 8 </s>
<s> correctness robustness efficiency as you can see error-testing adds signiﬁcantly to the complexity of the algorithm </s>
<s> yet this is still a fairly simple example and it doesn’t even handle all the possible errors </s>
<s> for example if the user enters a numerical measurement such as 1e400 that is outside the legal range of values of type double then the program will fall back on the default error-handling in textio </s>
<s> something even more interesting happens if the measurement is 1e308 miles” </s>
<s> the number 1e308 is legal but the corresponding number of inches is outside the legal range of values for type double </s>
<s> as mentioned in the previous section the computer will get the value doublepositive infinity when it does the computation here is the subroutine written out in java /** * reads the user’s input measurement from one line of input * precondition the input line is not empty * postcondition if the user’s input is legal the measurement * is converted to inches and returned </s>
<s> if the * input is not legal the value -1 is returned * the end-of-line is not read by this routine */ static double readmeasurement( ) { double inches // total number of inches in user’s measurement double measurement string units char ch // one measurement // such as the 12 in 12 miles // the units specified for the measurement // such as miles // used to peek at next character in the user’s input inches = 0 // no inches have yet been read skipblanks( ) ch = textiopeek( ) /* as long as there is more input on the line read a measurement and add the equivalent number of inches to the variable inches </s>
<s> if an error is detected during the loop end the subroutine immediately by returning -1 */ while ( ch != ’n’ ) { /* get the next measurement and the units </s>
<s> before reading anything make sure that a legal value is there to read */ if ( ! characterisdigit( ch ) ) { textioputln( error expected to find a number but found + ch ) return -1 } measurement = textiogetdouble( ) skipblanks( ) if ( textiopeek( ) == ’n’ ) { textioputln( error missing unit of measure at end of line ) return -1 } 83 </s>
<s> exceptions and trycatch 391 units = textiogetword( ) units = unitstolowercase( ) /* convert the measurement to inches and add it to the total */ if ( unitsequals( inch ) || unitsequals( inches ) || unitsequals( in ) ) { inches += measurement } else if ( unitsequals( foot ) || unitsequals( feet ) || unitsequals( ft ) ) { inches += measurement * 12 } else if ( unitsequals( yard ) || unitsequals( yards ) || unitsequals( yd ) ) { inches += measurement * 36 } else if ( unitsequals( mile ) || unitsequals( miles ) || unitsequals( mi ) ) { inches += measurement * 12 * 5280 } else { textioputln( error + units + is not a legal unit of measure ) return -1 } /* look ahead to see whether the next thing on the line is the end-of-line */ skipblanks( ) ch = textiopeek( ) } // end while return inches } // end readmeasurement( ) the source code for the complete program can be found in the ﬁle lengthconverter2java 83 exceptions and trycatch getting a program to work under ideal circumstances is usually a lot easier than making the program robust </s>
<s> a robust program can survive unusual or exceptional” circumstances without crashing </s>
<s> one approach to writing robust programs is to anticipate the problems that might arise and to include tests in the program for each possible problem </s>
<s> for example a program will crash if it tries to use an array element a[i] when i is not within the declared range of indices for the array a </s>
<s> a robust program must anticipate the possibility of a bad index and guard against it </s>
<s> one way to do this is to write the program in a way that ensures ( as a postcondition of the code that precedes the array reference ) that the index is in the legal range another way is to test whether the index value is legal before using it in the array </s>
<s> this could be done with an if statement 392 chapter 8 </s>
<s> correctness robustness efficiency if ( i < 0 || i >= alength ) { // do something to handle the out-of-range index i } else { // process the array element a[i] } there are some problems with this approach </s>
<s> it is diﬃcult and sometimes impossible to anticipate all the possible things that might go wrong </s>
<s> it’s not always clear what to do when an error is detected </s>
<s> furthermore trying to anticipate all the possible problems can turn what would otherwise be a straightforward program into a messy tangle of if statements 831 exceptions and exception classes we have already seen in section 37 that java ( like its cousin c++ ) provides a neater more structured alternative technique for dealing with errors that can occur while a program is running </s>
<s> the technique is referred to as exception handling </s>
<s> the word exception” is meant to be more general than error” it includes any circumstance that arises as the program is executed which is meant to be treated as an exception to the normal ﬂow of control of the program </s>
<s> an exception might be an error or it might just be a special case that you would rather not have clutter up your elegant algorithm when an exception occurs during the execution of a program we say that the exception is thrown </s>
<s> when this happens the normal ﬂow of the program is thrown oﬀ-track and the program is in danger of crashing </s>
<s> however the crash can be avoided if the exception is caught and handled in some way </s>
<s> an exception can be thrown in one part of a program and caught in a diﬀerent part </s>
<s> an exception that is not caught will generally cause the program to crash ( more exactly the thread that throws the exception will crash </s>
<s> in a multithreaded program it is possible for other threads to continue even after one crashes </s>
<s> we will cover threads in chapter 12 </s>
<s> in particular gui programs are multithreaded and parts of the program might continue to function even while other parts are non-functional because of exceptions ) by the way since java programs are executed by a java interpreter having a program crash simply means that it terminates abnormally and prematurely </s>
<s> it doesn’t mean that the java interpreter will crash </s>
<s> in eﬀect the interpreter catches any exceptions that are not caught by the program </s>
<s> the interpreter responds by terminating the program </s>
<s> in many other programming languages a crashed program will sometimes crash the entire system and freeze the computer until it is restarted </s>
<s> with java such system crashes should be impossible—which means that when they happen you have the satisfaction of blaming the system rather than your own program exceptions were introduced in section 37 along with the trycatch statement which is used to catch and handle exceptions </s>
<s> however that section did not cover the complete syntax of trycatch or the full complexity of exceptions </s>
<s> in this section we cover these topics in full detail ∗ ∗ ∗ when an exception occurs the thing that is actually thrown” is an object </s>
<s> this object can carry information ( in its instance variables ) from the point where the exception occurs to the point where it is caught and handled </s>
<s> this information always includes the subroutine call stack which is a list of the subroutines that were being executed when the exception was thrown ( since one subroutine can call another several subroutines can be active at the same time ) typically an exception object also includes an error message describing what happened 83 </s>
<s> exceptions and trycatch 393 to cause the exception and it can contain other data as well </s>
<s> all exception objects must belong to a subclass of the standard class javalangthrowable </s>
<s> in general each diﬀerent type of exception is represented by its own subclass of throwable and these subclasses are arranged in a fairly complex class hierarchy that shows the relationship among various types of exception throwable has two direct subclasses error and exception </s>
<s> these two subclasses in turn have many other predeﬁned subclasses </s>
<s> in addition a programmer can create new exception classes to represent new types of exception most of the subclasses of the class error represent serious errors within the java virtual machine that should ordinarily cause program termination because there is no reasonable way to handle them </s>
<s> in general you should not try to catch and handle such errors </s>
<s> an example is a classformaterror which occurs when the java virtual machine ﬁnds some kind of illegal data in a ﬁle that is supposed to contain a compiled java class </s>
<s> if that class was being loaded as part of the program then there is really no way for the program to proceed on the other hand subclasses of the class exception represent exceptions that are meant to be caught </s>
<s> in many cases these are exceptions that might naturally be called errors” but they are errors in the program or in input data that a programmer can anticipate and possibly respond to in some reasonable way ( however you should avoid the temptation of saying well i’ll just put a thing here to catch all the errors that might occur so my program won’t crash” if you don’t have a reasonable way to respond to the error it’s best just to let the program crash because trying to go on will probably only lead to worse things down the road—in the worst case a program that gives an incorrect answer without giving you any indication that the answer might be wrong! ) the class exception has its own subclass runtimeexception </s>
<s> this class groups together many common exceptions including all those that have been covered in previous sections </s>
<s> for example illegalargumentexception and nullpointerexception are subclasses of runtimeexception a runtimeexception generally indicates a bug in the program which the programmer should ﬁx </s>
<s> runtimeexceptions and errors share the property that a program can simply ignore the possibility that they might occur ( ignoring” here means that you are content to let your program crash if the exception occurs ) for example a program does this every time it uses an array reference like a[i] without making arrangements to catch a possible arrayindexoutofboundsexception </s>
<s> for all other exception classes besides error runtimeexception and their subclasses exception-handling is mandatory” in a sense that i’ll discuss below the following diagram is a class hierarchy showing the class throwable and just a few of its subclasses </s>
<s> classes that require mandatory exception-handling are shown in italic 394 chapter 8 </s>
<s> correctness robustness efficiency throwable exception error runtimeexception interruptedexception ioexception eofexception socketexception arrayindexoutofboundsexception illegalargumentexception numberfformatexception the class throwable and some of its subclasses the class throwable includes several instance methods that can be used with any exception object </s>
<s> if e is of type throwable ( or one of its subclasses ) then egetmessage( ) is a function that returns a string that describes the exception </s>
<s> the function etostring( ) which is used by the system whenever it needs a string representation of the object returns a string that contains the name of the class to which the exception belongs as well as the same string that would be returned by egetmessage( ) </s>
<s> and the method eprintstacktrace( ) writes a stack trace to standard output that tells which subroutines were active when the exception occurred a stack trace can be very useful when you are trying to determine the cause of the problem ( note that if an exception is not caught by the program then the default response to the exception prints the stack trace to standard output ) 832 the try statement to catch exceptions in a java program you need a try statement </s>
<s> we have been using such statements since section 37 but the full syntax of the try statement is more complicated than what was presented there </s>
<s> the try statements that we have used so far had a syntax similar to the following example try { double determinant = m[0][0]*m[1][1] systemoutprintln( the determinant of } catch ( arrayindexoutofboundsexception e ) systemoutprintln( m is the wrong size eprintstacktrace( ) } m[0][1]*m[1][0] m is + determinant ) { to have a determinant ) here the computer tries to execute the block of statements following the word try” </s>
<s> if no exception occurs during the execution of this block then the catch” part of the statement is simply ignored </s>
<s> however if an exception of type arrayindexoutofboundsexception occurs then the computer jumps immediately to the catch clause of the try statement </s>
<s> this block of statements is said to be an exception handler for arrayindexoutofboundsexception </s>
<s> by handling the exception in this way you prevent it from crashing the program </s>
<s> before the body of the catch clause is executed the object that represents the exception is assigned to the variable e which is used in this example to print a stack trace 395 83 </s>
<s> exceptions and trycatch however the full syntax of the try statement allows more than one catch clause </s>
<s> this makes it possible to catch several diﬀerent types of exception with one try statement </s>
<s> in the above example in addition to the possible arrayindexoutofboundsexception there is a possible nullpointerexception which will occur if the value of m is null </s>
<s> we can handle both possible exceptions by adding a second catch clause to the try statement try { double determinant = m[0][0]*m[1][1] systemoutprintln( the determinant of } catch ( arrayindexoutofboundsexception e ) systemoutprintln( m is the wrong size } catch ( nullpointerexception e ) { systemoutprint( programming error! m } m[0][1]*m[1][0] m is + determinant ) { to have a determinant ) doesn’t exist + ) here the computer tries to execute the statements in the try clause </s>
<s> if no error occurs both of the catch clauses are skipped </s>
<s> if an arrayindexoutofboundsexception occurs the computer executes the body of the ﬁrst catch clause and skips the second one </s>
<s> if a nullpointerexception occurs it jumps to the second catch clause and executes that note that both arrayindexoutofboundsexception and nullpointerexception are subclasses of runtimeexception </s>
<s> it’s possible to catch all runtimeexceptions with a single catch clause </s>
<s> for example try { double determinant = m[0][0]*m[1][1] - m[0][1]*m[1][0] systemoutprintln( the determinant of m is + determinant ) } catch ( runtimeexception err ) { systemoutprintln( sorry an error has occurred ) systemoutprintln( the error was + err ) } the catch clause in this try statement will catch any exception belonging to class runtimeexception or to any of its subclasses </s>
<s> this shows why exception classes are organized into a class hierarchy </s>
<s> it allows you the option of casting your net narrowly to catch only a speciﬁc type of exception </s>
<s> or you can cast your net widely to catch a wide class of exceptions </s>
<s> because of subclassing when there are multiple catch clauses in a try statement it is possible that a given exception might match several of those catch clauses </s>
<s> for example an exception of type nullpointerexception would match catch clauses for nullpointerexception runtimeexception exception or throwable </s>
<s> in this case only the ﬁrst catch clause that matches the exception is executed the example i’ve given here is not particularly realistic </s>
<s> you are not very likely to use exception-handling to guard against null pointers and bad array indices </s>
<s> this is a case where careful programming is better than exception handling just be sure that your program assigns a reasonable non-null value to the array m </s>
<s> you would certainly resent it if the designers of java forced you to set up a trycatch statement every time you wanted to use an array! this is why handling of potential runtimeexceptions is not mandatory </s>
<s> there are just too many things that might go wrong! ( this also shows that exception-handling does not solve the problem of program robustness </s>
<s> it just gives you a tool that will in many cases let you approach the problem in a more organized way ) 396 chapter 8 </s>
<s> correctness robustness efficiency ∗ ∗ ∗ i have still not completely speciﬁed the syntax of the try statement </s>
<s> there is one additional element the possibility of a ﬁnally clause at the end of a try statement </s>
<s> the complete syntax of the try statement can be described as try { statements } optional-catch-clauses optional-finally-clause note that the catch clauses are also listed as optional </s>
<s> the try statement can include zero or more catch clauses and optionally a finally clause </s>
<s> the try statement must include one or the other </s>
<s> that is a try statement can have either a finally clause or one or more catch clauses or both </s>
<s> the syntax for a catch clause is catch ( exception-class-name statements } variable-name ) { and the syntax for a finally clause is finally { statements } the semantics of the finally clause is that the block of statements in the finally clause is guaranteed to be executed as the last step in the execution of the try statement whether or not any exception occurs and whether or not any exception that does occur is caught and handled the finally clause is meant for doing essential cleanup that under no circumstances should be omitted </s>
<s> one example of this type of cleanup is closing a network connection </s>
<s> although you don’t yet know enough about networking to look at the actual programming in this case we can consider some pseudocode try { open a network connection } catch ( ioexception e ) { report the error return // don’t continue if connection can’t be opened! } // at this point we know that the connection is open try { communicate over the connection } catch ( ioexception e ) { handle the error } finally { close the connection } 83 </s>
<s> exceptions and trycatch 397 the finally clause in the second try statement ensures that the network connection will deﬁnitely be closed whether or not an error occurs during the communication </s>
<s> the ﬁrst try statement is there to make sure that we don’t even try to communicate over the network unless we have successfully opened a connection </s>
<s> the pseudocode in this example follows a general pattern that can be used to robustly obtain a resource use the resource and then release the resource 833 throwing exceptions there are times when it makes sense for a program to deliberately throw an exception </s>
<s> this is the case when the program discovers some sort of exceptional or error condition but there is no reasonable way to handle the error at the point where the problem is discovered </s>
<s> the program can throw an exception in the hope that some other part of the program will catch and handle the exception </s>
<s> this can be done with a throw statement </s>
<s> you have already seen an example of this in subsection 435 </s>
<s> in this section we cover the throw statement more fully </s>
<s> the syntax of the throw statement is throw exception-object the exception-object must be an object belonging to one of the subclasses of throwable usually it will in fact belong to one of the subclasses of exception </s>
<s> in most cases it will be a newly constructed object created with the new operator </s>
<s> for example throw new arithmeticexception( division by zero ) the parameter in the constructor becomes the error message in the exception object if e refers to the object the error message can be retrieved by calling egetmessage( ) ( you might ﬁnd this example a bit odd because you might expect the system itself to throw an arithmeticexception when an attempt is made to divide by zero </s>
<s> so why should a programmer bother to throw the exception recall that if the numbers that are being divided are of type int then division by zero will indeed throw an arithmeticexception </s>
<s> however no arithmetic operations with ﬂoating-point numbers will ever produce an exception </s>
<s> instead the special value doublenan is used to represent the result of an illegal operation </s>
<s> in some situations you might prefer to throw an arithmeticexception when a real number is divided by zero ) an exception can be thrown either by the system or by a throw statement </s>
<s> the exception is processed in exactly the same way in either case </s>
<s> suppose that the exception is thrown inside a try statement </s>
<s> if that try statement has a catch clause that handles that type of exception then the computer jumps to the catch clause and executes it </s>
<s> the exception has been handled </s>
<s> after handling the exception the computer executes the finally clause of the try statement if there is one </s>
<s> it then continues normally with the rest of the program which follows the try statement </s>
<s> if the exception is not immediately caught and handled the processing of the exception will continue when an exception is thrown during the execution of a subroutine and the exception is not handled in the same subroutine then that subroutine is terminated ( after the execution of any pending finally clauses ) </s>
<s> then the routine that called that subroutine gets a chance to handle the exception </s>
<s> that is if the subroutine was called inside a try statement that has an appropriate catch clause then that catch clause will be executed and the program will continue on normally from there </s>
<s> again if the second routine does not handle the exception then it also is terminated and the routine that called it ( if any ) gets the next shot at the exception </s>
<s> the exception will crash the program only if it passes up through the entire chain of 398 chapter 8 </s>
<s> correctness robustness efficiency subroutine calls without being handled ( in fact even this is not quite true in a multithreaded program only the thread in which the exception occurred is terminated ) a subroutine that might generate an exception can announce this fact by adding a clause throws exception-class-name ” to the header of the routine </s>
<s> for example /** * returns the larger of the two roots of the quadratic equation * a*x*x + b*x + c = 0 provided it has any roots </s>
<s> if a == 0 or * if the discriminant b*b - 4*a*c is negative then an exception * of type illegalargumentexception is thrown */ static public double root( double a double b double c ) throws illegalargumentexception { if ( a == 0 ) { throw new illegalargumentexception( a can’t be zero ) } else { double disc = b*b - 4*a*c if ( disc < 0 ) throw new illegalargumentexception( discriminant < zero ) return ( -b + mathsqrt( disc ) ) / ( 2*a ) } } as discussed in the previous section the computation in this subroutine has the preconditions that a != 0 and b*b-4*a*c >= 0 </s>
<s> the subroutine throws an exception of type illegalargumentexception when either of these preconditions is violated </s>
<s> when an illegal condition is found in a subroutine throwing an exception is often a reasonable response </s>
<s> if the program that called the subroutine knows some good way to handle the error it can catch the exception if not the program will crash—and the programmer will know that the program needs to be ﬁxed a throws clause in a subroutine heading can declare several diﬀerent types of exception separated by commas </s>
<s> for example void processarray( int[] a ) throws nullpointerexception arrayindexoutofboundsexception { 834 mandatory exception handling in the preceding example declaring that the subroutine root( ) can throw an illegalargumentexception is just a courtesy to potential readers of this routine </s>
<s> this is because handling of illegalargumentexceptions is not mandatory” a routine can throw an illegalargumentexception without announcing the possibility </s>
<s> and a program that calls that routine is free either to catch or to ignore the exception just as a programmer can choose either to catch or to ignore an exception of type nullpointerexception for those exception classes that require mandatory handling the situation is diﬀerent </s>
<s> if a subroutine can throw such an exception that fact must be announced in a throws clause in the routine deﬁnition </s>
<s> failing to do so is a syntax error that will be reported by the compiler exceptions that require mandatory handling are called checked exceptions </s>
<s> the compiler will check that such exceptions are handled by the program 83 </s>
<s> exceptions and trycatch 399 suppose that some statement in the body of a subroutine can generate a checked exception one that requires mandatory handling </s>
<s> the statement could be a throw statement which throws the exception directly or it could be a call to a subroutine that can throw the exception </s>
<s> in either case the exception must be handled </s>
<s> this can be done in one of two ways the ﬁrst way is to place the statement in a try statement that has a catch clause that handles the exception in this case the exception is handled within the subroutine so that any caller of the subroutine will never see the exception </s>
<s> the second way is to declare that the subroutine can throw the exception </s>
<s> this is done by adding a throws” clause to the subroutine heading which alerts any callers to the possibility that an exception might be generated when the subroutine is executed </s>
<s> the caller will in turn be forced either to handle the exception in a try statement or to declare the exception in a throws clause in its own header exception-handling is mandatory for any exception class that is not a subclass of either error or runtimeexception </s>
<s> these checked exceptions generally represent conditions that are outside the control of the programmer </s>
<s> for example they might represent bad input or an illegal action taken by the user </s>
<s> there is no way to avoid such errors so a robust program has to be prepared to handle them </s>
<s> the design of java makes it impossible for programmers to ignore the possibility of such errors among the checked exceptions are several that can occur when using java’s input/output routines </s>
<s> this means that you can’t even use these routines unless you understand something about exception-handling </s>
<s> chapter 11 deals with input/output and uses mandatory exceptionhandling extensively 835 programming with exceptions exceptions can be used to help write robust programs </s>
<s> they provide an organized and structured approach to robustness </s>
<s> without exceptions a program can become cluttered with if statements that test for various possible error conditions </s>
<s> with exceptions it becomes possible to write a clean implementation of an algorithm that will handle all the normal cases </s>
<s> the exceptional cases can be handled elsewhere in a catch clause of a try statement when a program encounters an exceptional condition and has no way of handling it immediately the program can throw an exception </s>
<s> in some cases it makes sense to throw an exception belonging to one of java’s predeﬁned classes such as illegalargumentexception or ioexception </s>
<s> however if there is no standard class that adequately represents the exceptional condition the programmer can deﬁne a new exception class </s>
<s> the new class must extend the standard class throwable or one of its subclasses </s>
<s> in general if the programmer does not want to require mandatory exception handling the new class will extend runtimeexception ( or one of its subclasses ) </s>
<s> to create a new checked exception class which does require mandatory handling the programmer can extend one of the other subclasses of exception or can extend exception itself here for example is a class that extends exception and therefore requires mandatory exception handling when it is used public class parseerror extends exception { public parseerror( string message ) { // create a parseerror object containing // the given message as its error message super( message ) } } 400 chapter 8 </s>
<s> correctness robustness efficiency the class contains only a constructor that makes it possible to create a parseerror object containing a given error message ( the statement super( message )” calls a constructor in the superclass exception </s>
<s> see subsection 563 ) of course the class inherits the getmessage( ) and printstacktrace( ) routines from its superclass </s>
<s> if e refers to an object of type parseerror then the function call egetmessage( ) will retrieve the error message that was speciﬁed in the constructor </s>
<s> but the main point of the parseerror class is simply to exist </s>
<s> when an object of type parseerror is thrown it indicates that a certain type of error has occurred ( parsing by the way refers to ﬁguring out the syntax of a string </s>
<s> a parseerror would indicate presumably that some string that is being processed by the program does not have the expected form ) a throw statement can be used in a program to throw an error of type parseerror </s>
<s> the constructor for the parseerror object must specify an error message </s>
<s> for example throw new parseerror( encountered an illegal negative number ) or throw new parseerror( the word ’ + word + ’ is not a valid file name ) if the throw statement does not occur in a try statement that catches the error then the subroutine that contains the throw statement must declare that it can throw a parseerror by adding the clause throws parseerror” to the subroutine heading </s>
<s> for example void getuserdata( ) throws parseerror { } this would not be required if parseerror were deﬁned as a subclass of runtimeexception instead of exception since in that case parseerrors would not be checked exceptions a routine that wants to handle parseerrors can use a try statement with a catch clause that catches parseerrors </s>
<s> for example try { getuserdata( ) processuserdata( ) } catch ( parseerror pe ) { // handle the error } note that since parseerror is a subclass of exception a catch clause of the form catch ( exception e )” would also catch parseerrors along with any other object of type exception sometimes it’s useful to store extra data in an exception object </s>
<s> for example class shipdestroyed extends runtimeexception { ship ship // which ship was destroyed int where x where y // location where ship was destroyed shipdestroyed( string message ship s int x int y ) { // constructor creates a shipdestroyed object // carrying an error message plus the information // that the ship s was destroyed at location ( xy ) // on the screen super( message ) ship = s where x = x 401 83 </s>
<s> exceptions and trycatch where y = y } } here a shipdestroyed object contains an error message and some information about a ship that was destroyed </s>
<s> this could be used for example in a statement if ( usershipishit( ) ) throw new shipdestroyed( you’ve been hit! usership xpos ypos ) note that the condition represented by a shipdestroyed object might not even be considered an error </s>
<s> it could be just an expected interruption to the normal ﬂow of a game </s>
<s> exceptions can sometimes be used to handle such interruptions neatly ∗ ∗ ∗ the ability to throw exceptions is particularly useful in writing general-purpose methods and classes that are meant to be used in more than one program </s>
<s> in this case the person writing the method or class often has no reasonable way of handling the error since that person has no way of knowing exactly how the method or class will be used </s>
<s> in such circumstances a novice programmer is often tempted to print an error message and forge ahead but this is almost never satisfactory since it can lead to unpredictable results down the line </s>
<s> printing an error message and terminating the program is almost as bad since it gives the program no chance to handle the error the program that calls the method or uses the class needs to know that the error has occurred </s>
<s> in languages that do not support exceptions the only alternative is to return some special value or to set the value of some variable to indicate that an error has occurred </s>
<s> for example the readmeasurement( ) function in subsection 822 returns the value -1 if the user’s input is illegal </s>
<s> however this only does any good if the main program bothers to test the return value </s>
<s> it is very easy to be lazy about checking for special return values every time a subroutine is called </s>
<s> and in this case using -1 as a signal that an error has occurred makes it impossible to allow negative measurements </s>
<s> exceptions are a cleaner way for a subroutine to react when it encounters an error it is easy to modify the readmeasurement( ) function to use exceptions instead of a special return value to signal an error </s>
<s> my modiﬁed subroutine throws a parseerror when the user’s input is illegal where parseerror is the subclass of exception that was deﬁned above ( arguably it might be reasonable to avoid deﬁning a new class by using the standard exception class illegalargumentexception instead ) the changes from the original version are shown in italic /** * reads the user’s input measurement from one line of input * precondition the input line is not empty * postcondition if the user’s input is legal the measurement * is converted to inches and returned * @throws parseerror if the user’s input is not legal */ static double readmeasurement( ) throws parseerror { double inches // total number of inches in user’s measurement double measurement string units // one measurement // such as the 12 in 12 miles // the units specified for the measurement // such as miles 402 chapter 8 </s>
<s> correctness robustness efficiency char ch // used to peek at next character in the user’s input inches = 0 // no inches have yet been read skipblanks( ) ch = textiopeek( ) /* as long as there is more input on the line read a measurement and add the equivalent number of inches to the variable inches </s>
<s> if an error is detected during the loop end the subroutine immediately by throwing a parseerror */ while ( ch != ’n’ ) { /* get the next measurement and the units </s>
<s> before reading anything make sure that a legal value is there to read */ if ( ! characterisdigit( ch ) ) { throw new parseerror( expected to find a number but found + ch ) } measurement = textiogetdouble( ) skipblanks( ) if ( textiopeek( ) == ’n’ ) { throw new parseerror( missing unit of measure at end of line ) } units = textiogetword( ) units = unitstolowercase( ) /* convert the measurement to inches and add it to the total */ if ( unitsequals( inch ) || unitsequals( inches ) || unitsequals( in ) ) { inches += measurement } else if ( unitsequals( foot ) || unitsequals( feet ) || unitsequals( ft ) ) { inches += measurement * 12 } else if ( unitsequals( yard ) || unitsequals( yards ) || unitsequals( yd ) ) { inches += measurement * 36 } else if ( unitsequals( mile ) || unitsequals( miles ) || unitsequals( mi ) ) { inches += measurement * 12 * 5280 } else { throw new parseerror( + units + is not a legal unit of measure ) } /* look ahead to see whether the next thing on the line is the end-of-line */ skipblanks( ) ch = textiopeek( ) } // end while 84 </s>
<s> assertions and annotations 403 return inches } // end readmeasurement( ) in the main program this subroutine is called in a try statement of the form try { inches = readmeasurement( ) } catch ( parseerror e ) { // handle the error } the complete program can be found in the ﬁle lengthconverter3java </s>
<s> from the user’s point of view this program has exactly the same behavior as the program lengthconverter2 from the previous section </s>
<s> internally however the programs are signiﬁcantly diﬀerent since engthconverter3 uses exception handling 84 assertions and annotations in this short section we look brieﬂy at two features of java that are not covered or used elsewhere in this textbook assertions and annotations </s>
<s> they are included here for completeness but they are mostly meant for more advanced programming 841 assertions recall that a precondition is a condition that must be true at a certain point in a program for the execution of the program to continue correctly from that point </s>
<s> in the case where there is a chance that the precondition might not be satisﬁed—for example if it depends on input from the user—then it’s a good idea to insert an if statement to test it </s>
<s> but then the question arises what should be done if the precondition does not hold one option is to throw an exception this will terminate the program unless the exception is caught and handled elsewhere in the program in many cases of course instead of using an if statement to test whether a precondition holds a programmer tries to write the program in a way that will guarantee that the precondition holds </s>
<s> in that case the test should not be necessary and the if statement can be avoided the problem is that programmers are not perfect </s>
<s> in spite of the programmer’s intention the program might contain a bug that screws up the precondition </s>
<s> so maybe it’s a good idea to check the precondition after all—at least during the debugging phase of program development similarly a postcondition is a condition that is true at a certain point in the program as a consequence of the code that has been executed before that point </s>
<s> assuming that the code is correctly written a postcondition is guaranteed to be true but here again testing whether a desired postcondition is actually true is a way of checking for a bug that might have screwed up the postcondition </s>
<s> this is something that might be desirable during debugging the programming languages c and c++ have always had a facility for adding what are called assertions to a program </s>
<s> these assertions take the form assert( condition )” where condition is a boolean-valued expression </s>
<s> this condition expresses a precondition or postcondition that should hold at that point in the program </s>
<s> when the computer encounters an assertion during the execution of the program it evaluates the condition </s>
<s> if the condition is false the program is terminated </s>
<s> otherwise the program continues normally </s>
<s> this allows the 404 chapter 8 </s>
<s> correctness robustness efficiency programmer’s belief that the condition is true to be tested if it is not true that indicates that the part of the program that preceded the assertion contained a bug </s>
<s> one nice thing about assertions in c and c++ is that they can be turned oﬀ” at compile time </s>
<s> that is if the program is compiled in one way then the assertions are included in the compiled code </s>
<s> if the program is compiled in another way the assertions are not included </s>
<s> during debugging the ﬁrst type of compilation is used with assertions turned on </s>
<s> the release version of the program is compiled with assertions turned oﬀ </s>
<s> the release version will be more eﬃcient because the computer won’t have to evaluate all the assertions although early versions of java did not have assertions an assertion facility similar to the one in c/c++ has been available in java since version 14 </s>
<s> as with the c/c++ version java assertions can be turned on during debugging and turned oﬀ during normal execution </s>
<s> in java however assertions are turned on and oﬀ at run time rather than at compile time </s>
<s> an assertion in the java source code is always included in the compiled class ﬁle </s>
<s> when the program is run in the normal way these assertions are ignored since the condition in the assertion is not evaluated in this case there is little or no performance penalty for having the assertions in the program </s>
<s> when the program is being debugged it can be run with assertions enabled as discussed below and then the assertions can be a great help in locating and identifying bugs ∗ ∗ ∗ an assertion statement in java takes one of the following two forms assert condition assert condition error-message or where condition is a boolean-valued expression and error-message is a string or an expression of type string </s>
<s> the word assert” is a reserved word in java which cannot be used as an identiﬁer </s>
<s> an assertion statement can be used anyplace in java where a statement is legal if a program is run with assertions disabled an assertion statement is equivalent to an empty statement and has no eﬀect </s>
<s> when assertions are enabled and an assertion statement is encountered in the program the condition in the assertion is evaluated </s>
<s> if the value is true the program proceeds normally </s>
<s> if the value of the condition is false then an exception of type javalangassertionerror is thrown and the program will crash ( unless the error is caught by a try statement ) </s>
<s> if the assert statement includes an error-message then the error message string becomes the message in the assertionerror so the statement assert condition error-message is similar to if ( condition == false ) throw new assertionerror( error-message ) except that the if statement is executed whenever the program is run and the assert statement is executed only when the program is run with assertions enabled the question is when to use assertions instead of exceptions the general rule is to use assertions to test conditions that should deﬁnitely be true if the program is written correctly assertions are useful for testing a program to see whether or not it is correct and for ﬁnding the errors in an incorrect program </s>
<s> after testing and debugging when the program is used in the normal way the assertions in the program will be ignored </s>
<s> however if a problem turns up later the assertions are still there in the program to be used to help locate the error </s>
<s> if someone writes to you to say that your program doesn’t work when he does such-and-such you 405 84 </s>
<s> assertions and annotations can run the program with assertions enabled do such-and-such and hope that the assertions in the program will help you locate the point in the program where it goes wrong consider for example the root( ) method from subsection 833 that calculates a root of a quadratic equation </s>
<s> if you believe that your program will always call this method with legal arguments then it would make sense to write the method using assertions instead of exceptions /** * returns the larger of the two roots of the quadratic equation * a*x*x + b*x + c = 0 provided it has any roots * precondition a != 0 and b*b - 4*a*c >= 0 */ static public double root( double a double b double c ) { assert a != 0 leading coefficient of quadratic equation cannot be zero double disc = b*b - 4*a*c assert disc >= 0 discriminant of quadratic equation cannot be negative return ( -b + mathsqrt( disc ) ) / ( 2*a ) } the assertions are not checked when the program is run in the normal way </s>
<s> if you are correct in your belief that the method is never called with illegal arguments then checking the conditions in the assertions would be unnecessary </s>
<s> if your belief is not correct the problem should turn up during testing or debugging when the program is run with the assertions enabled if the root( ) method is part of a software library that you expect other people to use then the situation is less clear </s>
<s> oracle’s java documentation advises that assertions should not be used for checking the contract of public methods if the caller of a method violates the contract by passing illegal parameters then an exception should be thrown </s>
<s> this will enforce the contract whether or not assertions are enabled ( however while it’s true that java programmers expect the contract of a method to be enforced with exceptions there are reasonable arguments for using assertions instead in some cases ) one might say that assertions are for you to help you in debugging your code while exceptions are for people who use your code to alert them that they are misusing it on the other hand it never hurts to use an assertion to check a postcondition of a method a postcondition is something that is supposed to be true after the method has executed and it can be tested with an assert statement at the end of the method </s>
<s> if the postcondition is false there is a bug in the method itself and that is something that needs to be found during the development of the method ∗ ∗ ∗ to have any eﬀect assertions must be enabled when the program is run </s>
<s> how to do this depends on what programming environment you are using ( see section 26 for a discussion of programming environments ) in the usual command line environment assertions are enabled by adding the option -enableassertions to the java command that is used to run the program for example if the class that contains the main program is rootfinder then the command java -enableassertions rootfinder will run the program with assertions enabled </s>
<s> the -enableassertions option can be abbreviated to -ea so the command can alternatively be written as java -ea rootfinder in fact it is possible to enable assertions in just part of a program </s>
<s> an option of the form -ea class-name ” enables only the assertions in the speciﬁed class </s>
<s> note that there are no 406 chapter 8 </s>
<s> correctness robustness efficiency spaces between the -ea the ” and the name of the class </s>
<s> to enable all the assertions in a package and in its sub-packages you can use an option of the form -ea package-name ” to enable assertions in the default package” ( that is classes that are not speciﬁed to belong to a package like almost all the classes in this book ) use -ea” </s>
<s> for example to run a java program named megapaint” with assertions enabled for every class in the packages named paintutils” and drawing” you would use the command java -eapaintutils -eadrawing megapaint if you are using the eclipse integrated development environment you can specify the -ea option by creating a run conﬁguration </s>
<s> right-click the name of the main program class in the package explorer pane and select run as” from the pop-up menu and then run ” from the submenu </s>
<s> this will open a dialog box where you can manage run conﬁgurations </s>
<s> the name of the project and of the main class will be already be ﬁlled in </s>
<s> click the arguments” tab and enter -ea in the box under vm arguments” </s>
<s> the contents of this box are added to the java command that is used to run the program </s>
<s> you can enter other options in this box including more complicated enableassertions options such as -eapaintutils </s>
<s> when you click the run” button the options will be applied </s>
<s> furthermore they will be applied whenever you run the program unless you change the run conﬁguration or add a new conﬁguration </s>
<s> note that it is possible to make two run conﬁgurations for the same class one with assertions enabled and one with assertions disabled 842 annotations the term annotation” refers to notes added to or written alongside a main text to help you understand or appreciate the text </s>
<s> an annotation might be a note that you make to yourself in the margin of a book </s>
<s> it might be a footnote added to an old novel by an editor to explain the historical context of some event </s>
<s> the annotation is metadata or metatext” that is text written about the main text rather than as part of the main text itself comments on a program are actually a kind of annotation </s>
<s> since they are ignored by the compiler they have no eﬀect on the meaning of the program </s>
<s> they are there to explain that meaning to a human reader </s>
<s> it is possible of course for another computer program ( not the compiler ) to process comments </s>
<s> that’s what done in the case of javadoc comments which are processed by a program that uses them to create api documentation </s>
<s> but comments are only one type of metadata that might be added to programs in java 50 a new feature called annotations was added to the java language to make it easier to create new kinds of metadata for java programs </s>
<s> this has made it possible for programmers to devise new ways of annotating programs and to write programs that can read and use their annotations java annotations have no direct eﬀect on the program that they annotate </s>
<s> but they do have many potential uses </s>
<s> some annotations are used to make the programmer’s intent more explicit such annotations might be checked by a compiler to make sure that the code is consistent with the programmer’s intention </s>
<s> for example @override is a standard annotation that can be used to annotate method deﬁnitions </s>
<s> it means that the method is intended to override ( that is replace ) a method with the same signature that was deﬁned in some superclass </s>
<s> a compiler can check that the superclass method actually exists if not it can inform the programmer </s>
<s> an annotation used in this way is an aid to writing correct programs since the programmer can be warned about a potential error in advance instead of having to hunt it down later as a bug 84 </s>
<s> assertions and annotations 407 to annotate a method deﬁnition with the @override annotation simply place it in front of the deﬁnition </s>
<s> syntactically annotations are modiﬁers that are used in much the same way as built-in modiﬁers like public” and ﬁnal” for example @override public void windowclosed( windowevent evt ) { } if there is no windowclosed( windowevent ) method in any superclass then the compiler can issue an error </s>
<s> in fact this example is based on a hard-to-ﬁnd bug that i once introduced when trying to override a method named windowclosed” with a method that i called windowclosed” ( with an upper case w” ) </s>
<s> if the @override annotation had existed at that time—and if i had used it—the compiler would have rejected my code and saved me the trouble of tracking down the bug ( annotations are a fairly advanced feature and i might not have mentioned them in this textbook except that the @override annotation can show up in code generated by eclipse and other integrated development environments ) there are two other standard annotations </s>
<s> one is @deprecated which can be used to mark deprecated classes methods and variables ( a deprecated item is one that is considered to be obsolete but is still part of the java language for backwards compatibility for old code ) use of this annotation would allow a compiler to generate warnings when the deprecated item is used the other standard annotation is @surpresswarnings which can be used by a compiler to turn oﬀ warning messages that would ordinarily be generated when a class or method is compiled @suppresswarnings is an example of an annotation that has a parameter </s>
<s> the parameter tells what class of warnings are to be suppressed </s>
<s> for example when a class or method is annotated with @suppresswarnings( deprecation ) then no warnings about the use of deprecated items will be emitted when the class or method is compiled </s>
<s> there are other types of warning that can be suppressed unfortunately the list of warnings and their names is not standardized and will vary from one compiler to another note by the way that the syntax for annotation parameters—especially for an annotation that accepts multiple parameters—is not the same as the syntax for method parameters </s>
<s> i won’t cover the annotation syntax here programmers can deﬁne new annotations for use in their code </s>
<s> such annotations are ignored by standard compilers and programming tools but it’s possible to write programs that can understand the annotations and check for their presence in source code </s>
<s> it is even possible to create annotations that will be retained at run-time and become part of the running program in that case a program can check for annotations in the actual compiled code that is being executed and take actions that depend on the presence of the annotation or the values of its parameters annotations can help programmers to write correct programs </s>
<s> to use an example from the java documentation they can help with the creation of boilerplate” code—that is code that has a very standardized format and that can be generated mechanically </s>
<s> often boilerplate code is generated based on other code </s>
<s> doing that by hand is a tedious and error-prone process a simple example might be code to save certain aspects of a program’s state to a ﬁle and to restore it later </s>
<s> the code for reading and writing the values of all the relevant state variables is highly repetitious </s>
<s> instead of writing that code by hand a programmer could use an annotation to mark the variables that are part of the state that is to be saved </s>
<s> a program could then be used to check for the annotations and generate the save-and-restore code </s>
<s> in fact it would even 408 chapter 8 </s>
<s> correctness robustness efficiency be possible to do without that code altogether if the program checks for the presence of the annotation at run time to decide which variables to save and restore 85 analysis of algorithms this chapter has concentrated mostly on correctness of programs in practice another issue is also important eﬃciency </s>
<s> when analyzing a program in terms of eﬃciency we want to look at questions such as how long does it take for the program to run” and is there another approach that will get the answer more quickly” eﬃciency will always be less important than correctness if you don’t care whether a program works correctly you can make it run very quickly indeed but no one will think it’s much of an achievement! on the other hand a program that gives a correct answer after ten thousand years isn’t very useful either so eﬃciency is often an important issue the term eﬃciency” can refer to eﬃcient use of almost any resource including time computer memory disk space or network bandwidth </s>
<s> in this section however we will deal exclusively with time eﬃciency and the major question that we want to ask about a program is how long does it take to perform its task it really makes little sense to classify an individual program as being eﬃcient” or ineﬃcient” it makes more sense to compare two ( correct ) programs that perform the same task and ask which one of the two is more eﬃcient” that is which one performs the task more quickly however even here there are diﬃculties </s>
<s> the running time of a program is not well-deﬁned the run time can be diﬀerent depending on the number and speed of the processors in the computer on which it is run and in the case of java on the design of the java virtual machine which is used to interpret the program </s>
<s> it can depend on details of the compiler which is used to translate the program from high-level language to machine language </s>
<s> furthermore the run time of a program depends on the size of the problem which the program has to solve </s>
<s> it takes a sorting program longer to sort 10000 items than it takes it to sort 100 items </s>
<s> when the run times of two programs are compared it often happens that program a solves small problems faster than program b while program b solves large problems faster than program a so that it is simply not the case that one program is faster than the other in all cases in spite of these diﬃculties there is a ﬁeld of computer science dedicated to analyzing the eﬃciency of programs </s>
<s> the ﬁeld is known as analysis of algorithms </s>
<s> the focus is on algorithms rather than on programs as such to avoid having to deal with multiple implementations of the same algorithm written in diﬀerent languages compiled with diﬀerent compilers and running on diﬀerent computers </s>
<s> analysis of algorithms is a mathematical ﬁeld that abstracts away from these down-and-dirty details </s>
<s> still even though it is a theoretical ﬁeld every working programmer should be aware of some of its techniques and results </s>
<s> this section is a very brief introduction to some of those techniques and results </s>
<s> because this is not a mathematics book the treatment will be rather informal one of the main techniques of analysis of algorithms is asymptotic analysis </s>
<s> the term asymptotic” here means basically the tendency in the long run” an asymptotic analysis of an algorithm’s run time looks at the question of how the run time depends on the size of the problem </s>
<s> the analysis is asymptotic because it only considers what happens to the run time as the size of the problem increases without limit it is not concerned with what happens for problems of small size or in fact for problems of any ﬁxed ﬁnite size </s>
<s> only what happens in the long run as the problem size increases without limit is important </s>
<s> showing that algorithm a is asymptotically faster than algorithm b doesn’t necessarily mean that algorithm a will run 409 85 </s>
<s> analysis of algorithms faster than algorithm b for problems of size 10 or size 1000 or even size 1000000—it only means that if you keep increasing the problem size you will eventually come to a point where algorithm a is faster than algorithm b </s>
<s> an asymptotic analysis is only a ﬁrst approximation but in practice it often gives important and useful information ∗ ∗ ∗ central to asymptotic analysis is big-oh notation </s>
<s> using this notation we might say for example that an algorithm has a running time that is o( n2 ) or o( n ) or o( log( n ) ) </s>
<s> these notations are read big-oh of n squared” big-oh of n” and big-oh of log n” ( where log is a logarithm function ) </s>
<s> more generally we can refer to o( f( n ) ) ( big-oh of f of n” ) where f( n ) is some function that assigns a positive real number to every positive integer n </s>
<s> the n” in this notation refers to the size of the problem </s>
<s> before you can even begin an asymptotic analysis you need some way to measure problem size </s>
<s> usually this is not a big issue </s>
<s> for example if the problem is to sort a list of items then the problem size can be taken to be the number of items in the list </s>
<s> when the input to an algorithm is an integer as in the case of an algorithm that checks whether a given positive integer is prime the usual measure of the size of a problem is the number of bits in the input integer rather than the integer itself </s>
<s> more generally the number of bits in the input to a problem is often a good measure of the size of the problem to say that the running time of an algorithm is o( f( n ) ) means that for large values of the problem size n the running time of the algorithm is no bigger than some constant times f( n ) ( more rigorously there is a number c and a positive integer m such that whenever n is greater than m the run time is less than or equal to c*f( n ) ) the constant takes into account details such as the speed of the computer on which the algorithm is run if you use a slower computer you might have to use a bigger constant in the formula but changing the constant won’t change the basic fact that the run time is o( f( n ) ) </s>
<s> the constant also makes it unnecessary to say whether we are measuring time in seconds years cpu cycles or any other unit of measure a change from one unit of measure to another is just multiplication by a constant </s>
<s> note also that o( f( n ) ) doesn’t depend at all on what happens for small problem sizes only on what happens in the long run as the problem size increases without limit to look at a simple example consider the problem of adding up all the numbers in an array the problem size n is the length of the array </s>
<s> using a as the name of the array the algorithm can be expressed in java as total = 0 for ( int i = 0 i < n i++ ) total = total + a[i] this algorithm performs the same operation total = total + a[i] n times </s>
<s> the total time spent on this operation is a*n where a is the time it takes to perform the operation once now this is not the only thing that is done in the algorithm </s>
<s> the value of i is incremented and is compared to n each time through the loop </s>
<s> this adds an additional time of b*n to the run time for some constant b </s>
<s> furthermore i and total both have to be initialized to zero this adds some constant amount c to the running time </s>
<s> the exact running time would then be ( a+b )*n+c where the constants a b and c depend on factors such as how the code is compiled and what computer it is run on </s>
<s> using the fact that c is less than or equal to c*n for any positive integer n we can say that the run time is less than or equal to ( a+b+c )*n </s>
<s> that is the run time is less than or equal to a constant times n </s>
<s> by deﬁnition this means that the run time for this algorithm is o( n ) if this explanation is too mathematical for you we can just note that for large values of n the c in the formula ( a+b )*n+c is insigniﬁcant compared to the other term ( a+b )*n </s>
<s> we 410 chapter 8 </s>
<s> correctness robustness efficiency say that c is a lower order term” when doing asymptotic analysis lower order terms can be discarded </s>
<s> a rough but correct asymptotic analysis of the algorithm would go something like this each iteration of the for loop takes a certain constant amount of time </s>
<s> there are n iterations of the loop so the total run time is a constant times n plus lower order terms ( to account for the initialization ) </s>
<s> disregarding lower order terms we see that the run time is o( n ) ∗ ∗ ∗ note that to say that an algorithm has run time o( f( n ) ) is to say that its run time is no bigger than some constant times f( n ) ( for large values of n ) </s>
<s> o( f( n ) ) puts an upper limit on the run time </s>
<s> however the run time could be smaller even much smaller </s>
<s> for example if the run time is o( n ) it would also be correct to say that the run time is o( n2 ) or even o( n10 ) </s>
<s> if the run time is less than a constant times n then it is certainly less than the same constant times n2 or n10 of course sometimes it’s useful to have a lower limit on the run time </s>
<s> that is we want to be able to say that the run time is greater than or equal to some constant times f( n ) ( for large values of n ) </s>
<s> the notation for this is Ω( f( n ) ) read omega of f of n” omega” is the name of a letter in the greek alphabet and Ω is the upper case version of that letter ( to be technical saying that the run time of an algorithm is Ω( f( n ) ) means that there is a positive number c and a positive integer m such that whenever n is greater than m the run time is greater than or equal to c*f( n ) ) o( f( n ) ) tells you something about the maximum amount of time that you might have to wait for an algorithm to ﬁnish Ω( f( n ) ) tells you something about the minimum time the algorithm for adding up the numbers in an array has a run time that is Ω( n ) as well as o( n ) </s>
<s> when an algorithm has a run time that is both Ω( f( n ) ) and o( f( n ) ) its run time is said to be Θ( f( n ) ) read theta of f of n” ( theta is another letter from the greek alphabet ) to say that the run time of an algorithm is Θ( f( n ) ) means that for large values of n the run time is between a*f( n ) and b*f( n ) where a and b are constants ( with b greater than a and both greater than 0 ) et’s look at another example </s>
<s> consider the algorithm that can be expressed in java in the following method /** * sorts the n array elements a[0] a[1] a[n-1] into increasing order */ public static simplebubblesort( int[] a int n ) { for ( int i = 0 i < n i++ ) { // do n passes through the array for ( int j = 0 j < n-1 j++ ) { if ( a[j] > a[j+1] ) { // a[j] and a[j+1] are out of order so swap them int temp = a[j] a[j] = a[j+1] a[j+1] = temp } } } } here the parameter n represents the problem size </s>
<s> the outer for loop in the method is executed n times </s>
<s> each time the outer for loop is executed the inner for loop is executed n-1 times so 411 85 </s>
<s> analysis of algorithms the if statement is executed n*( n-1 ) times </s>
<s> this is n2 -n but since lower order terms are not signiﬁcant in an asymptotic analysis it’s good enough to say that the if statement is executed about n2 times </s>
<s> in particular the test a[j] > a[j+1] is executed about n2 times and this fact by itself is enough to say that the run time of the algorithm is Ω( n2 ) that is the run time is at least some constant times n2 </s>
<s> furthermore if we look at other operations—the assignment statements incrementing i and j etc—none of them are executed more than n2 times so the run time is also o( n2 ) that is the run time is no more than some constant times n2 </s>
<s> since it is both Ω( n2 ) and o( n2 ) the run time of the simplebubblesort algorithm is Θ( n2 ) you should be aware that some people use the notation o( f( n ) ) as if it meant Θ( f( n ) ) </s>
<s> that is when they say that the run time of an algorithm is o( f( n ) ) they mean to say that the run time is about equal to a constant times f( n ) </s>
<s> for that they should use Θ( f( n ) ) </s>
<s> properly speaking o( f( n ) ) means that the run time is less than a constant times f( n ) possibly much less ∗ ∗ ∗ so far my analysis has ignored an important detail </s>
<s> we have looked at how run time depends on the problem size but in fact the run time usually depends not just on the size of the problem but on the speciﬁc data that has to be processed </s>
<s> for example the run time of a sorting algorithm can depend on the initial order of the items that are to be sorted and not just on the number of items to account for this dependency we can consider either the worst case run time analysis or the average case run time analysis of an algorithm </s>
<s> for a worst case run time analysis we consider all possible problems of size n and look at the longest possible run time for all such problems </s>
<s> for an average case analysis we consider all possible problems of size n and look at the average of the run times for all such problems </s>
<s> usually the average case analysis assumes that all problems of size n are equally likely to be encountered although this is not always realistic—or even possible in the case where there is an inﬁnite number of diﬀerent problems of a given size in many cases the average and the worst case run times are the same to within a constant multiple </s>
<s> this means that as far as asymptotic analysis is concerned they are the same </s>
<s> that is if the average case run time is o( f( n ) ) or Θ( f( n ) ) then so is the worst case </s>
<s> however later in the book we will encounter a few cases where the average and worst case asymptotic analyses diﬀer ∗ ∗ ∗ so what do you really have to know about analysis of algorithms to read the rest of this book we will not do any rigorous mathematical analysis but you should be able to follow informal discussion of simple cases such as the examples that we have looked at in this section most important though you should have a feeling for exactly what it means to say that the running time of an algorithm is o( f( n ) ) or Θ( f( n ) ) for some common functions f( n ) </s>
<s> the main point is that these notations do not tell you anything about the actual numerical value of the running time of the algorithm for any particular case </s>
<s> they do not tell you anything at all about the running time for small values of n </s>
<s> what they do tell you is something about the rate of growth of the running time as the size of the problem increases suppose you compare two algorithms that solve the same problem </s>
<s> the run time of one algorithm is Θ( n2 ) while the run time of the second algorithm is Θ( n3 ) </s>
<s> what does this tell you if you want to know which algorithm will be faster for some particular problem of size say 100 nothing is certain </s>
<s> as far as you can tell just from the asymptotic analysis either algorithm could be faster for that particular case—or in any particular case </s>
<s> but what you can 412 chapter 8 </s>
<s> correctness robustness efficiency say for sure is that if you look at larger and larger problems you will come to a point where the Θ( n2 ) algorithm is faster than the Θ( n3 ) algorithm </s>
<s> furthermore as you continue to increase the problem size the relative advantage of the Θ( n2 ) algorithm will continue to grow </s>
<s> there will be values of n for which the Θ( n2 ) algorithm is a thousand times faster a million times faster a billion times faster and so on </s>
<s> this is because for any positive constants a and b the function a*n3 grows faster than the function b*n2 as n gets larger ( mathematically the limit of the ratio of a*n3 to b*n2 is inﬁnite as n approaches inﬁnity ) this means that for large” problems a Θ( n2 ) algorithm will deﬁnitely be faster than a Θ( n3 ) algorithm </s>
<s> you just don’t know—based on the asymptotic analysis alone—exactly how large large” has to be </s>
<s> in practice in fact it is likely that the Θ( n2 ) algorithm will be faster even for fairly small values of n and absent other information you would generally prefer a Θ( n2 ) algorithm to a Θ( n3 ) algorithm so to understand and apply asymptotic analysis it is essential to have some idea of the rates of growth of some common functions </s>
<s> for the power functions n n2 n3 n4 the larger the exponent the greater the rate of growth of the function </s>
<s> exponential functions such as 2n and 10n where the n is in the exponent have a growth rate that is faster than that of any power function </s>
<s> in fact exponential functions grow so quickly that an algorithm whose run time grows exponentially is almost certainly impractical even for relatively modest values of n because the running time is just too long </s>
<s> another function that often turns up in asymptotic analysis is the logarithm function log( n ) </s>
<s> there are actually many diﬀerent logarithm functions but the one that is usually used in computer science is the so-called logarithm to the base two which is deﬁned by the fact that log( 2x ) = x for any number x ( usually this function is written log2 ( n ) but i will leave out the subscript 2 since i will only use the base-two logarithm in this book ) the logarithm function grows very slowly </s>
<s> the growth rate of log( n ) is much smaller than the growth rate of n </s>
<s> the growth rate of n*log( n ) is a little larger than the growth rate of n but much smaller than the growth rate of n2 </s>
<s> the following table should help you understand the diﬀerences among the rates of grows of various functions n 16 64 256 1024 1000000 1000000000 log( n ) n*log( n ) 4 6 8 10 20 30 64 384 2048 10240 19931568 29897352854 n2 256 4096 65536 1048576 1000000000000 1000000000000000000 n / log( n ) 40 107 320 1024 501731 334477773 the reason that log( n ) shows up so often is because of its association with multiplying and dividing by two suppose you start with the number n and divide it by 2 then divide by 2 again and so on until you get a number that is less than or equal to 1 </s>
<s> then the number of divisions is equal ( to the nearest integer ) to log( n ) as an example consider the binary search algorithm from subsection 741 </s>
<s> this algorithm searches for an item in a sorted array </s>
<s> the problem size n can be taken to be the length of the array </s>
<s> each step in the binary search algorithm divides the number of items still under consideration by 2 and the algorithm stops when the number of items under consideration is less than or equal to 1 ( or sooner ) </s>
<s> it follows that the number of steps for an array of length n is at most log( n ) </s>
<s> this means that the worst-case run time for binary search is Θ( log( n ) ) ( the average case run time is also Θ( log( n ) ) ) by comparison the linear search algorithm which was also presented in subsection 741 has a run time that is Θ( n ) </s>
<s> the Θ notation gives us 85 </s>
<s> analysis of algorithms 413 a quantitative way to express and to understand the fact that binary search is much faster” than linear search in binary search each step of the algorithm divides the problem size by 2 </s>
<s> it often happens that some operation in an algorithm ( not necessarily a single step ) divides the problem size by 2 </s>
<s> whenever that happens the logarithm function is likely to show up in an asymptotic analysis of the run time of the algorithm analysis of algorithms is a large fascinating ﬁeld </s>
<s> we will only use a few of the most basic ideas from this ﬁeld but even those can be very helpful for understanding the diﬀerences among algorithms 414 chapter 8 </s>
<s> correctness robustness efficiency exercises for chapter 8 1 </s>
<s> write a program that uses the following subroutine from subsection 833 to solve equations speciﬁed by the user /** * returns the larger of the two roots of the quadratic equation * a*x*x + b*x + c = 0 provided it has any roots </s>
<s> if a == 0 or * if the discriminant b*b - 4*a*c is negative then an exception * of type illegalargumentexception is thrown */ static public double root( double a double b double c ) throws illegalargumentexception { if ( a == 0 ) { throw new illegalargumentexception( a can’t be zero ) } else { double disc = b*b - 4*a*c if ( disc < 0 ) throw new illegalargumentexception( discriminant < zero ) return ( -b + mathsqrt( disc ) ) / ( 2*a ) } } your program should allow the user to specify values for a b and c </s>
<s> it should call the subroutine to compute a solution of the equation </s>
<s> if no error occurs it should print the root </s>
<s> however if an error occurs your program should catch that error and print an error message </s>
<s> after processing one equation the program should ask whether the user wants to enter another equation </s>
<s> the program should continue until the user answers no 2 </s>
<s> as discussed in section 81 values of type int are limited to 32 bits </s>
<s> integers that are too large to be represented in 32 bits cannot be stored in an int variable </s>
<s> java has a standard class javamathbiginteger that addresses this problem </s>
<s> an object of type biginteger is an integer that can be arbitrarily large ( the maximum size is limited only by the amount of memory available to the java virtual machine ) since bigintegers are objects they must be manipulated using instance methods from the biginteger class </s>
<s> for example you can’t add two bigintegers with the + operator </s>
<s> instead if n and m are variables that refer to bigintegers you can compute the sum of n and m with the function call nadd( m ) the value returned by this function is a new biginteger object that is equal to the sum of n and m the biginteger class has a constructor new biginteger( str ) where str is a string the string must represent an integer such as 3” or 39849823783783283733” </s>
<s> if the string does not represent a legal integer then the constructor throws a numberformatexception there are many instance methods in the biginteger class </s>
<s> here are a few that you will ﬁnd useful for this exercise </s>
<s> assume that n and m are variables of type biginteger • nadd( m ) — a function that returns a biginteger representing the sum of n and m • nmultiply( m ) — a function that returns a biginteger representing the result of multiplying n times m 415 exercises • ndivide( m ) — a function that returns a biginteger representing the result of dividing n by m discarding the remainder • nsignum( ) — a function that returns an ordinary int </s>
<s> the returned value represents the sign of the integer n </s>
<s> the returned value is 1 if n is greater than zero </s>
<s> it is -1 if n is less than zero </s>
<s> and it is 0 if n is zero • nequals( m ) — a function that returns a boolean value that is true if n and m have the same integer value • ntostring( ) — a function that returns a string representing the value of n • ntestbit( k ) — a function that returns a boolean value </s>
<s> the parameter k is an integer </s>
<s> the return value is true if the k-th bit in n is 1 and it is false if the k-th bit is 0 bits are numbered from right to left starting with 0 </s>
<s> testing if ( ntestbit( 0 ) )” is an easy way to check whether n is even or odd </s>
<s> ntestbit( 0 ) is true if and only if n is an odd number for this exercise you should write a program that prints 3n+1 sequences with starting values speciﬁed by the user </s>
<s> in this version of the program you should use bigintegers to represent the terms in the sequence </s>
<s> you can read the user’s input into a string with the textiogetln( ) function </s>
<s> use the input value to create the biginteger object that represents the starting point of the 3n+1 sequence </s>
<s> don’t forget to catch and handle the numberformatexception that will occur if the user’s input is not a legal integer! you should also check that the input number is greater than zero if the user’s input is legal print out the 3n+1 sequence </s>
<s> count the number of terms in the sequence and print the count at the end of the sequence </s>
<s> exit the program when the user inputs an empty line 3 </s>
<s> a roman numeral represents an integer using letters </s>
<s> examples are xvii to represent 17 mcmliii for 1953 and mmmccciii for 3303 </s>
<s> by contrast ordinary numbers such as 17 or 1953 are called arabic numerals </s>
<s> the following table shows the arabic equivalent of all the single-letter roman numerals m d c 1000 500 100 50 x v i 10 5 1 when letters are strung together the values of the letters are just added up with the following exception </s>
<s> when a letter of smaller value is followed by a letter of larger value the smaller value is subtracted from the larger value </s>
<s> for example iv represents 5 - 1 or 4 </s>
<s> and mcmxcv is interpreted as m + cm + xc + v or 1000 + ( 1000 - 100 ) + ( 100 10 ) + 5 which is 1995 </s>
<s> in standard roman numerals no more than three consecutive copies of the same letter are used </s>
<s> following these rules every number between 1 and 3999 can be represented as a roman numeral made up of the following one- and two-letter combinations m cm d cd c xc 1000 900 500 400 100 90 x ix v iv i 10 9 5 4 1 416 chapter 8 </s>
<s> correctness robustness efficiency xl 50 40 write a class to represent roman numerals </s>
<s> the class should have two constructors one constructs a roman numeral from a string such as xvii” or mcmxcv” </s>
<s> it should throw a numberformatexception if the string is not a legal roman numeral </s>
<s> the other constructor constructs a roman numeral from an int </s>
<s> it should throw a numberformatexception if the int is outside the range 1 to 3999 in addition the class should have two instance methods </s>
<s> the method tostring( ) returns the string that represents the roman numeral </s>
<s> the method toint( ) returns the value of the roman numeral as an int at some point in your class you will have to convert an int into the string that represents the corresponding roman numeral </s>
<s> one way to approach this is to gradually move” value from the arabic numeral to the roman numeral </s>
<s> here is the beginning of a routine that will do this where number is the int that is to be converted string roman = int n = number while ( n >= 1000 ) { // move 1000 from n to roman roman += m n -= 1000 } while ( n >= 900 ) { // move 900 from n to roman roman += cm n -= 900 } // continue with other values from the above table ( you can save yourself a lot of typing in this routine if you use arrays in a clever way to represent the data in the above table ) once you’ve written your class use it in a main program that will read both arabic numerals and roman numerals entered by the user </s>
<s> if the user enters an arabic numeral print the corresponding roman numeral </s>
<s> if the user enters a roman numeral print the corresponding arabic numeral ( you can tell the diﬀerence by using textiopeek( ) to peek at the ﬁrst character in the user’s input ( see subsection 822 ) </s>
<s> if the ﬁrst character is a digit then the user’s input is an arabic numeral </s>
<s> otherwise it’s a roman numeral ) the program should end when the user inputs an empty line 4 </s>
<s> the source code ﬁle exprjava deﬁnes a class expr that can be used to represent mathematical expressions involving the variable x </s>
<s> the expression can use the operators + - * / and ^ ( where ^ represents the operation of raising a number to a power ) </s>
<s> it can use mathematical functions such as sin cos abs and ln </s>
<s> see the source code ﬁle for full details </s>
<s> the expr class uses some advanced techniques which have not yet been covered in this textbook </s>
<s> however the interface is easy to understand </s>
<s> it contains only a constructor and two public methods the constructor new expr( def ) creates an expr object deﬁned by a given expression </s>
<s> the parameter def is a string that contains the deﬁnition </s>
<s> for example 417 exercises new expr( x^2 ) or new expr( sin( x )+3*x ) </s>
<s> if the parameter in the constructor call does not represent a legal expression then the constructor throws an illegalargumentexception </s>
<s> the message in the exception describes the error if func is a variable of type expr and num is of type double then funcvalue( num ) is a function that returns the value of the expression when the number num is substituted for the variable x in the expression </s>
<s> for example if expr represents the expression 3*x+1 then funcvalue( 5 ) is 3*5+1 or 16 </s>
<s> if the expression is undeﬁned for the speciﬁed value of x then the special value doublenan is returned no exception is thrown finally functostring( ) returns the deﬁnition of the expression </s>
<s> this is just the string that was used in the constructor that created the expression object for this exercise you should write a program that lets the user enter an expression </s>
<s> if the expression contains an error print an error message </s>
<s> otherwise let the user enter some numerical values for the variable x </s>
<s> print the value of the expression for each number that the user enters </s>
<s> however if the expression is undeﬁned for the speciﬁed value of x print a message to that eﬀect </s>
<s> you can use the boolean-valued function doubleisnan( val ) to check whether a number val is doublenan the user should be able to enter as many values of x as desired </s>
<s> after that the user should be able to enter a new expression </s>
<s> in the on-line version of this exercise there is an applet that simulates my solution so that you can see how it works 5 </s>
<s> this exercise uses the class expr which was described in exercise 84 and which is deﬁned in the source code ﬁle exprjava </s>
<s> for this exercise you should write a gui program that can graph a function f( x ) whose deﬁnition is entered by the user </s>
<s> the program should have a text-input box where the user can enter an expression involving the variable x such as x^2 or sin( x-3 )/x </s>
<s> this expression is the deﬁnition of the function </s>
<s> when the user presses return in the text input box the program should use the contents of the text input box to construct an object of type expr </s>
<s> if an error is found in the deﬁnition then the program should display an error message </s>
<s> otherwise it should display a graph of the function ( note a jtextfield generates an actionevent when the user presses return ) the program will need a jpanel for displaying the graph </s>
<s> to keep things simple this panel should represent a ﬁxed region in the xy-plane deﬁned by -5 <= x <= 5 and -5 <= y <= 5 </s>
<s> to draw the graph compute a large number of points and connect them with line segments ( this method does not handle discontinuous functions properly doing so is very hard so you shouldn’t try to do it for this exercise ) my program divides the interval -5 <= x <= 5 into 300 subintervals and uses the 301 endpoints of these subintervals for drawing the graph </s>
<s> note that the function might be undeﬁned at one of these x-values </s>
<s> in that case you have to skip that point a point on the graph has the form ( xy ) where y is obtained by evaluating the user’s expression at the given value of x </s>
<s> you will have to convert these real numbers to the integer coordinates of the corresponding pixel on the canvas </s>
<s> the formulas for the conversion are a b = = ( int )( ( x + 5 )/10 * width ) ( int )( ( 5 - y )/10 * height ) where a and b are the horizontal and vertical coordinates of the pixel and width and height are the width and height of the panel you can ﬁnd an applet version of my solution in the on-line version of this exercise 418 chapter 8 </s>
<s> correctness robustness efficiency quiz on chapter 8 1 </s>
<s> what does it mean to say that a program is robust 2 </s>
<s> why do programming languages require that variables be declared before they are used what does this have to do with correctness and robustness 3 </s>
<s> what is a precondition give an example 4 </s>
<s> explain how preconditions can be used as an aid in writing correct programs 5 </s>
<s> java has a predeﬁned class called throwable </s>
<s> what does this class represent why does it exist 6 </s>
<s> write a method that prints out a 3n+1 sequence starting from a given integer n </s>
<s> the starting value should be a parameter to the method </s>
<s> if the parameter is less than or equal to zero throw an illegalargumentexception </s>
<s> if the number in the sequence becomes too large to be represented as a value of type int throw an arithmeticexception 7 </s>
<s> rewrite the method from the previous question using assert statements instead of exceptions to check for errors </s>
<s> what is the diﬀerence between the two versions of the method when the program is run 8 </s>
<s> some classes of exceptions are checked exceptions that require mandatory exception handling </s>
<s> explain what this means 9 </s>
<s> consider a subroutine processdata( ) that has the header static void processdata( ) throws ioexception write a trycatch statement that calls this subroutine and prints an error message if an ioexception occurs 10 </s>
<s> why should a subroutine throw an exception when it encounters an error why not just terminate the program 11 </s>
<s> suppose that you have a choice of two algorithms that perform the same task </s>
<s> one has average-case run time that is Θ( n2 ) while the run time of the second algorithm has an average-case run time that is Θ( n*log( n ) ) </s>
<s> suppose that you need to process an input of size n = 100 </s>
<s> which algorithm would you choose can you be certain that you are choosing the fastest algorithm for the input that you intend to process 12 </s>
<s> analyze the run time of the following algorithm </s>
<s> that is ﬁnd a function f( n ) such that the run time of the algorithm is o( f( n ) ) or better Θ( f( n ) ) </s>
<s> assume that a is an array of integers and use the length of the array as the input size n int total = 0 for ( int i = 0 i < alength i++ ) { if ( a[i] > 0 ) total = total + a[i] } chapter 9 inked data structures and recursion in this chapter we look at two advanced programming techniques recursion and linked data structures and some of their applications </s>
<s> both of these techniques are related to the seemingly paradoxical idea of deﬁning something in terms of itself </s>
<s> this turns out to be a remarkably powerful idea a subroutine is said to be recursive if it calls itself either directly or indirectly </s>
<s> what this means is that the subroutine is used in its own deﬁnition </s>
<s> recursion can often be used to solve complex problems by reducing them to simpler problems of the same type a reference to one object can be stored in an instance variable of another object </s>
<s> the objects are then said to be linked” complex data structures can be built by linking objects together </s>
<s> an especially interesting case occurs when an object contains a link to another object that belongs to the same class </s>
<s> in that case the class is used in its own deﬁnition </s>
<s> several important types of data structures are built using classes of this kind 91 recursion at one time or another you’ve probably been told that you can’t deﬁne something in terms of itself </s>
<s> nevertheless if it’s done right deﬁning something at least partially in terms of itself can be a very powerful technique </s>
<s> a recursive deﬁnition is one that uses the concept or thing that is being deﬁned as part of the deﬁnition </s>
<s> for example an ancestor” is either a parent or an ancestor of a parent </s>
<s> a sentence” can be among other things two sentences joined by a conjunction such as and” a directory” is a part of a disk drive that can hold ﬁles and directories </s>
<s> in mathematics a set” is a collection of elements which can themselves be sets </s>
<s> a statement” in java can be a while statement which is made up of the word while” a boolean-valued condition and a statement recursive deﬁnitions can describe very complex situations with just a few words </s>
<s> a definition of the term ancestor” without using recursion might go something like a parent or a grandparent or a great-grandparent or a great-great-grandparent and so on” but saying and so on” is not very rigorous ( i’ve often thought that recursion is really just a rigorous way of saying and so on” ) you run into the same problem if you try to deﬁne a directory” as a ﬁle that is a list of ﬁles where some of the ﬁles can be lists of ﬁles where some of those ﬁles can be lists of ﬁles and so on” trying to describe what a java statement can look like without using recursion in the deﬁnition would be diﬃcult and probably pretty comical 419 420 chapter 9 </s>
<s> linked data structures and recursion recursion can be used as a programming technique </s>
<s> a recursive subroutine is one that calls itself either directly or indirectly </s>
<s> to say that a subroutine calls itself directly means that its deﬁnition contains a subroutine call statement that calls the subroutine that is being deﬁned </s>
<s> to say that a subroutine calls itself indirectly means that it calls a second subroutine which in turn calls the ﬁrst subroutine ( either directly or indirectly ) </s>
<s> a recursive subroutine can deﬁne a complex task in just a few lines of code </s>
<s> in the rest of this section we’ll look at a variety of examples and we’ll see other examples in the rest of the book 911 recursive binary search et’s start with an example that you’ve seen before the binary search algorithm from subsection 741 </s>
<s> binary search is used to ﬁnd a speciﬁed value in a sorted list of items ( or if it does not occur in the list to determine that fact ) </s>
<s> the idea is to test the element in the middle of the list </s>
<s> if that element is equal to the speciﬁed value you are done </s>
<s> if the speciﬁed value is less than the middle element of the list then you should search for the value in the ﬁrst half of the list </s>
<s> otherwise you should search for the value in the second half of the list </s>
<s> the method used to search for the value in the ﬁrst or second half of the list is binary search </s>
<s> that is you look at the middle element in the half of the list that is still under consideration and either you’ve found the value you are looking for or you have to apply binary search to one half of the remaining elements </s>
<s> and so on! this is a recursive description and we can write a recursive subroutine to implement it before we can do that though there are two considerations that we need to take into account </s>
<s> each of these illustrates an important general fact about recursive subroutines </s>
<s> first of all the binary search algorithm begins by looking at the middle element of the list” but what if the list is empty if there are no elements in the list then it is impossible to look at the middle element </s>
<s> in the terminology of subsection 821 having a non-empty list is a precondition” for looking at the middle element and this is a clue that we have to modify the algorithm to take this precondition into account </s>
<s> what should we do if we ﬁnd ourselves searching for a speciﬁed value in an empty list the answer is easy if the list is empty we can be sure that the value does not occur in the list so we can give the answer without any further work </s>
<s> an empty list is a base case for the binary search algorithm </s>
<s> a base case for a recursive algorithm is a case that is handled directly rather than by applying the algorithm recursively the binary search algorithm actually has another type of base case if we ﬁnd the element we are looking for in the middle of the list we are done </s>
<s> there is no need for further recursion the second consideration has to do with the parameters to the subroutine </s>
<s> the problem is phrased in terms of searching for a value in a list </s>
<s> in the original non-recursive binary search subroutine the list was given as an array </s>
<s> however in the recursive approach we have to be able to apply the subroutine recursively to just a part of the original list </s>
<s> where the original subroutine was designed to search an entire array the recursive subroutine must be able to search part of an array </s>
<s> the parameters to the subroutine must tell it what part of the array to search </s>
<s> this illustrates a general fact that in order to solve a problem recursively it is often necessary to generalize the problem slightly here is a recursive binary search algorithm that searches for a given value in part of an array of integers /** * search in the array a in positions numbered loindex to hiindex * inclusive for the specified value if the value is found return * the index in the array where it occurs </s>
<s> if the value is not found 91 </s>
<s> recursion 421 * return -1 </s>
<s> precondition the array must be sorted into increasing * order */ static int binarysearch( int[] a int loindex int hiindex int value ) { if ( loindex > hiindex ) { // the starting position comes after the final index // so there are actually no elements in the specified // range </s>
<s> the value does not occur in this empty list! return -1 } else { // look at the middle position in the list </s>
<s> if the // value occurs at that position return that position // otherwise search recursively in either the first // half or the second half of the list int middle = ( loindex + hiindex ) / 2 if ( value == a[middle] ) return middle else if ( value < a[middle] ) return binarysearch( a loindex middle - 1 value ) else // value must be > a[middle] return binarysearch( a middle + 1 hiindex value ) } } // end binarysearch( ) in this routine the parameters loindex and hiindex specify the part of the array that is to be searched </s>
<s> to search an entire array it is only necessary to call binarysearch( a 0 alength - 1 value ) </s>
<s> in the two base cases—when there are no elements in the speciﬁed range of indices and when the value is found in the middle of the range—the subroutine can return an answer immediately without using recursion </s>
<s> in the other cases it uses a recursive call to compute the answer and returns that answer most people ﬁnd it diﬃcult at ﬁrst to convince themselves that recursion actually works the key is to note two things that must be true for recursion to work properly there must be one or more base cases which can be handled without using recursion </s>
<s> and when recursion is applied during the solution of a problem it must be applied to a problem that is in some sense smaller—that is closer to the base cases—than the original problem </s>
<s> the idea is that if you can solve small problems and if you can reduce big problems to smaller problems then you can solve problems of any size </s>
<s> ultimately of course the big problems have to be reduced possibly in many many steps to the very smallest problems ( the base cases ) </s>
<s> doing so might involve an immense amount of detailed bookkeeping </s>
<s> but the computer does that bookkeeping not you! as a programmer you lay out the big picture the base cases and the reduction of big problems to smaller problems </s>
<s> the computer takes care of the details involved in reducing a big problem in many steps all the way down to base cases </s>
<s> trying to think through this reduction in detail is likely to drive you crazy and will probably make you think that recursion is hard </s>
<s> whereas in fact recursion is an elegant and powerful method that is often the simplest approach to solving a complex problem a common error in writing recursive subroutines is to violate one of the two rules there must be one or more base cases and when the subroutine is applied recursively it must be applied to a problem that is smaller than the original problem </s>
<s> if these rules are violated the 422 chapter 9 </s>
<s> linked data structures and recursion result can be an inﬁnite recursion where the subroutine keeps calling itself over and over without ever reaching a base case </s>
<s> inﬁnite recursion is similar to an inﬁnite loop </s>
<s> however since each recursive call to the subroutine uses up some of the computer’s memory a program that is stuck in an inﬁnite recursion will run out of memory and crash before long </s>
<s> in java the program will crash with an exception of type stackoverflowerror 912 towers of hanoi we have been studying an algorithm binary search that can easily be implemented with a while loop instead of with recursion </s>
<s> next we turn to a problem that is easy to solve with recursion but diﬃcult to solve without it </s>
<s> this is a standard example known as the towers of hanoi” the problem involves a stack of various-sized disks piled up on a base in order of decreasing size </s>
<s> the object is to move the stack from one base to another subject to two rules only one disk can be moved at a time and no disk can ever be placed on top of a smaller disk there is a third base that can be used as a spare” the starting situation for a stack of ten disks is shown in the top half of the following picture </s>
<s> the situation after a number of moves have been made is shown in the bottom half of the picture </s>
<s> these pictures are from the applet at the end of section 95 in the on-line version of this book which displays an animation of the step-by-step solution of the problem the problem is to move ten disks from stack 0 to stack 1 subject to certain rules </s>
<s> stack 2 can be used as a spare location </s>
<s> can we reduce this to smaller problems of the same type possibly generalizing the problem a bit to make this possible it seems natural to consider the size of the problem to be the number of disks to be moved </s>
<s> if there are n disks in stack 0 we know that we will eventually have to move the bottom disk from stack 0 to stack 1 </s>
<s> but before we can do that according to the rules the ﬁrst n-1 disks must be on stack 2 </s>
<s> once we’ve moved the n-th disk to stack 1 we must move the other n-1 disks from stack 2 to stack 1 to complete the solution </s>
<s> but moving n-1 disks is the same type of problem as moving n disks except that it’s a smaller version of the problem </s>
<s> this is exactly what we need to do recursion! the problem has to be generalized a bit because the smaller problems involve moving disks from stack 0 to stack 2 or from stack 2 to stack 1 instead of from stack 0 to stack 1 </s>
<s> in the 423 91 </s>
<s> recursion recursive subroutine that solves the problem the stacks that serve as the source and destination of the disks have to be speciﬁed </s>
<s> it’s also convenient to specify the stack that is to be used as a spare even though we could ﬁgure that out from the other two parameters </s>
<s> the base case is when there is only one disk to be moved </s>
<s> the solution in this case is trivial just move the disk in one step </s>
<s> here is a version of the subroutine that will print out step-by-step instructions for solving the problem /** * solve the problem of moving the number of disks specified * by the first parameter from the stack specified by the * second parameter to the stack specified by the third * parameter </s>
<s> the stack specified by the fourth parameter * is available for use as a spare </s>
<s> stacks are specified by * number 0 1 or 2 </s>
<s> precondition the number of disks is * a positive number */ static void towersofhanoi( int disks int from int to int spare ) { if ( disks == 1 ) { // there is only one disk to be moved </s>
<s> just move it systemoutprintln( move a disk from stack number + from + to stack number + to ) } else { // move all but one disk to the spare stack then // move the bottom disk then put all the other // disks on top of it towersofhanoi( disks-1 from spare to ) systemoutprintln( move a disk from stack number + from + to stack number + to ) towersofhanoi( disks-1 spare to from ) } } this subroutine just expresses the natural recursive solution </s>
<s> the recursion works because each recursive call involves a smaller number of disks and the problem is trivial to solve in the base case when there is only one disk </s>
<s> to solve the top level” problem of moving n disks from stack 0 to stack 1 it should be called with the command towersofhanoi( n012 ) </s>
<s> the subroutine is demonstrated by the sample program towersofhanoijava here for example is the output from the program when it is run with the number of disks set equal to 4 move move move move move move move move move move move move a a a a a a a a a a a a disk disk disk disk disk disk disk disk disk disk disk disk from from from from from from from from from from from from stack stack stack stack stack stack stack stack stack stack stack stack number number number number number number number number number number number number 0 0 2 0 1 1 0 0 2 2 1 2 to to to to to to to to to to to to stack stack stack stack stack stack stack stack stack stack stack stack number number number number number number number number number number number number 2 1 1 2 0 2 2 1 1 0 0 1 424 chapter 9 </s>
<s> linked data structures and recursion move a disk from stack number 0 to stack number 2 move a disk from stack number 0 to stack number 1 move a disk from stack number 2 to stack number 1 the output of this program shows you a mass of detail that you don’t really want to think about! the diﬃculty of following the details contrasts sharply with the simplicity and elegance of the recursive solution </s>
<s> of course you really want to leave the details to the computer </s>
<s> it’s much more interesting to watch the applet from section 95 which shows the solution graphically </s>
<s> that applet uses the same recursive subroutine except that the systemoutprintln statements are replaced by commands that show the image of the disk being moved from one stack to another ( you might think about what happens when the precondition that the number of disks is positive is violated </s>
<s> the result is an example of inﬁnite recursion ) there is by the way a story that explains the name of this problem </s>
<s> according to this story on the ﬁrst day of creation a group of monks in an isolated tower near hanoi were given a stack of 64 disks and were assigned the task of moving one disk every day according to the rules of the towers of hanoi problem </s>
<s> on the day that they complete their task of moving all the disks from one stack to another the universe will come to an end </s>
<s> but don’t worry </s>
<s> the number of steps required to solve the problem for n disks is 2n - 1 and 264 - 1 days is over 50000000000000 years </s>
<s> we have a long way to go ( in the terminology of section 85 the towers of hanoi algorithm has a run time that is Θ( 2n ) where n is the number of disks that have to be moved </s>
<s> since the exponential function 2n grows so quickly the towers of hanoi problem can be solved in practice only for a small number of disks ) ∗ ∗ ∗ by the way in addition to the graphical towers of hanoi applet at the end of this chapter there are three other end-of-chapter applets in the on-line version of this text that use recursion one at the end of section 125 is a visual implementation of the quicksort algorithm that is discussed below </s>
<s> one is a maze-solving applet at the end of section 115 </s>
<s> and the other is a pentominos applet at the end of section 105 the maze applet ﬁrst builds a random maze </s>
<s> it then tries to solve the maze by ﬁnding a path through the maze from the upper left corner to the lower right corner </s>
<s> this problem is actually very similar to a blob-counting” problem that is considered later in this section </s>
<s> the recursive maze-solving routine starts from a given square and it visits each neighboring square and calls itself recursively from there </s>
<s> the recursion ends if the routine ﬁnds itself at the lower right corner of the maze the pentominos applet is an implementation of a classic puzzle </s>
<s> a pentomino is a connected ﬁgure made up of ﬁve equal-sized squares </s>
<s> there are exactly twelve ﬁgures that can be made in this way not counting all the possible rotations and reﬂections of the basic ﬁgures </s>
<s> the problem is to place the twelve pentominos on an 8-by-8 board in which four of the squares have already been marked as ﬁlled </s>
<s> the recursive solution looks at a board that has already been partially ﬁlled with pentominos </s>
<s> the subroutine looks at each remaining piece in turn </s>
<s> it tries to place that piece in the next available place on the board </s>
<s> if the piece ﬁts it calls itself recursively to try to ﬁll in the rest of the solution </s>
<s> if that fails then the subroutine goes on to the next piece </s>
<s> a generalized version of the pentominos applet with many more features can be found at http//mathhwsedu/xjava/pentominossolver/ the applets are fun to watch and they give nice visual representations of recursion 425 91 </s>
<s> recursion 913 a recursive sorting algorithm turning next to an application that is perhaps more practical we’ll look at a recursive algorithm for sorting an array </s>
<s> the selection sort and insertion sort algorithms which were covered in section 74 are fairly simple but they are rather slow when applied to large arrays </s>
<s> faster sorting algorithms are available </s>
<s> one of these is quicksort a recursive algorithm which turns out to be the fastest sorting algorithm in most situations the quicksort algorithm is based on a simple but clever idea given a list of items select any item from the list </s>
<s> this item is called the pivot ( in practice i’ll just use the ﬁrst item in the list ) move all the items that are smaller than the pivot to the beginning of the list and move all the items that are larger than the pivot to the end of the list </s>
<s> now put the pivot between the two groups of items </s>
<s> this puts the pivot in the position that it will occupy in the ﬁnal completely sorted array </s>
<s> it will not have to be moved again </s>
<s> we’ll refer to this procedure as quicksortstep to apply quicksortstep to a list of numbers select one of the numbers 23 in this case </s>
<s> arrange the numbers so that numbers less than 23 lie to its left and numbers greater than 23 lie to its right 23 10 7 45 16 86 56 2 31 18 18 10 7 2 16 23 86 56 31 45 to ﬁnish sorting the list sort the numbers to the left of 23 and sort the numbers to the right of 23 </s>
<s> the nuber 23 itself is already in its ﬁnal position and doesn't have to be moved again quicksortstep is not recursive </s>
<s> it is used as a subroutine by quicksort </s>
<s> the speed of quicksort depends on having a fast implementation of quicksortstep </s>
<s> since it’s not the main point of this discussion i present one without much comment /** * apply quicksortstep to the list of items in locations lo through hi * in the array a </s>
<s> the value returned by this routine is the final * position of the pivot item in the array */ static int quicksortstep( int[] a int lo int hi ) { int pivot = a[lo] // // // // // // // // get the pivot value the numbers hi and lo mark the endpoints of a range of numbers that have not yet been tested </s>
<s> decrease hi and increase lo until they become equal moving numbers bigger than pivot so that they lie above hi and moving numbers less than the pivot so that they lie below lo when we begin a[lo] is an available space since its value has been moved into the local variable pivot while ( hi > lo ) { while ( hi > lo && a[hi] >= pivot ) { // move hi down past numbers greater than pivot // these numbers do not have to be moved 426 chapter 9 </s>
<s> linked data structures and recursion hi -- } if ( hi == lo ) break // the number a[hi] is less than pivot </s>
<s> move it into // the available space at a[lo] leaving an available // space at a[hi] a[lo] = a[hi] lo++ while ( hi > lo && a[lo] <= pivot ) { // move lo up past numbers less than pivot // these numbers do not have to be moved lo++ } if ( hi == lo ) break // the number a[lo] is greater than pivot </s>
<s> move it into // the available space at a[hi] leaving an available // space at a[lo] a[hi] = a[lo] hi -- } // end while // // // // at this point lo has become equal to hi and there is an available space at that position </s>
<s> this position lies between numbers less than pivot and numbers greater than pivot </s>
<s> put pivot in this space and return its location a[lo] = pivot return lo } // end quicksortstep with this subroutine in hand quicksort is easy </s>
<s> the quicksort algorithm for sorting a list consists of applying quicksortstep to the list then applying quicksort recursively to the items that lie to the left of the new position of the pivot and to the items that lie to the right of that position </s>
<s> of course we need base cases </s>
<s> if the list has only one item or no items then the list is already as sorted as it can ever be so quicksort doesn’t have to do anything in these cases /** * apply quicksort to put the array elements between * position lo and position hi into increasing order */ static void quicksort( int[] a int lo int hi ) { if ( hi <= lo ) { // the list has length one or zero </s>
<s> nothing needs // to be done so just return from the subroutine return } else { // apply quicksortstep and get the new pivot position 91 </s>
<s> recursion 427 // then apply quicksort to sort the items that // precede the pivot and the items that follow it int pivotposition = quicksortstep( a lo hi ) quicksort( a lo pivotposition - 1 ) quicksort( a pivotposition + 1 hi ) } } as usual we had to generalize the problem </s>
<s> the original problem was to sort an array but the recursive algorithm is set up to sort a speciﬁed part of an array </s>
<s> to sort an entire array a using the quicksort( ) subroutine you would call quicksort( a 0 alength - 1 ) quicksort is an interesting example from the point of view of the analysis of algorithms ( section 85 ) because its average case run time diﬀers greatly from its worst case run time here is a very informal analysis starting with the average case note that an application of quicksortstep divides a problem into two sub-problems </s>
<s> on the average the subproblems will be of approximately the same size </s>
<s> a problem of size n is divided into two problems that are roughly of size n/2 these are then divided into four problems that are roughly of size n/4 and so on </s>
<s> since the problem size is divided by 2 on each level there will be approximately log( n ) levels of subdivision </s>
<s> the amount of processing on each level is proportional to n ( on the top level each element in the array is looked at and possibly moved </s>
<s> on the second level where there are two subproblems every element but one in the array is part of one of those two subproblems and must be looked at and possibly moved so there is a total of about n steps in both subproblems combined </s>
<s> similarly on the third level there are four subproblems and a total of about n steps in the four subproblems on that level ) with a total of n steps on each level and approximately log( n ) levels in the average case the average case run time for quicksort is Θ( n*log( n ) ) </s>
<s> this analysis assumes that quicksortstep divides a problem into two approximately equal parts </s>
<s> however in the worst case each application of quicksortstep divides a problem of size n into a problem of size 0 and a problem of size n-1 </s>
<s> this happens when the pivot element ends up at the beginning or end of the array </s>
<s> in this worst case there are n levels of subproblems and the worst-case run time is Θ( n2 ) </s>
<s> the worst case is very rare—it depends on the items in the array being arranged in a very special way so the average performance of quicksort can be very good even though it is not so good in certain rare cases there are sorting algorithms that have both an average case and a worst case run time of Θ( n*log( n ) ) </s>
<s> one example is mergesort which you can look up if you are interested 914 blob counting the program blobsjava displays a grid of small white and gray squares </s>
<s> the gray squares are considered to be ﬁlled” and the white squares are empty” for the purposes of this example we deﬁne a blob” to consist of a ﬁlled square and all the ﬁlled squares that can be reached from it by moving up down left and right through other ﬁlled squares </s>
<s> if the user clicks on any ﬁlled square in the program the computer will count the squares in the blob that contains the clicked square and it will change the color of those squares to red </s>
<s> the program has several controls </s>
<s> there is a new blobs” button clicking this button will create a new random pattern in the grid </s>
<s> a pop-up menu speciﬁes the approximate percentage of squares that will be ﬁlled in the new pattern </s>
<s> the more ﬁlled squares the larger the blobs </s>
<s> and a button labeled count the blobs” will tell you how many diﬀerent blobs there are in the pattern </s>
<s> you can try an applet version of the program in the on-line version of the book </s>
<s> here is a picture of the program after the user has clicked one of the ﬁlled squares 428 chapter 9 </s>
<s> linked data structures and recursion recursion is used in this program to count the number of squares in a blob </s>
<s> without recursion this would be a very diﬃcult thing to implement </s>
<s> recursion makes it relatively easy but it still requires a new technique which is also useful in a number of other applications the data for the grid of squares is stored in a two dimensional array of boolean values boolean[][] filled the value of filled[r][c] is true if the square in row r and in column c of the grid is ﬁlled </s>
<s> the number of rows in the grid is stored in an instance variable named rows and the number of columns is stored in columns </s>
<s> the program uses a recursive instance method named getblobsize( ) to count the number of squares in the blob that contains the square in a given row r and column c </s>
<s> if there is no ﬁlled square at position ( rc ) then the answer is zero otherwise getblobsize( ) has to count all the ﬁlled squares that can be reached from the square at position ( rc ) </s>
<s> the idea is to use getblobsize( ) recursively to get the number of ﬁlled squares that can be reached from each of the neighboring positions ( r+1c ) ( r-1c ) ( rc+1 ) and ( rc-1 ) </s>
<s> add up these numbers and add one to count the square at ( rc ) itself and you get the total number of ﬁlled squares that can be reached from ( rc ) </s>
<s> here is an implementation of this algorithm as stated </s>
<s> unfortunately it has a serious ﬂaw it leads to an inﬁnite recursion! int getblobsize( int r int c ) { // buggy incorrect version!! // this incorrect method tries to count all the filled // squares that can be reached from position ( rc ) in the grid if ( r < 0 || r >= rows || c < 0 || c >= columns ) { // this position is not in the grid so there is // no blob at this position </s>
<s> return a blob size of zero return 0 } if ( filled[r][c] == false ) { // this square is not part of a blob so return zero return 0 } int size = 1 // count the square at this position then count the 91 </s>
<s> recursion } 429 // the blobs that are connected to this square // horizontally or vertically size += getblobsize( r-1c ) size += getblobsize( r+1c ) size += getblobsize( rc-1 ) size += getblobsize( rc+1 ) return size // end incorrect getblobsize( ) unfortunately this routine will count the same square more than once </s>
<s> in fact it will try to count each square inﬁnitely often! think of yourself standing at position ( rc ) and trying to follow these instructions </s>
<s> the ﬁrst instruction tells you to move up one row </s>
<s> you do that and then you apply the same procedure </s>
<s> as one of the steps in that procedure you have to move down one row and apply the same procedure yet again </s>
<s> but that puts you back at position ( rc )! from there you move up one row and from there you move down one row </s>
<s> back and forth forever! we have to make sure that a square is only counted and processed once so we don’t end up going around in circles </s>
<s> the solution is to leave a trail of breadcrumbs—or on the computer a trail of boolean values—to mark the squares that you’ve already visited </s>
<s> once a square is marked as visited it won’t be processed again </s>
<s> the remaining unvisited squares are reduced in number so deﬁnite progress has been made in reducing the size of the problem inﬁnite recursion is avoided! a second boolean array visited[r][c] is used to keep track of which squares have already been visited and processed </s>
<s> it is assumed that all the values in this array are set to false before getblobsize( ) is called </s>
<s> as getblobsize( ) encounters unvisited squares it marks them as visited by setting the corresponding entry in the visited array to true </s>
<s> when getblobsize( ) encounters a square that it has already visited it doesn’t count it or process it further </s>
<s> the technique of marking” items as they are encountered is one that is used over and over in the programming of recursive algorithms </s>
<s> here is the corrected version of getblobsize( ) with changes shown in italic /** * counts the squares in the blob at position ( rc ) in the * grid </s>
<s> squares are only counted if they are filled and * unvisited </s>
<s> if this routine is called for a position that * has been visited the return value will be zero */ int getblobsize( int r int c ) { if ( r < 0 || r >= rows || c < 0 || c >= columns ) { // this position is not in the grid so there is // no blob at this position </s>
<s> return a blob size of zero return 0 } if ( filled[r][c] == false || visited[r][c] == true ) { // this square is not part of a blob or else it has // already been counted so return zero return 0 } visited[r][c] = true // mark the square as visited so that // we won’t count it again during the // following recursive calls int size = 1 // count the square at this position then count the // the blobs that are connected to this square 430 chapter 9 </s>
<s> linked data structures and recursion } // horizontally or vertically size += getblobsize( r-1c ) size += getblobsize( r+1c ) size += getblobsize( rc-1 ) size += getblobsize( rc+1 ) return size // end getblobsize( ) in the program this method is used to determine the size of a blob when the user clicks on a square </s>
<s> after getblobsize( ) has performed its task all the squares in the blob are still marked as visited </s>
<s> the paintcomponent( ) method draws visited squares in red which makes the blob visible </s>
<s> the getblobsize( ) method is also used for counting blobs </s>
<s> this is done by the following method which includes comments to explain how it works /** * when the user clicks the count the blobs button find the * number of blobs in the grid and report the number in the * message label */ void countblobs( ) { int count = 0 // number of blobs /* first clear out the visited array </s>
<s> the getblobsize( ) method will mark every filled square that it finds by setting the corresponding element of the array to true </s>
<s> once a square has been marked as visited it will stay marked until all the blobs have been counted </s>
<s> this will prevent the same blob from being counted more than once */ for ( int r = 0 r < rows r++ ) for ( int c = 0 c < columns c++ ) visited[r][c] = false /* for each position in the grid call getblobsize( ) to get the size of the blob at that position </s>
<s> if the size is not zero count a blob </s>
<s> note that if we come to a position that was part of a previously counted blob getblobsize( ) will return 0 and the blob will not be counted again */ for ( int r = 0 r < rows r++ ) for ( int c = 0 c < columns c++ ) { if ( getblobsize( rc ) > 0 ) count++ } repaint( ) // note that all the filled squares will be red // since they have all now been visited messagesettext( the number of blobs is + count ) } // end countblobs( ) 92 </s>
<s> linked data structures 92 431 inked data structures every useful object contains instance variables </s>
<s> when the type of an instance variable is given by a class or interface name the variable can hold a reference to another object </s>
<s> such a reference is also called a pointer and we say that the variable points to the object ( of course any variable that can contain a reference to an object can also contain the special value null which points to nowhere ) when one object contains an instance variable that points to another object we think of the objects as being linked” by the pointer </s>
<s> data structures of great complexity can be constructed by linking objects together 921 recursive linking something interesting happens when an object contains an instance variable that can refer to another object of the same type </s>
<s> in that case the deﬁnition of the object’s class is recursive such recursion arises naturally in many cases </s>
<s> for example consider a class designed to represent employees at a company </s>
<s> suppose that every employee except the boss has a supervisor who is another employee of the company </s>
<s> then the employee class would naturally contain an instance variable of type employee that points to the employee’s supervisor /** * an object of type employee holds data about one employee */ public class employee { string name // name of the employee employee supervisor // the employee’s supervisor // ( other instance variables and methods ) } // end class employee if emp is a variable of type employee then empsupervisor is another variable of type employee </s>
<s> if emp refers to the boss then the value of empsupervisor should be null to indicate the fact that the boss has no supervisor </s>
<s> if we wanted to print out the name of the employee’s supervisor for example we could use the following java statement if ( empsupervisor == null ) { systemoutprintln( empname + is the boss and has no supervisor! ) } else { systemoutprint( the supervisor of + empname + is ) systemoutprintln( empsupervisorname ) } now suppose that we want to know how many levels of supervisors there are between a given employee and the boss </s>
<s> we just have to follow the chain of command through a series of supervisor links and count how many steps it takes to get to the boss if ( empsupervisor == null ) { systemoutprintln( empname + is the boss! ) } else { 432 chapter 9 </s>
<s> linked data structures and recursion employee runner // for running up the chain of command runner = empsupervisor if ( runnersupervisor == null ) { systemoutprintln( empname + reports directly to the boss ) } else { int count = 0 while ( runnersupervisor != null ) { count++ // count the supervisor on this level runner = runnersupervisor // move up to the next level } systemoutprintln( there are + count + supervisors between + empname + and the boss ) } } as the while loop is executed runner points in turn to the original employee ( emp ) then to emp’s supervisor then to the supervisor of emp’s supervisor and so on </s>
<s> the count variable is incremented each time runner visits” a new employee </s>
<s> the loop ends when runnersupervisor is null which indicates that runner has reached the boss </s>
<s> at that point count has counted the number of steps between emp and the boss in this example the supervisor variable is quite natural and useful </s>
<s> in fact data structures that are built by linking objects together are so useful that they are a major topic of study in computer science </s>
<s> we’ll be looking at a few typical examples </s>
<s> in this section and the next we’ll be looking at linked lists </s>
<s> a linked list consists of a chain of objects of the same type linked together by pointers from one object to the next </s>
<s> this is much like the chain of supervisors between emp and the boss in the above example </s>
<s> it’s also possible to have more complex situations in which one object can contain links to several other objects </s>
<s> we’ll look at an example of this in section 94 null when an object contains a reference to an object of the same type then several objects can be linked together into a list </s>
<s> each object refers to the next object null null things get even more interesting when an object contains two references to objects of the same type </s>
<s> in that case more complicated data structures can be constructed null null null null null null null 433 92 </s>
<s> linked data structures 922 inked lists for most of the examples in the rest of this section linked lists will be constructed out of objects belonging to the class node which is deﬁned as follows class node { string item node next } the term node is often used to refer to one of the objects in a linked data structure </s>
<s> objects of type node can be chained together as shown in the top part of the above picture </s>
<s> each node holds a string and a pointer to the next node in the list ( if any ) </s>
<s> the last node in such a list can always be identiﬁed by the fact that the instance variable next in the last node holds the value null instead of a pointer to another node </s>
<s> the purpose of the chain of nodes is to represent a list of strings </s>
<s> the ﬁrst string in the list is stored in the ﬁrst node the second string is stored in the second node and so on </s>
<s> the pointers and the node objects are used to build the structure but the data that we want to represent is the list of strings </s>
<s> of course we could just as easily represent a list of integers or a list of jbuttons or a list of any other type of data by changing the type of the item that is stored in each node although the nodes in this example are very simple we can use them to illustrate the common operations on linked lists </s>
<s> typical operations include deleting nodes from the list inserting new nodes into the list and searching for a speciﬁed string among the items in the list </s>
<s> we will look at subroutines to perform all of these operations among others for a linked list to be used in a program that program needs a variable that refers to the ﬁrst node in the list </s>
<s> it only needs a pointer to the ﬁrst node since all the other nodes in the list can be accessed by starting at the ﬁrst node and following links along the list from one node to the next </s>
<s> in my examples i will always use a variable named head of type node that points to the ﬁrst node in the linked list </s>
<s> when the list is empty the value of head is null for a list to be useful there must be a variable that points to the ﬁrst node in the list </s>
<s> here the variable head serves this purpose head bill 923 fred jane mary null basic linked list processing it is very common to want to process all the items in a linked list in some way </s>
<s> the common pattern is to start at the head of the list then move from each node to the next by following the pointer in the node stopping when the null that marks the end of the list is reached </s>
<s> if head is a variable of type node that points to the ﬁrst node in the list then the general form of the code for processing all the items in a linked list is node runner // a pointer that will be used to traverse the list runner = head // start with runner pointing to the head of the list while ( runner != null ) { // continue until null is encountered process( runneritem ) // do something with the item in the current node 434 chapter 9 </s>
<s> linked data structures and recursion runner = runnernext // move on to the next node in the list } our only access to the list is through the variable head so we start by getting a copy of the value in head with the assignment statement runner = head </s>
<s> we need a copy of head because we are going to change the value of runner </s>
<s> we can’t change the value of head or we would lose our only access to the list! the variable runner will point to each node of the list in turn when runner points to one of the nodes in the list runnernext is a pointer to the next node in the list so the assignment statement runner = runnernext moves the pointer along the list from each node to the next </s>
<s> we know that we’ve reached the end of the list when runner becomes equal to null </s>
<s> note that our list-processing code works even for an empty list since for an empty list the value of head is null and the body of the while loop is not executed at all </s>
<s> as an example we can print all the strings in a list of strings by saying node runner = head while ( runner != null ) { systemoutprintln( runneritem ) runner = runnernext } the while loop can by the way be rewritten as a for loop </s>
<s> remember that even though the loop control variable in a for loop is often numerical that is not a requirement </s>
<s> here is a for loop that is equivalent to the above while loop for ( node runner = head runner != null runner = runnernext ) { systemoutprintln( runneritem ) } similarly we can traverse a list of integers to add up all the numbers in the list </s>
<s> a linked list of integers can be constructed using the class public class intnode { int item // one of the integers in the list intnode next // pointer to the next node in the list } if head is a variable of type intnode that points to a linked list of integers we can ﬁnd the sum of the integers in the list using int sum = 0 intnode runner = head while ( runner != null ) { sum = sum + runneritem // add current item to the sum runner = runnernext } systemoutprintln( the sum of the list of items is + sum ) it is also possible to use recursion to process a linked list </s>
<s> recursion is rarely the natural way to process a list since it’s so easy to use a loop to traverse the list </s>
<s> however understanding how to apply recursion to lists can help with understanding the recursive processing of more complex data structures </s>
<s> a non-empty linked list can be thought of as consisting of two parts the head of the list which is just the ﬁrst node in the list and the tail of the list which consists of the remainder of the list after the head </s>
<s> note that the tail is itself a linked list and that it is shorter than the original list ( by one node ) </s>
<s> this is a natural setup for recursion where the problem of processing a list can be divided into processing the head and recursively 92 </s>
<s> linked data structures 435 processing the tail </s>
<s> the base case occurs in the case of an empty list ( or sometimes in the case of a list of length one ) </s>
<s> for example here is a recursive algorithm for adding up the numbers in a linked list of integers if the list is empty then return 0 ( since there are no numbers to be added up ) otherwise let listsum = the number in the head node let tailsum be the sum of the numbers in the tail list ( recursively ) add tailsum to listsum return listsum one remaining question is how do we get the tail of a non-empty linked list if head is a variable that points to the head node of the list then headnext is a variable that points to the second node of the list—and that node is in fact the ﬁrst node of the tail </s>
<s> so we can view headnext as a pointer to the tail of the list </s>
<s> one special case is when the original list consists of a single node </s>
<s> in that case the tail of the list is empty and headnext is null </s>
<s> since an empty list is represented by a null pointer headnext represents the tail of the list even in this special case </s>
<s> this allows us to write a recursive list-summing function in java as /** * compute the sum of all the integers in a linked list of integers * @param head a pointer to the first node in the linked list */ public static int additemsinlist( intnode head ) { if ( head == null ) { // base case the list is empty so the sum is zero return 0 } else { // recursive case the list is non-empty </s>
<s> find the sum of // the tail list and add that to the item in the head node // ( note that this case could be written simply as // return headitem + additemsinlist( headnext ) ) int listsum = headitem int tailsum = additemsinlist( headnext ) listsum = listsum + tailsum return listsum } } i will ﬁnish by presenting a list-processing problem that is easy to solve with recursion but quite tricky to solve without it </s>
<s> the problem is to print out all the strings in a linked list of strings in the reverse of the order in which they occur in the list </s>
<s> note that when we do this the item in the head of a list is printed out after all the items in the tail of the list </s>
<s> this leads to the following recursive routine </s>
<s> you should convince yourself that it works and you should think about trying to do the same thing without using recursion public static void printreversed( node head ) { if ( head == null ) { // base case the list is empty and there is nothing to print return } else { 436 chapter 9 </s>
<s> linked data structures and recursion // recursive case the list is non-empty printreversed( headnext ) // print strings from tail in reverse order systemoutprintln( headitem ) // then print string from head node } } ∗ ∗ ∗ in the rest of this section we’ll look at a few more advanced operations on a linked list of strings </s>
<s> the subroutines that we consider are instance methods in a class stringlist </s>
<s> an object of type stringlist represents a linked list of strings </s>
<s> the class has a private instance variable named head of type node that points to the ﬁrst node in the list or is null if the list is empty </s>
<s> instance methods in class stringlist access head as a global variable </s>
<s> the source code for stringlist is in the ﬁle stringlistjava and it is used in the sample program listdemojava suppose we want to know whether a speciﬁed string searchitem occurs somewhere in a list of strings </s>
<s> we have to compare searchitem to each item in the list </s>
<s> this is an example of basic list traversal and processing </s>
<s> however in this case we can stop processing if we ﬁnd the item that we are looking for /** * searches the list for a specified item * @param searchitem the item that is to be searched for * @return true if searchitem is one of the items in the list or false if * searchitem does not occur in the list */ public boolean find( string searchitem ) { node runner // a pointer for traversing the list runner = head // start by looking at the head of the list // ( head is an instance variable! ) while ( runner != null ) { // go through the list looking at the string in each // node </s>
<s> if the string is the one we are looking for // return true since the string has been found in the list if ( runneritemequals( searchitem ) ) return true runner = runnernext // move on to the next node } // at this point we have looked at all the items in the list // without finding searchitem </s>
<s> return false to indicate that // the item does not exist in the list return false } // end find( ) it is possible that the list is empty that is that the value of head is null </s>
<s> we should be careful that this case is handled properly </s>
<s> in the above code if head is null then the body of the while loop is never executed at all so no nodes are processed and the return value is false </s>
<s> this is exactly what we want when the list is empty since the searchitem can’t occur in an empty list 437 92 </s>
<s> linked data structures 924 inserting into a linked list the problem of inserting a new item into a linked list is more diﬃcult at least in the case where the item is inserted into the middle of the list ( in fact it’s probably the most diﬃcult operation on linked data structures that you’ll encounter in this chapter ) in the stringlist class the items in the nodes of the linked list are kept in increasing order </s>
<s> when a new item is inserted into the list it must be inserted at the correct position according to this ordering this means that usually we will have to insert the new item somewhere in the middle of the list between two existing nodes </s>
<s> to do this it’s convenient to have two variables of type node which refer to the existing nodes that will lie on either side of the new node </s>
<s> in the following illustration these variables are previous and runner </s>
<s> another variable newnode refers to the new node </s>
<s> in order to do the insertion the link from previous to runner must be broken” and new links from previous to newnode and from newnode to runner must be added runner previous newnode inserting a new node into the middle of a list once we have previous and runner pointing to the right nodes the command previousnext = newnode” can be used to make previousnext point to the new node instead of to the node indicated by runner </s>
<s> and the command newnodenext = runner” will set newnodenext to point to the correct place </s>
<s> however before we can use these commands we need to set up runner and previous as shown in the illustration </s>
<s> the idea is to start at the ﬁrst node of the list and then move along the list past all the items that are less than the new item </s>
<s> while doing this we have to be aware of the danger of falling oﬀ the end of the list” that is we can’t continue if runner reaches the end of the list and becomes null </s>
<s> if insertitem is the item that is to be inserted and if we assume that it does in fact belong somewhere in the middle of the list then the following code would correctly position previous and runner node runner previous previous = head // start at the beginning of the list runner = headnext while ( runner != null && runneritemcompareto( insertitem ) < 0 ) { previous = runner // previous = previousnext would also work runner = runnernext } 438 chapter 9 </s>
<s> linked data structures and recursion ( this uses the compareto( ) instance method from the string class to test whether the item in the node is less than the item that is being inserted </s>
<s> see subsection 232 ) this is ﬁne except that the assumption that the new node is inserted into the middle of the list is not always valid </s>
<s> it might be that insertitem is less than the ﬁrst item of the list in that case the new node must be inserted at the head of the list </s>
<s> this can be done with the instructions newnodenext = head head = newnode // make newnodenext point to the old head // make newnode the new head of the list it is also possible that the list is empty </s>
<s> in that case newnode will become the ﬁrst and only node in the list </s>
<s> this can be accomplished simply by setting head = newnode </s>
<s> the following insert( ) method from the stringlist class covers all of these possibilities /** * insert a specified item to the list keeping the list in order * @param insertitem the item that is to be inserted */ public void insert( string insertitem ) { node newnode // a node to contain the new item newnode = new node( ) newnodeitem = insertitem // ( nb newnodenext is null ) if ( head == null ) { // the new item is the first ( and only ) one in the list // set head to point to it head = newnode } else if ( headitemcompareto( insertitem ) >= 0 ) { // the new item is less than the first item in the list // so it has to be inserted at the head of the list newnodenext = head head = newnode } else { // the new item belongs somewhere after the first item // in the list </s>
<s> search for its proper position and insert it node runner // a node for traversing the list node previous // always points to the node preceding runner runner = headnext // start by looking at the second position previous = head while ( runner != null && runneritemcompareto( insertitem ) < 0 ) { // move previous and runner along the list until runner // falls off the end or hits a list element that is // greater than or equal to insertitem </s>
<s> when this // loop ends previous indicates the position where // insertitem must be inserted previous = runner runner = runnernext } newnodenext = runner // insert newnode after previous previousnext = newnode } } // end insert( ) 92 </s>
<s> linked data structures 439 if you were paying close attention to the above discussion you might have noticed that there is one special case which is not mentioned </s>
<s> what happens if the new node has to be inserted at the end of the list this will happen if all the items in the list are less than the new item </s>
<s> in fact this case is already handled correctly by the subroutine in the last part of the if statement </s>
<s> if insertitem is greater than all the items in the list then the while loop will end when runner has traversed the entire list and become null </s>
<s> however when that happens previous will be left pointing to the last node in the list </s>
<s> setting previousnext = newnode adds newnode onto the end of the list </s>
<s> since runner is null the command newnodenext = runner sets newnodenext to null which is exactly what is needed to mark the end of the list 925 deleting from a linked list the delete operation is similar to insert although a little simpler </s>
<s> there are still special cases to consider </s>
<s> when the ﬁrst node in the list is to be deleted then the value of head has to be changed to point to what was previously the second node in the list </s>
<s> since headnext refers to the second node in the list this can be done by setting head = headnext ( once again you should check that this works when headnext is null that is when there is no second node in the list </s>
<s> in that case the list becomes empty ) if the node that is being deleted is in the middle of the list then we can set up previous and runner with runner pointing to the node that is to be deleted and with previous pointing to the node that precedes that node in the list </s>
<s> once that is done the command previousnext = runnernext” will delete the node </s>
<s> the deleted node will be garbage collected </s>
<s> i encourage you to draw a picture for yourself to illustrate this operation </s>
<s> here is the complete code for the delete( ) method /** * delete a specified item from the list if that item is present * if multiple copies of the item are present in the list only * the one that comes first in the list is deleted * @param deleteitem the item to be deleted * @return true if the item was found and deleted or false if the item * was not in the list */ public boolean delete( string deleteitem ) { if ( head == null ) { // the list is empty so it certainly doesn’t contain deletestring return false } else if ( headitemequals( deleteitem ) ) { // the string is the first item of the list </s>
<s> remove it head = headnext return true } else { // the string if it occurs at all is somewhere beyond the // first element of the list </s>
<s> search the list node runner // a node for traversing the list node previous // always points to the node preceding runner runner = headnext // start by looking at the second list node previous = head while ( runner != null && runneritemcompareto( deleteitem ) < 0 ) { 440 chapter 9 </s>
<s> linked data structures and recursion // move previous and runner along the list until runner // falls off the end or hits a list element that is // greater than or equal to deleteitem </s>
<s> when this // loop ends runner indicates the position where // deleteitem must be if it is in the list previous = runner runner = runnernext } if ( runner != null && runneritemequals( deleteitem ) ) { // runner points to the node that is to be deleted // remove it by changing the pointer in the previous node previousnext = runnernext return true } else { // the item does not exist in the list return false } } } // end delete( ) 93 stacks queues and adts a linked list is a particular type of data structure made up of objects linked together by pointers </s>
<s> in the previous section we used a linked list to store an ordered list of strings and we implemented insert delete and find operations on that list </s>
<s> however we could easily have stored the list of strings in an array or arraylist instead of in a linked list </s>
<s> we could still have implemented the same operations on the list </s>
<s> the implementations of these operations would have been diﬀerent but their interfaces and logical behavior would still be the same the term abstract data type or adt refers to a set of possible values and a set of operations on those values without any speciﬁcation of how the values are to be represented or how the operations are to be implemented </s>
<s> an ordered list of strings” can be deﬁned as an abstract data type </s>
<s> any sequence of strings that is arranged in increasing order is a possible value of this data type </s>
<s> the operations on the data type include inserting a new string deleting a string and ﬁnding a string in the list </s>
<s> there are often several diﬀerent ways to implement the same abstract data type </s>
<s> for example the ordered list of strings” adt can be implemented as a linked list or as an array </s>
<s> a program that only depends on the abstract deﬁnition of the adt can use either implementation interchangeably </s>
<s> in particular the implementation of the adt can be changed without aﬀecting the program as a whole </s>
<s> this can make the program easier to debug and maintain so adts are an important tool in software engineering in this section we’ll look at two common abstract data types stacks and queues </s>
<s> both stacks and queues are often implemented as linked lists but that is not the only possible implementation </s>
<s> you should think of the rest of this section partly as a discussion of stacks and queues and partly as a case study in adts 931 stacks a stack consists of a sequence of items which should be thought of as piled one on top of the other like a physical stack of boxes or cafeteria trays </s>
<s> only the top item on the stack is 441 93 </s>
<s> stacks queues and adts accessible at any given time </s>
<s> it can be removed from the stack with an operation called pop an item lower down on the stack can only be removed after all the items on top of it have been popped oﬀ the stack </s>
<s> a new item can be added to the top of the stack with an operation called push </s>
<s> we can make a stack of any type of items </s>
<s> if for example the items are values of type int then the push and pop operations can be implemented as instance methods • void push ( int newitem ) — add newitem to top of stack • int pop( ) — remove the top int from the stack and return it it is an error to try to pop an item from an empty stack so it is important to be able to tell whether a stack is empty </s>
<s> we need another stack operation to do the test implemented as an instance method • boolean isempty( ) — returns true if the stack is empty this deﬁnes a stack of ints” as an abstract data type </s>
<s> this adt can be implemented in several ways but however it is implemented its behavior must correspond to the abstract mental image of a stack in a stack all operations take place at the top of the stack </s>
<s> the push operation adds an item to the top of the stack the pop operation removes the item on the top of the stack and returns it 12 25 123 5 17 original stack 25 123 5 17 83 25 123 5 17 after pop( ) </s>
<s> after push( 83 ) in the linked list implementation of a stack the top of the stack is actually the node at the head of the list </s>
<s> it is easy to add and remove nodes at the front of a linked list—much easier than inserting and deleting nodes in the middle of the list </s>
<s> here is a class that implements the stack of ints” adt using a linked list ( it uses a static nested class to represent the nodes of the linked list </s>
<s> if the nesting bothers you you could replace it with a separate node class ) public class stackofints { /** * an object of type node holds one of the items in the linked list * that represents the stack */ private static class node { int item node next } 442 chapter 9 </s>
<s> linked data structures and recursion private node top // pointer to the node that is at the top of // of the stack </s>
<s> if top == null then the // stack is empty /** * add n to the top of the stack */ public void push( int n ) { node newtop // a node to hold the new item newtop = new node( ) newtopitem = n // store n in the new node newtopnext = top // the new node points to the old top top = newtop // the new item is now on top } /** * remove the top item from the stack and return it * throws an illegalstateexception if the stack is empty when * this method is called */ public int pop( ) { if ( top == null ) throw new illegalstateexception( can’t pop from an empty stack ) int topitem = topitem // the item that is being popped top = topnext // the previous second item is now on top return topitem } /** * returns true if the stack is empty </s>
<s> returns false * if there are one or more items on the stack */ public boolean isempty( ) { return ( top == null ) } } // end class stackofints you should make sure that you understand how the push and pop operations operate on the linked list </s>
<s> drawing some pictures might help </s>
<s> note that the linked list is part of the private implementation of the stackofints class </s>
<s> a program that uses this class doesn’t even need to know that a linked list is being used now it’s pretty easy to implement a stack as an array instead of as a linked list </s>
<s> since the number of items on the stack varies with time a counter is needed to keep track of how many spaces in the array are actually in use </s>
<s> if this counter is called top then the items on the stack are stored in positions 0 1 top-1 in the array </s>
<s> the item in position 0 is on the bottom of the stack and the item in position top-1 is on the top of the stack </s>
<s> pushing an item onto the stack is easy put the item in position top and add 1 to the value of top </s>
<s> if we don’t want to put a limit on the number of items that the stack can hold we can use the dynamic array techniques from subsection 732 </s>
<s> note that the typical picture of the array would show the stack upside down” with the bottom of the stack at the top of the array </s>
<s> this doesn’t matter the array is just an implementation of the abstract idea of a stack and as long as the stack operations work the way they are supposed to we are ok </s>
<s> here is a second implementation of the stackofints class using a dynamic array 443 93 </s>
<s> stacks queues and adts public class stackofints { // ( alternate version using an array ) private int[] items = new int[10] private int top = 0 // holds the items on the stack // the number of items currently on the stack /** * add n to the top of the stack */ public void push( int n ) { if ( top == itemslength ) { // the array is full so make a new larger array and // copy the current stack items into it int[] newarray = new int[ 2*itemslength ] systemarraycopy( items 0 newarray 0 itemslength ) items = newarray } items[top] = n // put n in next available spot top++ // number of items goes up by one } /** * remove the top item from the stack and return it * throws an illegalstateexception if the stack is empty when * this method is called */ public int pop( ) { if ( top == 0 ) throw new illegalstateexception( can’t pop from an empty stack ) int topitem = items[top - 1] // top item in the stack top -- // number of items on the stack goes down by one return topitem } /** * returns true if the stack is empty </s>
<s> returns false * if there are one or more items on the stack */ public boolean isempty( ) { return ( top == 0 ) } } // end class stackofints once again the implementation of the stack ( as an array ) is private to the class </s>
<s> the two versions of the stackofints class can be used interchangeably since their public interfaces are identical ∗ ∗ ∗ it’s interesting to look at the run time analysis of stack operations ( see section 85 ) </s>
<s> we can measure the size of the problem by the number of items that are on the stack </s>
<s> for the linked list implementation of a stack the worst case run time both for the push and for the pop operation is Θ( 1 ) </s>
<s> this just means that the run time is less than some constant independent of the number of items on the stack </s>
<s> this is easy to see if you look at the code </s>
<s> the operations are implemented with a few simple assignment statements and the number of items on the stack has no eﬀect 444 chapter 9 </s>
<s> linked data structures and recursion for the array implementation on the other hand a special case occurs in the push operation when the array is full </s>
<s> in that case a new array is created and all the stack items are copied into the new array </s>
<s> this takes an amount of time that is proportional to the number of items on the stack </s>
<s> so although the run time for push is usually Θ( 1 ) the worst case run time is Θ( n ) where n is the number of items on the stack ( however the worst case occurs only rarely and there is a natural sense in which the average case run time for the array implementation is still Θ( 1 ) ) 932 queues queues are similar to stacks in that a queue consists of a sequence of items and there are restrictions about how items can be added to and removed from the list </s>
<s> however a queue has two ends called the front and the back of the queue </s>
<s> items are always added to the queue at the back and removed from the queue at the front </s>
<s> the operations of adding and removing items are called enqueue and dequeue </s>
<s> an item that is added to the back of the queue will remain on the queue until all the items in front of it have been removed </s>
<s> this should sound familiar </s>
<s> a queue is like a line” or queue” of customers waiting for service </s>
<s> customers are serviced in the order in which they arrive on the queue in a queue all operations take place at one end of the queue or the other </s>
<s> the enqueue operation adds an item to the back of the queue </s>
<s> the dequeue operation removes the item at the front of the queue and returns it front back 46 125 8 22 17 items enter queue at back and leave from front 125 8 22 17 after dequeue( ) 125 8 22 17 83 after enqueue( 83 ) a queue can hold items of any type </s>
<s> for a queue of ints the enqueue and dequeue operations can be implemented as instance methods in a queueofints” class </s>
<s> we also need an instance method for checking whether the queue is empty • void enqueue( int n ) — add n to the back of the queue • int dequeue( ) — remove the item at the front and return it • boolean isempty( ) — return true if the queue is empty a queue can be implemented as a linked list or as an array </s>
<s> an eﬃcient array implementation is a little trickier than the array implementation of a stack so i won’t give it here </s>
<s> in the linked list implementation the ﬁrst item of the list is at the front of the queue </s>
<s> dequeueing an item 445 93 </s>
<s> stacks queues and adts from the front of the queue is just like popping an item oﬀ a stack </s>
<s> the back of the queue is at the end of the list </s>
<s> enqueueing an item involves setting a pointer in the last node of the current list to point to a new node that contains the item </s>
<s> to do this we’ll need a command like tailnext = newnode” where tail is a pointer to the last node in the list </s>
<s> if head is a pointer to the ﬁrst node of the list it would always be possible to get a pointer to the last node of the list by saying node tail // this will point to the last node in the list tail = head // start at the first node while ( tailnext != null ) { tail = tailnext // move to next node } // at this point tailnext is null so tail points to // the last node in the list however it would be very ineﬃcient to do this over and over every time an item is enqueued for the sake of eﬃciency we’ll keep a pointer to the last node in an instance variable </s>
<s> this complicates the class somewhat we have to be careful to update the value of this variable whenever a new node is added to the end of the list </s>
<s> given all this writing the queueofints class is not all that diﬃcult public class queueofints { /** * an object of type node holds one of the items * in the linked list that represents the queue */ private static class node { int item node next } private node head = null // points to first node in the queue // the queue is empty when head is null private node tail = null // points to last node in the queue /** * add n to the back of the queue */ public void enqueue( int n ) { node newtail = new node( ) // a node to hold the new item newtailitem = n if ( head == null ) { // the queue was empty </s>
<s> the new node becomes // the only node in the list </s>
<s> since it is both // the first and last node both head and tail // point to it head = newtail tail = newtail } else { // the new node becomes the new tail of the list // ( the head of the list is unaffected ) tailnext = newtail 446 chapter 9 </s>
<s> linked data structures and recursion tail = newtail } } /** * remove and return the front item in the queue * throws an illegalstateexception if the queue is empty */ public int dequeue( ) { if ( head == null ) throw new illegalstateexception( can’t dequeue from an empty queue ) int firstitem = headitem head = headnext // the previous second item is now first if ( head == null ) { // the queue has become empty </s>
<s> the node that was // deleted was the tail as well as the head of the // list so now there is no tail ( actually the // class would work fine without this step ) tail = null } return firstitem } /** * return true if the queue is empty */ boolean isempty( ) { return ( head == null ) } } // end class queueofints queues are typically used in a computer ( as in real life ) when only one item can be processed at a time but several items can be waiting for processing </s>
<s> for example • in a java program that has multiple threads the threads that want processing time on the cpu are kept in a queue </s>
<s> when a new thread is started it is added to the back of the queue </s>
<s> a thread is removed from the front of the queue given some processing time and then—if it has not terminated—is sent to the back of the queue to wait for another turn • events such as keystrokes and mouse clicks are stored in a queue called the event queue” a program removes events from the event queue and processes them </s>
<s> it’s possible for several more events to occur while one event is being processed but since the events are stored in a queue they will always be processed in the order in which they occurred • a web server is a program that receives requests from web browsers for pages” it is easy for new requests to arrive while the web server is still fulﬁlling a previous request </s>
<s> requests that arrive while the web server is busy are placed into a queue to await processing </s>
<s> using a queue ensures that requests will be processed in the order in which they were received queues are said to implement a fifo policy first in first out </s>
<s> or as it is more commonly expressed ﬁrst come ﬁrst served </s>
<s> stacks on the other hand implement a lifo policy last in first out </s>
<s> the item that comes out of the stack is the last one that was put in </s>
<s> just like queues stacks can be used to hold items that are waiting for processing ( although in applications where queues are typically used a stack would be considered unfair” ) 447 93 </s>
<s> stacks queues and adts ∗ ∗ ∗ to get a better handle on the diﬀerence between stacks and queues consider the sample program depthbreadthjava </s>
<s> i suggest that you run the program or try the applet version that can be found in the on-line version of this section </s>
<s> the program shows a grid of squares initially all the squares are white </s>
<s> when you click on a white square the program will gradually mark all the squares in the grid starting from the one where you click </s>
<s> to understand how the program does this think of yourself in the place of the program </s>
<s> when the user clicks a square you are handed an index card </s>
<s> the location of the square—its row and column—is written on the card </s>
<s> you put the card in a pile which then contains just that one card </s>
<s> then you repeat the following if the pile is empty you are done </s>
<s> otherwise remove an index card from the pile </s>
<s> the index card speciﬁes a square </s>
<s> look at each horizontal and vertical neighbor of that square </s>
<s> if the neighbor has not already been encountered write its location on a new index card and put the card in the pile while a square is in the pile waiting to be processed it is colored red that is red squares have been encountered but not yet processed </s>
<s> when a square is taken from the pile and processed its color changes to gray </s>
<s> once a square has been colored gray its color won’t change again </s>
<s> eventually all the squares have been processed and the procedure ends </s>
<s> in the index card analogy the pile of cards has been emptied the program can use your choice of three methods stack queue and random </s>
<s> in each case the same general procedure is used </s>
<s> the only diﬀerence is how the pile of index cards” is managed </s>
<s> for a stack cards are added and removed at the top of the pile </s>
<s> for a queue cards are added to the bottom of the pile and removed from the top </s>
<s> in the random case the card to be processed is picked at random from among all the cards in the pile </s>
<s> the order of processing is very diﬀerent in these three cases you should experiment with the program to see how it all works </s>
<s> try to understand how stacks and queues are being used </s>
<s> try starting from one of the corner squares </s>
<s> while the process is going on you can click on other white squares and they will be added to the pile </s>
<s> when you do this with a stack you should notice that the square you click is processed immediately and all the red squares that were already waiting for processing have to wait </s>
<s> on the other hand if you do this with a queue the square that you click will wait its turn until all the squares that were already in the pile have been processed ∗ ∗ ∗ queues seem very natural because they occur so often in real life but there are times when stacks are appropriate and even essential </s>
<s> for example consider what happens when a routine calls a subroutine </s>
<s> the ﬁrst routine is suspended while the subroutine is executed and it will continue only when the subroutine returns </s>
<s> now suppose that the subroutine calls a second subroutine and the second subroutine calls a third and so on </s>
<s> each subroutine is suspended while the subsequent subroutines are executed </s>
<s> the computer has to keep track of all the subroutines that are suspended </s>
<s> it does this with a stack when a subroutine is called an activation record is created for that subroutine </s>
<s> the activation record contains information relevant to the execution of the subroutine such as its local variables and parameters </s>
<s> the activation record for the subroutine is placed on a stack it will be removed from the stack and destroyed when the subroutine returns </s>
<s> if the subroutine calls another subroutine the activation record of the second subroutine is pushed onto the stack on top of the activation record of the ﬁrst subroutine </s>
<s> the stack can continue to grow as more subroutines are called and it shrinks as those subroutines return 448 933 chapter 9 </s>
<s> linked data structures and recursion postﬁx expressions as another example stacks can be used to evaluate postﬁx expressions </s>
<s> an ordinary mathematical expression such as 2+( 15-12 )*17 is called an inﬁx expression </s>
<s> in an inﬁx expression an operator comes in between its two operands as in 2 + 2” </s>
<s> in a postﬁx expression an operator comes after its two operands as in 2 2 +” </s>
<s> the inﬁx expression 2+( 15-12 )*17” would be written in postﬁx form as 2 15 12 - 17 * +” </s>
<s> the -” operator in this expression applies to the two operands that precede it namely 15” and 12” </s>
<s> the *” operator applies to the two operands that precede it namely 15 12 -” and 17” </s>
<s> and the +” operator applies to 2” and 15 12 - 17 *” </s>
<s> these are the same computations that are done in the original inﬁx expression now suppose that we want to process the expression 2 15 12 - 17 * +” from left to right and ﬁnd its value </s>
<s> the ﬁrst item we encounter is the 2 but what can we do with it at this point we don’t know what operator if any will be applied to the 2 or what the other operand might be </s>
<s> we have to remember the 2 for later processing </s>
<s> we do this by pushing it onto a stack </s>
<s> moving on to the next item we see a 15 which is pushed onto the stack on top of the 2 </s>
<s> then the 12 is added to the stack </s>
<s> now we come to the operator -” </s>
<s> this operation applies to the two operands that preceded it in the expression </s>
<s> we have saved those two operands on the stack </s>
<s> so to process the -” operator we pop two numbers from the stack 12 and 15 and compute 15 - 12 to get the answer 3 </s>
<s> this 3 must be remembered to be used in later processing so we push it onto the stack on top of the 2 that is still waiting there the next item in the expression is a 17 which is processed by pushing it onto the stack on top of the 3 </s>
<s> to process the next item *” we pop two numbers from the stack </s>
<s> the numbers are 17 and the 3 that represents the value of 15 12 -” </s>
<s> these numbers are multiplied and the result 51 is pushed onto the stack </s>
<s> the next item in the expression is a +” operator which is processed by popping 51 and 2 from the stack adding them and pushing the result 53 onto the stack </s>
<s> finally we’ve come to the end of the expression </s>
<s> the number on the stack is the value of the entire expression so all we have to do is pop the answer from the stack and we are done! the value of the expression is 53 although it’s easier for people to work with inﬁx expressions postﬁx expressions have some advantages </s>
<s> for one thing postﬁx expressions don’t require parentheses or precedence rules the order in which operators are applied is determined entirely by the order in which they occur in the expression </s>
<s> this allows the algorithm for evaluating postﬁx expressions to be fairly straightforward start with an empty stack for each item in the expression if the item is a number push the number onto the stack else if the item is an operator pop the operands from the stack // can generate an error apply the operator to the operands push the result onto the stack else there is an error in the expression pop a number from the stack // can generate an error if the stack is not empty there is an error in the expression else the last number that was popped is the value of the expression 449 93 </s>
<s> stacks queues and adts errors in an expression can be detected easily </s>
<s> for example in the expression 2 3 + *” there are not enough operands for the *” operation </s>
<s> this will be detected in the algorithm when an attempt is made to pop the second operand for *” from the stack since the stack will be empty </s>
<s> the opposite problem occurs in 2 3 4 +” </s>
<s> there are not enough operators for all the numbers </s>
<s> this will be detected when the 2 is left still sitting in the stack at the end of the algorithm this algorithm is demonstrated in the sample program postﬁxevaljava </s>
<s> this program lets you type in postﬁx expressions made up of non-negative real numbers and the operators +” -” *” /” and ”^” </s>
<s> the ^” represents exponentiation </s>
<s> that is 2 3 ^” is evaluated as 23 </s>
<s> the program prints out a message as it processes each item in the expression </s>
<s> the stack class that is used in the program is deﬁned in the ﬁle stackofdoublejava </s>
<s> the stackofdouble class is identical to the ﬁrst stackofints class given above except that it has been modiﬁed to store values of type double instead of values of type int the only interesting aspect of this program is the method that implements the postﬁx evaluation algorithm </s>
<s> it is a direct implementation of the pseudocode algorithm given above /** * read one line of input and process it as a postfix expression * if the input is not a legal postfix expression then an error * message is displayed </s>
<s> otherwise the value of the expression * is displayed </s>
<s> it is assumed that the first character on * the input line is a non-blank */ private static void readandevaluate( ) { stackofdouble stack // for evaluating the expression stack = new stackofdouble( ) // make a new empty stack textioputln( ) while ( textiopeek( ) != ’n’ ) { if ( characterisdigit( textiopeek( ) ) ) { // the next item in input is a number </s>
<s> read it and // save it on the stack double num = textiogetdouble( ) stackpush( num ) textioputln( pushed constant + num ) } else { // since the next item is not a number the only thing // it can legally be is an operator </s>
<s> get the operator // and perform the operation char op // the operator which must be + - * / or ^ double xy // the operands from the stack for the operation double answer // the result to be pushed onto the stack op = textiogetchar( ) if ( op != ’+’ && op != ’-’ && op != ’*’ && op != ’/’ && op != ’^’ ) { // the character is not one of the acceptable operations textioputln( nillegal operator found in input + op ) return } if ( stackisempty( ) ) { 450 chapter 9 </s>
<s> linked data structures and recursion textioputln( stack is empty while trying to evaluate + op ) textioputln( nnot enough numbers in expression! ) return } y = stackpop( ) if ( stackisempty( ) ) { textioputln( stack is empty while trying to evaluate + op ) textioputln( nnot enough numbers in expression! ) return } x = stackpop( ) switch ( op ) { case ’+’ answer = x + y break case ’-’ answer = x - y break case ’*’ answer = x * y break case ’/’ answer = x / y break default answer = mathpow( xy ) // ( op must be ’^’ ) } stackpush( answer ) textioputln( evaluated + op + and pushed + answer ) } textioskipblanks( ) } // end while // if we get to this point the input has been read successfully // if the expression was legal then the value of the expression is // on the stack and it is the only thing on the stack if ( stackisempty( ) ) { // impossible if the input is really non-empty textioputln( no expression provided ) return } double value = stackpop( ) // value of the expression textioputln( popped + value + at end of expression ) if ( stackisempty( ) == false ) { textioputln( stack is not empty ) textioputln( nnot enough operators for all the numbers! ) return } textioputln( nvalue = + value ) } // end readandevaluate( ) 451 94 </s>
<s> binary trees postﬁx expressions are often used internally by computers </s>
<s> in fact the java virtual machine is a stack machine” which uses the stack-based approach to expression evaluation that we have been discussing </s>
<s> the algorithm can easily be extended to handle variables as well as constants when a variable is encountered in the expression the value of the variable is pushed onto the stack </s>
<s> it also works for operators with more or fewer than two operands </s>
<s> as many operands as are needed are popped from the stack and the result is pushed back onto the stack </s>
<s> for example the unary minus operator which is used in the expression -x” has a single operand </s>
<s> we will continue to look at expressions and expression evaluation in the next two sections 94 binary trees we have seen in the two previous sections how objects can be linked into lists </s>
<s> when an object contains two pointers to objects of the same type structures can be created that are much more complicated than linked lists </s>
<s> in this section we’ll look at one of the most basic and useful structures of this type binary trees </s>
<s> each of the objects in a binary tree contains two pointers typically called left and right </s>
<s> in addition to these pointers of course the nodes can contain other types of data </s>
<s> for example a binary tree of integers could be made up of objects of the following type class treenode { int item treenode left treenode right } // the data in this node // pointer to the left subtree // pointer to the right subtree the left and right pointers in a treenode can be null or can point to other objects of type treenode </s>
<s> a node that points to another node is said to be the parent of that node and the node it points to is called a child </s>
<s> in the picture below for example node 3 is the parent of node 6 and nodes 4 and 5 are children of node 2 </s>
<s> not every linked structure made up of tree nodes is a binary tree </s>
<s> a binary tree must have the following properties there is exactly one node in the tree which has no parent </s>
<s> this node is called the root of the tree </s>
<s> every other node in the tree has exactly one parent </s>
<s> finally there can be no loops in a binary tree </s>
<s> that is it is not possible to follow a chain of pointers starting at some node and arriving back at the same node 452 chapter 9 </s>
<s> linked data structures and recursion root node 1 2 4 null null 3 null 5 null null 6 null null eaf nodes a node that has no children is called a leaf </s>
<s> a leaf node can be recognized by the fact that both the left and right pointers in the node are null </s>
<s> in the standard picture of a binary tree the root node is shown at the top and the leaf nodes at the bottom—which doesn’t show much respect for the analogy to real trees </s>
<s> but at least you can see the branching tree-like structure that gives a binary tree its name 941 tree traversal consider any node in a binary tree </s>
<s> look at that node together with all its descendants ( that is its children the children of its children and so on ) </s>
<s> this set of nodes forms a binary tree which is called a subtree of the original tree </s>
<s> for example in the picture nodes 2 4 and 5 form a subtree </s>
<s> this subtree is called the left subtree of the root </s>
<s> similarly nodes 3 and 6 make up the right subtree of the root </s>
<s> we can consider any non-empty binary tree to be made up of a root node a left subtree and a right subtree </s>
<s> either or both of the subtrees can be empty </s>
<s> this is a recursive deﬁnition matching the recursive deﬁnition of the treenode class so it should not be a surprise that recursive subroutines are often used to process trees consider the problem of counting the nodes in a binary tree ( as an exercise you might try to come up with a non-recursive algorithm to do the counting but you shouldn’t expect to ﬁnd one easily ) the heart of the problem is keeping track of which nodes remain to be counted it’s not so easy to do this and in fact it’s not even possible without an auxiliary data structure such as a stack or queue </s>
<s> with recursion however the algorithm is almost trivial </s>
<s> either the tree is empty or it consists of a root and two subtrees </s>
<s> if the tree is empty the number of nodes is zero ( this is the base case of the recursion ) otherwise use recursion to count the nodes in each subtree </s>
<s> add the results from the subtrees together and add one to count the root </s>
<s> this gives the total number of nodes in the tree </s>
<s> written out in java /** * count the nodes in the binary tree to which root points and * return the answer </s>
<s> if root is null the answer is zero */ static int countnodes( treenode root ) { if ( root == null ) 94 </s>
<s> binary trees 453 return 0 // the tree is empty </s>
<s> it contains no nodes else { int count = 1 // start by counting the root count += countnodes( rootleft ) // add the number of nodes // in the left subtree count += countnodes( rootright ) // add the number of nodes // in the right subtree return count // return the total } } // end countnodes( ) or consider the problem of printing the items in a binary tree </s>
<s> if the tree is empty there is nothing to do </s>
<s> if the tree is non-empty then it consists of a root and two subtrees </s>
<s> print the item in the root and use recursion to print the items in the subtrees </s>
<s> here is a subroutine that prints all the items on one line of output /** * print all the items in the tree to which root points * the item in the root is printed first followed by the * items in the left subtree and then the items in the * right subtree */ static void preorderprint( treenode root ) { if ( root != null ) { // ( otherwise there’s nothing to print ) systemoutprint( rootitem + ) // print the root item preorderprint( rootleft ) // print items in left subtree preorderprint( rootright ) // print items in right subtree } } // end preorderprint( ) this routine is called preorderprint” because it uses a preorder traversal of the tree in a preorder traversal the root node of the tree is processed ﬁrst then the left subtree is traversed then the right subtree </s>
<s> in a postorder traversal the left subtree is traversed then the right subtree and then the root node is processed </s>
<s> and in an inorder traversal the left subtree is traversed ﬁrst then the root node is processed then the right subtree is traversed printing subroutines that use postorder and inorder traversal diﬀer from preorderprint only in the placement of the statement that outputs the root item /** * print all the items in the tree to which root points * the item in the left subtree is printed first followed * by the items in the right subtree and then the item * in the root node */ static void postorderprint( treenode root ) { if ( root != null ) { // ( otherwise there’s nothing to print ) postorderprint( rootleft ) // print items in left subtree postorderprint( rootright ) // print items in right subtree systemoutprint( rootitem + ) // print the root item } } // end postorderprint( ) /** * print all the items in the tree to which root points 454 chapter 9 </s>
<s> linked data structures and recursion * the item in the left subtree is printed first followed * by the item in the root node and then the items * in the right subtree */ static void inorderprint( treenode root ) { if ( root != null ) { // ( otherwise there’s nothing to print ) inorderprint( rootleft ) // print items in left subtree systemoutprint( rootitem + ) // print the root item inorderprint( rootright ) // print items in right subtree } } // end inorderprint( ) each of these subroutines can be applied to the binary tree shown in the illustration at the beginning of this section </s>
<s> the order in which the items are printed diﬀers in each case preorderprint outputs 1 2 4 5 3 6 postorderprint outputs 4 5 2 6 3 1 inorderprint outputs 4 2 5 1 3 6 in preorderprint for example the item at the root of the tree 1 is output before anything else </s>
<s> but the preorder printing also applies to each of the subtrees of the root </s>
<s> the root item of the left subtree 2 is printed before the other items in that subtree 4 and 5 </s>
<s> as for the right subtree of the root 3 is output before 6 </s>
<s> a preorder traversal applies at all levels in the tree the other two traversal orders can be analyzed similarly 942 binary sort trees one of the examples in section 92 was a linked list of strings in which the strings were kept in increasing order </s>
<s> while a linked list works well for a small number of strings it becomes ineﬃcient for a large number of items </s>
<s> when inserting an item into the list searching for that item’s position requires looking at on average half the items in the list </s>
<s> finding an item in the list requires a similar amount of time </s>
<s> if the strings are stored in a sorted array instead of in a linked list then searching becomes more eﬃcient because binary search can be used </s>
<s> however inserting a new item into the array is still ineﬃcient since it means moving on average half of the items in the array to make a space for the new item </s>
<s> a binary tree can be used to store an ordered list of strings or other items in a way that makes both searching and insertion eﬃcient </s>
<s> a binary tree used in this way is called a binary sort tree a binary sort tree is a binary tree with the following property for every node in the tree the item in that node is greater than every item in the left subtree of that node and it is less than or equal to all the items in the right subtree of that node </s>
<s> here for example is a binary sort tree containing items of type string ( in this picture i haven’t bothered to draw all the pointer variables </s>
<s> non-null pointers are shown as arrows ) 455 94 </s>
<s> binary trees root judy mary bill alice fred dave a binary sort tree tom jane joe binary sort trees have this useful property an inorder traversal of the tree will process the items in increasing order </s>
<s> in fact this is really just another way of expressing the deﬁnition for example if an inorder traversal is used to print the items in the tree shown above then the items will be in alphabetical order </s>
<s> the deﬁnition of an inorder traversal guarantees that all the items in the left subtree of judy” are printed before judy” and all the items in the right subtree of judy” are printed after judy” </s>
<s> but the binary sort tree property guarantees that the items in the left subtree of judy” are precisely those that precede judy” in alphabetical order and all the items in the right subtree follow judy” in alphabetical order </s>
<s> so we know that judy” is output in its proper alphabetical position </s>
<s> but the same argument applies to the subtrees bill” will be output after alice” and before fred” and its descendents fred” will be output after dave” and before jane” and joe” </s>
<s> and so on suppose that we want to search for a given item in a binary search tree </s>
<s> compare that item to the root item of the tree </s>
<s> if they are equal we’re done </s>
<s> if the item we are looking for is less than the root item then we need to search the left subtree of the root—the right subtree can be eliminated because it only contains items that are greater than or equal to the root similarly if the item we are looking for is greater than the item in the root then we only need to look in the right subtree </s>
<s> in either case the same procedure can then be applied to search the subtree </s>
<s> inserting a new item is similar start by searching the tree for the position where the new item belongs </s>
<s> when that position is found create a new node and attach it to the tree at that position searching and inserting are eﬃcient operations on a binary search tree provided that the tree is close to being balanced </s>
<s> a binary tree is balanced if for each node the left subtree of that node contains approximately the same number of nodes as the right subtree </s>
<s> in a perfectly balanced tree the two numbers diﬀer by at most one </s>
<s> not all binary trees are balanced but if the tree is created by inserting items in a random order there is a high probability that the tree is approximately balanced ( if the order of insertion is not random however it’s quite possible for the tree to be very unbalanced ) during a search of any binary sort tree every comparison eliminates one of two subtrees from further consideration </s>
<s> if the tree is balanced that means cutting the number of items still under consideration in half </s>
<s> this is exactly the same as the binary search algorithm and the result is a similarly eﬃcient algorithm in terms of asymptotic analysis ( section 85 ) searching inserting and deleting in a binary 456 chapter 9 </s>
<s> linked data structures and recursion search tree have average case run time Θ( log( n ) ) </s>
<s> the problem size n is the number of items in the tree and the average is taken over all the diﬀerent orders in which the items could have been inserted into the tree </s>
<s> as long as the actual insertion order is random the actual run time can be expected to be close to the average </s>
<s> however the worst case run time for binary search tree operations is Θ( n ) which is much worse than Θ( log( n ) ) </s>
<s> the worst case occurs for particular insertion orders </s>
<s> for example if the items are inserted into the tree in order of increasing size then every item that is inserted moves always to the right as it moves down the tree </s>
<s> the result is a tree” that looks more like a linked list since it consists of a linear string of nodes strung together by their right child pointers </s>
<s> operations on such a tree have the same performance as operations on a linked list </s>
<s> now there are data structures that are similar to simple binary sort trees except that insertion and deletion of nodes are implemented in a way that will always keep the tree balanced or almost balanced </s>
<s> for these data structures searching inserting and deleting have both average case and worst case run times that are Θ( log( n ) ) </s>
<s> here however we will look at only the simple versions of inserting and searching the sample program sorttreedemojava is a demonstration of binary sort trees </s>
<s> the program includes subroutines that implement inorder traversal searching and insertion </s>
<s> we’ll look at the latter two subroutines below </s>
<s> the main( ) routine tests the subroutines by letting you type in strings to be inserted into the tree in this program nodes in the binary tree are represented using the following static nested class including a simple constructor that makes creating nodes easier /** * an object of type treenode represents one node in a binary tree of strings */ private static class treenode { string item // the data in this node treenode left // pointer to left subtree treenode right // pointer to right subtree treenode( string str ) { // constructor </s>
<s> make a node containing str item = str } } // end class treenode a static member variable of type treenode points to the binary sort tree that is used by the program private static treenode root // pointer to the root node in the tree // when the tree is empty root is null a recursive subroutine named treecontains is used to search for a given item in the tree </s>
<s> this routine implements the search algorithm for binary trees that was outlined above /** * return true if item is one of the items in the binary * sort tree to which root points return false if not */ static boolean treecontains( treenode root string item ) { if ( root == null ) { // tree is empty so it certainly doesn’t contain item return false } else if ( itemequals( rootitem ) ) { 94 </s>
<s> binary trees 457 // yes the item has been found in the root node return true } } else if ( itemcompareto( rootitem ) < 0 ) { // if the item occurs it must be in the left subtree return treecontains( rootleft item ) } else { // if the item occurs it must be in the right subtree return treecontains( rootright item ) } // end treecontains( ) when this routine is called in the main( ) routine the ﬁrst parameter is the static member variable root which points to the root of the entire binary sort tree it’s worth noting that recursion is not really essential in this case </s>
<s> a simple non-recursive algorithm for searching a binary sort tree follows the rule start at the root and move down the tree until you ﬁnd the item or reach a null pointer </s>
<s> since the search follows a single path down the tree it can be implemented as a while loop </s>
<s> here is a non-recursive version of the search routine private static boolean treecontainsnr( treenode root string item ) { treenode runner // for running down the tree runner = root // start at the root node while ( true ) { if ( runner == null ) { // we’ve fallen off the tree without finding item return false } else if ( itemequals( nodeitem ) ) { // we’ve found the item return true } else if ( itemcompareto( nodeitem ) < 0 ) { // if the item occurs it must be in the left subtree // so advance the runner down one level to the left runner = runnerleft } else { // if the item occurs it must be in the right subtree // so advance the runner down one level to the right runner = runnerright } } // end while } // end treecontainsnr( ) the subroutine for inserting a new item into the tree turns out to be more similar to the non-recursive search routine than to the recursive </s>
<s> the insertion routine has to handle the case where the tree is empty </s>
<s> in that case the value of root must be changed to point to a node that contains the new item root = new treenode( newitem ) 458 chapter 9 </s>
<s> linked data structures and recursion but this means eﬀectively that the root can’t be passed as a parameter to the subroutine because it is impossible for a subroutine to change the value stored in an actual parameter ( i should note that this is something that is possible in other languages ) recursion uses parameters in an essential way </s>
<s> there are ways to work around the problem but the easiest thing is just to use a non-recursive insertion routine that accesses the static member variable root directly </s>
<s> one diﬀerence between inserting an item and searching for an item is that we have to be careful not to fall oﬀ the tree </s>
<s> that is we have to stop searching just before runner becomes null </s>
<s> when we get to an empty spot in the tree that’s where we have to insert the new node /** * add the item to the binary sort tree to which the global variable * root refers ( note that root can’t be passed as a parameter to * this routine because the value of root might change and a change * in the value of a formal parameter does not change the actual parameter ) */ private static void treeinsert( string newitem ) { if ( root == null ) { // the tree is empty </s>
<s> set root to point to a new node containing // the new item </s>
<s> this becomes the only node in the tree root = new treenode( newitem ) return } treenode runner // runs down the tree to find a place for newitem runner = root // start at the root while ( true ) { if ( newitemcompareto( runneritem ) < 0 ) { // since the new item is less than the item in runner // it belongs in the left subtree of runner </s>
<s> if there // is an open space at runnerleft add a new node there // otherwise advance runner down one level to the left if ( runnerleft == null ) { runnerleft = new treenode( newitem ) return // new item has been added to the tree } else runner = runnerleft } else { // since the new item is greater than or equal to the item in // runner it belongs in the right subtree of runner </s>
<s> if there // is an open space at runnerright add a new node there // otherwise advance runner down one level to the right if ( runnerright == null ) { runnerright = new treenode( newitem ) return // new item has been added to the tree } else runner = runnerright } } // end while } // end treeinsert( ) 459 94 </s>
<s> binary trees 943 expression trees another application of trees is to store mathematical expressions such as 15*( x+y ) or sqrt( 42 )+7 in a convenient form </s>
<s> let’s stick for the moment to expressions made up of numbers and the operators + - * and / </s>
<s> consider the expression 3*( ( 7+1 )/4 )+( 17-5 ) </s>
<s> this expression is made up of two subexpressions 3*( ( 7+1 )/4 ) and ( 17-5 ) combined with the operator +” </s>
<s> when the expression is represented as a binary tree the root node holds the operator + while the subtrees of the root node represent the subexpressions 3*( ( 7+1 )/4 ) and ( 17-5 ) </s>
<s> every node in the tree holds either a number or an operator </s>
<s> a node that holds a number is a leaf node of the tree </s>
<s> a node that holds an operator has two subtrees representing the operands to which the operator applies </s>
<s> the tree is shown in the illustration below </s>
<s> i will refer to a tree of this type as an expression tree given an expression tree it’s easy to ﬁnd the value of the expression that it represents </s>
<s> each node in the tree has an associated value </s>
<s> if the node is a leaf node then its value is simply the number that the node contains </s>
<s> if the node contains an operator then the associated value is computed by ﬁrst ﬁnding the values of its child nodes and then applying the operator to those values </s>
<s> the process is shown by the upward-directed arrows in the illustration </s>
<s> the value computed for the root node is the value of the expression as a whole </s>
<s> there are other uses for expression trees </s>
<s> for example a postorder traversal of the tree will output the postﬁx form of the expression 18 a tree that represents the expression 3 * ( ( 7+1 )/4 ) + ( 17 - 5 ) the upward pointing arrows show how the value of the expression can be computed 3 6 3 17 / 8 7 12 + 2 * + 7 answer 1 4 17 – 5 5 4 1 an expression tree contains two types of nodes nodes that contain numbers and nodes that contain operators </s>
<s> furthermore we might want to add other types of nodes to make the trees more useful such as nodes that contain variables </s>
<s> if we want to work with expression trees in java how can we deal with this variety of nodes one way—which will be frowned upon by object-oriented purists—is to include an instance variable in each node object to record which type of node it is enum nodetype { number operator } // possible kinds of node 460 chapter 9 </s>
<s> linked data structures and recursion class expnode { // a node in an expression tree nodetype kind double number char op expnode left expnode right // // // // // which type of node is this the value in a node of type number the operator in a node of type operator pointers to subtrees in a node of type operator expnode( double val ) { // constructor for making a node of type number kind = nodetypenumber number = val } expnode( char op expnode left expnode right ) { // constructor for making a node of type operator kind = nodetypeoperator thisop = op thisleft = left thisright = right } } // end class expnode given this deﬁnition the following recursive subroutine will ﬁnd the value of an expression tree static double getvalue( expnode node ) { // return the value of the expression represented by // the tree to which node refers </s>
<s> node must be non-null if ( nodekind == nodetypenumber ) { // the value of a number node is the number it holds return nodenumber } else { // the kind must be operator // get the values of the operands and combine them // using the operator double leftval = getvalue( nodeleft ) double rightval = getvalue( noderight ) switch ( nodeop ) { case ’+’ return leftval + rightval case ’-’ return leftval - rightval case ’*’ return leftval * rightval case ’/’ return leftval / rightval default return doublenan // bad operator } } } // end getvalue( ) although this approach works a more object-oriented approach is to note that since there are two types of nodes there should be two classes to represent them constnode and binopnode </s>
<s> to represent the general idea of a node in an expression tree we need another class expnode </s>
<s> both constnode and binopnode will be subclasses of expnode </s>
<s> since any actual node will be either a constnode or a binopnode expnode should be an abstract class ( see subsection 555 ) since one of the things we want to do with nodes is ﬁnd their values each class should have an instance method for ﬁnding the value 461 94 </s>
<s> binary trees abstract class expnode { // represents a node of any type in an expression tree abstract double value( ) // return the value of this node } // end class expnode class constnode extends expnode { // represents a node that holds a number double number // the number in the node constnode( double val ) { // constructor </s>
<s> create a node to hold val number = val } double value( ) { // the value is just the number that the node holds return number } } // end class constnode class binopnode extends expnode { // represents a node that holds an operator char op expnode left expnode right // the operator // the left operand // the right operand binopnode( char op expnode left expnode right ) { // constructor </s>
<s> create a node to hold the given data thisop = op thisleft = left thisright = right } double value( ) { // to get the value compute the value of the left and // right operands and combine them with the operator double leftval = leftvalue( ) double rightval = rightvalue( ) switch ( op ) { case ’+’ return leftval + rightval case ’-’ return leftval - rightval case ’*’ return leftval * rightval case ’/’ return leftval / rightval default return doublenan // bad operator } } } // end class binopnode note that the left and right operands of a binopnode are of type expnode not binopnode this allows the operand to be either a constnode or another binopnode—or any other type of expnode that we might eventually create </s>
<s> since every expnode has a value( ) method we can 462 chapter 9 </s>
<s> linked data structures and recursion call leftvalue( ) to compute the value of the left operand </s>
<s> if left is in fact a constnode this will call the value( ) method in the constnode class </s>
<s> if it is in fact a binopnode then leftvalue( ) will call the value( ) method in the binopnode class </s>
<s> each node knows how to compute its own value although it might seem more complicated at ﬁrst the object-oriented approach has some advantages </s>
<s> for one thing it doesn’t waste memory </s>
<s> in the original expnode class only some of the instance variables in each node were actually used and we needed an extra instance variable to keep track of the type of node </s>
<s> more important though is the fact that new types of nodes can be added more cleanly since it can be done by creating a new subclass of expnode rather than by modifying an existing class we’ll return to the topic of expression trees in the next section where we’ll see how to create an expression tree to represent a given expression 95 a simple recursive descent parser i have always been fascinated by language—both natural languages like english and the artiﬁcial languages that are used by computers </s>
<s> there are many diﬃcult questions about how languages can convey information how they are structured and how they can be processed natural and artiﬁcial languages are similar enough that the study of programming languages which are pretty well understood can give some insight into the much more complex and diﬃcult natural languages </s>
<s> and programming languages raise more than enough interesting issues to make them worth studying in their own right </s>
<s> how can it be after all that computers can be made to understand” even the relatively simple languages that are used to write programs computers can only directly use instructions expressed in very simple machine language </s>
<s> higher level languages must be translated into machine language </s>
<s> but the translation is done by a compiler which is just a program </s>
<s> how could such a translation program be written 951 backus-naur form natural and artiﬁcial languages are similar in that they have a structure known as grammar or syntax </s>
<s> syntax can be expressed by a set of rules that describe what it means to be a legal sentence or program </s>
<s> for programming languages syntax rules are often expressed in bnf ( backus-naur form ) a system that was developed by computer scientists john backus and peter naur in the late 1950s </s>
<s> interestingly an equivalent system was developed independently at about the same time by linguist noam chomsky to describe the grammar of natural language bnf cannot express all possible syntax rules </s>
<s> for example it can’t express the fact that a variable must be deﬁned before it is used </s>
<s> furthermore it says nothing about the meaning or semantics of the language </s>
<s> the problem of specifying the semantics of a language—even of an artiﬁcial programming language—is one that is still far from being completely solved </s>
<s> however bnf does express the basic structure of the language and it plays a central role in the design of translation programs in english terms such as noun” transitive verb” and prepositional phrase” are syntactic categories that describe building blocks of sentences </s>
<s> similarly statement” number” and while loop” are syntactic categories that describe building blocks of java programs </s>
<s> in bnf a syntactic category is written as a word enclosed between <” and ”>” </s>
<s> for example <noun> <verb-phrase> or <while-loop> </s>
<s> a rule in bnf speciﬁes the structure of an item in a given syntactic category in terms of other syntactic categories and/or basic symbols of the 95 </s>
<s> a simple recursive descent parser 463 language </s>
<s> for example one bnf rule for the english language might be <sentence> = <noun-phrase> <verb-phrase> the symbol =” is read can be” so this rule says that a <sentence> can be a <noun-phrase> followed by a <verb-phrase> ( the term is can be” rather than is” because there might be other rules that specify other possible forms for a sentence ) this rule can be thought of as a recipe for a sentence if you want to make a sentence make a noun-phrase and follow it by a verb-phrase </s>
<s> noun-phrase and verb-phrase must in turn be deﬁned by other bnf rules in bnf a choice between alternatives is represented by the symbol |” which is read or” for example the rule <verb-phrase> = <intransitive-verb> | ( <transitive-verb> <noun-phrase> ) says that a <verb-phrase> can be an <intransitive-verb> or a <transitive-verb> followed by a <noun-phrase> </s>
<s> note also that parentheses can be used for grouping </s>
<s> to express the fact that an item is optional it can be enclosed between [” and ]” </s>
<s> an optional item that can be repeated any number of times is enclosed between [” and ]” </s>
<s> and a symbol that is an actual part of the language that is being described is enclosed in quotes </s>
<s> for example <noun-phrase> = <common-noun> [ that <verb-phrase> ] | <common-noun> [ <prepositional-phrase> ] says that a <noun-phrase> can be a <common-noun> optionally followed by the literal word that” and a <verb-phrase> or it can be a <common-noun> followed by zero or more <prepositional-phrase>’s </s>
<s> obviously we can describe very complex structures in this way the real power comes from the fact that bnf rules can be recursive </s>
<s> in fact the two preceding rules taken together are recursive </s>
<s> a <noun-phrase> is deﬁned partly in terms of <verb-phrase> while <verb-phrase> is deﬁned partly in terms of <noun-phrase> </s>
<s> for example a <noun-phrase> might be the rat that ate the cheese” since ate the cheese” is a <verb-phrase> </s>
<s> but then we can recursively make the more complex <noun-phrase> the cat that caught the rat that ate the cheese” out of the <common-noun> the cat” the word that” and the <verb-phrase> caught the rat that ate the cheese” </s>
<s> building from there we can make the <noun-phrase> the dog that chased the cat that caught the rat that ate the cheese” </s>
<s> the recursive structure of language is one of the most fundamental properties of language and the ability of bnf to express this recursive structure is what makes it so useful bnf can be used to describe the syntax of a programming language such as java in a formal and precise way </s>
<s> for example a <while-loop> can be deﬁned as <while-loop> = while ( <condition> ) <statement> this says that a <while-loop> consists of the word while” followed by a left parenthesis followed by a <condition> followed by a right parenthesis followed by a <statement> </s>
<s> of course it still remains to deﬁne what is meant by a condition and by a statement </s>
<s> since a statement can be among other things a while loop we can already see the recursive structure of the java language </s>
<s> the exact speciﬁcation of an if statement which is hard to express clearly in words can be given as <if-statement> = if ( <condition> ) <statement> [ else if ( <condition> ) <statement> ] [ else <statement> ] 464 chapter 9 </s>
<s> linked data structures and recursion this rule makes it clear that the else” part is optional and that there can be optionally one or more else if” parts 952 recursive descent parsing in the rest of this section i will show how a bnf grammar for a language can be used as a guide for constructing a parser </s>
<s> a parser is a program that determines the grammatical structure of a phrase in the language </s>
<s> this is the ﬁrst step in determining the meaning of the phrase—which for a programming language means translating it into machine language </s>
<s> although we will look at only a simple example i hope it will be enough to convince you that compilers can in fact be written and understood by mortals and to give you some idea of how that can be done the parsing method that we will use is called recursive descent parsing </s>
<s> it is not the only possible parsing method or the most eﬃcient but it is the one most suited for writing compilers by hand ( rather than with the help of so called parser generator” programs ) </s>
<s> in a recursive descent parser every rule of the bnf grammar is the model for a subroutine </s>
<s> not every bnf grammar is suitable for recursive descent parsing </s>
<s> the grammar must satisfy a certain property </s>
<s> essentially while parsing a phrase it must be possible to tell what syntactic category is coming up next just by looking at the next item in the input </s>
<s> many grammars are designed with this property in mind i should also mention that many variations of bnf are in use </s>
<s> the one that i’ve described here is one that is well-suited for recursive descent parsing ∗ ∗ ∗ when we try to parse a phrase that contains a syntax error we need some way to respond to the error </s>
<s> a convenient way of doing this is to throw an exception </s>
<s> i’ll use an exception class called parseerror deﬁned as follows /** * an object of type parseerror represents a syntax error found in * the user’s input */ private static class parseerror extends exception { parseerror( string message ) { super( message ) } } // end nested class parseerror another general point is that our bnf rules don’t say anything about spaces between items but in reality we want to be able to insert spaces between items at will </s>
<s> to allow for this i’ll always call the routine textioskipblanks( ) before trying to look ahead to see what’s coming up next in input </s>
<s> textioskipblanks( ) skips past any whitespace such as spaces and tabs in the input and stops when the next character in the input is either a non-blank character or the end-of-line character et’s start with a very simple example </s>
<s> a fully parenthesized expression” can be speciﬁed in bnf by the rules <expression> <operator> = = <number> | ( <expression> <operator> <expression> ) + | - | * | / 95 </s>
<s> a simple recursive descent parser 465 where <number> refers to any non-negative real number </s>
<s> an example of a fully parenthesized expression is ( ( ( 34-17 )*8 )+( 2*7 ) )” </s>
<s> since every operator corresponds to a pair of parentheses there is no ambiguity about the order in which the operators are to be applied </s>
<s> suppose we want a program that will read and evaluate such expressions </s>
<s> we’ll read the expressions from standard input using textio </s>
<s> to apply recursive descent parsing we need a subroutine for each rule in the grammar </s>
<s> corresponding to the rule for <operator> we get a subroutine that reads an operator </s>
<s> the operator can be a choice of any of four things </s>
<s> any other input will be an error /** * if the next character in input is one of the legal operators * read it and return it </s>
<s> otherwise throw a parseerror */ static char getoperator( ) throws parseerror { textioskipblanks( ) char op = textiopeek( ) // look ahead at the next char without reading it if ( op == ’+’ || op == ’-’ || op == ’*’ || op == ’/’ ) { textiogetanychar( ) // read the operator to remove it from the input return op } else if ( op == ’n’ ) throw new parseerror( missing operator at end of line ) else throw new parseerror( missing operator </s>
<s> found + op + instead of + - * or / ) } // end getoperator( ) i’ve tried to give a reasonable error message depending on whether the next character is an end-of-line or something else </s>
<s> i use textiopeek( ) to look ahead at the next character before i read it and i call textioskipblanks( ) before testing textiopeek( ) in order to ignore any blanks that separate items </s>
<s> i will follow this same pattern in every case when we come to the subroutine for <expression> things are a little more interesting </s>
<s> the rule says that an expression can be either a number or an expression enclosed in parentheses we can tell which it is by looking ahead at the next character </s>
<s> if the character is a digit we have to read a number </s>
<s> if the character is a ( we have to read the ( followed by an expression followed by an operator followed by another expression followed by a )” </s>
<s> if the next character is anything else there is an error </s>
<s> note that we need recursion to read the nested expressions </s>
<s> the routine doesn’t just read the expression </s>
<s> it also computes and returns its value </s>
<s> this requires semantical information that is not speciﬁed in the bnf rule /** * read an expression from the current line of input and return its value * @throws parseerror if the input contains a syntax error */ private static double expressionvalue( ) throws parseerror { textioskipblanks( ) if ( characterisdigit( textiopeek( ) ) ) { // the next item in input is a number so the expression // must consist of just that number </s>
<s> read and return // the number return textiogetdouble( ) } else if ( textiopeek( ) == ’( ’ ) { 466 chapter 9 </s>
<s> linked data structures and recursion // the expression must be of the form // ( <expression> <operator> <expression> ) // read all these items perform the operation and // return the result textiogetanychar( ) // read the ( double leftval = expressionvalue( ) // read and evaluate first operand char op = getoperator( ) // read the operator double rightval = expressionvalue( ) // read and evaluate second operand textioskipblanks( ) if ( textiopeek( ) != ’ )’ ) { // according to the rule there must be a ) here // since it’s missing throw a parseerror throw new parseerror( missing right parenthesis ) } textiogetanychar( ) // read the ) switch ( op ) { // apply the operator and return the result case ’+’ return leftval + rightval case ’-’ return leftval - rightval case ’*’ return leftval * rightval case ’/’ return leftval / rightval default return 0 // can’t occur since op is one of the above // ( but java syntax requires a return value ) } } else { // no other character can legally start an expression throw new parseerror( encountered unexpected character + textiopeek( ) + in input ) } } // end expressionvalue( ) i hope that you can see how this routine corresponds to the bnf rule </s>
<s> where the rule uses |” to give a choice between alternatives there is an if statement in the routine to determine which choice to take </s>
<s> where the rule contains a sequence of items ( <expression> <operator> <expression> )” there is a sequence of statements in the subroutine to read each item in turn when expressionvalue( ) is called to evaluate the expression ( ( ( 34-17 )*8 )+( 2*7 ) ) it sees the ( at the beginning of the input so the else part of the if statement is executed the ( is read </s>
<s> then the ﬁrst recursive call to expressionvalue( ) reads and evaluates the subexpression ( ( 34-17 )*8 ) the call to getoperator( ) reads the +” operator and the second recursive call to expressionvalue( ) reads and evaluates the second subexpression ( 2*7 ) finally the )” at the end of the expression is read </s>
<s> of course reading the ﬁrst subexpression ( ( 34-17 )*8 ) involves further recursive calls to the expressionvalue( ) routine but it’s better not to think too deeply about that! rely on the recursion to handle the details you’ll ﬁnd a complete program that uses these routines in the ﬁle simpleparser1java ∗ ∗ ∗ fully parenthesized expressions aren’t very natural for people to use </s>
<s> but with ordinary expressions we have to worry about the question of operator precedence which tells us for example that the *” in the expression 5+3*7” is applied before the +” </s>
<s> the complex expression 3*6+8*( 7+1 )/4-24” should be seen as made up of three terms” 3*6 8*( 7+1 )/4 and 24 combined with +” and -” operators </s>
<s> a term on the other hand can be made up of several factors combined with *” and /” operators </s>
<s> for example 8*( 7+1 )/4 contains the 95 </s>
<s> a simple recursive descent parser 467 factors 8 ( 7+1 ) and 4 </s>
<s> this example also shows that a factor can be either a number or an expression in parentheses </s>
<s> to complicate things a bit more we allow for leading minus signs in expressions as in -( 3+4 )” or -7” ( since a <number> is a positive number this is the only way we can get negative numbers </s>
<s> it’s done this way to avoid 3 * -7” for example ) this structure can be expressed by the bnf rules <expression> = [ - ] <term> [ ( + | - ) <term> ] <term> = <factor> [ ( * | / ) <factor> ] <factor> = <number> | ( <expression> ) the ﬁrst rule uses the [ ]” notation which says that the items that it encloses can occur zero one two or more times </s>
<s> this means that an <expression> can begin optionally with a -” </s>
<s> then there must be a <term> which can optionally be followed by one of the operators +” or -” and another <term> optionally followed by another operator and <term> and so on </s>
<s> in a subroutine that reads and evaluates expressions this repetition is handled by a while loop </s>
<s> an if statement is used at the beginning of the loop to test whether a leading minus sign is present /** * read an expression from the current line of input and return its value * @throws parseerror if the input contains a syntax error */ private static double expressionvalue( ) throws parseerror { textioskipblanks( ) boolean negative // true if there is a leading minus sign negative = false if ( textiopeek( ) == ’-’ ) { textiogetanychar( ) // read the minus sign negative = true } double val // value of the expression val = termvalue( ) if ( negative ) val = -val textioskipblanks( ) while ( textiopeek( ) == ’+’ || textiopeek( ) == ’-’ ) { // read the next term and add it to or subtract it from // the value of previous terms in the expression char op = textiogetanychar( ) // read the operator double nextval = termvalue( ) if ( op == ’+’ ) val += nextval else val -= nextval textioskipblanks( ) } return val } // end expressionvalue( ) the subroutine for <term> is very similar to this and the subroutine for <factor> is similar to the example given above for fully parenthesized expressions </s>
<s> a complete program that reads and evaluates expressions based on the above bnf rules can be found in the ﬁle simpleparser2java 468 953 chapter 9 </s>
<s> linked data structures and recursion building an expression tree now so far we’ve only evaluated expressions </s>
<s> what does that have to do with translating programs into machine language well instead of actually evaluating the expression it would be almost as easy to generate the machine language instructions that are needed to evaluate the expression </s>
<s> if we are working with a stack machine” these instructions would be stack operations such as push a number” or apply a + operation” </s>
<s> the program simpleparser3java can both evaluate the expression and print a list of stack machine operations for evaluating the expression it’s quite a jump from this program to a recursive descent parser that can read a program written in java and generate the equivalent machine language code—but the conceptual leap is not huge the simpleparser3 program doesn’t actually generate the stack operations directly as it parses an expression </s>
<s> instead it builds an expression tree as discussed in subsection 943 to represent the expression </s>
<s> the expression tree is then used to ﬁnd the value and to generate the stack operations </s>
<s> the tree is made up of nodes belonging to classes constnode and binopnode that are similar to those given in subsection 943 </s>
<s> another class unaryminusnode has been introduced to represent the unary minus operation </s>
<s> i’ve added a method printstackcommands( ) to each class </s>
<s> this method is responsible for printing out the stack operations that are necessary to evaluate an expression </s>
<s> here for example is the new binopnode class from simpleparser3java private static class binopnode extends expnode { char op // the operator expnode left // the expression for its left operand expnode right // the expression for its right operand binopnode( char op expnode left expnode right ) { // construct a binopnode containing the specified data assert op == ’+’ || op == ’-’ || op == ’*’ || op == ’/’ assert left != null && right != null thisop = op thisleft = left thisright = right } double value( ) { // the value is obtained by evaluating the left and right // operands and combining the values with the operator double x = leftvalue( ) double y = rightvalue( ) switch ( op ) { case ’+’ return x + y case ’-’ return x - y case ’*’ return x * y case ’/’ return x / y default return doublenan // bad operator! } } 95 </s>
<s> a simple recursive descent parser 469 void printstackcommands( ) { // to evaluate the expression on a stack machine first do // whatever is necessary to evaluate the left operand leaving // the answer on the stack </s>
<s> then do the same thing for the // second operand </s>
<s> then apply the operator ( which means popping // the operands applying the operator and pushing the result ) leftprintstackcommands( ) rightprintstackcommands( ) textioputln( operator + op ) } } it’s also interesting to look at the new parsing subroutines </s>
<s> instead of computing a value each subroutine builds an expression tree </s>
<s> for example the subroutine corresponding to the rule for <expression> becomes static expnode expressiontree( ) throws parseerror { // read an expression from the current line of input and // return an expression tree representing the expression textioskipblanks( ) boolean negative // true if there is a leading minus sign negative = false if ( textiopeek( ) == ’-’ ) { textiogetanychar( ) negative = true } expnode exp // the expression tree for the expression exp = termtree( ) // start with a tree for first term if ( negative ) { // build the tree that corresponds to applying a // unary minus operator to the term we’ve // just read exp = new unaryminusnode( exp ) } textioskipblanks( ) while ( textiopeek( ) == ’+’ || textiopeek( ) == ’-’ ) { // read the next term and combine it with the // previous terms into a bigger expression tree char op = textiogetanychar( ) expnode nextterm = termtree( ) // create a tree that applies the binary operator // to the previous tree and the term we just read exp = new binopnode( op exp nextterm ) textioskipblanks( ) } return exp } // end expressiontree( ) in some real compilers the parser creates a tree to represent the program that is being parsed </s>
<s> this tree is called a parse tree </s>
<s> parse trees are somewhat diﬀerent in form from expression trees but the purpose is the same </s>
<s> once you have the tree there are a number of things you can do with it </s>
<s> for one thing it can be used to generate machine language code </s>
<s> but 470 chapter 9 </s>
<s> linked data structures and recursion there are also techniques for examining the tree and detecting certain types of programming errors such as an attempt to reference a local variable before it has been assigned a value ( the java compiler of course will reject the program if it contains such an error ) it’s also possible to manipulate the tree to optimize the program </s>
<s> in optimization the tree is transformed to make the program more eﬃcient before the code is generated and so we are back where we started in chapter 1 looking at programming languages compilers and machine language </s>
<s> but looking at them i hope with a lot more understanding and a much wider perspective 471 exercises exercises for chapter 9 1 </s>
<s> in many textbooks the ﬁrst examples of recursion are the mathematical functions factorial and ﬁbonacci </s>
<s> these functions are deﬁned for non-negative integers using the following recursive formulas factorial( 0 ) factorial( n ) = = 1 n*factorial( n-1 ) fibonacci( 0 ) fibonacci( 1 ) fibonacci( n ) = = = 1 1 fibonacci( n-1 ) + fibonacci( n-2 ) for n > 0 for n > 1 write recursive functions to compute factorial( n ) and fibonacci( n ) for a given nonnegative integer n and write a main( ) routine to test your functions ( in fact factorial and ﬁbonacci are really not very good examples of recursion since the most natural way to compute them is to use simple for loops </s>
<s> furthermore ﬁbonacci is a particularly bad example since the natural recursive approach to computing this function is extremely ineﬃcient ) 2 </s>
<s> exercise 76 asked you to read a ﬁle make an alphabetical list of all the words that occur in the ﬁle and write the list to another ﬁle </s>
<s> in that exercise you were asked to use an arraylist<string> to store the words </s>
<s> write a new version of the same program that stores the words in a binary sort tree instead of in an arraylist </s>
<s> you can use the binary sort tree routines from sorttreedemojava which was discussed in subsection 942 3 </s>
<s> suppose that linked lists of integers are made from objects belonging to the class class listnode { int item istnode next } // an item in the list // pointer to the next node in the list write a subroutine that will make a copy of a list with the order of the items of the list reversed </s>
<s> the subroutine should have a parameter of type listnode and it should return a value of type listnode </s>
<s> the original list should not be modiﬁed you should also write a main( ) routine to test your subroutine 4 </s>
<s> subsection 941 explains how to use recursion to print out the items in a binary tree in various orders </s>
<s> that section also notes that a non-recursive subroutine can be used to print the items provided that a stack or queue is used as an auxiliary data structure assuming that a queue is used here is an algorithm for such a subroutine add the root node to an empty queue while the queue is not empty get a node from the queue print the item in the node if nodeleft is not null add it to the queue if noderight is not null add it to the queue 472 chapter 9 </s>
<s> linked data structures and recursion write a subroutine that implements this algorithm and write a program to test the subroutine </s>
<s> note that you will need a queue of treenodes so you will need to write a class to represent such queues ( note that the order in which items are printed by this algorithm is diﬀerent from all three of the orders considered in subsection 941 ) 5 </s>
<s> in subsection 942 i say that if the [binary sort] tree is created by inserting items in a random order there is a high probability that the tree is approximately balanced” for this exercise you will do an experiment to test whether that is true the depth of a node in a binary tree is the length of the path from the root of the tree to that node </s>
<s> that is the root has depth 0 its children have depth 1 its grandchildren have depth 2 and so on </s>
<s> in a balanced tree all the leaves in the tree are about the same depth </s>
<s> for example in a perfectly balanced tree with 1023 nodes all the leaves are at depth 9 </s>
<s> in an approximately balanced tree with 1023 nodes the average depth of all the leaves should be not too much bigger than 9 on the other hand even if the tree is approximately balanced there might be a few leaves that have much larger depth than the average so we might also want to look at the maximum depth among all the leaves in a tree for this exercise you should create a random binary sort tree with 1023 nodes </s>
<s> the items in the tree can be real numbers and you can create the tree by generating 1023 random real numbers and inserting them into the tree using the usual treeinsert( ) method for binary sort trees </s>
<s> once you have the tree you should compute and output the average depth of all the leaves in the tree and the maximum depth of all the leaves </s>
<s> to do this you will need three recursive subroutines one to count the leaves one to ﬁnd the sum of the depths of all the leaves and one to ﬁnd the maximum depth </s>
<s> the latter two subroutines should have an int-valued parameter depth that tells how deep in the tree you’ve gone </s>
<s> when you call this routine from the main program the depth parameter is 0 when you call the routine recursively the parameter increases by 1 6 </s>
<s> the parsing programs in section 95 work with expressions made up of numbers and operators </s>
<s> we can make things a little more interesting by allowing the variable x” to occur </s>
<s> this would allow expression such as 3*( x-1 )*( x+1 )” for example </s>
<s> make a new version of the sample program simpleparser3java that can work with such expressions in your program the main( ) routine can’t simply print the value of the expression since the value of the expression now depends on the value of x </s>
<s> instead it should print the value of the expression for x=0 x=1 x=2 and x=3 the original program will have to be modiﬁed in several other ways </s>
<s> currently the program uses classes constnode binopnode and unaryminusnode to represent nodes in an expression tree </s>
<s> since expressions can now include x you will need a new class variablenode to represent an occurrence of x in the expression in the original program each of the node classes has an instance method double value( )” which returns the value of the node </s>
<s> but in your program the value can depend on x so you should replace this method with one of the form double value( double xvalue )” where the parameter xvalue is the value of x finally the parsing subroutines in your program will have to take into account the fact that expressions can contain x </s>
<s> there is just one small change in the bnf rules for the expressions a <factor> is allowed to be the variable x <factor> = <number> | <x-variable> | ( <expression> ) 473 exercises where <x-variable> can be either a lower case or an upper case x” </s>
<s> this change in the bnf requires a change in the factortree( ) subroutine 7 </s>
<s> this exercise builds on the previous exercise exercise 96 </s>
<s> to understand it you should have some background in calculus </s>
<s> the derivative of an expression that involves the variable x can be deﬁned by a few recursive rules • the derivative of a constant is 0 • the derivative of x is 1 • if a is an expression let da be the derivative of a </s>
<s> then the derivative of -a is -da • if a and b are expressions let da be the derivative of a and let db be the derivative of b </s>
<s> then the derivative of a+b is da+db • the derivative of a-b is da-db • the derivative of a*b is a*db + b*da • the derivative of a/b is ( b*da - a*db ) / ( b*b ) for this exercise you should modify your program from the previous exercise so that it can compute the derivative of an expression </s>
<s> you can do this by adding a derivativecomputing method to each of the node classes </s>
<s> first add another abstract method to the expnode class abstract expnode derivative( ) then implement this method in each of the four subclasses of expnode </s>
<s> all the information that you need is in the rules given above </s>
<s> in your main program instead of printing the stack operations for the original expression you should print out the stack operations that deﬁne the derivative </s>
<s> note that the formula that you get for the derivative can be much more complicated than it needs to be </s>
<s> for example the derivative of 3*x+1 will be computed as ( 3*1+0*x )+0 </s>
<s> this is correct even though it’s kind of ugly and it would be nice for it to be simpliﬁed </s>
<s> however simplifying expressions is not easy as an alternative to printing out stack operations you might want to print the derivative as a fully parenthesized expression </s>
<s> you can do this by adding a printinfix( ) routine to each node class </s>
<s> it would be nice to leave out unnecessary parentheses but again the problem of deciding which parentheses can be left out without altering the meaning of the expression is a fairly diﬃcult one which i don’t advise you to attempt ( there is one curious thing that happens here if you apply the rules as given to an expression tree the result is no longer a tree since the same subexpression can occur at multiple points in the derivative </s>
<s> for example if you build a node to represent b*b by saying new binopnode( ’*’bb )” then the left and right children of the new node are actually the same node! this is not allowed in a tree </s>
<s> however the diﬀerence is harmless in this case since like a tree the structure that you get has no loops in it </s>
<s> loops on the other hand would be a disaster in most of the recursive tree-processing subroutines that we have written since it would lead to inﬁnite recursion </s>
<s> the type of structure that is built by the derivative functions is technically referred to as a directed acyclic graph ) 474 chapter 9 </s>
<s> linked data structures and recursion quiz on chapter 9 1 </s>
<s> explain what is meant by a recursive subroutine 2 </s>
<s> consider the following subroutine static void printstuff( int level ) { if ( level == 0 ) { systemoutprint( * ) } else { systemoutprint( [ ) printstuff( level - 1 ) systemoutprint( ) printstuff( level - 1 ) systemoutprintln( ] ) } } show the output that would be produced by the subroutine calls printstuff( 0 ) printstuff( 1 ) printstuff( 2 ) and printstuff( 3 ) 3 </s>
<s> suppose that a linked list is formed from objects that belong to the class class listnode { int item istnode next } // an item in the list // pointer to next item in the list write a subroutine that will count the number of zeros that occur in a given linked list of ints </s>
<s> the subroutine should have a parameter of type listnode and should return a value of type int 4 </s>
<s> what are the three operations on a stack 5 </s>
<s> what is the basic diﬀerence between a stack and a queue 6 </s>
<s> what is an activation record what role does a stack of activation records play in a computer 7 </s>
<s> suppose that a binary tree of integers is formed from objects belonging to the class class treenode { int item // one item in the tree treenode left // pointer to the left subtree treenode right // pointer to the right subtree } write a recursive subroutine that will ﬁnd the sum of all the nodes in the tree </s>
<s> your subroutine should have a parameter of type treenode and it should return a value of type int 8 </s>
<s> what is a postorder traversal of a binary tree 9 </s>
<s> suppose that a <multilist> is deﬁned by the bnf rule 475 quiz <multilist> = <word> | ( [ <multilist> ] ) where a <word> can be any sequence of letters </s>
<s> give ﬁve diﬀerent <multilist>’s that can be generated by this rule ( this rule by the way is almost the entire syntax of the programming language lisp! lisp is known for its simple syntax and its elegant and powerful semantics ) 10 </s>
<s> explain what is meant by parsing a computer program 476 chapter 9 </s>
<s> linked data structures and recursion chapter 10 generic programming and collection classes how to avoid reinventing the wheel many data structures and algorithms such as those from chapter 9 have been studied programmed and re-programmed by generations of computer science students </s>
<s> this is a valuable learning experience </s>
<s> unfortunately they have also been programmed and re-programmed by generations of working computer professionals taking up time that could be devoted to new more creative work </s>
<s> a programmer who needs a list or a binary tree shouldn’t have to re-code these data structures from scratch </s>
<s> they are well-understood and have been programmed thousands of times before </s>
<s> the problem is how to make pre-written robust data structures available to programmers </s>
<s> in this chapter we’ll look at java’s attempt to address this problem 101 generic programming generic programming refers to writing code that will work for many types of data </s>
<s> we encountered the term in section 73 where we looked at dynamic arrays of integers </s>
<s> the source code presented there for working with dynamic arrays of integers works only for data of type int </s>
<s> but the source code for dynamic arrays of double string jbutton or any other type would be almost identical except for the substitution of one type name for another </s>
<s> it seems silly to write essentially the same code over and over </s>
<s> as we saw in subsection 733 java goes some distance towards solving this problem by providing the arraylist class </s>
<s> an arraylist is essentially a dynamic array of values of type object </s>
<s> since every class is a subclass of object objects of any type can be stored in an arraylist </s>
<s> java goes even further by providing parameterized types” which were introduced in subsection 734 </s>
<s> there we saw that the arraylist type can be parameterized as in arraylist<string>” to limit the values that can be stored in the list to objects of a speciﬁed type </s>
<s> parameterized types extend java’s basic philosophy of type-safe programming to generic programming the arraylist class is just one of several standard classes that are used for generic programming in java </s>
<s> we will spend the next few sections looking at these classes and how they are used and we’ll see that there are also generic methods and generic interfaces ( see subsection 571 ) </s>
<s> all the classes and interfaces discussed in these sections are deﬁned in the package javautil and you will need an import statement at the beginning of your program to get access to them ( before you start putting import javautil*” at the beginning of every program you should know that some things in javautil have names that are the same as 477 478 chapter 10 </s>
<s> generic programming and collection classes things in other packages </s>
<s> for example both javautillist and javaawtlist exist so it is often better to import the individual classes that you need ) in the ﬁnal section of this chapter we will see that it is possible to deﬁne new generic classes interfaces and methods </s>
<s> until then we will stick to using the generics that are predeﬁned in java’s standard library it is no easy task to design a library for generic programming </s>
<s> java’s solution has many nice features but is certainly not the only possible approach </s>
<s> it is almost certainly not the best and has a few features that in my opinion can only be called bizarre but in the context of the overall design of java it might be close to optimal </s>
<s> to get some perspective on generic programming in general it might be useful to look very brieﬂy at generic programming in two other languages 1011 generic programming in smalltalk smalltalk was one of the very ﬁrst object-oriented programming languages </s>
<s> it is still used today although its use is not very common </s>
<s> it has not achieved anything like the popularity of java or c++ but it is the source of many ideas used in these languages </s>
<s> in smalltalk essentially all programming is generic because of two basic properties of the language first of all variables in smalltalk are typeless </s>
<s> a data value has a type such as integer or string but variables do not have types </s>
<s> any variable can hold data of any type </s>
<s> parameters are also typeless so a subroutine can be applied to parameter values of any type </s>
<s> similarly a data structure can hold data values of any type </s>
<s> for example once you’ve deﬁned a binary tree data structure in smalltalk you can use it for binary trees of integers or strings or dates or data of any other type </s>
<s> there is simply no need to write new code for each data type secondly all data values are objects and all operations on objects are deﬁned by methods in a class </s>
<s> this is true even for types that are primitive” in java such as integers </s>
<s> when the +” operator is used to add two integers the operation is performed by calling a method in the integer class </s>
<s> when you deﬁne a new class you can deﬁne a +” operator and you will then be able to add objects belonging to that class by saying a + b” just as if you were adding numbers </s>
<s> now suppose that you write a subroutine that uses the +” operator to add up the items in a list </s>
<s> the subroutine can be applied to a list of integers but it can also be applied automatically to any other data type for which +” is deﬁned </s>
<s> similarly a subroutine that uses the < operator to sort a list can be applied to lists containing any type of data for which <” is deﬁned </s>
<s> there is no need to write a diﬀerent sorting subroutine for each type of data put these two features together and you have a language where data structures and algorithms will work for any type of data for which they make sense that is for which the appropriate operations are deﬁned </s>
<s> this is real generic programming </s>
<s> this might sound pretty good and you might be asking yourself why all programming languages don’t work this way this type of freedom makes it easier to write programs but unfortunately it makes it harder to write programs that are correct and robust ( see chapter 8 ) </s>
<s> once you have a data structure that can contain data of any type it becomes hard to ensure that it only holds the type of data that you want it to hold </s>
<s> if you have a subroutine that can sort any type of data it’s hard to ensure that it will only be applied to data for which the <” operator is deﬁned </s>
<s> more particularly there is no way for a compiler to ensure these things </s>
<s> the problem will only show up at run time when an attempt is made to apply some operation to a data type for which it is not deﬁned and the program will crash 101 </s>
<s> generic programming 1012 479 generic programming in c++ unlike smalltalk c++ is a very strongly typed language even more so than java </s>
<s> every variable has a type and can only hold data values of that type </s>
<s> this means that the kind of generic programming that is used in smalltalk is impossible in c++ </s>
<s> furthermore c++ does not have anything corresponding to java’s object class </s>
<s> that is there is no class that is a superclass of all other classes </s>
<s> this means that c++ can’t use java’s style of generic programming with non-parameterized generic types either </s>
<s> nevertheless c++ has a powerful and ﬂexible system of generic programming </s>
<s> it is made possible by a language feature known as templates </s>
<s> in c++ instead of writing a diﬀerent sorting subroutine for each type of data you can write a single subroutine template </s>
<s> the template is not a subroutine it’s more like a factory for making subroutines </s>
<s> we can look at an example since the syntax of c++ is very similar to java’s template<class itemtype> void sort( itemtype a[] int count ) { // sort items in the array a into increasing order // the items in positions 0 1 2 ( count-1 ) are sorted // the algorithm that is used here is selection sort for ( int i = count-1 i > 0 i -- ) { int position of max = 0 for ( int j = 1 j <= count j++ ) if ( a[j] > a[position of max] ) position of max = j itemtype temp = a[count] a[count] = a[position of max] a[position of max] = temp } } this piece of code deﬁnes a subroutine template </s>
<s> if you remove the ﬁrst line template<class itemtype>” and substitute the word int” for the word itemtype” in the rest of the template you get a subroutine for sorting arrays of ints ( even though it says class itemtype” you can actually substitute any type for itemtype including the primitive types ) if you substitute string” for itemtype” you get a subroutine for sorting arrays of strings </s>
<s> this is pretty much what the compiler does with the template </s>
<s> if your program says sort( list10 )” where list is an array of ints the compiler uses the template to generate a subroutine for sorting arrays of ints </s>
<s> if you say sort( cards10 )” where cards is an array of objects of type card then the compiler generates a subroutine for sorting arrays of cards </s>
<s> at least it tries to </s>
<s> the template uses the >” operator to compare values </s>
<s> if this operator is deﬁned for values of type card then the compiler will successfully use the template to generate a subroutine for sorting cards </s>
<s> if >” is not deﬁned for cards then the compiler will fail—but this will happen at compile time not as in smalltalk at run time where it would make the program crash in addition to subroutine templates c++ also has templates for making classes </s>
<s> if you write a template for a binary tree class you can use it to generate classes for binary trees of ints binary trees of strings binary trees of dates and so on—all from one template </s>
<s> the most recent version of c++ comes with a large number of pre-written templates called the standard template library or stl </s>
<s> the stl is quite complex </s>
<s> many people would say that it’s much too complex </s>
<s> but it is also one of the most interesting features of c++ 480 1013 chapter 10 </s>
<s> generic programming and collection classes generic programming in java java’s generic programming features have gone through several stages of development </s>
<s> the original version of java had just a few generic data structure classes such as vector that could hold values of type object </s>
<s> java version 12 introduced a much larger group of generics that followed the same basic model </s>
<s> these generic classes and interfaces as a group are known as the java collection framework </s>
<s> the arraylist class is part of the collection framework the original collection framework was closer in spirit to smalltalk than it was to c++ since a data structure designed to hold objects can be used with objects of any type </s>
<s> unfortunately as in smalltalk the result is a category of errors that show up only at run time rather than at compile time </s>
<s> if a programmer assumes that all the items in a data structure are strings and tries to process those items as strings a run-time error will occur if other types of data have inadvertently been added to the data structure </s>
<s> in java the error will most likely occur when the program retrieves an object from the data structure and tries to type-cast it to type string </s>
<s> if the object is not actually of type string the illegal type-cast will throw an error of type classcastexception java 50 introduced parameterized types such as arraylist<string> </s>
<s> this made it possible to create generic data structures that can be type-checked at compile time rather than at run time with these data structures type-casting is not necessary so classcastexceptions are avoided the compiler will detect any attempt to add an object of the wrong type to the data structure it will report a syntax error and will refuse to compile the program </s>
<s> in java 50 all of the classes and interfaces in the collection framework and even some classes that are not part of that framework have been parameterized </s>
<s> java’s parameterized classes are similar to template classes in c++ ( although the implementation is very diﬀerent ) and their introduction moves java’s generic programming model closer to c++ and farther from smalltalk </s>
<s> in this chapter i will use the parameterized types almost exclusively but you should remember that their use is not mandatory </s>
<s> it is still legal to use a parameterized class as a non-parameterized type such as a plain arraylist note that there is a signiﬁcant diﬀerence between parameterized classes in java and template classes in c++ </s>
<s> a template class in c++ is not really a class at all—it’s a kind of factory for generating classes </s>
<s> every time the template is used with a new type a new compiled class is created </s>
<s> with a java parameterized class there is only one compiled class ﬁle </s>
<s> for example there is only one compiled class ﬁle arraylistclass for the parameterized class arraylist the parameterized types arraylist<string> and arraylist<integer> both use the same compiled class ﬁle as does the plain arraylist type </s>
<s> the type parameter—string or integer —just tells the compiler to limit the type of object that can be stored in the data structure </s>
<s> the type parameter has no eﬀect at run time and is not even known at run time </s>
<s> the type information is said to be erased” at run time </s>
<s> this type erasure introduces a certain amount of weirdness </s>
<s> for example you can’t test if ( list instanceof arraylist<string> )” because the instanceof operator is evaluated at run time and at run time only the plain arraylist exists </s>
<s> even worse you can’t create an array that has base type arraylist<string> by using the new operator as in new arraylist<string>[n]” </s>
<s> this is because the new operator is evaluated at run time and at run time there is no such thing as arraylist<string>” only the non-parameterized type arraylist exists at run time fortunately most programmers don’t have to deal with such problems since they turn up only in fairly advanced programming </s>
<s> most people who use the java collection framework will not encounter them and they will get the beneﬁts of type-safe generic programming with little diﬃculty 481 101 </s>
<s> generic programming 1014 the java collection framework java’s generic data structures can be divided into two categories collections and maps </s>
<s> a collection is more or less what it sounds like a collection of objects </s>
<s> a map associates objects in one set with objects in another set in the way that a dictionary associates deﬁnitions with words or a phone book associates phone numbers with names </s>
<s> a map is similar to what i called an association list” in subsection 742 </s>
<s> in java collections and maps are represented by the parameterized interfaces collection<t> and map<ts> </s>
<s> here t” and s” stand for any type except for the primitive types </s>
<s> map<ts> is the ﬁrst example we have seen where there are two type parameters t and s we will not deal further with this possibility until we look at maps more closely in section 103 </s>
<s> in this section and the next we look at collections only there are two types of collections lists and sets </s>
<s> a list is a collection in which the objects are arranged in a linear sequence </s>
<s> a list has a ﬁrst item a second item and so on </s>
<s> for any item in the list except the last there is an item that directly follows it </s>
<s> the deﬁning property of a set is that no object can occur more than once in a set the elements of a set are not necessarily thought of as being in any particular order </s>
<s> the ideas of lists and sets are represented as parameterized interfaces list<t> and set<t> </s>
<s> these are sub-interfaces of collection<t> </s>
<s> that is any object that implements the interface list<t> or set<t> automatically implements collection<t> as well </s>
<s> the interface collection<t> speciﬁes general operations that can be applied to any collection at all </s>
<s> list<t> and set<t> add additional operations that are appropriate for lists and sets respectively of course any actual object that is a collection list or set must belong to a concrete class that implements the corresponding interface </s>
<s> for example the class arraylist<t> implements the interface list<t> and therefore also implements collection<t> </s>
<s> this means that all the methods that are deﬁned in the list and collection interfaces can be used with for example an arraylist<string> object </s>
<s> we will look at various classes that implement the list and set interfaces in the next section </s>
<s> but before we do that we’ll look brieﬂy at some of the general operations that are available for all collections ∗ ∗ ∗ the interface collection<t> speciﬁes methods for performing some basic operations on any collection of objects </s>
<s> since collection” is a very general concept operations that can be applied to all collections are also very general </s>
<s> they are generic operations in the sense that they can be applied to various types of collections containing various types of objects </s>
<s> suppose that coll is an object that implements the interface collection<t> ( for some speciﬁc non-primitive type t ) </s>
<s> then the following operations which are speciﬁed in the interface collection<t> are deﬁned for coll • collsize( ) — returns an int that gives the number of objects in the collection • collisempty( ) — returns a boolean value which is true if the size of the collection is 0 • collclear( ) — removes all objects from the collection • colladd( tobject ) — adds tobject to the collection </s>
<s> the parameter must be of type t if not a syntax error occurs at compile time </s>
<s> this method returns a boolean value which tells you whether the operation actually modiﬁed the collection </s>
<s> for example adding an object to a set has no eﬀect if that object was already in the set • collcontains( object ) — returns a boolean value that is true if object is in the collection </s>
<s> note that object is not required to be of type t since it makes sense to check whether object is in the collection no matter what type object has ( for testing 482 chapter 10 </s>
<s> generic programming and collection classes equality null is considered to be equal to itself </s>
<s> the criterion for testing non-null objects for equality can diﬀer from one kind of collection to another see subsection 1016 below ) • collremove( object ) — removes object from the collection if it occurs in the collection and returns a boolean value that tells you whether the object was found </s>
<s> again object is not required to be of type t • collcontainsall( coll2 ) — returns a boolean value that is true if every object in coll2 is also in coll </s>
<s> the parameter can be any collection • colladdall( coll2 ) — adds all the objects in coll2 to coll </s>
<s> the parameter coll2 can be any collection of type collection<t> </s>
<s> however it can also be more general </s>
<s> for example if t is a class and s is a sub-class of t then coll2 can be of type collection<s> this makes sense because any object of type s is automatically of type t and so can legally be added to coll • collremoveall( coll2 ) — removes every object from coll that also occurs in the collection coll2 coll2 can be any collection • collretainall( coll2 ) — removes every object from coll that does not occur in the collection coll2 </s>
<s> it retains” only the objects that do occur in coll2 coll2 can be any collection • colltoarray( ) — returns an array of type object[ ] that contains all the items in the collection </s>
<s> note that the return type is object[ ] not t[ ]! however there is another version of this method that takes an array of type t[ ] as a parameter the method colltoarray( tarray ) returns an array of type t[ ] containing all the items in the collection </s>
<s> if the array parameter tarray is large enough to hold the entire collection then the items are stored in tarray and tarray is also the return value of the collection </s>
<s> if tarray is not large enough then a new array is created to hold the items in that case tarray serves only to specify the type of the array </s>
<s> for example colltoarray( new string[0] ) can be used if coll is a collection of strings and will return a new array of type string[ ] since these methods are part of the collection<t> interface they must be deﬁned for every object that implements that interface </s>
<s> there is a problem with this however </s>
<s> for example the size of some collections cannot be changed after they are created </s>
<s> methods that add or remove objects don’t make sense for these collections </s>
<s> while it is still legal to call the methods an exception will be thrown when the call is evaluated at run time </s>
<s> the type of the exception is unsupportedoperationexception </s>
<s> furthermore since collection<t> is only an interface not a concrete class the actual implementation of the method is left to the classes that implement the interface </s>
<s> this means that the semantics of the methods as described above are not guaranteed to be valid for all collection objects they are valid however for classes in the java collection framework there is also the question of eﬃciency </s>
<s> even when an operation is deﬁned for several types of collections it might not be equally eﬃcient in all cases </s>
<s> even a method as simple as size( ) can vary greatly in eﬃciency </s>
<s> for some collections computing the size( ) might involve counting the items in the collection </s>
<s> the number of steps in this process is equal to the number of items other collections might have instance variables to keep track of the size so evaluating size( ) just means returning the value of a variable </s>
<s> in this case the computation takes only one step no matter how many items there are </s>
<s> when working with collections it’s good to have some idea of how eﬃcient operations are and to choose a collection for which the operations that you need can be implemented most eﬃciently </s>
<s> we’ll see speciﬁc examples of this in the next two sections 483 101 </s>
<s> generic programming 1015 iterators and for-each loops the interface collection<t> deﬁnes a few basic generic algorithms but suppose you want to write your own generic algorithms </s>
<s> suppose for example you want to do something as simple as printing out every item in a collection </s>
<s> to do this in a generic way you need some way of going through an arbitrary collection accessing each item in turn </s>
<s> we have seen how to do this for speciﬁc data structures for an array you can use a for loop to iterate through all the array indices </s>
<s> for a linked list you can use a while loop in which you advance a pointer along the list </s>
<s> for a binary tree you can use a recursive subroutine to do an inorder traversal collections can be represented in any of these forms and many others besides </s>
<s> with such a variety of traversal mechanisms how can we even hope to come up with a single generic method that will work for collections that are stored in wildly diﬀerent forms this problem is solved by iterators </s>
<s> an iterator is an object that can be used to traverse a collection </s>
<s> diﬀerent types of collections have iterators that are implemented in diﬀerent ways but all iterators are used in the same way </s>
<s> an algorithm that uses an iterator to traverse a collection is generic because the same technique can be applied to any type of collection </s>
<s> iterators can seem rather strange to someone who is encountering generic programming for the ﬁrst time but you should understand that they solve a diﬃcult problem in an elegant way the interface collection<t> deﬁnes a method that can be used to obtain an iterator for any collection </s>
<s> if coll is a collection then colliterator( ) returns an iterator that can be used to traverse the collection </s>
<s> you should think of the iterator as a kind of generalized pointer that starts at the beginning of the collection and can move along the collection from one item to the next </s>
<s> iterators are deﬁned by a parameterized interface named iterator<t> </s>
<s> if coll implements the interface collection<t> for some speciﬁc type t then colliterator( ) returns an iterator of type iterator<t> with the same type t as its type parameter </s>
<s> the interface iterator<t> deﬁnes just three methods </s>
<s> if iter refers to an object that implements iterator<t> then we have • iternext( ) — returns the next item and advances the iterator </s>
<s> the return value is of type t </s>
<s> this method lets you look at one of the items in the collection </s>
<s> note that there is no way to look at an item without advancing the iterator past that item </s>
<s> if this method is called when no items remain it will throw a nosuchelementexception • iterhasnext( ) — returns a boolean value telling you whether there are more items to be processed </s>
<s> in general you should test this before calling iternext( ) • iterremove( ) — if you call this after calling iternext( ) it will remove the item that you just saw from the collection </s>
<s> note that this method has no parameter </s>
<s> it removes the item that was most recently returned by iternext( ) </s>
<s> this might produce an unsupportedoperationexception if the collection does not support removal of items using iterators we can write code for printing all the items in any collection </s>
<s> suppose for example that coll is of type collection<string> </s>
<s> in that case the value returned by colliterator( ) is of type iterator<string> and we can say iterator<string> iter iter = colliterator( ) while ( iterhasnext( ) ) { string item = iternext( ) systemoutprintln( item ) } // declare the iterator variable // get an iterator for the collection // get the next item 484 chapter 10 </s>
<s> generic programming and collection classes the same general form will work for other types of processing </s>
<s> for example the following code will remove all null values from any collection of type collection<jbutton> ( as long as that collection supports removal of values ) iterator<jbutton> iter = colliterator( ) while ( iterhasnext( ) ) { jbutton item = iternext( ) if ( item == null ) iterremove( ) } ( note by the way that when collection<t> iterator<t> or any other parameterized type is used in actual code they are always used with actual types such as string or jbutton in place of the formal type parameter” t </s>
<s> an iterator of type iterator<string> is used to iterate through a collection of strings an iterator of type iterator<jbutton> is used to iterate through a collection of jbuttons and so on ) an iterator is often used to apply the same operation to all the elements in a collection in many cases it’s possible to avoid the use of iterators for this purpose by using a for-each loop </s>
<s> the for-each loop was discussed in subsection 344 for use with enumerated types and in subsection 722 for use with arrays </s>
<s> a for-each loop can also be used to iterate through any collection </s>
<s> for a collection coll of type collection<t> a for-each loop takes the form for ( t x coll ) { // for each object x of type t in coll // process x } here x is the loop control variable </s>
<s> each object in coll will be assigned to x in turn and the body of the loop will be executed for each object </s>
<s> since objects in coll are of type t x is declared to be of type t </s>
<s> for example if namelist is of type collection<string> we can print out all the names in the collection with for ( string name namelist ) { systemoutprintln( name ) } this for-each loop could of course be written as a while loop using an iterator but the for-each loop is much easier to follow 1016 equality and comparison there are several methods in the collection interface that test objects for equality </s>
<s> for example the methods collcontains( object ) and collremove( object ) look for an item in the collection that is equal to object </s>
<s> however equality is not such a simple matter </s>
<s> the obvious technique for testing equality—using the == operator—does not usually give a reasonable answer when applied to objects </s>
<s> the == operator tests whether two objects are identical in the sense that they share the same location in memory </s>
<s> usually however we want to consider two objects to be equal if they represent the same value which is a very diﬀerent thing </s>
<s> two values of type string should be considered equal if they contain the same sequence of characters </s>
<s> the question of whether those characters are stored in the same location in memory is irrelevant two values of type date should be considered equal if they represent the same time the object class deﬁnes the boolean-valued method equals( object ) for testing whether one object is equal to another </s>
<s> this method is used by many but not by all collection classes for deciding whether two objects are to be considered the same </s>
<s> in the object class 101 </s>
<s> generic programming 485 obj1equals( obj2 ) is deﬁned to be the same as obj1 == obj2 </s>
<s> however for most sub-classes of object this deﬁnition is not reasonable and it should be overridden </s>
<s> the string class for example overrides equals( ) so that for a string str strequals( obj ) if obj is also a string and obj contains the same sequence of characters as str if you write your own class you might want to deﬁne an equals( ) method in that class to get the correct behavior when objects are tested for equality </s>
<s> for example a card class that will work correctly when used in collections could be deﬁned as public class card { // class to represent playing cards int suit // number from 0 to 3 that codes for the suit -// spades diamonds clubs or hearts int value // number from 1 to 13 that represents the value public boolean equals( object obj ) { try { card other = ( card )obj // type-cast obj to a card if ( suit == othersuit && value == othervalue ) { // the other card has the same suit and value as // this card so they should be considered equal return true } else return false } catch ( exception e ) { // this will catch the nullpointerexception that occurs if obj // is null and the classcastexception that occurs if obj is // not of type card </s>
<s> in these cases obj is not equal to // this card so return false return false } } // other methods and constructors } without the equals( ) method in this class methods such as contains( ) and remove( ) in the interface collection<card> will not work as expected a similar concern arises when items in a collection are sorted </s>
<s> sorting refers to arranging a sequence of items in ascending order according to some criterion </s>
<s> the problem is that there is no natural notion of ascending order for arbitrary objects </s>
<s> before objects can be sorted some method must be deﬁned for comparing them </s>
<s> objects that are meant to be compared should implement the interface javalangcomparable </s>
<s> in fact comparable is deﬁned as a parameterized interface comparable<t> which represents the ability to be compared to an object of type t </s>
<s> the interface comparable<t> deﬁnes one method public int compareto( t obj ) the value returned by obj1compareto( obj2 ) should be negative if and only if obj1 comes before obj2 when the objects are arranged in ascending order </s>
<s> it should be positive if and only if obj1 comes after obj2 </s>
<s> a return value of zero means that the objects are considered 486 chapter 10 </s>
<s> generic programming and collection classes to be the same for the purposes of this comparison </s>
<s> this does not necessarily mean that the objects are equal in the sense that obj1equals( obj2 ) is true </s>
<s> for example if the objects are of type address representing mailing addresses it might be useful to sort the objects by zip code </s>
<s> two addresses are considered the same for the purposes of the sort if they have the same zip code—but clearly that would not mean that they are the same address the string class implements the interface comparable<string> and deﬁnes compareto in a reasonable way </s>
<s> in this case the return value of compareto is zero if and only if the two strings that are being compared are equal ( it is generally a good idea for the compareto method in classes that implement comparable to have the analogous property ) if you deﬁne your own class and want to be able to sort objects belonging to that class you should do the same </s>
<s> for example /** * represents a full name consisting of a first name and a last name */ public class fullname implements comparable<fullname> { private string firstname lastname // non-null first and last names public fullname( string first string last ) { // constructor if ( first == null || last == null ) throw new illegalargumentexception( names must be non-null ) firstname = first lastname = last } public boolean equals( object obj ) { try { fullname other = ( fullname )obj // type-cast obj to type fullname return firstnameequals( otherfirstname ) && lastnameequals( otherlastname ) } catch ( exception e ) { return false // if obj is null or is not of type fullname } } public int compareto( fullname other ) { if ( lastnamecompareto( otherlastname ) < 0 ) { // if lastname comes before the last name of // the other object then this fullname comes // before the other fullname </s>
<s> return a negative // value to indicate this return -1 } else if ( lastnamecompareto( otherlastname ) > 0 ) { // if lastname comes after the last name of // the other object then this fullname comes // after the other fullname </s>
<s> return a positive // value to indicate this return 1 } else { // last names are the same so base the comparison on 101 </s>
<s> generic programming 487 // the first names using compareto from class string return firstnamecompareto( otherfirstname ) } } // other methods } ( i ﬁnd it a little odd that the class here is declared as class fullname implements comparable<fullname>” with fullname” repeated as a type parameter in the name of the interface </s>
<s> however it does make sense </s>
<s> it means that we are going to compare objects that belong to the class fullname to other objects of the same type </s>
<s> even though this is the only reasonable thing to do that fact is not obvious to the java compiler—and the type parameter in comparable<fullname> is there for the compiler ) there is another way to allow for comparison of objects in java and that is to provide a separate object that is capable of making the comparison </s>
<s> the object must implement the interface comparator<t> where t is the type of the objects that are to be compared </s>
<s> the interface comparator<t> deﬁnes the method public int compare( t obj1 t obj2 ) this method compares two objects of type t and returns a value that is negative or positive or zero depending on whether obj1 comes before obj2 or comes after obj2 or is considered to be the same as obj2 for the purposes of this comparison </s>
<s> comparators are useful for comparing objects that do not implement the comparable interface and for deﬁning several diﬀerent orderings on the same collection of objects in the next two sections we’ll see how comparable and comparator are used in the context of collections and maps 1017 generics and wrapper classes as noted above java’s generic programming does not apply to the primitive types since generic data structures can only hold objects while values of primitive type are not objects </s>
<s> however the wrapper classes” that were introduced in subsection 532 make it possible to get around this restriction to a great extent recall that each primitive type has an associated wrapper class class integer for type int class boolean for type boolean class character for type char and so on an object of type integer contains a value of type int </s>
<s> the object serves as a wrapper” for the primitive type value which allows it to be used in contexts where objects are required such as in generic data structures </s>
<s> for example a list of integers can be stored in a variable of type arraylist<integer> and interfaces such as collection<integer> and set<integer> are deﬁned furthermore class integer deﬁnes equals( ) compareto( ) and tostring( ) methods that do what you would expect ( that is that compare and write out the corresponding primitive type values in the usual way ) </s>
<s> similar remarks apply for all the wrapper classes recall also that java does automatic conversions between a primitive type and the corresponding wrapper type ( these conversions which are called autoboxing and unboxing were also introduced in subsection 532 ) this means that once you have created a generic data structure to hold objects belonging to one of the wrapper classes you can use the data structure 488 chapter 10 </s>
<s> generic programming and collection classes pretty much as if it actually contained primitive type values </s>
<s> for example if numbers is a variable of type collection<integer> it is legal to call numbersadd( 17 ) or numbersremove( 42 ) you can’t literally add the primitive type value 17 to numbers but java will automatically convert the 17 to the corresponding wrapper object new integer( 17 ) and the wrapper object will be added to the collection ( the creation of the object does add some time and memory overhead to the operation and you should keep that in mind in situations where eﬃciency is important </s>
<s> an array of int is more eﬃcient than an arraylist<integer> ) 102 ists and sets in the previous section we looked at the general properties of collection classes in java in this section we look at some speciﬁc collection classes and how to use them </s>
<s> these classes can be divided into two categories lists and sets </s>
<s> a list consists of a sequence of items arranged in a linear order </s>
<s> a list has a deﬁnite order but is not necessarily sorted into ascending order </s>
<s> a set is a collection that has no duplicate entries </s>
<s> the elements of a set might or might not be arranged into some deﬁnite order 1021 arraylist and linkedlist there are two obvious ways to represent a list as a dynamic array and as a linked list </s>
<s> we’ve encountered these already in section 73 and section 92 </s>
<s> both of these options are available in generic form as the collection classes javautilarraylist and javautillinkedlist these classes are part of the java collection framework </s>
<s> each implements the interface list<t> and therefore the interface collection<t> </s>
<s> an object of type arraylist<t> represents an ordered sequence of objects of type t stored in an array that will grow in size whenever necessary as new items are added </s>
<s> an object of type linkedlist<t> also represents an ordered sequence of objects of type t but the objects are stored in nodes that are linked together with pointers both list classes support the basic list operations that are deﬁned in the interface list<t> and an abstract data type is deﬁned by its operations not by its representation </s>
<s> so why two classes why not a single list class with a single representation the problem is that there is no single representation of lists for which all list operations are eﬃcient </s>
<s> for some operations linked lists are more eﬃcient than arrays </s>
<s> for others arrays are more eﬃcient </s>
<s> in a particular application of lists it’s likely that only a few operations will be used frequently </s>
<s> you want to choose the representation for which the frequently used operations will be as eﬃcient as possible broadly speaking the linkedlist class is more eﬃcient in applications where items will often be added or removed at the beginning of the list or in the middle of the list </s>
<s> in an array these operations require moving a large number of items up or down one position in the array to make a space for a new item or to ﬁll in the hole left by the removal of an item </s>
<s> in terms of asymptotic analysis ( section 85 ) adding an element at the beginning or in the middle of an array has run time Θ( n ) where n is the number of items in the array </s>
<s> in a linked list nodes can be added or removed at any position by changing a few pointer values an operation that has run time Θ( 1 ) </s>
<s> that is the operation takes only some constant amount of time independent of how many items are in the list on the other hand the arraylist class is more eﬃcient when random access to items is required </s>
<s> random access means accessing the k-th item in the list for any integer k </s>
<s> random access is used when you get or change the value stored at a speciﬁed position in the list </s>
<s> this is 102 </s>
<s> lists and sets 489 trivial for an array with run time Θ( 1 ) </s>
<s> but for a linked list it means starting at the beginning of the list and moving from node to node along the list for k steps an operation that has run time Θ( k ) operations that can be done eﬃciently for both types of lists include sorting and adding an item at the end of the list all lists implement the methods from interface collection<t> that were discussed in subsection 1014 </s>
<s> these methods include size( ) isempty( ) add( t ) remove( object ) and clear( ) </s>
<s> the add( t ) method adds the object at the end of the list </s>
<s> the remove( object ) method involves ﬁrst ﬁnding the object which is not very eﬃcient for any list since it involves going through the items in the list from beginning to end until the object is found </s>
<s> the interface ist<t> adds some methods for accessing list items according to their numerical positions in the list </s>
<s> suppose that list is an object of type list<t> </s>
<s> then we have the methods • listget( index ) — returns the object of type t that is at position index in the list where index is an integer </s>
<s> items are numbered 0 1 2 listsize( )-1 </s>
<s> the parameter must be in this range or an indexoutofboundsexception is thrown • listset( indexobj ) — stores the object obj at position number index in the list replacing the object that was there previously </s>
<s> the object obj must be of type t </s>
<s> this does not change the number of elements in the list or move any of the other elements • listadd( indexobj ) — inserts an object obj into the list at position number index where obj must be of type t </s>
<s> the number of items in the list increases by one and items that come after position index move down one position to make room for the new item the value of index must be in the range 0 to listsize( ) inclusive </s>
<s> if index is equal to listsize( ) then obj is added at the end of the list • listremove( index ) — removes the object at position number index and returns that object as the return value of the method </s>
<s> items after this position move up one space in the list to ﬁll the hole and the size of the list decreases by one </s>
<s> the value of index must be in the range 0 to listsize( )-1 • listindexof( obj ) — returns an int that gives the position of obj in the list if it occurs if it does not occur the return value is -1 </s>
<s> the object obj can be of any type not just of type t </s>
<s> if obj occurs more than once in the list the index of the ﬁrst occurrence is returned these methods are deﬁned both in class arraylist<t> and in class linkedlist<t> although some of them—get and set—are only eﬃcient for arraylists </s>
<s> the class linkedlist<t> adds a few additional methods which are not deﬁned for an arraylist </s>
<s> if linkedlist is an object of type linkedlist<t> then we have • linkedlistgetfirst( ) — returns the object of type t that is the ﬁrst item in the list the list is not modiﬁed </s>
<s> if the list is empty when the method is called an exception of type nosuchelementexception is thrown ( the same is true for the next three methods as well ) • linkedlistgetlast( ) — returns the object of type t that is the last item in the list the list is not modiﬁed • linkedlistremovefirst( ) — removes the ﬁrst item from the list and returns that object of type t as its return value • linkedlistremovelast( ) — removes the last item from the list and returns that object of type t as its return value 490 chapter 10 </s>
<s> generic programming and collection classes • linkedlistaddfirst( obj ) — adds the obj which must be of type t to the beginning of the list • linkedlistaddlast( obj ) — adds the object obj which must be of type t to the end of the list ( this is exactly the same as linkedlistadd( obj ) but is deﬁned to keep the naming consistent ) these methods are apparently deﬁned to make it easy to use a linkedlist as if it were a stack or a queue ( see section 93 ) for example we can use a linkedlist as a queue by adding items onto one end of the list ( using the addlast( ) method ) and removing them from the other end ( using the removefirst( ) method ) if list is an object of type list<t> then the method listiterator( ) deﬁned in the interface collection<t> returns an iterator that can be used to traverse the list from beginning to end </s>
<s> however for lists there is a special type of iterator called a listiterator which oﬀers additional capabilities </s>
<s> listiterator<t> is an interface that extends the interface iterator<t> the method listlistiterator( ) returns an object of type listiterator<t> a listiterator has the usual iterator methods hasnext( ) next( ) and remove( ) but it also has methods hasprevious( ) previous( ) and add( obj ) that make it possible to move backwards in the list and to add an item at the current position of the iterator </s>
<s> to understand how these work it’s best to think of an iterator as pointing to a position between two list elements or at the beginning or end of the list </s>
<s> in this diagram the items in a list are represented by squares and arrows indicate the possible positions of an iterator if iter is of type listiterator<t> then iternext( ) moves the iterator one space to the right along the list and returns the item that the iterator passes as it moves </s>
<s> the method iterprevious( ) moves the iterator one space to the left along the list and returns the item that it passes </s>
<s> the method iterremove( ) removes an item from the list the item that is removed is the item that the iterator passed most recently in a call to either iternext( ) or iterprevious( ) </s>
<s> there is also a method iteradd( obj ) that adds the speciﬁed object to the list at the current position of the iterator ( where obj must be of type t ) </s>
<s> this can be between two existing items or at the beginning of the list or at the end of the list ( by the way the lists that are used in class linkedlist<t> are doubly linked lists that is each node in the list contains two pointers—one to the next node in the list and one to the previous node </s>
<s> this makes it possible to eﬃciently implement both the next( ) and previous( ) methods of a listiterator </s>
<s> also to make the addlast( ) and getlast( ) methods of a linkedlist eﬃcient the class linkedlist<t> includes an instance variable that points to the last node in the list ) as an example of using a listiterator suppose that we want to maintain a list of items that is always sorted into increasing order </s>
<s> when adding an item to the list we can use a listiterator to ﬁnd the position in the list where the item should be added </s>
<s> once the position has been found we use the same list iterator to place the item in that position </s>
<s> the idea is to start at the beginning of the list and to move the iterator forward past all the items that are smaller than the item that is being inserted </s>
<s> at that point the iterator’s add( ) method can be used to insert the item </s>
<s> to be more deﬁnite suppose that stringlist is a variable of type list<string> 102 </s>
<s> lists and sets 491 assume that that the strings that are already in the list are stored in ascending order and that newitem is a string that we would like to insert into the list </s>
<s> the following code will place newitem in the list in its correct position so that the modiﬁed list is still in ascending order istiterator<string> iter = stringlistlistiterator( ) // // // // // move the iterator so that it points to the position where newitem should be inserted into the list </s>
<s> if newitem is bigger than all the items in the list then the while loop will end when iterhasnext( ) becomes false that is when the iterator has reached the end of the list while ( iterhasnext( ) ) { string item = iternext( ) if ( newitemcompareto( item ) <= 0 ) { // newitem should come before item in the list // move the iterator back one space so that // it points to the correct insertion point // and end the loop iterprevious( ) break } } iteradd( newitem ) here stringlist might be of type arraylist<string> or of type linkedlist<string> </s>
<s> the algorithm that is used to insert newitem into the list will be about equally eﬃcient for both types of lists and it will even work for other classes that implement the interface list<string> </s>
<s> you would probably ﬁnd it easier to design an insertion algorithm that uses array-like indexing with the methods get( index ) and add( indexobj ) </s>
<s> however that algorithm would be horribly ineﬃcient for linkedlists because random access is so ineﬃcient for linked lists ( by the way the insertion algorithm works when the list is empty </s>
<s> it might be useful for you to think about why this is true ) 1022 sorting sorting a list is a fairly common operation and there should really be a sorting method in the ist interface </s>
<s> there is not presumably because it only makes sense to sort lists of certain types of objects but methods for sorting lists are available as static methods in the class javautilcollections </s>
<s> this class contains a variety of static utility methods for working with collections </s>
<s> the methods are generic that is they will work for collections of objects of various types </s>
<s> suppose that list is of type list<t> </s>
<s> the command collectionssort( list ) can be used to sort the list into ascending order </s>
<s> the items in the list should implement the interface comparable<t> ( see subsection 1016 ) </s>
<s> the method collectionssort( ) will work for example for lists of string and for lists of any of the wrapper classes such as integer and double </s>
<s> there is also a sorting method that takes a comparator as its second argument collectionssort( listcomparator ) 492 chapter 10 </s>
<s> generic programming and collection classes in this method the comparator will be used to compare the items in the list </s>
<s> as mentioned in the previous section a comparator is an object that deﬁnes a compare( ) method that can be used to compare two objects </s>
<s> we’ll see an example of using a comparator in section 104 the sorting method that is used by collectionssort( ) is the so-called merge sort” algorithm which has both worst-case and average-case run times that are Θ( n*log( n ) ) for a list of size n </s>
<s> although the average run time for mergesort is a little slower than that of quicksort its worst-case performance is much better than quicksort’s ( quicksort was covered in subsection 913 ) mergesort also has a nice property called stability” that we will encounter at the end of subsection 1043 the collections class has at least two other useful methods for modifying lists collectionsshuffle( list ) will rearrange the elements of the list into a random order collectionsreverse( list ) will reverse the order of the elements so that the last element is moved to the beginning of the list the next-to-last element to the second position and so on since an eﬃcient sorting method is provided for lists there is no need to write one yourself </s>
<s> you might be wondering whether there is an equally convenient method for standard arrays </s>
<s> the answer is yes </s>
<s> array-sorting methods are available as static methods in the class javautilarrays </s>
<s> the statement arrayssort( a ) will sort an array a provided either that the base type of a is one of the primitive types ( except boolean ) or that a is an array of objects that implement the comparable interface </s>
<s> you can also sort part of an array </s>
<s> this is important since arrays are often only partially ﬁlled” the command arrayssort( afromindextoindex ) sorts the elements a[fromindex] a[fromindex+1] a[toindex-1] into ascending order you can use arrayssort( a0n ) to sort a partially ﬁlled array which has items in the ﬁrst n positions java does not support generic programming for primitive types </s>
<s> in order to implement the command arrayssort( a ) the arrays class contains eight methods one method for arrays of objects and one method for each of the primitive types byte short int long ﬂoat double and char 1023 treeset and hashset a set is a collection of objects in which no object occurs more than once </s>
<s> sets implement all the methods in the interface collection<t> but do so in a way that ensures that no element occurs twice in the set </s>
<s> for example if set is an object of type set<t> then setadd( obj ) will have no eﬀect on the set if obj is already an element of the set </s>
<s> java has two classes that implement the interface set<t> javautiltreeset and javautilhashset in addition to being a set a treeset has the property that the elements of the set are arranged into ascending sorted order </s>
<s> an iterator ( or a for-each loop ) for a treeset will always visit the elements of the set in ascending order a treeset cannot hold arbitrary objects since there must be a way to determine the sorted order of the objects it contains </s>
<s> ordinarily this means that the objects in a set of type treeset<t> should implement the interface comparable<t> and that obj1compareto( obj2 ) should be deﬁned in a reasonable way for any two objects obj1 and obj2 in the set </s>
<s> alternatively an object of type comparator<t> can be provided as a parameter to the constructor 102 </s>
<s> lists and sets 493 when the treeset is created </s>
<s> in that case the compareto( ) method of the comparator will be used to compare objects that are added to the set a treeset does not use the equals( ) method to test whether two objects are the same instead it uses the compareto( ) method </s>
<s> this can be a problem </s>
<s> recall from subsection 1016 that compareto( ) can consider two objects to be the same for the purpose of the comparison even though the objects are not equal </s>
<s> for a treeset this means that only one of those objects can be in the set </s>
<s> for example if the treeset contains mailing addresses and if the compareto( ) method for addresses just compares their zip codes then the set can contain only one address in each zip code </s>
<s> clearly this is not right! but that only means that you have to be aware of the semantics of treesets and you need to make sure that compareto( ) is deﬁned in a reasonable way for objects that you put into a treeset </s>
<s> this will be true by the way for strings integers and many other built-in types since the compareto( ) method for these types considers two objects to be the same only if they are actually equal in the implementation of a treeset the elements are stored in something similar to a binary sort tree ( see subsection 942 ) however the data structure that is used is balanced in the sense that all the leaves of the tree are at about the same distance from the root of the tree this ensures that all the basic operations—inserting deleting and searching—are eﬃcient with worst-case run time Θ( log( n ) ) where n is the number of items in the set the fact that a treeset sorts its elements and removes duplicates makes it very useful in some applications </s>
<s> exercise 76 asked you to write a program that would read a ﬁle and output an alphabetical list of all the words that occurred in the ﬁle with duplicates removed </s>
<s> the words were to be stored in an arraylist so it was up to you to make sure that the list was sorted and contained no duplicates </s>
<s> the same task can be programmed much more easily using a treeset instead of a list </s>
<s> a treeset automatically eliminates duplicates and an iterator for the set will automatically visit the items in the set in sorted order </s>
<s> an algorithm for the program using a treeset would be treeset<string> words = new treeset<string>( ) while there is more data in the input file et word = the next word from the file convert word to lower case wordsadd( word ) // adds the word only if not already present for ( string w words ) // for each string w in words output w if you would like to see a complete working program you can ﬁnd it in the ﬁle wordlistwithtreesetjava as another example suppose that coll is any collection of strings ( this would also work for any other type for which compareto( ) is properly deﬁned ) we can use a treeset to sort the items of coll and remove the duplicates simply by saying treeset<string> set = new treeset<string>( ) setaddall( coll ) the second statement adds all the elements of the collection to the set </s>
<s> since it’s a set duplicates are ignored </s>
<s> since it’s a treeset the elements of the set are sorted </s>
<s> if you would like to have the data in some other type of data structure it’s easy to copy the data from the set for example to place the answer in an arraylist you could say treeset<string> set = new treeset<string>( ) setaddall( coll ) 494 chapter 10 </s>
<s> generic programming and collection classes arraylist<string> list = new arraylist<string>( ) listaddall( set ) now in fact every one of java’s collection classes has a constructor that takes a collection as an argument </s>
<s> all the items in that collection are added to the new collection when it is created </s>
<s> so if coll is of type collection<string> then new treeset<string>( coll )” creates a treeset that contains the same elements as coll but with duplicates removed and in sorted order </s>
<s> this means that we can abbreviate the four lines in the above example to the single command arraylist<string> list = new arraylist<string>( new treeset<string>( coll ) ) this makes a sorted list of the elements of coll with no duplicates </s>
<s> although the repeated type parameter <string>” makes it a bit ugly to look at this is still a nice example of the power of generic programming ( it seems by the way there is no equally easy way to get a sorted list with duplicates </s>
<s> to do this we would need something like a treeset that allows duplicates </s>
<s> the c++ programming language has such a thing and refers to it as a multiset the smalltalk language has something similar and calls it a bag </s>
<s> java for the time being at least lacks this data type ) ∗ ∗ ∗ a hashset stores its elements in a hash table a type of data structure that i will discuss in the next section </s>
<s> the operations of ﬁnding adding and removing elements are implemented very eﬃciently in hash tables even more so than for treesets </s>
<s> the elements of a hashset are not stored in any particular order and so do not need to implement the comparable interface ( they do however need to deﬁne a proper hash code” as we’ll see in the next section ) the equals( ) method is used to determine whether two objects in a hashset are to be considered the same </s>
<s> an iterator for a hashset will visit its elements in what seems to be a completely arbitrary order and it’s possible for the order to change completely when a new element is added </s>
<s> use a hashset instead of a treeset when the elements it contains are not comparable or when the order is not important or when the small advantage in eﬃciency is important ∗ ∗ ∗ a note about the mathematics of sets in mathematical set theory the items in a set are called members or elements of that set </s>
<s> important operations include adding an element to a set removing an element from a set and testing whether a given entity is an element of a set </s>
<s> operations that can be performed on two sets include union intersection and set diﬀerence </s>
<s> all these operations are deﬁned in java for objects of type set but with diﬀerent names </s>
<s> suppose that a and b are sets </s>
<s> then • aadd( x ) adds the element x to the set a • aremove( x ) removes the element x from the set a • acontains( x ) tests whether x is an element of the set a • aaddall( b ) computes the union of a and b • aretainall( b ) computes the intersection of a and b • aremoveall( b ) computes the set diﬀerence a - b there are of course diﬀerences between mathematical sets and sets in java </s>
<s> most important perhaps sets in java must be ﬁnite while in mathematics most of the fun in set theory comes from working with inﬁnity </s>
<s> in mathematics a set can contain arbitrary elements while in java 102 </s>
<s> lists and sets 495 a set of type set<t> can only contain elements of type t </s>
<s> the operation aaddall( b ) acts by modifying the value of a while in mathematics the operation a union b computes a new set without changing the value of a or b </s>
<s> see exercise 102 for an example of mathematical set operations in java 1024 enumset enumerated types ( or enums” ) were introduced in subsection 233 </s>
<s> suppose that e is an enumerated type </s>
<s> since e is a class it is possible to create objects of type treeset<e> and hashset<e> </s>
<s> however because enums are so simple trees and hash tables are not the most eﬃcient implementation for sets of enumerated type values </s>
<s> java provides the class javautilenumset as an alternative way to create such sets sets of enumerated type values are created using static methods in the class enumset </s>
<s> for example if e1 e2 and e3 are values belonging to the enumerated type e then the method enumsetof( e1 e2 e3 ) creates and returns a set of type enumset<e> that contains exactly the elements e1 e2 and e3 </s>
<s> the set implements the interface set<e> so all the usual set and collection operations are available </s>
<s> the implementation of these operations is very eﬃcient </s>
<s> the implementation uses what is called a bit vector </s>
<s> a bit is a quantity that has only two possible values zero and one a set of type enumset<e> is represented by a bit vector that contains one bit for each enum constant in the enumerated type e the bit corresponding to the enum constant e is 1 if e is a member of the set and is 0 if e is not a member of the set </s>
<s> the bit vectors for two sets of type enumset<e> can be very easily combined to represent such operations as the union and intersection of two sets </s>
<s> the bit vector representation is feasible for enumsets but not for other sets in java because an enumerated type contains only a small ﬁnite number of enum constants ( java actually has a class named bitset that uses bit vectors to represent ﬁnite sets of non-negative integers but this class is not part of the java collection framework and does not implement the set interface ) the function enumsetof can be used with any positive number of parameters </s>
<s> all the parameters must be values of the same enumerated type </s>
<s> null values are not allowed </s>
<s> an enumset cannot contain the value null—any attempt to add null to an enumset will result in a nullpointerexception there is also a function enumsetrange( e1e2 ) that returns an enumset consisting of the enum constants between e1 and e2 inclusive </s>
<s> the ordering of enum constants is the same as the order in which they are listed in the deﬁnition of the enum </s>
<s> in enumsetrange( e1e2 ) e1 and e2 must belong to the same enumerated type and e1 must be less than or equal to e2 if e is an enum then enumsetallof( eclass ) is a set that contains all values of type e </s>
<s> enumsetnoneof( eclass ) is an empty set a set of type enumset<e> that contains no elements at all </s>
<s> note that in enumsetallof( eclass ) and enumsetnoneof( eclass ) the odd-looking parameter represents the enumerated type class itself </s>
<s> if eset is a set of type enumset<e> then enumsetcomplementof( eset ) is a set that contains all the enum constants of e that are not in eset as an example consider a program that keeps schedules of events </s>
<s> the program must keep track of repeating events that happen on speciﬁed days of the week </s>
<s> for example an event might take place only on weekdays or only on wednesdays and fridays </s>
<s> in other words associated with the event is the set of days of the week on which it takes place </s>
<s> this information can be represented using the enumerated type 496 chapter 10 </s>
<s> generic programming and collection classes enum day { sunday monday tuesday wednesday thursday friday saturday } the days of the week on which an event takes place would then be a value of type enumset<day> an object of type repeatingevent would have an instance variable of type enumset<day> to hold this information </s>
<s> an event that takes place on wednesdays and fridays would have the associated set enumsetof( daywednesday dayfriday ) we could deﬁne some common sets of days as enumset<day> weekday = enumsetrange( daymonday dayfriday ) enumset<day> weekend = enumsetcomplementof( weekday ) enumset<day> everyday = enumsetallof( dayclass ) enumsets are often used to specify sets of options” that are to be applied during some type of processing </s>
<s> for example a program that draws characters in fancy fonts might have various options that can be applied </s>
<s> let’s say that the options are bold italic underlined strikethrough and boxed </s>
<s> note that we are assuming that options can be combined in arbitrary ways </s>
<s> for example you can have italic boxed underlined characters </s>
<s> this just means that we need to keep track of a set of options </s>
<s> if the options are represented by the enumerated type enum fontoption { bold italic underlined strikethrough boxed } then a set of options is represented by a value of type enumset<fontoption> </s>
<s> suppose that options is a variable of this type that represents the set of options that are currently being applied by the program </s>
<s> then we can do things like • options = enumsetnoneof( fontoptionclass ) — turn oﬀ all options • options = enumsetof( fontoptionbold ) — use bold with no other options • optionsadd( fontoptionbold ) — add bold to any options that are already on • optionsremove( fontoptionunderlined ) — turn underlining oﬀ ( if it’s on ) this is a nice safe way to work with sets of options </s>
<s> applications like this are one of the major reasons that enumerated types were introduced 103 maps an array of n elements can be thought of as a way of associating some item with each of the integers 0 1 n-1 </s>
<s> if i is one of these integers it’s possible to get the item associated with i and it’s possible to put a new item in the i-th position </s>
<s> these get” and put” operations deﬁne what it means to be an array a map is a kind of generalized array </s>
<s> like an array a map is deﬁned by get” and put” operations </s>
<s> but in a map these operations are deﬁned not for integers 0 1 n-1 but for arbitrary objects of some speciﬁed type t </s>
<s> associated to these objects of type t are objects of some possibly diﬀerent type s in fact some programming languages use the term associative array instead of map” and use the same notation for associative arrays as for regular arrays </s>
<s> in those languages for example you might see the notation a[fred] used to indicate the item associated to the string fred” in the associative array a </s>
<s> java does not use array notation for maps unfortunately but the idea is the same a map is like an array but the indices for a map are objects not integers </s>
<s> in a map an object that serves as an index” is called a key </s>
<s> the object that is 103 </s>
<s> maps 497 associated with a key is called a value </s>
<s> note that a key can have at most one associated value but the same value can be associated to several diﬀerent keys </s>
<s> a map can be considered to be a set of associations” where each association is a key/value pair 1031 the map interface in java maps are deﬁned by the interface javautilmap which includes put and get methods as well as other general methods for working with maps </s>
<s> the map interface map<kv> is parameterized by two types </s>
<s> the ﬁrst type parameter k speciﬁes the type of objects that are possible keys in the map the second type parameter v speciﬁes the type of objects that are possible values in the map </s>
<s> for example a map of type map<datejbutton> would associate values of type jbutton to keys of type date </s>
<s> for a map of type map<stringstring> both the keys and the values are of type string suppose that map is a variable of type map<kv> for some speciﬁc types k and v </s>
<s> then the following are some of the methods that are deﬁned for map • mapget( key ) — returns the object of type v that is associated by the map to the key key can be any object it does not have to be of type k </s>
<s> if the map does not associate any value with key then the return value is null </s>
<s> note that it’s also possible for the return value to be null when the map explicitly associates the value null with the key referring to mapget( key )” is similar to referring to a[key]” for an array a ( but note that there is nothing like an indexoutofboundsexception for maps ) • mapput( keyvalue ) — associates the speciﬁed value with the speciﬁed key where key must be of type k and value must be of type v </s>
<s> if the map already associated some other value with the key then the new value replaces the old one </s>
<s> this is similar to the command a[key] = value” for an array • mapputall( map2 ) — if map2 is another map of type map<kv> this copies all the associations from map2 into map • mapremove( key ) — if map associates a value to the speciﬁed key that association is removed from the map key can be any object it does not have to be of type k • mapcontainskey( key ) — returns a boolean value that is true if the map associates some value to the speciﬁed key key can be any object it does not have to be of type k • mapcontainsvalue( value ) — returns a boolean value that is true if the map associates the speciﬁed value to some key value can be any object it does not have to be of type v • mapsize( ) — returns an int that gives the number of key/value associations in the map • mapisempty( ) — returns a boolean value that is true if the map is empty that is if it contains no associations • mapclear( ) — removes all associations from the map leaving it empty the put and get methods are certainly the most commonly used of the methods in the map interface </s>
<s> in many applications these are the only methods that are needed and in such cases a map is really no more diﬃcult to use than a standard array java includes two classes that implement the interface map<kv> treemap<kv> and hashmap<kv> </s>
<s> in a treemap the key/value associations are stored in a sorted tree in which they are sorted according to their keys </s>
<s> for this to work it must be possible to compare the keys to one another </s>
<s> this means either that the keys must implement the interface comparable<k> or that a comparator must be provided for comparing keys ( the comparator can be 498 chapter 10 </s>
<s> generic programming and collection classes provided as a parameter to the treemap constructor ) note that in a treemap as in a treeset the compareto( ) method is used to decide whether two keys are to be considered the same this can have undesirable consequences if the compareto( ) method does not agree with the usual notion of equality and you should keep this in mind when using treemaps a hashmap does not store associations in any particular order so the keys that can be used in a hashmap do not have to be comparable </s>
<s> however the key class should have reasonable deﬁnitions for the equals( ) method and for a hashcode( ) method that is discussed later in this section most of java’s standard classes deﬁne these methods correctly </s>
<s> most operations are a little faster on hashmaps than they are on treemaps </s>
<s> in general you should use a hashmap unless you have some particular need for the ordering property of a treemap </s>
<s> in particular if you are only using the put and get operations you can safely use a hashmap et’s consider an example where maps would be useful </s>
<s> in subsection 742 i presented a simple phonedirectory class that associated phone numbers with names </s>
<s> that class deﬁned operations addentry( namenumber ) and getnumber( name ) where both name and number are given as strings </s>
<s> in fact the phone directory is acting just like a map with the addentry method playing the role of the put operation and getnumber playing the role of get </s>
<s> in a real programming application there would be no need to deﬁne a new class we could simply use a map of type map<stringstring> </s>
<s> a directory would be deﬁned as map<stringstring> directory = new map<stringstring>( ) and then directoryput( namenumber ) would record a phone number in the directory and directoryget( name ) would retrieve the phone number associated with a given name 1032 views subsets and submaps a map is not a collection and maps do not implement all the operations deﬁned on collections in particular there are no iterators for maps </s>
<s> sometimes though it’s useful to be able to iterate through all the associations in a map </s>
<s> java makes this possible in a roundabout but clever way </s>
<s> if map is a variable of type map<kv> then the method mapkeyset( ) returns the set of all objects that occur as keys for associations in the map </s>
<s> the value returned by this method is an object that implements the interface set<k> </s>
<s> the elements of this set are the map’s keys </s>
<s> the obvious way to implement the keyset( ) method would be to create a new set object add all the keys from the map and return that set </s>
<s> but that’s not how it’s done </s>
<s> the value returned by mapkeyset( ) is not an independent object </s>
<s> it is what is called a view of the actual objects that are stored in the map </s>
<s> this view” of the map implements the set<k> interface but it does it in such a way that the methods deﬁned in the interface refer directly to keys in the map </s>
<s> for example if you remove a key from the view that key—along with its associated value—is actually removed from the map </s>
<s> it’s not legal to add an object to the view since it doesn’t make sense to add a key to a map without specifying the value that should be associated to the key </s>
<s> since mapkeyset( ) does not create a new set it’s very eﬃcient even for very large maps one of the things that you can do with a set is get an iterator for it and use the iterator to visit each of the elements of the set in turn </s>
<s> we can use an iterator ( or a for-each loop ) for the key set of a map to traverse the map </s>
<s> for example if map is of type map<stringdouble> we could write 103 </s>
<s> maps 499 set<string> keys = mapkeyset( ) // the set of keys in the map iterator<string> keyiter = keysiterator( ) systemoutprintln( the map contains the following associations ) while ( keyiterhasnext( ) ) { string key = keyiternext( ) // get the next key double value = mapget( key ) // get the value for that key systemoutprintln( ( + key + + value + ) ) } or we could do the same thing more easily avoiding the explicit use of an iterator with a for-each loop systemoutprintln( the map contains the following associations ) for ( string key mapkeyset( ) ) { // for each key in the map’s key set double value = mapget( key ) systemoutprintln( ( + key + + value + ) ) } if the map is a treemap then the key set of the map is a sorted set and the iterator will visit the keys in ascending order </s>
<s> for a hashmap the keys are visited in an arbitrary unpredictable order the map interface deﬁnes two other views </s>
<s> if map is a variable of type map<kv> then the method mapvalues( ) returns an object of type collection<v> that contains all the values from the associations that are stored in the map </s>
<s> the return value is a collection rather than a set because it can contain duplicate elements ( since a map can associate the same value to any number of keys ) </s>
<s> the method mapentryset( ) returns a set that contains all the associations from the map </s>
<s> the elements in the set are objects of type mapentry<kv> </s>
<s> mapentry<kv> is deﬁned as a static nested interface inside the interface map<kv> so its full name contains a period </s>
<s> however the name can be used in the same way as any other type name ( the return type of the method mapentryset( ) is written as set<mapentry<kv>> </s>
<s> the type parameter in this case is itself a parameterized type </s>
<s> although this might look confusing it’s just java’s way of saying that the elements of the set are of type mapentry<kv> ) the information in the set returned by mapentryset( ) is actually no diﬀerent from the information in the map itself but the set provides a diﬀerent view of this information with diﬀerent operations </s>
<s> each mapentry object contains one key/value pair and deﬁnes methods getkey( ) and getvalue( ) for retrieving the key and the value </s>
<s> there is also a method setvalue( value ) for setting the value calling this method for a mapentry object will modify the map itself just as if the map’s put method were called </s>
<s> as an example we can use the entry set of a map to print all the key/value pairs in the map </s>
<s> this is more eﬃcient than using the key set to print the same information as i did in the above example since we don’t have to use the get( ) method to look up the value associated with each key suppose again that map is of type map<stringdouble> </s>
<s> then we can write set<mapentry<stringdouble>> entries = mapentryset( ) iterator<mapentry<stringdouble>> entryiter = entriesiterator( ) systemoutprintln( the map contains the following associations ) while ( entryiterhasnext( ) ) { 500 chapter 10 </s>
<s> generic programming and collection classes mapentry<stringdouble> entry = entryiternext( ) string key = entrygetkey( ) // get the key from the entry double value = entrygetvalue( ) // get the value systemoutprintln( ( + key + + value + ) ) } or using a for-each loop systemoutprintln( the map contains the following associations ) for ( mapentry<stringdouble> entry mapentryset( ) ) systemoutprintln( ( + entrygetkey( ) + + entrygetvalue( ) + ) ) ∗ ∗ ∗ maps are not the only place in java’s generic programming framework where views are used </s>
<s> for example the interface list<t> deﬁnes a sublist as a view of a part of a list </s>
<s> if list implements the interface list<t> then the method listsublist( fromindex toindex ) where fromindex and toindex are integers returns a view of the part of the list consisting of the list elements in positions between fromindex and toindex ( including fromindex but excluding toindex ) </s>
<s> this view lets you operate on the sublist using any of the operations deﬁned for lists but the sublist is not an independent list </s>
<s> changes made to the sublist are actually made to the original list similarly it is possible to obtain views that represent certain subsets of a sorted set </s>
<s> if set is of type treeset<t> then setsubset( fromelementtoelement ) returns a set<t> that contains all the elements of set that are between fromelement and toelement ( including fromelement and excluding toelement ) </s>
<s> the parameters fromelement and toelement must be objects of type t </s>
<s> for example if words is a set of type treeset<string> in which all the elements are strings of lower case letters then wordssubset( mn ) contains all the elements of words that begin with the letter ’m’ </s>
<s> this subset is a view of part of the original set </s>
<s> that is creating the subset does not involve copying elements </s>
<s> and changes made to the subset such as adding or removing elements are actually made to the original set </s>
<s> the view setheadset( toelement ) consists of all elements from the set which are strictly less than toelement and settailset( fromelement ) is a view that contains all elements from the set that are greater than or equal to fromelement the class treemap<kv> deﬁnes three submap views </s>
<s> a submap is similar to a subset a submap is a map that contains a subset of the keys from the original map along with their associated values </s>
<s> if map is a variable of type treemap<kv> and if fromkey and tokey are of type t then mapsubmap( fromkeytokey ) returns a view that contains all key/value pairs from map whose keys are between fromkey and tokey ( including fromkey and excluding tokey ) </s>
<s> there are also views mapheadmap( tokey ) and maptailmap( fromkey ) which are deﬁned analogously to headset and tailset </s>
<s> suppose for example that blackbook is a map of type treemap<stringstring> in which the keys are names and the values are phone numbers we can print out all the entries from blackbook where the name begins with m” as follows map<stringstring> ems = blackbooksubmap( mn ) // this submap contains entries for which the key is greater // than or equal to m and strictly less than n if ( emsisempty( ) ) { systemoutprintln( no entries beginning with m ) } 103 </s>
<s> maps 501 else { systemoutprintln( entries beginning with m ) for ( mapentry<stringstring> entry emsentryset( ) ) systemoutprintln( + entrygetkey( ) + + entrygetvalue( ) ) } subsets and submaps are probably best thought of as generalized search operations that make it possible to ﬁnd all the items in a range of values rather than just to ﬁnd a single value </s>
<s> suppose for example that a database of scheduled events is stored in a map of type treemap<dateevent> in which the keys are the times of the events and suppose you want a listing of all events that are scheduled for some time on july 4 2011 </s>
<s> just make a submap containing all keys in the range from 1200 am july 4 2011 to 1200 am july 5 2011 and output all the entries from that submap </s>
<s> this type of search which is known as a subrange query is quite common 1033 hash tables and hash codes hashsets and hashmaps are implemented using a data structure known as a hash table you don’t need to understand hash tables to use hashsets or hashmaps but any computer programmer should be familiar with hash tables and how they work hash tables are an elegant solution to the search problem </s>
<s> a hash table like a hashmap stores key/value pairs </s>
<s> given a key you have to search the table for the corresponding key/value pair </s>
<s> when a hash table is used to implement a set the values are all null and the only question is whether or not the key occurs in the set </s>
<s> you still have to search for the key to check whether it is there or not in most search algorithms in order to ﬁnd the item you are interested in you have to look through a bunch of other items that don’t interest you </s>
<s> to ﬁnd something in an unsorted list you have to go though the items one-by-one until you come to the one you are looking for </s>
<s> in a binary sort tree you have to start at the root and move down the tree until you ﬁnd the item you want </s>
<s> when you search for a key/value pair in a hash table you can go directly to the location that contains the item you want </s>
<s> you don’t have to look through any other items ( this is not quite true but it’s close ) the location of the key/value pair is computed from the key you just look at the key and then you go directly to the location where it is stored how can this work if the keys were integers in the range 0 to 99 we could store the key/value pairs in an array a of 100 elements </s>
<s> the key/value pair with key k would be stored in a[k] </s>
<s> the key takes us directly to the location of the key/value pair </s>
<s> the problem is that there are usually far too many diﬀerent possible keys for us to be able to use an array with one location for each possible key </s>
<s> for example if the key can be any value of type int then we would need an array with over four billion locations—quite a waste of space if we are only going to store say a few thousand items! if the key can be a string of any length then the number of possible keys is inﬁnite and using an array with one location for each possible key is simply impossible nevertheless hash tables store their data in an array and the array index where a key is stored is based on the key </s>
<s> the index is not equal to the key but it is computed from the key the array index for a key is called the hash code for that key </s>
<s> a function that computes a hash code given a key is called a hash function </s>
<s> to ﬁnd a key in a hash table you just have to compute the hash code of the key and go directly to the array location given by that hash code </s>
<s> if the hash code is 17 look in array location number 17 502 chapter 10 </s>
<s> generic programming and collection classes now since there are fewer array locations than there are possible keys it’s possible that we might try to store two or more keys in the same array location </s>
<s> this is called a collision a collision is not an error </s>
<s> we can’t reject a key just because another key happened to have the same hash code </s>
<s> a hash table must be able to handle collisions in some reasonable way </s>
<s> in the type of hash table that is used in java each array location actually holds a linked list of key/value pairs ( possibly an empty list ) </s>
<s> when two items have the same hash code they are in the same linked list </s>
<s> the structure of the hash table looks something like this 0 1 2 3 4 5 6 7 8 9 10 11 item item item item item item item item item item in this diagram there is one item with hash code 0 no items with hash code 1 two items with hash code 2 and so on </s>
<s> in a properly designed hash table most of the linked lists are of length zero or one and the average length of the lists is less than one </s>
<s> although the hash code of a key doesn’t necessarily take you directly to that key there are probably no more than one or two other items that you have to look through before ﬁnding the key you want </s>
<s> for this to work properly the number of items in the hash table should be somewhat less than the number of locations in the array </s>
<s> in java’s implementation whenever the number of items exceeds 75% of the array size the array is replaced by a larger one and all the items in the old array are inserted into the new one ( this is why adding one new item will sometimes cause the ordering of all the items in the hash table to change completely ) there is still the question of where hash codes come from </s>
<s> every object in java has a hash code </s>
<s> the object class deﬁnes the method hashcode( ) which returns a value of type int </s>
<s> when an object obj is stored in a hash table that has n locations a hash code in the range 0 to n-1 is needed </s>
<s> this hash code is computed as mathabs( objhashcode( ) ) % n the remainder when the absolute value of objhashcode( ) is divided by n ( the mathabs is necessary because objhashcode( ) can be a negative integer and we need a non-negative number to use as an array index ) for hashing to work properly two objects that are equal according to the equals( ) method must have the same hash code </s>
<s> in the object class this condition is satisﬁed because both equals( ) and hashcode( ) are based on the address of the memory location where the object is stored </s>
<s> however as noted in subsection 1016 many classes redeﬁne the equals( ) method if a class redeﬁnes the equals( ) method and if objects of that class will be used as keys in hash tables then the class should also redeﬁne the hashcode( ) method </s>
<s> for example in the 104 </s>
<s> programming with the java collection framework 503 string class the equals( ) method is redeﬁned so that two objects of type string are considered to be equal if they contain the same sequence of characters </s>
<s> the hashcode( ) method is also redeﬁned in the string class so that the hash code of a string is computed from the characters in that string rather than from its location in memory </s>
<s> for java’s standard classes you can expect equals( ) and hashcode( ) to be correctly deﬁned </s>
<s> however you might need to deﬁne these methods in classes that you write yourself writing a good hash function is something of an art </s>
<s> in order to work well the hash function must spread the possible keys fairly evenly over the hash table </s>
<s> otherwise the items in a table can be concentrated in a subset of the available locations and the linked lists at those locations can grow to large size that would destroy the eﬃciency that is the major reason for hash tables to exist in the ﬁrst place </s>
<s> however i won’t cover techniques for creating good hash functions in this book 104 programming with the java collection framework in this section we’ll look at some programming examples that use classes from the java collection framework </s>
<s> the collection framework is easy to use especially compared to the diﬃculty of programming new data structures from scratch 1041 symbol tables we begin with a straightforward but important application of maps </s>
<s> when a compiler reads the source code of a program it encounters deﬁnitions of variables subroutines and classes the names of these things can be used later in the program </s>
<s> the compiler has to remember the deﬁnition of each name so that it can recognize the name and apply the deﬁnition when the name is encountered later in the program </s>
<s> this is a natural application for a map </s>
<s> the name can be used as a key in the map </s>
<s> the value associated to the key is the deﬁnition of the name encoded somehow as an object </s>
<s> a map that is used in this way is called a symbol table in a compiler the values in a symbol table can be quite complicated since the compiler has to deal with names for various sorts of things and it needs a diﬀerent type of information for each diﬀerent type of name </s>
<s> we will keep things simple by looking at a symbol table in another context </s>
<s> suppose that we want a program that can evaluate expressions entered by the user and suppose that the expressions can contain variables in addition to operators numbers and parentheses </s>
<s> for this to make sense we need some way of assigning values to variables </s>
<s> when a variable is used in an expression we need to retrieve the variable’s value </s>
<s> a symbol table can be used to store the data that we need </s>
<s> the keys for the symbol table are variable names </s>
<s> the value associated with a key is the value of that variable which is of type double </s>
<s> the symbol table will be an object of type map<stringdouble> ( remember that primitive types such as double can’t be used as type parameters a wrapper class such as double must be used instead see subsection 1017 ) to demonstrate the idea we’ll use a rather simple-minded program in which the user types commands such as let x = 3 + 12 print 2 + 2 print 10*x +17 let rate = 006 print 1000*( 1+rate ) 504 chapter 10 </s>
<s> generic programming and collection classes the program is an interpreter for a very simple language </s>
<s> the only two commands that the program understands are print” and let” </s>
<s> when a print” command is executed the computer evaluates the expression and displays the value </s>
<s> if the expression contains a variable the computer has to look up the value of that variable in the symbol table </s>
<s> a let” command is used to give a value to a variable </s>
<s> the computer has to store the value of the variable in the symbol table ( note the variables” i am talking about here are not variables in the java program </s>
<s> the java program is executing a sort of program typed in by the user </s>
<s> i am talking about variables in the user’s program </s>
<s> the user gets to make up variable names so there is no way for the java program to know in advance what the variables will be ) in subsection 952 we saw how to write a program simpleparser2java that can evaluate expressions that do not contain variables </s>
<s> here i will discuss another example program simpleinterpreterjava that is based on the older program </s>
<s> i will only talk about the parts that are relevant to the symbol table the program uses a hashmap as the symbol table </s>
<s> a treemap could also be used but since the program does not need to access the variables in alphabetical order we don’t need to have the keys stored in sorted order </s>
<s> the symbol table in the program is represented by a variable named symboltable of type hashmap<stringdouble> </s>
<s> at the beginning of the program the symbol table object is created with the command symboltable = new hashmap<stringdouble>( ) this creates a map that initially contains no key/value associations </s>
<s> to execute a let” command the program uses the symbol table’s put( ) method to associate a value with the variable name </s>
<s> suppose that the name of the variable is given by a string varname and the value of the variable is stored in a variable val of type double </s>
<s> the following command would then set the value associated with the variable in the symbol table symboltableput( varname val ) in the program simpleinterpreterjava you’ll ﬁnd this in the method named doletcommand( ) the actual value that is stored in the symbol table is an object of type double </s>
<s> we can use the double value val in the call to put because java does an automatic conversion of type double to double when necessary </s>
<s> the double value is wrapped” in an object of type double so that in eﬀect the above statement is equivalent to symboltableput( varname new double( val ) ) just for fun i decided to pre-deﬁne two variables named pi” and e” whose values are the usual mathematical constants π and e </s>
<s> in java the values of these constants are given by mathpi and mathe </s>
<s> to make these variables available to the user of the program they are added to the symbol table with the commands symboltableput( pi mathpi ) symboltableput( e mathe ) when the program encounters a variable while evaluating an expression the symbol table’s get( ) method is used to retrieve its value </s>
<s> the function symboltableget( varname ) returns a value of type double </s>
<s> it is possible that the return value is null this will happen if no value has ever been assigned to varname in the symbol table </s>
<s> it’s important to check this possibility it indicates that the user is trying to use a variable that the user has not deﬁned </s>
<s> the program considers this to be an error so the processing looks something like this 104 </s>
<s> programming with the java collection framework 505 double val = symboltableget( varname ) if ( val == null ) { // throw an exception undefined variable } // the value associated to varname is valdoublevalue( ) you will ﬁnd this code more or less in a method named primaryvalue( ) in simpleinterpreterjava as you can see from this example maps are very useful and are really quite easy to use 1042 sets inside a map the objects in a collection or map can be of any type </s>
<s> they can even be collections </s>
<s> here’s an example where it’s natural to store sets as the value objects in a map consider the problem of making an index for a book </s>
<s> an index consists of a list of terms that appear in the book </s>
<s> next to each term is a list of the pages on which that term appears to represent an index in a program we need a data structure that can hold a list of terms along with a list of pages for each term </s>
<s> adding new data should be easy and eﬃcient </s>
<s> when it’s time to print the index it should be easy to access the terms in alphabetical order </s>
<s> there are many ways this could be done but i’d like to use java’s generic data structures and let them do as much of the work as possible we can think of an index as a map that associates a list of page references to each term the terms are keys and the value associated with a given key is the list of page references for that term </s>
<s> a map can be either a treemap or a hashmap but only a treemap will make it easy to access the terms in sorted order </s>
<s> the value associated with a term is a list of page references </s>
<s> how can we represent such a value if you think about it you see that it’s not really a list in the sense of java’s generic classes </s>
<s> if you look in any index you’ll see that a list of page references has no duplicates so it’s really a set rather than a list </s>
<s> furthermore the page references for a given term are always printed in increasing order so we want a sorted set </s>
<s> this means that we should use a treeset to represent each list of page references </s>
<s> the values that we really want to put in this set are of type int but once again we have to deal with the fact that generic data structures can only hold objects so we must use the wrapper class integer for the objects in the set to summarize an index will be represented by a treemap </s>
<s> the keys for the map will be terms which are of type string </s>
<s> the values in the map will be treesets that contain integers that are the page numbers of every page on which a term appears </s>
<s> the parameterized type that we should use for the sets is treeset<integer> </s>
<s> for the treemap that represents the index as a whole the key type is string and the value type is treeset<integer> </s>
<s> this means that the index has type treemap< string treeset<integer> > this is just the usual treemap<kv> with k=string and v=treeset<integer> </s>
<s> a type name as complicated as this one can look intimidating ( especially i think when used in a constructor with the new operator ) but if you think about the data structure that we want to represent it makes sense </s>
<s> given a little time and practice you can get used to types like this one to make an index we need to start with an empty treemap and look through the book inserting every reference that we want to be in the index into the map </s>
<s> we then need to print out the data from the map </s>
<s> let’s leave aside the question of how we ﬁnd the references to put in the index and just look at how the treemap is used </s>
<s> it can be created with the commands 506 chapter 10 </s>
<s> generic programming and collection classes treemap<stringtreeset<integer>> index index = new treemap<stringtreeset<integer>>( ) // declare the variable // create the map object now suppose that we ﬁnd a reference to some term ( of type string ) on some pagenum ( of type int ) </s>
<s> we need to insert this information into the index </s>
<s> to do this we should look up the term in the index using indexget( term ) </s>
<s> the return value is either null or is the set of page references that we have previously found for the term </s>
<s> if the return value is null then this is the ﬁrst page reference for the term so we should add the term to the index with a new set that contains the page reference we’ve just found </s>
<s> if the return value is non-null we already have a set of page references and we should just add the new page reference to the set </s>
<s> here is a subroutine that does this /** * add a page reference to the index */ void addreference( string term int pagenum ) { treeset<integer> references // the set of page references that we // have so far for the term references = indexget( term ) if ( references == null ){ // this is the first reference that we have // found for the term </s>
<s> make a new set containing // the page number and add it to the index with // the term as the key treeset<integer> firstref = new treeset<integer>( ) firstrefadd( pagenum ) // pagenum is autoboxed to give an integer! indexput( termfirstref ) } else { // references is the set of page references // that we have found previously for the term // add the new page number to that set </s>
<s> this // set is already associated to term in the index referencesadd( pagenum ) // pagenum is autoboxed to give an integer! } } the only other thing we need to do with the index is print it out </s>
<s> we want to iterate through the index and print out each term together with the set of page references for that term </s>
<s> we could use an iterator to iterate through the index but it’s much easier to do it with a for-each loop </s>
<s> the loop will iterate through the entry set of the map ( see subsection 1032 ) each entry” is a key/value pair from the map the key is a term and the value is the associated set of page references </s>
<s> inside the for-each loop we will have to print out a set of integers which can also be done with a for-each loop </s>
<s> so here we have an example of nested for-each loops ( you might try to do the same thing entirely with iterators doing so should give you some appreciation for the for-each loop! ) here is a subroutine that will print the index /** * print each entry in the index */ void printindex( ) { for ( mapentry<stringtreeset<integer>> entry indexentryset( ) ) { 104 </s>
<s> programming with the java collection framework 507 string term = entrygetkey( ) treeset<integer> pageset = entrygetvalue( ) systemoutprint( term + ) for ( int page pageset ) { systemoutprint( page + ) } systemoutprintln( ) } } the hardest thing here is the name of the type mapentry<stringtreeset<integer>>! remember that the entries in a map of type map<kv> have type mapentry<kv> so the type parameters in mapentry<stringtreeset<integer>> are simply copied from the declaration of index </s>
<s> another thing to note is that i used a loop control variable page of type int to iterate through the elements of pageset which is of type treeset<integer> </s>
<s> you might have expected page to be of type integer not int and in fact integer would have worked just as well here </s>
<s> however int does work because of automatic type conversion it’s legal to assign a value of type integer to a variable of type int ( to be honest i was sort of surprised that this worked when i ﬁrst tried it! ) this is not a lot of code considering the complexity of the operations </s>
<s> i have not written a complete indexing program but exercise 105 presents a problem that is almost identical to the indexing problem ∗ ∗ ∗ by the way in this example i would prefer to print each list of page references with the integers separated by commas </s>
<s> in the printindex( ) method given above they are separated by spaces </s>
<s> there is an extra space after the last page reference in the list but it does no harm since it’s invisible in the printout </s>
<s> an extra comma at the end of the list would be annoying the lists should be in a form such as 1742105” and not 1742105” </s>
<s> the problem is how to leave that last comma out </s>
<s> unfortunately this is not so easy to do with a for-each loop </s>
<s> it might be fun to look at a few ways to solve this problem </s>
<s> one alternative is to use an iterator iterator<integer> iter = pagesetiterator( ) int firstpage = iternext( ) // in this program we know the set has at least // one element </s>
<s> note also that this statement // uses an auto-conversion from integer to int systemoutprint( firstpage ) while ( iterhasnext( ) ) { int nextpage = iternext( ) systemoutprint( + nextpage ) } another possibility is to use the fact that the treeset class deﬁnes a method first( ) that returns the ﬁrst item in the set that is the one that is smallest in terms of the ordering that is used to compare items in the set ( it also deﬁnes the method last( ) ) we can solve our problem using this method and a for-each loop int firstpage = pagesetfirst( ) // find out the first page number in the set for ( int page pageset ) { if ( page != firstpage ) systemoutprint( ) // output comma only if this is not the first page 508 chapter 10 </s>
<s> generic programming and collection classes systemoutprint( page ) } finally here is an elegant solution using a subset view of the tree ( see subsection 1032 ) actually this solution might be a bit extreme int firstpage = pagesetfirst( ) // get first item which we know exists systemoutprint( firstpage ) // print first item with no comma for ( int page pagesettailset( firstpage+1 ) ) // process remaining items systemoutprint( + page ) 1043 using a comparator there is a potential problem with our solution to the indexing problem </s>
<s> if the terms in the index can contain both upper case and lower case letters then the terms will not be in alphabetical order! the ordering on string is not alphabetical </s>
<s> it is based on the unicode codes of the characters in the string </s>
<s> the codes for all the upper case letters are less than the codes for the lower case letters </s>
<s> so for example terms beginning with z” come before terms beginning with a” </s>
<s> if the terms are restricted to use lower case letters only ( or upper case only ) then the ordering would be alphabetical </s>
<s> but suppose that we allow both upper and lower case and that we insist on alphabetical order </s>
<s> in that case our index can’t use the usual ordering for strings </s>
<s> fortunately it’s possible to specify a diﬀerent method to be used for comparing the keys of a map </s>
<s> this is a typical use for a comparator recall that an object that implements the interface comparator<t> deﬁnes a method for comparing two objects of type t public int compare( t obj1 t obj2 ) this method should return an integer that is positive zero or negative depending on whether obj1 is less than equal to or greater than obj2 </s>
<s> we need an object of type comparator<string> that will compare two strings based on alphabetical order </s>
<s> the easiest way to do this is to convert the strings to lower case and use the default comparison on the lower case strings </s>
<s> the following class deﬁnes such a comparator /** * represents a comparator that can be used for comparing two * strings based on alphabetical order */ class alphabeticalorder implements comparator<string> { public int compare( string str1 string str2 ) { string s1 = str1tolowercase( ) // convert to lower case string s2 = str2tolowercase( ) return s1compareto( s2 ) // compare lower-case strings } } to solve our indexing problem we just need to tell our index to use an object of type alphabeticalorder for comparing keys </s>
<s> this is done by providing a comparator object as a parameter to the constructor </s>
<s> we just have to create the index in our example with the command index = new treemap<stringtreeset<integer>>( new alphabeticalorder( ) ) 104 </s>
<s> programming with the java collection framework 509 this does work </s>
<s> however i’ve been concealing one technicality </s>
<s> suppose for example that the indexing program calls addreference( aardvark56 ) and that it later calls addreference( aardvark102 ) </s>
<s> the words aardvark” and aardvark” diﬀer only in that one of them begins with an upper case letter when converted to lower case they are the same when we insert them into the index do they count as two diﬀerent terms or as one term the answer depends on the way that a treemap tests objects for equality </s>
<s> in fact treemaps and treesets always use a comparator object or a compareto method to test for equality </s>
<s> they do not use the equals( ) method for this purpose </s>
<s> the comparator that is used for the treemap in this example returns the value zero when it is used to compare aardvark” and aardvark” so the treemap considers them to be the same </s>
<s> page references to aardvark” and aardvark” are combined into a single list and when the index is printed it will contain only the ﬁrst version of the word that was encountered by the program </s>
<s> this is probably acceptable behavior in this example </s>
<s> if not some other technique must be used to sort the terms into alphabetical order 1044 word counting the ﬁnal example in this section also deals with storing information about words </s>
<s> the problem here is to make a list of all the words that occur in a ﬁle along with the number of times that each word occurs </s>
<s> the ﬁle will be selected by the user </s>
<s> the output of the program will consist of two lists </s>
<s> each list contains all the words from the ﬁle along with the number of times that the word occurred </s>
<s> one list is sorted alphabetically and the other is sorted according to the number of occurrences with the most common words at the top and the least common at the bottom </s>
<s> the problem here is a generalization of exercise 76 which asked you to make an alphabetical list of all the words in a ﬁle without counting the number of occurrences my word counting program can be found in the ﬁle wordcountjava </s>
<s> as the program reads an input ﬁle it must keep track of how many times it encounters each word </s>
<s> we could simply throw all the words with duplicates into a list and count them later </s>
<s> but that would require a lot of extra storage space and would not be very eﬃcient </s>
<s> a better method is to keep a counter for each word </s>
<s> the ﬁrst time the word is encountered the counter is initialized to 1 on subsequent encounters the counter is incremented </s>
<s> to keep track of the data for one word the program uses a simple class that holds a word and the counter for that word </s>
<s> the class is a static nested class /** * represents the data we need about a word the word and * the number of times it has been encountered */ private static class worddata { string word int count worddata( string w ) { // constructor for creating a worddata object when // we encounter a new word word = w count = 1 // the initial value of count is 1 } } // end class worddata the program has to store all the worddata objects in some sort of data structure </s>
<s> we want to be able to add new words eﬃciently </s>
<s> given a word we need to check whether a worddata 510 chapter 10 </s>
<s> generic programming and collection classes object already exists for that word and if it does we need to ﬁnd that object so that we can increment its counter </s>
<s> a map can be used to implement these operations </s>
<s> given a word we want to look up a worddata object in the map </s>
<s> this means that the word is the key and the worddata object is the value ( it might seem strange that the key is also one of the instance variables in the value object but in fact this is probably the most common situation the value object contains all the information about some entity and the key is one of those pieces of information the partial information in the key is used to retrieve the full information in the value object ) after reading the ﬁle we want to output the words in alphabetical order so we should use a treemap rather than a hashmap </s>
<s> this program converts all words to lower case so that the default ordering on strings will put the words in alphabetical order </s>
<s> the data is stored in a variable named words of type treemap<stringworddata> </s>
<s> the variable is declared and the map object is created with the statement treemap<stringworddata> words = new treemap<stringworddata>( ) when the program reads a word from a ﬁle it calls wordsget( word ) to ﬁnd out if that word is already in the map </s>
<s> if the return value is null then this is the ﬁrst time the word has been encountered so a new worddata object is created and inserted into the map with the command wordsput( word new worddata( word ) ) </s>
<s> if wordsget( word ) is not null then its value is the worddata object for this word and the program only has to increment the counter in that object </s>
<s> the program uses a method readnextword( ) which was given in exercise 76 to read one word from the ﬁle </s>
<s> this method returns null when the end of the ﬁle is encountered </s>
<s> here is the complete code segment that reads the ﬁle and collects the data string word = readnextword( ) while ( word != null ) { word = wordtolowercase( ) // convert word to lower case worddata data = wordsget( word ) if ( data == null ) wordsput( word new worddata( word ) ) else datacount++ word = readnextword( ) } after reading the words and printing them out in alphabetical order the program has to sort the words by frequency and print them again </s>
<s> to do the sorting using a generic algorithm i deﬁned a simple comparator class for comparing two word objects according to their frequency counts </s>
<s> the class implements the interface comparator<worddata> since it will be used to compare two objects of type worddata /** * a comparator class for comparing objects of type worddata according to * their counts </s>
<s> this is used for sorting the list of words by frequency */ private static class countcompare implements comparator<worddata> { public int compare( worddata data1 worddata data2 ) { return data2count - data1count // the return value is positive if data1count < data2count // ie data1 comes after data2 in the ordering if there // were fewer occurrences of data1word than of data2word // the words are sorted according to decreasing counts } } // end class countcompare 104 </s>
<s> programming with the java collection framework 511 given this class we can sort the worddata objects according to frequency by ﬁrst copying them into a list and then using the generic method collectionssort( listcomparator ) the worddata objects that we need are the values in the map words </s>
<s> recall that wordsvalues( ) returns a collection that contains all the values from the map </s>
<s> the constructor for the arraylist class lets you specify a collection to be copied into the list when it is created </s>
<s> so we can use the following commands to create a list of type arraylist<worddata> containing the word data and then sort that list according to frequency arraylist<worddata> wordsbyfrequency = new arraylist<worddata>( wordsvalues( ) ) collectionssort( wordsbyfrequency new countcompare( ) ) you should notice that these two lines replace a lot of code! it requires some practice to think in terms of generic data structures and algorithms but the payoﬀ is signiﬁcant in terms of saved time and eﬀort the only remaining problem is to print the data </s>
<s> we have to print the data from all the worddata objects twice ﬁrst in alphabetical order and then sorted according to frequency count </s>
<s> the data is in alphabetical order in the treemap or more precisely in the values of the treemap </s>
<s> we can use a for-each loop to print the data in the collection wordsvalues( ) and the words will appear in alphabetical order </s>
<s> another for-each loop can be used to print the data in the list wordsbyfrequency and the words will be printed in order of decreasing frequency </s>
<s> here is the code that does it textioputln( list of words in alphabetical order + ( with counts in parentheses )n ) for ( worddata data wordsvalues( ) ) textioputln( + dataword + ( + datacount + ) ) textioputln( nnlist of words by frequency of occurrencen ) for ( worddata data wordsbyfrequency ) textioputln( + dataword + ( + datacount + ) ) you can ﬁnd the complete word-counting program in the ﬁle wordcountjava </s>
<s> note that for reading and writing ﬁles it uses the ﬁle i/o capabilities of textiojava which were discussed in subsection 245 by the way if you run the wordcount program on a reasonably large ﬁle and take a look at the output it will illustrate something about the collectionssort( ) method </s>
<s> the second list of words in the output is ordered by frequency but if you look at a group of words that all have the same frequency you will see that the words in that group are in alphabetical order the method collectionssort( ) was applied to sort the words by frequency but before it was applied the words were already in alphabetical order </s>
<s> when collectionssort( ) rearranged the words it did not change the ordering of words that have the same frequency so they were still in alphabetical order within the group of words with that frequency </s>
<s> this is because the algorithm used by collectionssort( ) is a stable sorting algorithm </s>
<s> a sorting algorithm is said to be stable if it satisﬁes the following condition when the algorithm is used to sort a list according to some property of the items in the list then the sort does not change the relative order of items that have the same value of that property </s>
<s> that is if item b comes after item a in the list before the sort and if both items have the same value for the property that is being used as the basis for sorting then item b will still come after item a after the sorting has been done </s>
<s> neither selectionsort nor quicksort are stable sorting algorithms </s>
<s> insertion sort is stable but is not very fast </s>
<s> merge sort the sorting algorithm used by collectionssort( ) is both stable and fast 512 chapter 10 </s>
<s> generic programming and collection classes i hope that the programming examples in this section have convinced you of the usefulness of the java collection framework! 105 writing generic classes and methods so far in this chapter you have learned about using the generic classes and methods that are part of the java collection framework </s>
<s> now it’s time to learn how to write new generic classes and methods from scratch </s>
<s> generic programming produces highly general and reusable code—it’s very useful for people who write reusable software libraries to know how to do generic programming since it enables them to write code that can be used in many diﬀerent situations not every programmer needs to write reusable software libraries but every programmer should know at least a little about how to do it </s>
<s> in fact just to read the javadoc documentation for java’s standard generic classes you need to know some of the syntax that is introduced in this section i will not cover every detail of generic programming in java in this section but the material presented here should be suﬃcient to cover the most common cases 1051 simple generic classes et’s start with an example that illustrates the motivation for generic programming </s>
<s> in subsection 1021 i remarked that it would be easy to use a linkedlist to implement a queue ( queues were introduced in subsection 932 ) to ensure that the only operations that are performed on the list are the queue operations enqueue dequeue and isempty we can create a new class that contains the linked list as a private instance variable </s>
<s> to implement queues of strings for example we can deﬁne the class class queueofstrings { private linkedlist<string> items = new linkedlist<string>( ) public void enqueue( string item ) { itemsaddlast( item ) } public string dequeue( ) { return itemsremovefirst( ) } public boolean isempty( ) { return ( itemssize( ) == 0 ) } } this is a ﬁne and useful class </s>
<s> but if this is how we write queue classes and if we want queues of integers or doubles or jbuttons or any other type then we will have to write a diﬀerent class for each type </s>
<s> the code for all of these classes will be almost identical which seems like a lot of redundant programming </s>
<s> to avoid the redundancy we can write a generic queue class that can be used to deﬁne queues of any type of object the syntax for writing the generic class is straightforward we replace the speciﬁc type string with a type parameter such as t and we add the type parameter to the name of the class class queue<t> { private linkedlist<t> items = new linkedlist<t>( ) public void enqueue( t item ) { 105 </s>
<s> writing generic classes and methods 513 itemsaddlast( item ) } public t dequeue( ) { return itemsremovefirst( ) } public boolean isempty( ) { return ( itemssize( ) == 0 ) } } note that within the class the type parameter t is used just like any regular type name it’s used to declare the return type for dequeue as the type of the formal parameter item in enqueue and even as the actual type parameter in linkedlist<t> </s>
<s> given this class deﬁnition we can use parameterized types such as queue<string> and queue<integer> and queue<jbutton> that is the queue class is used in exactly the same way as built-in generic classes like linkedlist and hashset note that you don’t have to use t” as the name of the type parameter in the deﬁnition of the generic class </s>
<s> type parameters are like formal parameters in subroutines </s>
<s> you can make up any name you like in the deﬁnition of the class </s>
<s> the name in the deﬁnition will be replaced by an actual type name when the class is used to declare variables or create objects </s>
<s> if you prefer to use a more meaningful name for the type parameter you might deﬁne the queue class as class queue<itemtype> { private linkedlist<itemtype> items = new linkedlist<itemtype>( ) public void enqueue( itemtype item ) { itemsaddlast( item ) } public itemtype dequeue( ) { return itemsremovefirst( ) } public boolean isempty( ) { return ( itemssize( ) == 0 ) } } changing the name from t” to itemtype” has absolutely no eﬀect on the meaning of the class deﬁnition or on the way that queue is used generic interfaces can be deﬁned in a similar way </s>
<s> it’s also easy to deﬁne generic classes and interfaces that have two or more type parameters as is done with the standard interface map<ts> </s>
<s> a typical example is the deﬁnition of a pair” that contains two objects possibly of diﬀerent types </s>
<s> a simple version of such a class can be deﬁned as class pair<ts> { public t first public s second public pair( t a s b ) { first = a second = b } } // constructor this class can be used to declare variables and create objects such as pair<stringcolor> colorname = new pair<stringcolor>( red colorred ) pair<doubledouble> coordinates = new pair<doubledouble>( 173428 ) 514 chapter 10 </s>
<s> generic programming and collection classes note that in the deﬁnition of the constructor in this class the name pair” does not have type parameters </s>
<s> you might have expected pair<ts>” </s>
<s> however the name of the class is pair” not pair<ts>” and within the deﬁnition of the class t” and s” are used as if they are the names of speciﬁc actual types </s>
<s> note in any case that type parameters are never added to the names of methods or constructors only to the names of classes and interfaces 1052 simple generic methods in addition to generic classes java also has generic methods </s>
<s> an example is the method collectionssort( ) which can sort collections of objects of any type </s>
<s> to see how to write generic methods let’s start with a non-generic method for counting the number of times that a given string occurs in an array of strings /** * returns the number of times that itemtocount occurs in list </s>
<s> items in the * list are tested for equality using itemtocountequals( ) except in the * special case where itemtocount is null */ public static int countoccurrences( string[] list string itemtocount ) { int count = 0 if ( itemtocount == null ) { for ( string listitem list ) if ( listitem == null ) count++ } else { for ( string listitem list ) if ( itemtocountequals( listitem ) ) count++ } return count } once again we have some code that works for type string and we can imagine writing almost identical code to work with other types of objects </s>
<s> by writing a generic method we get to write a single method deﬁnition that will work for objects of any type </s>
<s> we need to replace the speciﬁc type string in the deﬁnition of the method with the name of a type parameter such as t </s>
<s> however if that’s the only change we make the compiler will think that t” is the name of an actual type and it will mark it as an undeclared identiﬁer </s>
<s> we need some way of telling the compiler that t” is a type parameter </s>
<s> that’s what the <t>” does in the deﬁnition of the generic class class queue<t> { ” </s>
<s> for a generic method the <t>” goes just before the name of the return type of the method public static <t> int countoccurrences( t[] list t itemtocount ) { int count = 0 if ( itemtocount == null ) { for ( t listitem list ) if ( listitem == null ) count++ } else { for ( t listitem list ) if ( itemtocountequals( listitem ) ) 105 </s>
<s> writing generic classes and methods 515 count++ } return count } the <t>” marks the method as being generic and speciﬁes the name of the type parameter that will be used in the deﬁnition </s>
<s> of course the name of the type parameter doesn’t have to be t” it can be anything ( the <t>” looks a little strange in that position i know but it had to go somewhere and that’s just where the designers of java decided to put it ) given the generic method deﬁnition we can apply it to objects of any type </s>
<s> if wordlist is a variable of type string[ ] and word is a variable of type string then int ct = countoccurrences( wordlist word ) will count the number of times that word occurs in wordlist </s>
<s> if palette is a variable of type color[ ] and color is a variable of type color then int ct = countoccurrences( palette color ) will count the number of times that color occurs in palette </s>
<s> if numbers is a variable of type integer[ ] then int ct = countoccurrences( numbers 17 ) will count the number of times that 17 occurs in numbers </s>
<s> this last example uses autoboxing the 17 is automatically converted to a value of type integer as if we had said countoccurrences( numbers new integer( 17 ) )” </s>
<s> note that since generic programming in java applies only to objects we cannot use countoccurrences to count the number of occurrences of 17 in an array of type int[ ] a generic method can have one or more type parameters such as the t” in countoccurrences </s>
<s> note that when a generic method is used as in the function call countoccurrences( wordlist word )” there is no explicit mention of the type that is substituted for the type parameter </s>
<s> the compiler deduces the type from the types of the actual parameters in the method call </s>
<s> since wordlist is of type string[ ] the compiler can tell that in countoccurrences( wordlist word )” the type that replaces t is string </s>
<s> this contrasts with the use of generic classes as in new queue<string>( )” where the type parameter is speciﬁed explicitly the countoccurrences method operates on an array </s>
<s> we could also write a similar method to count occurrences of an object in any collection public static <t> int countoccurrences( collection<t> collection t itemtocount ) { int count = 0 if ( itemtocount == null ) { for ( t item collection ) if ( item == null ) count++ } else { for ( t item collection ) if ( itemtocountequals( item ) ) count++ } return count } 516 chapter 10 </s>
<s> generic programming and collection classes since collection<t> is itself a generic type this method is very general </s>
<s> it can operate on an arraylist of integers a treeset of strings a linkedlist of jbuttons 1053 type wildcards there is a limitation on the sort of generic classes and methods that we have looked at so far the type parameter in our examples usually named t can be any type at all </s>
<s> this is ok in many cases but it means that the only things that you can do with t are things that can be done with every type and the only things that you can do with objects of type t are things that you can do with every object </s>
<s> with the techniques that we have covered so far you can’t for example write a generic method that compares objects with the compareto( ) method since that method is not deﬁned for all objects </s>
<s> the compareto( ) method is deﬁned in the comparable interface </s>
<s> what we need is a way of specifying that a generic class or method only applies to objects of type comparable and not to arbitrary objects </s>
<s> with that restriction we should be free to use compareto( ) in the deﬁnition of the generic class or method there are two diﬀerent but related syntaxes for putting restrictions on the types that are used in generic programming </s>
<s> one of these is bounded type parameters which are used as formal type parameters in generic class and method deﬁnitions a bounded type parameter would be used in place of the simple type parameter t in class genericclass<t> ” or in public static <t> void genericmethod( ” </s>
<s> the second syntax is wildcard types which are used as type parameters in the declarations of variables and of formal parameters in method deﬁnitions a wildcard type could be used in place of the type parameter string in the declaration statement list<string> list” or in the formal parameter list void max( collection<string> c )” </s>
<s> we will look at wildcard types ﬁrst and we will return to the topic of bounded types later in this section et’s start with a simple example in which a wildcard type is useful </s>
<s> suppose that shape is a class that deﬁnes a method public void draw( ) and suppose that shape has subclasses such as rect and oval </s>
<s> suppose that we want a method that can draw all the shapes in a collection of shapes </s>
<s> we might try public static void drawall( collection<shape> shapes ) { for ( shape s shapes ) sdraw( ) } this method works ﬁne if we apply it to a variable of type collection<shape> or arraylist<shape> or any other collection class with type parameter shape </s>
<s> suppose however that you have a list of rects stored in a variable named rectangles of type collection<rect> since rects are shapes you might expect to be able to call drawall( rectangles ) </s>
<s> unfortunately this will not work a collection of rects is not considered to be a collection of shapes! the variable rectangles cannot be assigned to the formal parameter shapes </s>
<s> the solution is to replace the type parameter shape” in the declaration of shapes with the wildcard type extends shape” public static void drawall( collection< extends shape> shapes ) { for ( shape s shapes ) sdraw( ) } the wildcard type extends shape” means roughly any type that is either equal to shape or that is a subclass of shape” </s>
<s> when the parameter shapes is declared to be of type collec- 105 </s>
<s> writing generic classes and methods 517 tion< extends shape> it becomes possible to call the drawall method with an actual parameter of type collection<rect> since rect is a subclass of shape and therefore matches the wildcard we could also pass actual parameters to drawall of type arraylist<rect> or set<oval> or ist<oval> </s>
<s> and we can still pass variables of type collection<shape> or arraylist<shape> since the class shape itself matches extends shape” </s>
<s> we have greatly increased the usefulness of the method by using the wildcard type ( although it is not essential you might be interested in knowing why java does not allow a collection of rects to be used as a collection of shapes even though every rect is considered to be a shape </s>
<s> consider the rather silly but legal method that adds an oval to a list of shapes static void addoval( list<shape> shapes oval oval ) { shapesadd( oval ) } suppose that rectangles is of type list<rect> </s>
<s> it’s illegal to call addoval( rectanglesoval ) because of the rule that a list of rects is not a list of shapes </s>
<s> if we dropped that rule then addoval( rectanglesoval ) would be legal and it would add an oval to a list of rects </s>
<s> this would be bad since oval is not a subclass of rect an oval is not a rect and a list of rects should never be able to contain an oval </s>
<s> the method call addoval( rectanglesoval ) does not make sense and should be illegal so the rule that a collection of rects is not a collection of shapes is a good rule ) as another example consider the method addall( ) from the interface collection<t> </s>
<s> in my description of this method in subsection 1014 i say that for a collection coll of type collection<t> colladdall( coll2 ) adds all the objects in coll2 to coll </s>
<s> the parameter coll2 can be any collection of type collection<t> </s>
<s> however it can also be more general </s>
<s> for example if t is a class and s is a sub-class of t then coll2 can be of type collection<s> this makes sense because any object of type s is automatically of type t and so can legally be added to coll” if you think for a moment you’ll see that what i’m describing here a little awkwardly is a use of wildcard types we don’t want to require coll2 to be a collection of objects of type t we want to allow collections of any subclass of t </s>
<s> to be more speciﬁc let’s look at how a similar addall( ) method could be added to the generic queue class that was deﬁned earlier in this section class queue<t> { private linkedlist<t> items = new linkedlist<t>( ) public void enqueue( t item ) { itemsaddlast( item ) } public t dequeue( ) { return itemsremovefirst( ) } public boolean isempty( ) { return ( itemssize( ) == 0 ) } public void addall( collection< extends t> collection ) { // add all the items from the collection to the end of the queue for ( t item collection ) enqueue( item ) } } 518 chapter 10 </s>
<s> generic programming and collection classes here t is a type parameter in the generic class deﬁnition </s>
<s> we are combining wildcard types with generic classes </s>
<s> inside the generic class deﬁnition t” is used as if it is a speciﬁc though unknown type </s>
<s> the wildcard type extends t” means some type that extends that speciﬁc type </s>
<s> when we create a queue of type queue<shape> t” refers to shape” and the wildcard type extends t” in the class deﬁnition means extends shape” meaning that the addall method of the queue can be applied to collections of rects and ovals as well as to collections of shapes the for-each loop in the deﬁnition of addall iterates through the collection using a variable item of type t </s>
<s> now collection can be of type collection<s> where s is a subclass of t </s>
<s> since item is of type t not s do we have a problem here no no problem </s>
<s> as long as s is a subclass of t a value of type s can be assigned to a variable of type t </s>
<s> the restriction on the wildcard type makes everything work nicely the addall method adds all the items from a collection to the queue </s>
<s> suppose that we wanted to do the opposite add all the items that are currently on the queue to a given collection </s>
<s> an instance method deﬁned as public void addallto( collection<t> collection ) would only work for collections whose base type is exactly the same as t </s>
<s> this is too restrictive we need some sort of wildcard </s>
<s> however extends t” won’t work </s>
<s> suppose we try it public void addallto( collection< extends t> collection ) { // remove all items currently on the queue and add them to collection while ( ! isempty( ) ) { t item = dequeue( ) // remove an item from the queue collectionadd( item ) // add it to the collection </s>
<s> illegal!! } } the problem is that we can’t add an item of type t to a collection that might only be able to hold items belonging to some subclass s of t </s>
<s> the containment is going in the wrong direction an item of type t is not necessarily of type s </s>
<s> for example if we have a queue of type queue<shape> it doesn’t make sense to add items from the queue to a collection of type collection<rect> since not every shape is a rect </s>
<s> on the other hand if we have a queue<rect> it would make sense to add items from that queue to a collection<shape> or indeed to any collection collection<s> where s is a superclass of rect to express this type of relationship we need a new kind of type wildcard super t” this wildcard means roughly either t itself or any class that is a superclass of t” for example collection< super rect> would match the types collection<shape> arraylist<object> and set<rect> </s>
<s> this is what we need for our addallto method </s>
<s> with this change our complete generic queue class becomes class queue<t> { private linkedlist<t> items = new linkedlist<t>( ) public void enqueue( t item ) { itemsaddlast( item ) } public t dequeue( ) { return itemsremovefirst( ) } public boolean isempty( ) { return ( itemssize( ) == 0 ) 105 </s>
<s> writing generic classes and methods 519 } public void addall( collection< extends t> collection ) { // add all the items from the collection to the end of the queue for ( t item collection ) enqueue( item ) } public void addallto( collection< super t> collection ) { // remove all items currently on the queue and add them to collection while ( ! isempty( ) ) { t item = dequeue( ) // remove an item from the queue collectionadd( item ) // add it to the collection } } } in a wildcard type such as extends t” t can be an interface instead of a class </s>
<s> note that the term extends” ( not implements” ) is used in the wildcard type even if t is an interface </s>
<s> for example we will see that runnable is an interface that deﬁnes the method public void run( ) ( runnable objects are usually associated with threads see chapter 12 ) here is a method that runs all the objects in a collection of runnables by executing the run( ) method from each runnable object public static runall( collection< extends runnable> runnables ) { for ( runnable runnable runnables ) { runnablerun( ) } } ∗ ∗ ∗ wildcard types are used only as type parameters in parameterized types such as collection< extends runnable> </s>
<s> the place where a wildcard type is most likely to occur by far is in a formal parameter list where the wildcard type is used in the declaration of the type of a formal parameter </s>
<s> however they can also be used in a few other places </s>
<s> for example they can be used in the type speciﬁcation in a variable declaration statement one ﬁnal remark the wildcard type <>” is equivalent to < extends object>” </s>
<s> that is it matches any possible type </s>
<s> for example the removeall( ) method in the generic interface collections<t> is declared as public boolean removeall( collection<> c ) { this just means that the removeall method can be applied to any collection of any type of object 1054 bounded types wildcard types don’t solve all of our problems </s>
<s> they allow us to generalize method deﬁnitions so that they can work with collections of objects of various types rather than just a single type however they do not allow us to restrict the types that are allowed as type parameters in a generic class or method deﬁnition </s>
<s> bounded types exist for this purpose we start with a small not very realistic example </s>
<s> suppose that you would like to create groups of gui components using a generic class named componentgroup </s>
<s> for example the parameterized type componentgroup<jbutton> would represent a group of jbuttons while 520 chapter 10 </s>
<s> generic programming and collection classes componentgroup<jpanel> would represent a group of jpanels </s>
<s> the class will include methods that can be called to apply certain operations to all components in the group at once </s>
<s> for example there will be an instance method of the form public void repaintall( ) { // call the repaint( ) method of every component in the group } the problem is that the repaint( ) method is deﬁned in a jcomponent object but not for objects of arbitrary type </s>
<s> it wouldn’t make sense to allow types such as componentgroup<string> or componentgroup<integer> since strings and integers don’t have repaint( ) methods </s>
<s> we need some way to restrict the type parameter t in componentgroup<t> so that only jcomponent and subclasses of jcomponent are allowed as actual type parameters </s>
<s> we can do this by using the bounded type t extends jcomponent” instead of a plain t” in the deﬁnition of the class public class componentgroup<t extends jcomponent> { private arraylist<t> components // for storing the components in this group public void repaintall( ) { for ( jcomponent c components ) if ( c != null ) crepaint( ) } public void setallenabled( boolean enable ) { for ( jcomponent c components ) if ( c != null ) csetenabled( enable ) } } public void add( t c ) { // add a value c of type t to the group componentsadd( c ) } // additional methods and constructors } the restriction extends jcomponent” on t makes it illegal to create the parameterized types componentgroup<string> and componentgroup<integer> since the actual type parameter that replaces t” is required to be either jcomponent itself or a subclass of jcomponent with this restriction we know—and more important the compiler knows—that the objects in the group are of type jcomponent and the operations crepaint( ) and csetenabled( ) are deﬁned for any c in the group in general a bounded type parameter t extends sometype” means roughly a type t that is either equal to sometype or is a subclass of sometype” and the upshot is that any object of type t is also of type sometype and any operation that is deﬁned for objects of type sometype is deﬁned for objects of type t </s>
<s> the type sometype doesn’t have to be the name of a class </s>
<s> it can be any name that represents an actual object type </s>
<s> for example it can be an interface or even a parameterized type bounded types and wildcard types are clearly related </s>
<s> they are however used in very diﬀerent ways </s>
<s> a bounded type can be used only as a formal type parameter in the deﬁnition 105 </s>
<s> writing generic classes and methods 521 of a generic method class or interface </s>
<s> a wildcard type is used most often to declare the type of a formal parameter in a method and cannot be used as a formal type parameter </s>
<s> one other diﬀerence by the way is that in contrast to wildcard types bounded type parameters can only use extends” never super” bounded type parameters can be used when declaring generic methods </s>
<s> for example as an alternative to the generic componentgroup class one could write a free-standing generic static method that can repaint any collection of jcomponents as follows public static <t extends jcomponent> void repaintall( collection<t> comps ) { for ( jcomponent c comps ) if ( c != null ) crepaint( ) } using <t extends jcomponent>” as the formal type parameter means that the method can only be called for collections whose base type is jcomponent or some subclass of jcomponent thus it is legal to call repaintall( coll ) where coll is of type list<jpanel> but not where coll is of type set<string> note that we don’t really need a generic type parameter in this case </s>
<s> we can write an equivalent method using a wildcard type public static void repaintall( collection< extends jcomponent> comps ) { for ( jcomponent c comps ) if ( c != null ) crepaint( ) } in this situation the version that uses the wildcard type is to be preferred since the implementation is simpler </s>
<s> however there are some situations where a generic method with a bounded type parameter cannot be rewritten using a wildcard type </s>
<s> note that a generic type parameter gives a name such as t to the unknown type while a wildcard type does not give a name to the unknown type </s>
<s> the name makes it possible to refer to the unknown type in the body of the method that is being deﬁned </s>
<s> if a generic method deﬁnition uses the generic type name more than once or uses it outside the formal parameter list of the method then the generic type cannot be replaced with a wildcard type et’s look at a generic method in which a bounded type parameter is essential </s>
<s> in subsection 1021 i presented a code segment for inserting a string into a sorted list of strings in such a way that the modiﬁed list is still in sorted order </s>
<s> here is the same code but this time in the form of a method deﬁnition ( and without the comments ) static void sortedinsert( list<string> sortedlist string newitem ) { istiterator<string> iter = sortedlistlistiterator( ) while ( iterhasnext( ) ) { string item = iternext( ) if ( newitemcompareto( item ) <= 0 ) { iterprevious( ) break } } iteradd( newitem ) } 522 chapter 10 </s>
<s> generic programming and collection classes this method works ﬁne for lists of strings but it would be nice to have a generic method that can be applied to lists of other types of objects </s>
<s> the problem of course is that the code assumes that the compareto( ) method is deﬁned for objects in the list so the method can only work for lists of objects that implement the comparable interface </s>
<s> we can’t simply use a wildcard type to enforce this restriction </s>
<s> suppose we try to do it by replacing list<string> with list< extends comparable> static void sortedinsert( list< extends comparable> sortedlist newitem ) { istiterator<> iter = stringlistlistiterator( ) we immediately run into a problem because we have no name for the unknown type represented by the wildcard </s>
<s> we need a name for that type because the type of newitem and of iter should be the same as the type of the items in the list </s>
<s> the problem is solved if we write a generic method with a bounded type parameter since then we have a name for the unknown type and we can write a valid generic method static <t extends comparable> void sortedinsert( list<t> sortedlist t newitem ) { istiterator<t> iter = sortedlistlistiterator( ) while ( iterhasnext( ) ) { t item = iternext( ) if ( newitemcompareto( item ) <= 0 ) { iterprevious( ) break } } iteradd( newitem ) } there is still one technicality to cover in this example </s>
<s> comparable is itself a parameterized type but i have used it here without a type parameter </s>
<s> this is legal but the compiler might give you a warning about using a raw type” in fact the objects in the list should implement the parameterized interface comparable<t> since they are being compared to items of type t </s>
<s> this just means that instead of using comparable as the type bound we should use comparable<t> static <t extends comparable<t>> void sortedinsert( list<t> sortedlist ∗ ∗ ∗ with this example i will leave the topic of generic types and generic programming </s>
<s> in this chapter i have occasionally used terms such as strange” and weird” to talk about generic programming in java </s>
<s> i will confess that i have some aﬀection for the more simple-minded generic programming style of smalltalk </s>
<s> nevertheless i recognize the power and increased robustness of generics in java </s>
<s> i hope that i have convinced you that using the java collection framework is reasonably natural and straightforward and that using it can save you a lot of time and eﬀort compared to repeatedly recoding the same data structures and algorithms from scratch </s>
<s> things become more technical when you start writing new generic classes and methods of your own and the syntax is ( as i’ve said ) a little strange </s>
<s> but with some practice you’ll get used to the syntax and will ﬁnd that it’s not that diﬃcult after all 523 exercises exercises for chapter 10 1 </s>
<s> rewrite the phonedirectory class from subsection 742 so that it uses a treemap to store directory entries instead of an array ( doing this was suggested in subsection 1031 ) 2 </s>
<s> in mathematics several operations are deﬁned on sets </s>
<s> the union of two sets a and b is a set that contains all the elements that are in a together with all the elements that are in b </s>
<s> the intersection of a and b is the set that contains elements that are in both a and b </s>
<s> the diﬀerence of a and b is the set that contains all the elements of a except for those elements that are also in b suppose that a and b are variables of type set in java </s>
<s> the mathematical operations on a and b can be computed using methods from the set interface </s>
<s> in particular aaddall( b ) computes the union of a and b aretainall( b ) computes the intersection of a and b and aremoveall( b ) computes the diﬀerence of a and b ( these operations change the contents of the set a while the mathematical operations create a new set without changing a but that diﬀerence is not relevant to this exercise ) for this exercise you should write a program that can be used as a set calculator” for simple operations on sets of non-negative integers ( negative integers are not allowed ) a set of such integers will be represented as a list of integers separated by commas and optionally spaces and enclosed in square brackets </s>
<s> for example [123] or [17 42 9 53 108] </s>
<s> the characters + * and - will be used for the union intersection and diﬀerence operations </s>
<s> the user of the program will type in lines of input containing two sets separated by an operator </s>
<s> the program should perform the operation and print the resulting set </s>
<s> here are some examples input -- -- -- -- -- -- -- -- -- -- -- -- [1 2 3] + [3 5 7] [10987] * [2468] [ 5 10 15 20 ] - [ 0 10 20 ] output -- -- -- -- -- -- -- -- -- [1 2 3 5 7] [8] [5 15] to represent sets of non-negative integers use sets of type treeset<integer> </s>
<s> read the user’s input create two treesets and use the appropriate treeset method to perform the requested operation on the two sets </s>
<s> your program should be able to read and process any number of lines of input </s>
<s> if a line contains a syntax error your program should not crash </s>
<s> it should report the error and move on to the next line of input ( note to print out a set a of integers you can just say systemoutprintln( a ) </s>
<s> i’ve chosen the syntax for sets to be the same as that used by the system for outputting a set ) 3 </s>
<s> the fact that java has a hashmap class means that no java programmer has to write an implementation of hash tables from scratch—unless of course that programmer is a computer science student for this exercise you should write a hash table in which both the keys and the values are of type string ( this is not an exercise in generic programming do not try to write a generic class ) write an implementation of hash tables from scratch </s>
<s> deﬁne the following methods get( key ) put( keyvalue ) remove( key ) containskey( key ) and size( ) remember that every object obj has a method objhashcode( ) that can be used for computing a hash code for the object so at least you don’t have to deﬁne your own hash function </s>
<s> do not use any of java’s built-in generic types create your own linked lists 524 chapter 10 </s>
<s> generic programming and collection classes using nodes as covered in subsection 922 </s>
<s> however you do not have to worry about increasing the size of the table when it becomes too full you should also write a short program to test your solution 4 </s>
<s> a predicate is a boolean-valued function with one parameter </s>
<s> some languages use predicates in generic programming </s>
<s> java doesn’t but this exercise looks at how predicates might work in java in java we could implement predicate objects” by deﬁning a generic interface public interface predicate<t> { public boolean test( t obj ) } the idea is that an object that implements this interface knows how to test” objects of type t in some way </s>
<s> deﬁne a class that contains the following generic static methods for working with predicate objects </s>
<s> the name of the class should be predicates in analogy with the standard class collections that provides various static methods for working with collections public static <t> void remove( collection<t> coll predicate<t> pred ) // remove every object obj from coll for which // predtest( obj ) is true public static <t> void retain( collection<t> coll predicate<t> pred ) // remove every object obj from coll for which // predtest( obj ) is false ( that is retain the // objects for which the predicate is true ) public static <t> list<t> collect( collection<t> coll predicate<t> pred ) // return a list that contains all the objects obj // from the collection coll such that predtest( obj ) // is true public static <t> int find( arraylist<t> list predicate<t> pred ) // return the index of the first item in list // for which the predicate is true if any // if there is no such item return -1 ( in c++ methods similar to these are included as a standard part of the generic programming framework ) 5 </s>
<s> an example in subsection 1042 concerns the problem of making an index for a book a related problem is making a concordance for a document </s>
<s> a concordance lists every word that occurs in the document and for each word it gives the line number of every line in the document where the word occurs </s>
<s> all the subroutines for creating an index that were presented in subsection 1042 can also be used to create a concordance </s>
<s> the only real diﬀerence is that the integers in a concordance are line numbers rather than page numbers write a program that can create a concordance </s>
<s> the document should be read from an input ﬁle and the concordance data should be written to an output ﬁle </s>
<s> you can use the indexing subroutines from subsection 1042 modiﬁed to write the data to textio instead of to systemout ( you will need to make these subroutines static ) the input and output ﬁles should be selected by the user when the program is run </s>
<s> the sample 525 exercises program wordcountjava from subsection 1044 can be used as a model of how to use ﬁles </s>
<s> that program also has a useful subroutine that reads one word from input as you read the ﬁle you want to take each word that you encounter and add it to the concordance along with the current line number </s>
<s> keeping track of the line numbers is one of the trickiest parts of the problem </s>
<s> in an input ﬁle the end of each line in the ﬁle is marked by the newline character ’n’ </s>
<s> every time you encounter this character you have to add one to the line number </s>
<s> wordcountjava ignores ends of lines </s>
<s> because you need to ﬁnd and count the end-of-line characters your program cannot process the input ﬁle in exactly the same way as does wordcountjava </s>
<s> also you will need to detect the end of the ﬁle </s>
<s> the function textiopeek( ) which is used to look ahead at the next character in the input returns the value textioeof at end-of-ﬁle after all the characters in the ﬁle have been read because it is so common don’t include the word the” in your concordance </s>
<s> also do not include words that have length less than 3 6 </s>
<s> the sample program simpleinterpreterjava from subsection 1041 can carry out commands of the form let variable = expression” or print expression” </s>
<s> that program can handle expressions that contain variables numbers operators and parentheses </s>
<s> extend the program so that it can also handle the standard mathematical functions sin cos tan abs sqrt and log </s>
<s> for example the program should be able to evaluate an expression such as sin( 3*x-7 )+log( sqrt( y ) ) assuming that the variables x and y have been given values </s>
<s> note that the name of a function must be followed by an expression that is enclosed in parentheses in the original program a symbol table holds a value for each variable that has been deﬁned </s>
<s> in your program you should add another type of symbol to the table to represent standard functions </s>
<s> you can use the following nested enumerated type and class for this purpose private enum functions { sin cos tan abs sqrt log } /** * an object of this class represents one of the standard functions */ private static class standardfunction { /** * tells which function this is */ functions functioncode /** * constructor creates an object to represent one of * the standard functions * @param code which function is represented */ standardfunction( functions code ) { functioncode = code } /** * finds the value of this function for the specified * parameter value x 526 chapter 10 </s>
<s> generic programming and collection classes */ double evaluate( double x ) { switch( functioncode ) { case sin return mathsin( x ) case cos return mathcos( x ) case tan return mathtan( x ) case abs return mathabs( x ) case sqrt return mathsqrt( x ) default return mathlog( x ) } } } // end class standardfunction add a symbol to the symbol table to represent each function </s>
<s> the key is the name of the function and the value is an object of type standardfunction that represents the function </s>
<s> for example symboltableput( sin new standardfunction( standardfunctionsin ) ) in simpleinterpreterjava the symbol table is a map of type hashmap<stringdouble> </s>
<s> it’s not legal to use a standardfunction as the value in such a map so you will have to change the type of the map </s>
<s> the map has to hold two diﬀerent types of objects </s>
<s> the easy way to make this possible is to create a map of type hashmap<stringobject> ( a better way is to create a general type to represent objects that can be values in the symbol table and to deﬁne two subclasses of that class one to represent variables and one to represent standard functions but for this exercise you should do it the easy way ) in your parser when you encounter a word you have to be able to tell whether it’s a variable or a standard function </s>
<s> look up the word in the symbol table </s>
<s> if the associated object is non-null and is of type double then the word is a variable </s>
<s> if it is of type standardfunction then the word is a function </s>
<s> remember that you can test the type of an object using the instanceof operator </s>
<s> for example if ( obj instanceof double ) 527 quiz quiz on chapter 10 1 </s>
<s> what is meant by generic programming and what is the alternative 2 </s>
<s> why can’t you make an object of type linkedlist<int> what should you do instead 3 </s>
<s> what is an iterator and why are iterators necessary for generic programming 4 </s>
<s> suppose that integers is a variable of type collection<integer> </s>
<s> write a code segment that uses an iterator to compute the sum of all the integer values in the collection </s>
<s> write a second code segment that does the same thing using a for-each loop 5 </s>
<s> interfaces such as list set and map deﬁne abstract data types </s>
<s> explain what this means 6 </s>
<s> what is the fundamental property that distinguishes sets from other types of collections 7 </s>
<s> what is the essential diﬀerence in functionality between a treemap and a hashmap 8 </s>
<s> explain what is meant by a hash code 9 </s>
<s> modify the following date class so that it implements the interface comparable<date> the ordering on objects of type date should be the natural chronological ordering class date { int month // month number in range 1 to 12 int day // day number in range 1 to 31 int year // year number date( int m int d int y ) { month = m day = d year = y } } 10 </s>
<s> suppose that syllabus is a variable of type treemap<datestring> where date is the class from the preceding exercise </s>
<s> write a code segment that will write out the value string for every key that is in the month of december 2010 11 </s>
<s> write a generic class stack<t> that can be used to represent stacks of objects of type t the class should include methods push( ) pop( ) and isempty( ) </s>
<s> inside the class use an arraylist to hold the items on the stack 12 </s>
<s> write a generic method using a generic type parameter <t> that replaces every occurrence in an arraylist<t> of a speciﬁed item with a speciﬁed replacement item </s>
<s> the list and the two items are parameters to the method </s>
<s> both items are of type t </s>
<s> take into account the fact that the item that is being replaced might be null </s>
<s> for a non-null item use equals( ) to do the comparison 528 chapter 10 </s>
<s> generic programming and collection classes chapter 11 advanced input/output streams files and networking computer programs are only useful if they interact with the rest of the world in some way </s>
<s> this interaction is referred to as input/output or i/o </s>
<s> up until now this book has concentrated on just one type of interaction interaction with the user through either a graphical user interface or a command-line interface </s>
<s> but the user is only one possible source of information and only one possible destination for information </s>
<s> we have already encountered one other type of input/output since textio can read data from ﬁles and write data to ﬁles however java has an input/output framework that provides much more power and ﬂexibility than does textio and that covers other kinds of i/o in addition to ﬁles </s>
<s> most importantly it supports communication over network connections </s>
<s> in java input/output involving ﬁles and networks is based on streams which are objects that support i/o commands that are similar to those that you have already used </s>
<s> in fact standard output ( systemout ) and standard input ( systemin ) are examples of streams working with ﬁles and networks requires familiarity with exceptions which were covered in chapter 8 </s>
<s> many of the subroutines that are used can throw exceptions that require mandatory exception handling </s>
<s> this generally means calling the subroutine in a trycatch statement that can deal with the exception if one occurs </s>
<s> eﬀective network communication also requires the use of threads which will be covered in chapter 12 </s>
<s> we will look at the basic networking api in this chapter but we will return to the topic of threads and networking in section 124 111 streams readers and writers without the ability to interact with the rest of the world a program would be useless the interaction of a program with the rest of the world is referred to as input/output or i/o historically one of the hardest parts of programming language design has been coming up with good facilities for doing input and output </s>
<s> a computer can be connected to many diﬀerent types of input and output devices </s>
<s> if a programming language had to deal with each type of device as a special case the complexity would be overwhelming </s>
<s> one of the major achievements in the history of programming has been to come up with good abstractions for representing i/o devices </s>
<s> in java the main i/o abstractions are called streams </s>
<s> other i/o abstractions such as ﬁles” and channels” also exist but in this section we will look only at streams </s>
<s> every stream represents either a source of input or a destination to which output can be sent 529 530 1111 chapter 11 </s>
<s> streams files and networking character and byte streams when dealing with input/output you have to keep in mind that there are two broad categories of data machine-formatted data and human-readable text </s>
<s> machine-formatted data is represented in binary form the same way that data is represented inside the computer that is as strings of zeros and ones </s>
<s> human-readable data is in the form of characters </s>
<s> when you read a number such as 3141592654 you are reading a sequence of characters and interpreting them as a number </s>
<s> the same number would be represented in the computer as a bit-string that you would ﬁnd unrecognizable to deal with the two broad categories of data representation java has two broad categories of streams byte streams for machine-formatted data and character streams for humanreadable data </s>
<s> there are many predeﬁned classes that represent streams of each type an object that outputs data to a byte stream belongs to one of the subclasses of the abstract class outputstream </s>
<s> objects that read data from a byte stream belong to subclasses of inputstream </s>
<s> if you write numbers to an outputstream you won’t be able to read the resulting data yourself </s>
<s> but the data can be read back into the computer with an inputstream the writing and reading of the data will be very eﬃcient since there is no translation involved the bits that are used to represent the data inside the computer are simply copied to and from the streams for reading and writing human-readable character data the main classes are the abstract classes reader and writer </s>
<s> all character stream classes are subclasses of one of these </s>
<s> if a number is to be written to a writer stream the computer must translate it into a humanreadable sequence of characters that represents that number </s>
<s> reading a number from a reader stream into a numeric variable also involves a translation from a character sequence into the appropriate bit string ( even if the data you are working with consists of characters in the ﬁrst place such as words from a text editor there might still be some translation </s>
<s> characters are stored in the computer as 16-bit unicode values </s>
<s> for people who use western alphabets character data is generally stored in ﬁles in ascii code which uses only 8 bits per character the reader and writer classes take care of this translation and can also handle non-western alphabets in countries that use them ) byte streams can be useful for direct machine-to-machine communication and they can sometimes be useful for storing data in ﬁles especially when large amounts of data need to be stored eﬃciently such as in large databases </s>
<s> however binary data is fragile in the sense that its meaning is not self-evident </s>
<s> when faced with a long series of zeros and ones you have to know what information it is meant to represent and how that information is encoded before you will be able to interpret it </s>
<s> of course the same is true to some extent for character data which is itself coded into binary form </s>
<s> but the binary encoding of character data has been standardized and is well understood and data expressed in character form can be made meaningful to human readers </s>
<s> the current trend seems to be towards increased use of character data represented in a way that will make its meaning as self-evident as possible </s>
<s> we’ll look at one way this is done in section 115 i should note that the original version of java did not have character streams and that for ascii-encoded character data byte streams are largely interchangeable with character streams </s>
<s> in fact the standard input and output streams systemin and systemout are byte streams rather than character streams </s>
<s> however you should use readers and writers rather than inputstreams and outputstreams when working with character data even when working with the standard ascii character set the standard stream classes discussed in this section are deﬁned in the package javaio 111 </s>
<s> streams readers and writers 531 along with several supporting classes </s>
<s> you must import the classes from this package if you want to use them in your program </s>
<s> that means either importing individual classes or putting the directive import javaio*” at the beginning of your source ﬁle </s>
<s> streams are necessary for working with ﬁles and for doing communication over a network </s>
<s> they can also be used for communication between two concurrently running threads and there are stream classes for reading and writing data stored in the computer’s memory the beauty of the stream abstraction is that it is as easy to write data to a ﬁle or to send data over a network as it is to print information on the screen ∗ ∗ ∗ the basic i/o classes reader writer inputstream and outputstream provide only very primitive i/o operations </s>
<s> for example the inputstream class declares the instance method public int read( ) throws ioexception for reading one byte of data as a number in the range 0 to 255 from an input stream </s>
<s> if the end of the input stream is encountered the read( ) method will return the value -1 instead </s>
<s> if some error occurs during the input attempt an exception of type ioexception is thrown </s>
<s> since ioexception is an exception class that requires mandatory exception-handling this means that you can’t use the read( ) method except inside a try statement or in a subroutine that is itself declared with a throws ioexception” clause ( mandatory exception handling was covered in subsection 833 ) the inputstream class also deﬁnes methods for reading multiple bytes of data in one step into an array of bytes </s>
<s> however inputstream provides no convenient methods for reading other types of data such as int or double from a stream </s>
<s> this is not a problem because you’ll never use an object of type inputstream itself </s>
<s> instead you’ll use subclasses of inputstream that add more convenient input methods to inputstream’s rather primitive capabilities </s>
<s> similarly the outputstream class deﬁnes a primitive output method for writing one byte of data to an output stream </s>
<s> the method is deﬁned as public void write( int b ) throws ioexception the parameter is of type int rather than byte but the parameter value is type-cast to type byte before it is written this eﬀectively discards all but the eight low order bits of b </s>
<s> again in practice you will almost always use higher-level output operations deﬁned in some subclass of outputstream the reader and writer classes provide the analogous low-level read and write methods as in the byte stream classes the parameter of the write( c ) method in writer and the return value of the read( ) method in reader are of type int but in these character-oriented classes the i/o operations read and write characters rather than bytes </s>
<s> the return value of read( ) is -1 if the end of the input stream has been reached </s>
<s> otherwise the return value must be type-cast to type char to obtain the character that was read </s>
<s> in practice you will ordinarily use higher level i/o operations provided by sub-classes of reader and writer as discussed below 1112 printwriter one of the neat things about java’s i/o package is that it lets you add capabilities to a stream by wrapping” it in another stream object that provides those capabilities </s>
<s> the wrapper object is also a stream so you can read from or write to it—but you can do so using fancier operations than those available for basic streams 532 chapter 11 </s>
<s> streams files and networking for example printwriter is a subclass of writer that provides convenient methods for outputting human-readable character representations of all of java’s basic data types </s>
<s> if you have an object belonging to the writer class or any of its subclasses and you would like to use printwriter methods to output data to that writer all you have to do is wrap the writer in a printwriter object </s>
<s> you do this by constructing a new printwriter object using the writer as input to the constructor </s>
<s> for example if charsink is of type writer then you could say printwriter printablecharsink = new printwriter( charsink ) when you output data to printablecharsink using the high-level output methods in printwriter that data will go to exactly the same place as data written directly to charsink </s>
<s> you’ve just provided a better interface to the same output stream </s>
<s> for example this allows you to use printwriter methods to send data to a ﬁle or over a network connection for the record if out is a variable of type printwriter then the following methods are deﬁned • outprint( x ) — prints the value of x represented in the form of a string of characters to the output stream x can be an expression of any type including both primitive types and object types </s>
<s> an object is converted to string form using its tostring( ) method </s>
<s> a null value is represented by the string null” • outprintln( ) — outputs an end-of-line to the output stream • outprintln( x ) — outputs the value of x followed by an end-of-line this is equivalent to outprint( x ) followed by outprintln( ) • outprintf( formatstring x1 x2 ) — does formatted output of x1 x2 to the output stream </s>
<s> the ﬁrst parameter is a string that speciﬁes the format of the output there can be any number of additional parameters of any type but the types of the parameters must match the formatting directives in the format string </s>
<s> formatted output for the standard output stream systemout was introduced in subsection 244 and outprintf has the same functionality • outflush( ) — ensures that characters that have been written with the above methods are actually sent to the output destination </s>
<s> in some cases notably when writing to a ﬁle or to the network it might be necessary to call this method to force the output to actually appear at the destination note that none of these methods will ever throw an ioexception </s>
<s> instead the printwriter class includes the method public boolean checkerror( ) which will return true if any error has been encountered while writing to the stream </s>
<s> the printwriter class catches any ioexceptions internally and sets the value of an internal error ﬂag if one occurs </s>
<s> the checkerror( ) method can be used to check the error ﬂag </s>
<s> this allows you to use printwriter methods without worrying about catching exceptions </s>
<s> on the other hand to write a fully robust program you should call checkerror( ) to test for possible errors whenever you use a printwriter 1113 data streams when you use a printwriter to output data to a stream the data is converted into the sequence of characters that represents the data in human-readable form </s>
<s> suppose you want to output 111 </s>
<s> streams readers and writers 533 the data in byte-oriented machine-formatted form the javaio package includes a bytestream class dataoutputstream that can be used for writing data values to streams in internal binary-number format </s>
<s> dataoutputstream bears the same relationship to outputstream that printwriter bears to writer </s>
<s> that is whereas outputstream only has methods for outputting bytes dataoutputstream has methods writedouble( double x ) for outputting values of type double writeint( int x ) for outputting values of type int and so on </s>
<s> furthermore you can wrap any outputstream in a dataoutputstream so that you can use the higher level output methods on it </s>
<s> for example if bytesink is of type outputstream you could say dataoutputstream datasink = new dataoutputstream( bytesink ) to wrap bytesink in a dataoutputstream datasink for input of machine-readable data such as that created by writing to a dataoutputstream javaio provides the class datainputstream </s>
<s> you can wrap any inputstream in a datainputstream object to provide it with the ability to read data of various types from the bytestream </s>
<s> the methods in the datainputstream for reading binary data are called readdouble( ) readint( ) and so on </s>
<s> data written by a dataoutputstream is guaranteed to be in a format that can be read by a datainputstream </s>
<s> this is true even if the data stream is created on one type of computer and read on another type of computer </s>
<s> the cross-platform compatibility of binary data is a major aspect of java’s platform independence in some circumstances you might need to read character data from an inputstream or write character data to an outputstream </s>
<s> this is not a problem since characters like all data are represented as binary numbers </s>
<s> however for character data it is convenient to use reader and writer instead of inputstream and outputstream </s>
<s> to make this possible you can wrap a byte stream in a character stream </s>
<s> if bytesource is a variable of type inputstream and bytesink is of type outputstream then the statements reader charsource = new inputstreamreader( bytesource ) writer charsink = new outputstreamwriter( bytesink ) create character streams that can be used to read character data from and write character data to the byte streams </s>
<s> in particular the standard input stream systemin which is of type inputstream for historical reasons can be wrapped in a reader to make it easier to read character data from standard input reader charin = new inputstreamreader( systemin ) as another application the input and output streams that are associated with a network connection are byte streams rather than character streams but the byte streams can be wrapped in character streams to make it easy to send and receive character data over the network </s>
<s> we will encounter network i/o in section 114 there are various ways for characters to be encoded as binary data </s>
<s> a particular encoding is known as a charset or character set </s>
<s> charsets have standardized names such as utf-16” utf-8” and iso-8859-1” in utf-16 characters are encoded as 16-bit unicode values this is the character set that is used internally by java </s>
<s> utf-8 is a way of encoding unicode characters using 8 bits for common ascii characters and longer codes for other characters iso-8859-1 also known as latin-1” is an 8-bit encoding that includes ascii characters as well as certain accented characters that are used in several european languages </s>
<s> readers and writers use the default charset for the computer on which they are running unless you specify a diﬀerent one </s>
<s> this can be done for example in a constructor such as writer charsink = new outputstreamwriter( bytesink iso-8859-1 ) 534 chapter 11 </s>
<s> streams files and networking certainly the existence of a variety of charset encodings has made text processing more complicated—unfortunate for us english-speakers but essential for people who use non-western character sets </s>
<s> ordinarily you don’t have to worry about this but it’s a good idea to be aware that diﬀerent charsets exist in case you run into textual data encoded in a non-default way 1114 reading text much i/o is done in the form of human-readable characters </s>
<s> in view of this it is surprising that java does not provide a standard character input class that can read character data in a manner that is reasonably symmetrical with the character output capabilities of printwriter ( the scanner class introduced brieﬂy in subsection 246 and covered in more detail in subsection 1115 comes pretty close ) there is one basic case that is easily handled by a standard class </s>
<s> the buﬀeredreader class has a method public string readline( ) throws ioexception that reads one line of text from its input source </s>
<s> if the end of the stream has been reached the return value is null </s>
<s> when a line of text is read the end-of-line marker is read from the input stream but it is not part of the string that is returned </s>
<s> diﬀerent input streams use diﬀerent characters as end-of-line markers but the readline method can deal with all the common cases ( traditionally unix computers including linux and mac os x use a line feed character ’n’ to mark an end of line classic macintosh used a carriage return character ’r’ and windows uses the two-character sequence rn” </s>
<s> in general modern computers can deal correctly with all of these possibilities ) ine-by-line processing is very common </s>
<s> any reader can be wrapped in a buﬀeredreader to make it easy to read full lines of text </s>
<s> if reader is of type reader then a buﬀeredreader wrapper can be created for reader with bufferedreader in = new bufferedreader( reader ) this can be combined with the inputstreamreader class that was mentioned above to read lines of text from an inputstream </s>
<s> for example we can apply this to systemin bufferedreader in // bufferedreader for reading from standard input in = new bufferedreader( new inputstreamreader( systemin ) ) try { string line = inreadline( ) while ( line != null ) { processonelineofinput( line ) line = inreadline( ) } } catch ( ioexception e ) { } this code segment reads and processes lines from standard input until an end-of-stream is encountered ( an end-of-stream is possible even for interactive input </s>
<s> for example on at least some computers typing a control-d generates an end-of-stream on the standard input stream ) the trycatch statement is necessary because the readline method can throw an exception of type ioexception which requires mandatory exception handling an alternative to trycatch would be to declare that the method that contains the code throws ioexception” </s>
<s> also remember that buﬀeredreader inputstreamreader and ioexception must be imported from the package javaio 111 </s>
<s> streams readers and writers 535 ∗ ∗ ∗ previously in this book we have used the non-standard class textio for input both from users and from ﬁles </s>
<s> the advantage of textio is that it makes it fairly easy to read data values of any of the primitive types </s>
<s> disadvantages include the fact that textio can only read from one ﬁle at a time that it can’t do i/o operations on network connections and that it does not follow the same pattern as java’s built-in input/output classes i have written a class named textreader to ﬁx some of these disadvantages while providing input capabilities similar to those of textio </s>
<s> like textio textreader is a non-standard class so you have to be careful to make it available to any program that uses it </s>
<s> the source code for the class can be found in the ﬁle textreaderjava just as for many of java’s stream classes an object of type textreader can be used as a wrapper for an existing input stream which becomes the source of the characters that will be read by the textreader ( unlike the standard classes however a textreader is not itself a stream and cannot be wrapped inside other stream classes ) the constructors public textreader( reader charactersource ) and public textreader( inputstream bytesource ) create objects that can be used to read human-readable data from the given reader or inputstream using the convenient input methods of the textreader class </s>
<s> in textio the input methods were static members of the class </s>
<s> the input methods in the textreader class are instance methods </s>
<s> the instance methods in a textreader object read from the data source that was speciﬁed in the object’s constructor </s>
<s> this makes it possible for several textreader objects to exist at the same time reading from diﬀerent streams those objects can then be used to read data from several ﬁles or other input sources at the same time a textreader object has essentially the same set of input methods as the textio class one big diﬀerence is how errors are handled </s>
<s> when a textreader encounters an error in the input it throws an exception of type ioexception </s>
<s> this follows the standard pattern that is used by java’s standard input streams </s>
<s> ioexceptions require mandatory exception handling so textreader methods are generally called inside trycatch statements </s>
<s> if an ioexception is thrown by the input stream that is wrapped inside a textreader that ioexception is simply passed along </s>
<s> however other types of errors can also occur </s>
<s> one such possible error is an attempt to read data from the input stream when there is no more data left in the stream </s>
<s> a textreader throws an exception of type textreaderendofstreamexception when this happens the exception class in this case is a nested class in the textreader class it is a subclass of ioexception so a trycatch statement that handles ioexceptions will also handle end-ofstream exceptions </s>
<s> however having a class to represent end-of-stream errors makes it possible to detect such errors and provide special handling for them </s>
<s> another type of error occurs when a textreader tries to read a data value of a certain type and the next item in the input stream is not of the correct type </s>
<s> in this case the textreader throws an exception of type textreaderbaddataexception which is another subclass of ioexception for reference here is a list of some of the more useful instance methods in the textreader class </s>
<s> all of these methods can throw exceptions of type ioexception • public char peek( ) — looks ahead at the next character in the input stream and returns that character </s>
<s> the character is not removed from the stream </s>
<s> if the next character is an end-of-line the return value is ’n’ </s>
<s> it is legal to call this method even if there is no more data left in the stream in that case the return value is the constant textreadereof 536 chapter 11 </s>
<s> streams files and networking ( eof” stands for end-of-file” a term that is more commonly used than end-ofstream” even though not all streams are ﬁles ) • public boolean eoln( ) and public boolean eof( ) — convenience methods for testing whether the next thing in the ﬁle is an end-of-line or an end-of-ﬁle </s>
<s> note that these methods do not skip whitespace </s>
<s> if eof( ) is false you know that there is still at least one character to be read but there might not be any more non-blank characters in the stream • public void skipblanks( ) and public void skipwhitespace( ) — skip past whitespace characters in the input stream skipwhitespace( ) skips all whitespace characters including end-of-line while skipblanks( ) only skips spaces and tabs • public string getln( ) — reads characters up to the next end-of-line ( or end-of-stream ) and returns those characters in a string </s>
<s> the end-of-line marker is read but is not part of the returned string </s>
<s> this will throw an exception if there are no more characters in the stream • public char getanychar( ) — reads and returns the next character from the stream the character can be a whitespace character such as a blank or end-of-line </s>
<s> if this method is called after all the characters in the stream have been read an exception is thrown • public int getlnint( ) public double getlndouble( ) public char getlnchar( ) etc — skip any whitespace characters in the stream including end-of-lines then read a value of the speciﬁed type which will be the return value of the method </s>
<s> any remaining characters on the line are then discarded including the end-of-line marker </s>
<s> there is a method for each primitive type </s>
<s> an exception occurs if it’s not possible to read a data value of the requested type • public int getint( ) public double getdouble( ) public char getchar( ) etc — skip any whitespace characters in the stream including end-of-lines then read and return a value of the speciﬁed type </s>
<s> extra characters on the line are not discarded and are still available to be read by subsequent input methods </s>
<s> there is a method for each primitive type </s>
<s> an exception occurs if it’s not possible to read a data value of the requested type 1115 the scanner class since its introduction java has been notable for its lack of built-in support for basic input and for its reliance on fairly advanced techniques for the support that it does oﬀer ( this is my opinion at least ) the scanner class was introduced in java 50 to make it easier to read basic data types from a character input source </s>
<s> it does not ( again in my opinion ) solve the problem completely but it is a big improvement </s>
<s> the scanner class is in the package javautil input routines are deﬁned as instance methods in the scanner class so to use the class you need to create a scanner object </s>
<s> the constructor speciﬁes the source of the characters that the scanner will read </s>
<s> the scanner acts as a wrapper for the input source </s>
<s> the source can be a reader an inputstream a string or a file ( if a string is used as the input source the scanner will simply read the characters in the string from beginning to end in the same way that it would process the same sequence of characters from a stream </s>
<s> the file class will be covered in the next section ) for example you can use a scanner to read from standard input by saying scanner standardinputscanner = new scanner( systemin ) and if charsource is of type reader you can create a scanner for reading from charsource with 111 </s>
<s> streams readers and writers 537 scanner scanner = new scanner( charsource ) when processing input a scanner usually works with tokens </s>
<s> a token is a meaningful string of characters that cannot for the purposes at hand be further broken down into smaller meaningful pieces </s>
<s> a token can for example be an individual word or a string of characters that represents a value of type double </s>
<s> in the case of a scanner tokens must be separated by delimiters” by default the delimiters are whitespace characters such as spaces and end-ofline markers but you can change a scanner’s delimiters if you need to </s>
<s> in normal processing whitespace characters serve simply to separate tokens and are discarded by the scanner </s>
<s> a scanner has instance methods for reading tokens of various types </s>
<s> suppose that scanner is an object of type scanner </s>
<s> then we have • scannernext( ) — reads the next token from the input source and returns it as a string • scannernextint( ) scannernextdouble( ) and so on — reads the next token from the input source and tries to convert it to a value of type int double and so on </s>
<s> there are methods for reading values of any of the primitive types • scannernextline( ) — reads an entire line from the input source up to the next endof-line and returns the line as a value of type string </s>
<s> the end-of-line marker is read but is not part of the return value </s>
<s> note that this method is not based on tokens </s>
<s> an entire line is read and returned including any whitespace characters in the line all of these methods can generate exceptions </s>
<s> if an attempt is made to read past the end of input an exception of type nosuchelementexception is thrown </s>
<s> methods such as scannergetint( ) will throw an exception of type inputmismatchexception if the next token in the input does not represent a value of the requested type </s>
<s> the exceptions that can be generated do not require mandatory exception handling the scanner class has very nice look-ahead capabilities </s>
<s> you can query a scanner to determine whether more tokens are available and whether the next token is of a given type </s>
<s> if scanner is of type scanner • scannerhasnext( ) — returns a boolean value that is true if there is at least one more token in the input source • scannerhasnextint( ) scannerhasnextdouble( ) and so on — returns a boolean value that is true if there is at least one more token in the input source and that token represents a value of the requested type • scannerhasnextline( ) — returns a boolean value that is true if there is at least one more line in the input source although the insistence on deﬁning tokens only in terms of delimiters limits the usability of scanners to some extent they are easy to use and are suitable for many applications </s>
<s> with so many input classes available—buﬀeredreader textreader scanner —you might have trouble deciding which one to use! in general i would recommend using a scanner unless you have some particular reason for preferring the textio-style input routines of textreader </s>
<s> buﬀeredreader can be used as a lightweight alternative when all that you want to do is read entire lines of text from the input source 1116 serialized object i/o the classes printwriter textreader scanner datainputstream and dataoutputstream allow you to easily input and output all of java’s primitive data types </s>
<s> but what happens when you 538 chapter 11 </s>
<s> streams files and networking want to read and write objects traditionally you would have to come up with some way of encoding your object as a sequence of data values belonging to the primitive types which can then be output as bytes or characters </s>
<s> this is called serializing the object </s>
<s> on input you have to read the serialized data and somehow reconstitute a copy of the original object </s>
<s> for complex objects this can all be a major chore </s>
<s> however you can get java to do all the work for you by using the classes objectinputstream and objectoutputstream </s>
<s> these are subclasses of inputstream and outputstream that can be used for writing and reading serialized objects objectinputstream and objectoutputstream are wrapper classes that can be wrapped around arbitrary inputstreams and outputstreams </s>
<s> this makes it possible to do object input and output on any byte stream </s>
<s> the methods for object i/o are readobject( ) in objectinputstream and writeobject( object obj ) in objectoutputstream </s>
<s> both of these methods can throw ioexceptions </s>
<s> note that readobject( ) returns a value of type object which generally has to be type-cast to the actual type of the object that was read objectoutputstream also has methods writeint( ) writedouble( ) and so on for outputting primitive type values to the stream and objectinputstream has corresponding methods for reading primitive type values </s>
<s> these primitive type values can be interspersed with objects in the data object streams are byte streams </s>
<s> the objects are represented in binary machine-readable form </s>
<s> this is good for eﬃciency but it does suﬀer from the fragility that is often seen in binary data </s>
<s> they suﬀer from the additional problem that the binary format of java objects is very speciﬁc to java so the data in object streams is not easily available to programs written in other programming languages </s>
<s> for these reasons object streams are appropriate mostly for short-term storage of objects and for transmitting objects over a network connection from one java program to another </s>
<s> for long-term storage and for communication with non-java programs other approaches to object serialization are usually better ( see subsection 1152 for a character-based approach ) objectinputstream and objectoutputstream only work with objects that implement an interface named serializable </s>
<s> furthermore all of the instance variables in the object must be serializable </s>
<s> however there is little work involved in making an object serializable since the serializable interface does not declare any methods </s>
<s> it exists only as a marker for the compiler to tell it that the object is meant to be writable and readable </s>
<s> you only need to add the words implements serializable” to your class deﬁnitions </s>
<s> many of java’s standard classes are already declared to be serializable including all the component classes and many other classes in swing and in the awt </s>
<s> one of the programming examples in section 113 uses object io one warning about using objectoutputstreams these streams are optimized to avoid writing the same object more than once </s>
<s> when an object is encountered for a second time only a reference to the ﬁrst occurrence is written </s>
<s> unfortunately if the object has been modiﬁed in the meantime the new data will not be written </s>
<s> because of this objectoutputstreams are meant mainly for use with immutable” objects that can’t be changed after they are created ( strings are an example of this ) however if you do need to write mutable objects to an objectoutputstream you can ensure that the full correct version of the object can be written by calling the stream’s reset( ) method before writing the object to the stream 112 files the data and programs in a computer’s main memory survive only as long as the power is on </s>
<s> for more permanent storage computers use ﬁles which are collections of data stored on 539 112 </s>
<s> files a hard disk on a usb memory stick on a cd-rom or on some other type of storage device files are organized into directories ( sometimes called folders ) </s>
<s> a directory can hold other directories as well as ﬁles </s>
<s> both directories and ﬁles have names that are used to identify them programs can read data from existing ﬁles </s>
<s> they can create new ﬁles and can write data to ﬁles </s>
<s> in java such input and output can be done using streams </s>
<s> human-readable character data is read from a ﬁle using an object belonging to the class filereader which is a subclass of reader </s>
<s> similarly data is written to a ﬁle in human-readable format through an object of type filewriter a subclass of writer </s>
<s> for ﬁles that store data in machine format the appropriate i/o classes are fileinputstream and fileoutputstream </s>
<s> in this section i will only discuss characteroriented ﬁle i/o using the filereader and filewriter classes </s>
<s> however fileinputstream and fileoutputstream are used in an exactly parallel fashion </s>
<s> all these classes are deﬁned in the javaio package it’s worth noting right at the start that applets which are downloaded over a network connection are not ordinarily allowed to access ﬁles </s>
<s> this is a security consideration </s>
<s> you can download and run an applet just by visiting a web page with your browser </s>
<s> if downloaded applets had access to the ﬁles on your computer it would be easy to write an applet that would destroy all the data on any computer that downloads it </s>
<s> to prevent such possibilities there are a number of things that downloaded applets are not allowed to do </s>
<s> accessing ﬁles is one of those forbidden things </s>
<s> standalone programs written in java however have the same access to your ﬁles as any other program </s>
<s> when you write a standalone java application you can use all the ﬁle operations described in this section 1121 reading and writing files the filereader class has a constructor which takes the name of a ﬁle as a parameter and creates an input stream that can be used for reading from that ﬁle </s>
<s> this constructor will throw an exception of type filenotfoundexception if the ﬁle doesn’t exist </s>
<s> it requires mandatory exception handling so you have to call the constructor in a trycatch statement ( or inside a routine that is declared to throw the exception ) </s>
<s> for example suppose you have a ﬁle named datatxt” and you want your program to read data from that ﬁle </s>
<s> you could do the following to create an input stream for the ﬁle filereader data // ( declare the variable before the // try statement or else the variable // is local to the try block and you won’t // be able to use it later in the program ) try { data = new filereader( datatxt ) // create the stream } catch ( filenotfoundexception e ) { // do something to handle the error -- -maybe end the program } the filenotfoundexception class is a subclass of ioexception so it would be acceptable to catch ioexceptions in the above trycatch statement </s>
<s> more generally just about any error that can occur during input/output operations can be caught by a catch clause that handles ioexception once you have successfully created a filereader you can start reading data from it </s>
<s> but since filereaders have only the primitive input methods inherited from the basic reader class 540 chapter 11 </s>
<s> streams files and networking you will probably want to wrap your filereader in a scanner in a textreader or in some other wrapper class ( the textreader class is not a standard part of java it is described in subsection 1114 </s>
<s> scanner is discussed in subsection 1115 ) to create a textreader for reading from a ﬁle named datadat you could say textreader data try { data = new textreader( new filereader( datadat ) ) } catch ( filenotfoundexception e ) { // handle the exception } to use a scanner to read from the ﬁle you can construct the scanner in a similar way </s>
<s> however it is more common to construct it from an object of type file ( to be covered below ) scanner in try { in = new scanner( new file( datadat ) ) } catch ( filenotfoundexception e ) { // handle the exception } once you have a scanner or textreader for reading from a ﬁle you can get data from the ﬁle using exactly the same methods that work with any scanner or textreader working with output ﬁles is no more diﬃcult than this </s>
<s> you simply create an object belonging to the class filewriter </s>
<s> you will probably want to wrap this output stream in an object of type printwriter </s>
<s> for example suppose you want to write data to a ﬁle named resultdat” since the constructor for filewriter can throw an exception of type ioexception you should use a trycatch statement printwriter result try { result = new printwriter( new filewriter( resultdat ) ) } catch ( ioexception e ) { // handle the exception } if no ﬁle named resultdat exists a new ﬁle will be created </s>
<s> if the ﬁle already exists then the current contents of the ﬁle will be erased and replaced with the data that your program writes to the ﬁle </s>
<s> this will be done without any warning </s>
<s> to avoid overwriting a ﬁle that already exists you can check whether a ﬁle of the same name already exists before trying to create the stream as discussed later in this section </s>
<s> an ioexception might occur in the printwriter constructor if for example you are trying to create a ﬁle on a disk that is writeprotected” meaning that it cannot be modiﬁed in fact a printwriter can also be created directly from a ﬁle name given as a string ( new printwriter( resultdat )” ) and you will probably ﬁnd it more convenient to do that </s>
<s> remember however that a scanner for reading from a ﬁle cannot be created in the same way 541 112 </s>
<s> files after you are ﬁnished using a ﬁle it’s a good idea to close the ﬁle to tell the operating system that you are ﬁnished using it </s>
<s> you can close a ﬁle by calling the close( ) method of the associated stream or scanner </s>
<s> once a ﬁle has been closed it is no longer possible to read data from it or write data to it unless you open it again as a new stream ( note that for most stream classes the close( ) method can throw an ioexception which must be handled however printwriter textreader and scanner override this method so that it cannot throw such exceptions ) if you forget to close a ﬁle the ﬁle will ordinarily be closed automatically when the program terminates or when the ﬁle object is garbage collected but in the case of an output ﬁle some of the data that has been written to the ﬁle might be lost </s>
<s> this can occur because data that is written to a ﬁle can be buﬀered that is the data is not sent immediately to the ﬁle but is retained in main memory ( in a buﬀer” ) until a larger chunk of data is ready to be written </s>
<s> this is done for eﬃciency </s>
<s> the close( ) method of an output stream will cause all the data in the buﬀer to be sent to the ﬁle </s>
<s> every output stream also has a flush( ) method that can be called to force any data in the buﬀer to be written to the ﬁle without closing the ﬁle as a complete example here is a program that will read numbers from a ﬁle named datadat and will then write out the same numbers in reverse order to another ﬁle named resultdat </s>
<s> it is assumed that datadat contains only one number on each line </s>
<s> exceptionhandling is used to check for problems along the way </s>
<s> although the application is not a particularly useful one this program demonstrates the basics of working with ﬁles ( by the way at the end of this program you’ll ﬁnd our ﬁrst useful example of a finally clause in a try statement </s>
<s> when the computer executes a try statement the commands in its finally clause are guaranteed to be executed no matter what </s>
<s> see subsection 832 ) import javaio* import javautilarraylist /** * reads numbers from a file named datadat and writes them to a file * named resultdat in reverse order </s>
<s> the input file should contain * exactly one real number per line */ public class reversefile { public static void main( string[] args ) { textreader data printwriter result // character input stream for reading data // character output stream for writing data arraylist<double> numbers // an arraylist for holding the data numbers = new arraylist<double>( ) try { // create the input stream data = new textreader( new filereader( datadat ) ) } catch ( filenotfoundexception e ) { systemoutprintln( can’t find file datadat! ) return // end the program by returning from main( ) } try { // create the output stream result = new printwriter( new filewriter( resultdat ) ) } 542 chapter 11 </s>
<s> streams files and networking catch ( ioexception e ) { systemoutprintln( can’t open file resultdat! ) systemoutprintln( error + e ) dataclose( ) // close the input file return // end the program } try { // read numbers from the input file adding them to the arraylist while ( dataeof( ) == false ) { // read until end-of-file double inputnumber = datagetlndouble( ) numbersadd( inputnumber ) } // output the numbers in reverse order for ( int i = numberssize( )-1 i >= 0 i -- ) resultprintln( numbersget( i ) ) systemoutprintln( done! ) } catch ( ioexception e ) { // some problem reading the data from the input file systemoutprintln( input error + egetmessage( ) ) } finally { // finish by closing the files whatever else may have happened dataclose( ) resultclose( ) } } // end of main( ) } // end class reversefile a version of this program that uses a scanner instead of a textreader can be found in reversefilewithscannerjava </s>
<s> note that the scanner version does not need the ﬁnal trycatch from the textreader version since the scanner method for reading data doesn’t throw an ioexception 1122 files and directories the subject of ﬁle names is actually more complicated than i’ve let on so far </s>
<s> to fully specify a ﬁle you have to give both the name of the ﬁle and the name of the directory where that ﬁle is located </s>
<s> a simple ﬁle name like datadat” or resultdat” is taken to refer to a ﬁle in a directory that is called the current directory ( also known as the default directory” or working directory” ) </s>
<s> the current directory is not a permanent thing </s>
<s> it can be changed by the user or by a program </s>
<s> files not in the current directory must be referred to by a path name which includes both the name of the ﬁle and information about the directory where it can be found to complicate matters even further there are two types of path names absolute path names and relative path names </s>
<s> an absolute path name uniquely identiﬁes one ﬁle among all the ﬁles available to the computer </s>
<s> it contains full information about which directory the 112 </s>
<s> files 543 ﬁle is in and what the ﬁle’s name is </s>
<s> a relative path name tells the computer how to locate the ﬁle starting from the current directory unfortunately the syntax for ﬁle names and path names varies somewhat from one type of computer to another </s>
<s> here are some examples • datadat — on any computer this would be a ﬁle named datadat” in the current directory • /home/eck/java/examples/datadat — this is an absolute path name in a unix operating system including linux and mac os x </s>
<s> it refers to a ﬁle named datadat in a directory named examples which is in turn in a directory named java • ceckjavaexamplesdatadat — an absolute path name on a windows computer • hard drivejavaexamplesdatadat — assuming that hard drive” is the name of a disk drive this would be an absolute path name on a computer using a classic macintosh operating system such as mac os 9 • examples/datadat — a relative path name under unix examples” is the name of a directory that is contained within the current directory and datadat is a ﬁle in that directory </s>
<s> the corresponding relative path name for windows would be examplesdatadat • /examples/datadat — a relative path name in unix that means go to the directory that contains the current directory then go into a directory named examples inside that directory and look there for a ﬁle named datadata” in general ” means go up one directory” it’s reasonably safe to say though that if you stick to using simple ﬁle names only and if the ﬁles are stored in the same directory with the program that will use them then you will be ok </s>
<s> later in this section we’ll look at a convenient way of letting the user specify a ﬁle in a gui program which allows you to avoid the issue of path names altogether it is possible for a java program to ﬁnd out the absolute path names for two important directories the current directory and the user’s home directory </s>
<s> the names of these directories are system properties and they can be read using the function calls • systemgetproperty( userdir ) — returns the absolute path name of the current directory as a string • systemgetproperty( userhome ) — returns the absolute path name of the user’s home directory as a string to avoid some of the problems caused by diﬀerences in path names between platforms java has the class javaiofile </s>
<s> an object belonging to this class represents a ﬁle </s>
<s> more precisely an object of type file represents a ﬁle name rather than a ﬁle as such </s>
<s> the ﬁle to which the name refers might or might not exist </s>
<s> directories are treated in the same way as ﬁles so a file object can represent a directory just as easily as it can represent a ﬁle a file object has a constructor new file( string )” that creates a file object from a path name </s>
<s> the name can be a simple name a relative path or an absolute path </s>
<s> for example new file( datadat ) creates a file object that refers to a ﬁle named datadat in the current directory </s>
<s> another constructor new file( filestring )” has two parameters </s>
<s> the ﬁrst is a file object that refers to the directory that contains the ﬁle </s>
<s> the second can be the name of the ﬁle or a relative path from the directory to the ﬁle file objects contain several useful instance methods </s>
<s> assuming that file is a variable of type file here are some of the methods that are available 544 chapter 11 </s>
<s> streams files and networking • fileexists( ) — this boolean-valued function returns true if the ﬁle named by the file object already exists </s>
<s> you can use this method if you want to avoid overwriting the contents of an existing ﬁle when you create a new filewriter • fileisdirectory( ) — this boolean-valued function returns true if the file object refers to a directory </s>
<s> it returns false if it refers to a regular ﬁle or if no ﬁle with the given name exists • filedelete( ) — deletes the ﬁle if it exists </s>
<s> returns a boolean value to indicate whether the ﬁle was successfully deleted • filelist( ) — if the file object refers to a directory this function returns an array of type string[] containing the names of the ﬁles in that directory </s>
<s> otherwise it returns null filelistfiles( ) is similar except that it returns an array of file instead of an array of string here for example is a program that will list the names of all the ﬁles in a directory speciﬁed by the user </s>
<s> in this example i have used a scanner to read the user’s input import javaiofile import javautilscanner /** * this program lists the files in a directory specified by * the user </s>
<s> the user is asked to type in a directory name * if the name entered by the user is not a directory a * message is printed and the program ends */ public class directorylist { public static void main( string[] args ) { string directoryname file directory string[] files scanner scanner // // // // directory name entered by the user file object referring to the directory array of file names in the directory for reading a line of input from the user scanner = new scanner( systemin ) // scanner reads from standard input systemoutprint( enter a directory name ) directoryname = scannernextline( )trim( ) directory = new file( directoryname ) if ( directoryisdirectory( ) == false ) { if ( directoryexists( ) == false ) systemoutprintln( there is no such directory! ) else systemoutprintln( that file is not a directory ) } else { files = directorylist( ) systemoutprintln( files in directory + directory + ) for ( int i = 0 i < fileslength i++ ) systemoutprintln( + files[i] ) } } // end main( ) 112 </s>
<s> files 545 } // end class directorylist all the classes that are used for reading data from ﬁles and writing data to ﬁles have constructors that take a file object as a parameter </s>
<s> for example if file is a variable of type file and you want to read character data from that ﬁle you can create a filereader to do so by saying new filereader( file ) 1123 file dialog boxes in many programs you want the user to be able to select the ﬁle that is going to be used for input or output </s>
<s> if your program lets the user type in the ﬁle name you will just have to assume that the user understands how to work with ﬁles and directories </s>
<s> but in a graphical user interface the user expects to be able to select ﬁles using a ﬁle dialog box which is a window that a program can open when it wants the user to select a ﬁle for input or output swing includes a platform-independent technique for using ﬁle dialog boxes in the form of a class called jfilechooser </s>
<s> this class is part of the package javaxswing </s>
<s> we looked at using some basic dialog boxes in subsection 682 </s>
<s> file dialog boxes are similar to those but are a little more complicated to use a ﬁle dialog box shows the user a list of ﬁles and sub-directories in some directory and makes it easy for the user to specify a ﬁle in that directory </s>
<s> the user can also navigate easily from one directory to another </s>
<s> the most common constructor for jfilechooser has no parameter and sets the starting directory in the dialog box to be the user’s home directory </s>
<s> there are also constructors that specify the starting directory explicitly new jfilechooser( file startdirectory ) new jfilechooser( string pathtostartdirectory ) constructing a jfilechooser object does not make the dialog box appear on the screen you have to call a method in the object to do that </s>
<s> there are two diﬀerent methods that can be used because there are two types of ﬁle dialog an open ﬁle dialog allows the user to specify an existing ﬁle to be opened for reading data into the program a save ﬁle dialog lets the user specify a ﬁle which might or might not already exist to be opened for writing data from the program </s>
<s> file dialogs of these two types are opened using the showopendialog and showsavedialog methods </s>
<s> these methods make the dialog box appear on the screen the methods do not return until the user selects a ﬁle or cancels the dialog a ﬁle dialog box always has a parent another component which is associated with the dialog box </s>
<s> the parent is speciﬁed as a parameter to the showopendialog or showsavedialog methods </s>
<s> the parent is a gui component and can often be speciﬁed as this” in practice since ﬁle dialogs are often used in instance methods of gui component classes ( the parameter can also be null in which case an invisible component is created to be used as the parent ) both showopendialog and showsavedialog have a return value which will be one of the constants jfilechoosercancel option jfilechoosererror option or jfilechooserapprove option </s>
<s> if the return value is jfilechooserapprove option then the user has selected a ﬁle </s>
<s> if the return value is something else then the user did not select a ﬁle </s>
<s> the user might have clicked a cancel” button for example </s>
<s> you should always check the return value to make sure that the user has in fact selected a ﬁle </s>
<s> if that is the case then you can ﬁnd out which ﬁle was selected by calling the jfilechooser’s getselectedfile( ) method which returns an object of type file that represents the selected ﬁle putting all this together we can look at a typical subroutine that reads data from a ﬁle that is selected using a jfilechooser 546 chapter 11 </s>
<s> streams files and networking public void readfile( ) { if ( filedialog == null ) // ( filedialog is an instance variable ) filedialog = new jfilechooser( ) filedialogsetdialogtitle( select file for reading ) filedialogsetselectedfile( null ) // no file is initially selected int option = filedialogshowopendialog( this ) // ( using this as a parameter to showopendialog( ) assumes that the // readfile( ) method is an instance method in a gui component class ) if ( option != jfilechooserapprove option ) return // user canceled or clicked the dialog’s close box file selectedfile = filedialoggetselectedfile( ) textreader in // ( or use some other wrapper class ) try { filereader stream = new filereader( selectedfile ) // ( or a fileinputstream ) in = new textreader( stream ) } catch ( exception e ) { joptionpaneshowmessagedialog( this sorry but an error occurred while trying to open the filen + e ) return } try { // read and process the data from the input stream in inclose( ) } catch ( exception e ) { joptionpaneshowmessagedialog( this sorry but an error occurred while trying to read the datan + e ) } } one ﬁne point here is that the variable filedialog is an instance variable of type jfilechooser this allows the ﬁle dialog to continue to exist between calls to readfile( ) </s>
<s> the main eﬀect of this is that the dialog box will keep the same selected directory from one call of readfile( ) to the next </s>
<s> when the dialog reappears it will show the same directory that the user selected the previous time it appeared </s>
<s> this is probably what the user expects note that it’s common to do some conﬁguration of a jfilechooser before calling showopendialog or showsavedialog for example the instance method setdialogtitle( string ) is used to specify a title to appear in the title bar of the window and setselectedfile( file ) is used to set the ﬁle that is selected in the dialog box when it appears </s>
<s> this can be used to provide a default ﬁle choice for the user </s>
<s> in the readfile( ) method above filedialogsetselectedfile( null ) speciﬁes that no ﬁle is pre-selected when the dialog box appears writing data to a ﬁle is similar but it’s a good idea to add a check to determine whether the output ﬁle that is selected by the user already exists </s>
<s> in that case ask the user whether to replace the ﬁle </s>
<s> here is a typical subroutine for writing to a user-selected ﬁle public void writefile( ) { if ( filedialog == null ) filedialog = new jfilechooser( ) // ( filedialog is an instance variable ) file selectedfile = new file( outputtxt ) // ( default output file name ) 113 </s>
<s> programming with files 547 filedialogsetselectedfile( selectedfile ) // specify a default file name filedialogsetdialogtitle( select file for writing ) int option = filedialogshowsavedialog( this ) if ( option != jfilechooserapprove option ) return // user canceled or clicked the dialog’s close box selectedfile = filedialoggetselectedfile( ) if ( selectedfileexists( ) ) { // ask the user whether to replace the file int response = joptionpaneshowconfirmdialog( this the file + selectedfilegetname( ) + already existsndo you want to replace it confirm save joptionpaneyes no option joptionpanewarning message ) if ( response != joptionpaneyes option ) return // user does not want to replace the file } printwriter out // ( or use some other wrapper class ) try { filewriter stream = new filewriter( selectedfile ) // ( or fileoutputstream ) out = new printwriter( stream ) } catch ( exception e ) { joptionpaneshowmessagedialog( this sorry but an error occurred while trying to open the filen + e ) return } try { // write data to the output stream out outclose( ) if ( outcheckerror( ) ) // ( need to check for errors in printwriter ) throw new ioexception( error occurred while trying to write file ) } catch ( exception e ) { joptionpaneshowmessagedialog( this sorry but an error occurred while trying to write the datan + e ) } } the readfile( ) and writefile( ) routines presented here can be used with just a few changes when you need to read or write a ﬁle in a gui program </s>
<s> we’ll look at some more complete examples of using ﬁles and ﬁle dialogs in the next section 113 in programming with files this section we look at several programming examples that work with ﬁles using the techniques that were introduced in section 111 and section 112 548 1131 chapter 11 </s>
<s> streams files and networking copying a file as a ﬁrst example we look at a simple command-line program that can make a copy of a ﬁle </s>
<s> copying a ﬁle is a pretty common operation and every operating system already has a command for doing it </s>
<s> however it is still instructive to look at a java program that does the same thing </s>
<s> many ﬁle operations are similar to copying a ﬁle except that the data from the input ﬁle is processed in some way before it is written to the output ﬁle </s>
<s> all such operations can be done by programs with the same general form since the program should be able to copy any ﬁle we can’t assume that the data in the ﬁle is in human-readable form </s>
<s> so we have to use inputstream and outputstream to operate on the ﬁle rather than reader and writer </s>
<s> the program simply copies all the data from the inputstream to the outputstream one byte at a time </s>
<s> if source is the variable that refers to the inputstream then the function sourceread( ) can be used to read one byte </s>
<s> this function returns the value -1 when all the bytes in the input ﬁle have been read </s>
<s> similarly if copy refers to the outputstream then copywrite( b ) writes one byte to the output ﬁle </s>
<s> so the heart of the program is a simple while loop </s>
<s> as usual the i/o operations can throw exceptions so this must be done in a trycatch statement while( true ) { int data = sourceread( ) if ( data < 0 ) break copywrite( data ) } the ﬁle-copy command in an operating system such as unix uses command line arguments to specify the names of the ﬁles </s>
<s> for example the user might say copy originaldat backupdat” to copy an existing ﬁle originaldat to a ﬁle named backupdat </s>
<s> commandline arguments can also be used in java programs </s>
<s> the command line arguments are stored in the array of strings args which is a parameter to the main( ) routine </s>
<s> the program can retrieve the command-line arguments from this array ( see subsection 723 ) for example if the program is named copyfile and if the user runs the program with the command java copyfile workdat oldworkdat” then in the program args[0] will be the string workdat and args[1] will be the string oldworkdat </s>
<s> the value of argslength tells the program how many command-line arguments were speciﬁed by the user my copyfile program gets the names of the ﬁles from the command-line arguments </s>
<s> it prints an error message and exits if the ﬁle names are not speciﬁed </s>
<s> to add a little interest there are two ways to use the program </s>
<s> the command line can simply specify the two ﬁle names in that case if the output ﬁle already exists the program will print an error message and end this is to make sure that the user won’t accidently overwrite an important ﬁle </s>
<s> however if the command line has three arguments then the ﬁrst argument must be -f” while the second and third arguments are ﬁle names </s>
<s> the -f is a command-line option which is meant to modify the behavior of the program </s>
<s> the program interprets the -f to mean that it’s ok to overwrite an existing program ( the f” stands for force” since it forces the ﬁle to be copied in spite of what would otherwise have been considered an error ) you can see in the source code how the command line arguments are interpreted by the program import javaio* /** * makes a copy of a file the original file and the name of the 549 113 </s>
<s> programming with files * copy must be given as command-line arguments </s>
<s> in addition the * first command-line argument can be -f if present the program * will overwrite an existing file if not the program will report * an error and end if the output file already exists </s>
<s> the number * of bytes that are copied is reported */ public class copyfile { public static void main( string[] args ) { string sourcename // name of the source file // as specified on the command line string copyname // name of the copy // as specified on the command line inputstream source // stream for reading from the source file outputstream copy // stream for writing the copy boolean force // this is set to true if the -f option // is specified on the command line int bytecount // number of bytes copied from the source file /* get file names from the command line and check for the presence of the -f option </s>
<s> if the command line is not one of the two possible legal forms print an error message and end this program */ if ( argslength == 3 && args[0]equalsignorecase( -f ) ) { sourcename = args[1] copyname = args[2] force = true } else if ( argslength == 2 ) { sourcename = args[0] copyname = args[1] force = false } else { systemoutprintln( usage java copyfile <source-file> <copy-name> ) systemoutprintln( or java copyfile -f <source-file> <copy-name> ) return } /* create the input stream if an error occurs end the program */ try { source = new fileinputstream( sourcename ) } catch ( filenotfoundexception e ) { systemoutprintln( can’t find file + sourcename + ) return } /* if the output file already exists and the -f option was not specified print an error message and end the program */ file file = new file( copyname ) 550 chapter 11 </s>
<s> streams files and networking if ( fileexists( ) && force == false ) { systemoutprintln( output file exists </s>
<s> use the -f option to replace it ) return } /* create the output stream if an error occurs end the program */ try { copy = new fileoutputstream( copyname ) } catch ( ioexception e ) { systemoutprintln( can’t open output file + copyname + ) return } /* copy one byte at a time from the input stream to the output stream ending when the read( ) method returns -1 ( which is the signal that the end of the stream has been reached ) </s>
<s> if any error occurs print an error message </s>
<s> also print a message if the file has been copied successfully */ bytecount = 0 try { while ( true ) { int data = sourceread( ) if ( data < 0 ) break copywrite( data ) bytecount++ } sourceclose( ) copyclose( ) systemoutprintln( successfully copied + bytecount + bytes ) } catch ( exception e ) { systemoutprintln( error occurred while copying + bytecount + bytes copied ) systemoutprintln( error + e ) } } // end main( ) } // end class copyfile it is not terribly eﬃcient to copy one byte at a time </s>
<s> eﬃciency could be improved by using alternative versions of the read( ) and write( ) methods that read and write multiple bytes ( see the api for details ) </s>
<s> alternatively the input and output streams could be wrapped in objects of type buﬀeredinputstream and buﬀeredoutputstream which automatically read from and write data to ﬁles in larger blocks which is more eﬃcient than reading and writing individual bytes 113 </s>
<s> programming with files 1132 551 persistent data once a program ends any data that was stored in variables and objects in the program is gone in many cases it would be useful to have some of that data stick around so that it will be available when the program is run again </s>
<s> the problem is how to make the data persistent between runs of the program the answer of course is to store the data in a ﬁle ( or for some applications in a database—but the data in a database is itself stored in ﬁles ) consider a phone book” program that allows the user to keep track of a list of names and associated phone numbers </s>
<s> the program would make no sense at all if the user had to create the whole list from scratch each time the program is run </s>
<s> it would make more sense to think of the phone book as a persistent collection of data and to think of the program as an interface to that collection of data </s>
<s> the program would allow the user to look up names in the phone book and to add new entries </s>
<s> any changes that are made should be preserved after the program ends the sample program phonedirectoryfiledemojava is a very simple implementation of this idea </s>
<s> it is meant only as an example of ﬁle use the phone book that it implements is a toy” version that is not meant to be taken seriously </s>
<s> this program stores the phone book data in a ﬁle named phone book demo” in the user’s home directory </s>
<s> to ﬁnd the user’s home directory it uses the systemgetproperty( ) method that was mentioned in subsection 1122 </s>
<s> when the program starts it checks whether the ﬁle already exists </s>
<s> if it does it should contain the user’s phone book which was saved in a previous run of the program so the data from the ﬁle is read and entered into a treemap named phonebook that represents the phone book while the program is running ( see subsection 1031 ) in order to store the phone book in a ﬁle some decision must be made about how the data in the phone book will be represented </s>
<s> for this example i chose a simple representation in which each line of the ﬁle contains one entry consisting of a name and the associated phone number </s>
<s> a percent sign ( ’%’ ) separates the name from the number </s>
<s> the following code at the beginning of the program will read the phone book data ﬁle if it exists and has the correct format file userhomedirectory = new file( systemgetproperty( userhome ) ) file datafile = new file( userhomedirectory phone book data ) if ( ! datafileexists( ) ) { systemoutprintln( no phone book data file found ) systemoutprintln( a new one will be created ) systemoutprintln( file name + datafilegetabsolutepath( ) ) } else { systemoutprintln( reading phone book data ) try { scanner scanner = new scanner( datafile ) while ( scannerhasnextline( ) ) { // read one line from the file containing one name/number pair string phoneentry = scannernextline( ) int separatorposition = phoneentryindexof( ’%’ ) if ( separatorposition == -1 ) throw new ioexception( file is not a phonebook data file ) name = phoneentrysubstring( 0 separatorposition ) number = phoneentrysubstring( separatorposition+1 ) phonebookput( namenumber ) } 552 chapter 11 </s>
<s> streams files and networking } catch ( ioexception e ) { systemoutprintln( error in phone book data file ) systemoutprintln( file name + datafilegetabsolutepath( ) ) systemoutprintln( this program cannot continue ) systemexit( 1 ) } } the program then lets the user do various things with the phone book including making modiﬁcations </s>
<s> any changes that are made are made only to the treemap that holds the data when the program ends the phone book data is written to the ﬁle ( if any changes have been made while the program was running ) using the following code if ( changed ) { systemoutprintln( saving phone directory changes to file + datafilegetabsolutepath( ) + ) printwriter out try { out = new printwriter( new filewriter( datafile ) ) } catch ( ioexception e ) { systemoutprintln( error can’t open data file for output ) return } for ( mapentry<stringstring> entry phonebookentryset( ) ) outprintln( entrygetkey( ) + % + entrygetvalue( ) ) outclose( ) if ( outcheckerror( ) ) systemoutprintln( error some error occurred while writing data file ) else systemoutprintln( done ) } the net eﬀect of this is that all the data including the changes will be there the next time the program is run </s>
<s> i’ve shown you all the ﬁle-handling code from the program </s>
<s> if you would like to see the rest of the program see the source code ﬁle phonedirectoryfiledemojava 1133 files in gui programs the previous examples in this section use a command-line interface but graphical user interface programs can also manipulate ﬁles </s>
<s> programs typically have an open” command that reads the data from a ﬁle and displays it in a window and a save” command that writes the data from the window into a ﬁle </s>
<s> we can illustrate this in java with a simple text editor program trivialeditjava </s>
<s> the window for this program uses a jtextarea component to display some text that the user can edit </s>
<s> it also has a menu bar with a file” menu that includes open” and save” commands </s>
<s> these commands are implemented using the techniques for reading and writing ﬁles that were covered in section 112 when the user selects the open command from the file menu in the trivialedit program the program pops up a ﬁle dialog box where the user speciﬁes the ﬁle </s>
<s> it is assumed that the ﬁle is a text ﬁle </s>
<s> a limit of 10000 characters is put on the size of the ﬁle since a jtextarea is not meant for editing large amounts of text </s>
<s> the program reads the text contained in the 113 </s>
<s> programming with files 553 speciﬁed ﬁle and sets that text to be the content of the jtextarea </s>
<s> in this case i decided to use a buﬀeredreader to read the ﬁle line-by-line </s>
<s> the program also sets the title bar of the window to show the name of the ﬁle that was opened </s>
<s> all this is done in the following method which is just a variation of the readfile( ) method presented in section 112 /** * carry out the open command by letting the user specify a file to be opened * and reading up to 10000 characters from that file </s>
<s> if the file is read * successfully and is not too long then the text from the file replaces the * text in the jtextarea */ public void doopen( ) { if ( filedialog == null ) filedialog = new jfilechooser( ) filedialogsetdialogtitle( select file to be opened ) filedialogsetselectedfile( null ) // no file is initially selected int option = filedialogshowopendialog( this ) if ( option != jfilechooserapprove option ) return // user canceled or clicked the dialog’s close box file selectedfile = filedialoggetselectedfile( ) bufferedreader in try { filereader stream = new filereader( selectedfile ) in = new bufferedreader( stream ) } catch ( exception e ) { joptionpaneshowmessagedialog( this sorry but an error occurred while trying to open the filen + e ) return } try { stringbuffer input = new stringbuffer( ) while ( true ) { string linefromfile = inreadline( ) if ( linefromfile == null ) break // end-of-file has been reached inputappend( linefromfile ) inputappend( ’n’ ) if ( inputlength( ) > 10000 ) throw new ioexception( input file is too large for this program ) } inclose( ) textsettext( input ) editfile = selectedfile settitle( trivialedit + editfilegetname( ) ) } catch ( exception e ) { joptionpaneshowmessagedialog( this sorry but an error occurred while trying to read the datan + e ) } } 554 chapter 11 </s>
<s> streams files and networking in this program the instance variable editfile is used to keep track of the ﬁle that is currently being edited if any and the settitle( ) method ( from class jframe ) is used to set the title of the window to show the name of the ﬁle similarly the response to the save command is a minor variation on the writefile( ) method from section 112 </s>
<s> i will not repeat it here </s>
<s> if you would like to see the entire program you will ﬁnd the source code in the ﬁle trivialeditjava 1134 storing objects in files whenever data is stored in ﬁles some deﬁnite format must be adopted for representing the data </s>
<s> as long as the output routine that writes the data and the input routine that reads the data use the same format the ﬁles will be usable </s>
<s> however as usual correctness is not the end of the story </s>
<s> the representation that is used for data in ﬁles should also be robust ( see section 81 ) to see what this means we will look at several diﬀerent ways of representing the same data </s>
<s> this example builds on the example simplepaint2java from subsection 734 </s>
<s> in that program the user could use the mouse to draw simple sketches </s>
<s> now we will add ﬁle input/output capabilities to that program </s>
<s> this will allow the user to save a sketch to a ﬁle and later read the sketch back from the ﬁle into the program so that the user can continue to work on the sketch </s>
<s> the basic requirement is that all relevant data about the sketch must be saved in the ﬁle so that the sketch can be exactly restored when the ﬁle is read by the program the new version of the program can be found in the source code ﬁle simplepaintwithfilesjava </s>
<s> a file” menu has been added to the new version </s>
<s> it contains two sets of save/open commands one for saving and reloading sketch data in text form and one for data in binary form </s>
<s> we will consider both possibilities here in some detail the data for a sketch consists of the background color of the picture and a list of the curves that were drawn by the user </s>
<s> a curve consists of a list of points ( point is a standard class in package javaawt a point pt has instance variables ptx and pty of type int that represent the coordinates of a point on the xy-plane ) each curve can be a diﬀerent color </s>
<s> furthermore a curve can be symmetric” which means that in addition to the curve itself the horizontal and vertical reﬂections of the curve are also drawn </s>
<s> the data for each curve is stored in an object of type curvedata which is deﬁned in the program as /** * an object of type curvedata represents the data required to redraw one * of the curves that have been sketched by the user */ private static class curvedata implements serializable { color color // the color of the curve boolean symmetric // are horizontal and vertical reflections also drawn arraylist<point> points // the points on the curve } note that this class has been declared to implement serializable” </s>
<s> this allows objects of type curvedata to be written in binary form to an objectoutputstream </s>
<s> see subsection 1116 et’s think about how the data for a sketch could be saved to an objectouputstream </s>
<s> the sketch is displayed on the screen in an object of type simplepaintpanel which is a subclass of jpanel </s>
<s> all the data needed for the sketch is stored in instance variables of that object </s>
<s> one possibility would be to simply write the entire simplepaintpanel component as a single object to the stream </s>
<s> this could be done in a method in the simplepaintpanel class with the statement outputstreamwriteobject( this ) 113 </s>
<s> programming with files 555 where outputstream is the objectoutputstream and this” refers to the simplepaintpanel itself </s>
<s> this statement saves the entire current state of the panel </s>
<s> to read the data back into the program you would create an objectinputstream for reading the object from the ﬁle and you would retrieve the object from the ﬁle with the statement simplepaintpanel newpanel = ( simplepaintpanel )inreadobject( ) where in is the objectinputstream </s>
<s> note that the type-cast is necessary because the method inreadobject( ) returns a value of type object ( to get the saved sketch to appear on the screen the newpanel must replace the current content pane in the program’s window furthermore the menu bar of the window must be replaced because the menus are associated with a particular simplepaintpanel object ) it might look tempting to be able to save data and restore it with a single command but in this case it’s not a good idea </s>
<s> the main problem with doing things this way is that the serialized form of objects that represent swing components can change from one version of java to the next </s>
<s> this means that data ﬁles that contain serialized components such as a simplepaintpanel might become unusable in the future and the data that they contain will be eﬀectively lost </s>
<s> this is an important consideration for any serious application taking this into consideration my program uses a diﬀerent format when it creates a binary ﬁle </s>
<s> the data written to the ﬁle consists of ( 1 ) the background color of the sketch ( 2 ) the number of curves in the sketch and ( 3 ) all the curvedata objects that describe the individual curves </s>
<s> the method that saves the data is similar to the writefile( ) method from subsection 1123 </s>
<s> here is the complete dosaveasbinary( ) method from simplepaintwithfiles with the changes from the generic readfile( ) method shown in italic /** * save the user’s sketch to a file in binary form as serialized * objects using an objectoutputstream </s>
<s> files created by this method * can be read back into the program using the doopenasbinary( ) method */ private void dosaveasbinary( ) { if ( filedialog == null ) filedialog = new jfilechooser( ) file selectedfile //initially selected file name in the dialog if ( editfile == null ) selectedfile = new file( sketchdatabinary ) else selectedfile = new file( editfilegetname( ) ) filedialogsetselectedfile( selectedfile ) filedialogsetdialogtitle( select file to be saved ) int option = filedialogshowsavedialog( this ) if ( option != jfilechooserapprove option ) return // user canceled or clicked the dialog’s close box selectedfile = filedialoggetselectedfile( ) if ( selectedfileexists( ) ) { // ask the user whether to replace the file int response = joptionpaneshowconfirmdialog( this the file + selectedfilegetname( ) + already existsndo you want to replace it confirm save joptionpaneyes no option joptionpanewarning message ) if ( response != joptionpaneyes option ) 556 chapter 11 </s>
<s> streams files and networking return // user does not want to replace the file } objectoutputstream out try { fileoutputstream stream = new fileoutputstream( selectedfile ) out = new objectoutputstream( stream ) } catch ( exception e ) { joptionpaneshowmessagedialog( this sorry but an error occurred while trying to open the filen + e ) return } try { outwriteobject( getbackground( ) ) outwriteint( curvessize( ) ) for ( curvedata curve curves ) outwriteobject( curve ) outclose( ) editfile = selectedfile settitle( simplepaint + editfilegetname( ) ) } catch ( exception e ) { joptionpaneshowmessagedialog( this sorry but an error occurred while trying to write the textn + e ) } } the heart of this method consists of the following lines which do the actual writing of the data to the ﬁle outwriteobject( getbackground( ) ) outwriteint( curvessize( ) ) for ( curvedata curve curves ) outwriteobject( curve ) // writes the panel’s background color // writes the number of curves // for each curve // write the corresponding curvedata object the last line depends on the fact that the curvedata class implements the serializable interface the doopenasbinary( ) method which is responsible for reading sketch data back into the program from an objectinputstream has to read exactly the same data that was written in the same order and use that data to build the data structures that will represent the sketch while the program is running </s>
<s> once the data structures have been successfully built they replace the data structures that describe the previous contents of the panel </s>
<s> this is done as follows /* read data from the file into local variables */ color newbackgroundcolor = ( color )inreadobject( ) int curvecount = inreadint( ) arraylist<curvedata> newcurves = new arraylist<curvedata>( ) for ( int i = 0 i < curvecount i++ ) newcurvesadd( ( curvedata )inreadobject( ) ) inclose( ) /* copy the data that was read into the instance variables that describe the sketch that is displayed by the program*/ curves = newcurves setbackground( newbackgroundcolor ) 557 113 </s>
<s> programming with files repaint( ) this is only a little harder than saving the entire simplepaintpanel component to the ﬁle in one step and it is more robust since the serialized form of the objects that are saved to ﬁle is unlikely to change in the future </s>
<s> but it still suﬀers from the general fragility of binary data ∗ ∗ ∗ an alternative to using object streams is to save the data in human-readable character form </s>
<s> the basic idea is the same all the data necessary to reconstitute a sketch must be saved to the output ﬁle in some deﬁnite format </s>
<s> the method that reads the ﬁle must follow exactly the same format as it reads the data and it must use the data to rebuild the data structures that represent the sketch while the program is running when writing character data we can’t write out entire objects in one step </s>
<s> all the data has to be expressed ultimately in terms of simple data values such as strings and primitive type values </s>
<s> a color for example can be expressed in terms of three integers giving the red green and blue components of the color </s>
<s> the ﬁrst ( not very good ) idea that comes to mind might be to just dump all the necessary data in some deﬁnite order into the ﬁle </s>
<s> suppose that out is a printwriter that is used to write to the ﬁle </s>
<s> we could then say color bgcolor = getbackground( ) outprintln( bgcolorgetred( ) ) outprintln( bgcolorgetgreen( ) ) outprintln( bgcolorgetblue( ) ) // write the background color to the file outprintln( curvessize( ) ) // write the number of curves for ( curvedata curve curves ) { // for each curve write outprintln( curvecolorgetred( ) ) // the color of the curve outprintln( curvecolorgetgreen( ) ) outprintln( curvecolorgetblue( ) ) outprintln( curvesymmetric 0 1 ) // the curve’s symmetry property outprintln( curvepointssize( ) ) // the number of points on curve for ( point pt curvepoints ) { // the coordinates of each point outprintln( ptx ) outprintln( pty ) } } this works in the sense that the ﬁle-reading method can read the data and rebuild the data structures </s>
<s> suppose that the input method uses a scanner named scanner to read the data ﬁle </s>
<s> then it could say color newbackgroundcolor // read the background color int red = scannernextint( ) int green = scannernextint( ) int blue = scannernextint( ) newbackgroundcolor = new color( redgreenblue ) arraylist<curvedata> newcurves = new arraylist<curvedata>( ) int curvecount = scannernextint( ) for ( int i = 0 i < curvecount i++ ) { curvedata curve = new curvedata( ) int r = scannernextint( ) int g = scannernextint( ) // the number of curves to be read // read the curve’s color 558 chapter 11 </s>
<s> streams files and networking int b = scannernextint( ) curvecolor = new color( rgb ) int symmetrycode = scannernextint( ) // read the curve’s symmetry property curvesymmetric = ( symmetrycode == 1 ) curvedatapoints = new arraylist<point>( ) int pointcount = scannernextint( ) // the number of points on this curve for ( int j = 0 j < pointcount j++ ) { int x = scannernextint( ) // read the coordinates of the point int y = scannernextint( ) curvedatapointsadd( new point( xy ) ) } newcurvesadd( curve ) } curves = newcurves setbackground( newbackgroundcolor ) // install the new data structures note how every piece of data that was written by the output method is read in the same order by the input method </s>
<s> while this does work the data ﬁle is just a long string of numbers </s>
<s> it doesn’t make much more sense to a human reader than a binary-format ﬁle would </s>
<s> furthermore it is still fragile in the sense that any small change made to the data representation in the program such as adding a new property to curves will render the data ﬁle useless ( unless you happen to remember exactly which version of the program created the ﬁle ) so i decided to use a more complex more meaningful data format for the text ﬁles created by my program </s>
<s> instead of just writing numbers i add words to say what the numbers mean here is a short but complete data ﬁle for the program just by looking at it you can probably tell what is going on simplepaintwithfiles 10 background 110 110 180 startcurve color 255 255 255 symmetry true coords 10 10 coords 200 250 coords 300 10 endcurve startcurve color 0 255 255 symmetry false coords 10 400 coords 590 400 endcurve the ﬁrst line of the ﬁle identiﬁes the program that created the data ﬁle when the user selects a ﬁle to be opened the program can check the ﬁrst word in the ﬁle as a simple test to make sure the ﬁle is of the correct type </s>
<s> the ﬁrst line also contains a version number 10 </s>
<s> if the ﬁle format changes in a later version of the program a higher version number would be used if the program sees a version number of 12 in a ﬁle but the program only understands version 10 the program can explain to the user that a newer version of the program is needed to read the data ﬁle 113 </s>
<s> programming with files 559 the second line of the ﬁle speciﬁes the background color of the picture </s>
<s> the three integers specify the red green and blue components of the color </s>
<s> the word background” at the beginning of the line makes the meaning clear </s>
<s> the remainder of the ﬁle consists of data for the curves that appear in the picture </s>
<s> the data for each curve is clearly marked with startcurve” and endcurve” the data consists of the color and symmetry properties of the curve and the xy-coordinates of each point on the curve </s>
<s> again the meaning is clear </s>
<s> files in this format can easily be created or edited by hand </s>
<s> in fact the data ﬁle shown above was actually created in a text editor rather than by the program </s>
<s> furthermore it’s easy to extend the format to allow for additional options </s>
<s> future versions of the program could add a thickness” property to the curves to make it possible to have curves that are more than one pixel wide </s>
<s> shapes such as rectangles and ovals could easily be added outputting data in this format is easy </s>
<s> suppose that out is a printwriter that is being used to write the sketch data to a ﬁle </s>
<s> then the output can be done with outprintln( simplepaintwithfiles 10 ) // version number color bgcolor = getbackground( ) outprintln( background + bgcolorgetred( ) + + bgcolorgetgreen( ) + + bgcolorgetblue( ) ) for ( curvedata curve curves ) { outprintln( ) outprintln( startcurve ) outprintln( color + curvecolorgetred( ) + + curvecolorgetgreen( ) + + curvecolorgetblue( ) ) outprintln( symmetry + curvesymmetric ) for ( point pt curvepoints ) outprintln( coords + ptx + + pty ) outprintln( endcurve ) } reading the data is somewhat harder since the input routine has to deal with all the extra words in the data </s>
<s> in my input routine i decided to allow some variation in the order in which the data occurs in the ﬁle </s>
<s> for example the background color can be speciﬁed at the end of the ﬁle instead of at the beginning </s>
<s> it can even be left out altogether in which case white will be used as the default background color </s>
<s> this is possible because each item of data is labeled with a word that describes its meaning the labels can be used to drive the processing of the input </s>
<s> here is the complete method from simplepaintwithfilesjava that reads data ﬁles in text format </s>
<s> it uses a scanner to read items from the ﬁle private void doopenastext( ) { if ( filedialog == null ) filedialog = new jfilechooser( ) filedialogsetdialogtitle( select file to be opened ) filedialogsetselectedfile( null ) // no file is initially selected int option = filedialogshowopendialog( this ) if ( option != jfilechooserapprove option ) return // user canceled or clicked the dialog’s close box file selectedfile = filedialoggetselectedfile( ) scanner scanner // for reading from the data file try { reader stream = new bufferedreader( new filereader( selectedfile ) ) scanner = new scanner( stream ) 560 chapter 11 </s>
<s> streams files and networking } catch ( exception e ) { joptionpaneshowmessagedialog( this sorry but an error occurred while trying to open the filen + e ) return } try { // read the contents of the file string programname = scannernext( ) if ( ! programnameequals( simplepaintwithfiles ) ) throw new ioexception( file is not a simplepaintwithfiles data file ) double version = scannernextdouble( ) if ( version > 10 ) throw new ioexception( file requires newer version of this program ) color newbackgroundcolor = colorwhite arraylist<curvedata> newcurves = new arraylist<curvedata>( ) while ( scannerhasnext( ) ) { string itemname = scannernext( ) if ( itemnameequalsignorecase( background ) ) { int red = scannernextint( ) int green = scannernextint( ) int blue = scannernextint( ) newbackgroundcolor = new color( redgreenblue ) } else if ( itemnameequalsignorecase( startcurve ) ) { curvedata curve = new curvedata( ) curvecolor = colorblack curvesymmetric = false curvepoints = new arraylist<point>( ) itemname = scannernext( ) while ( ! itemnameequalsignorecase( endcurve ) ) { if ( itemnameequalsignorecase( color ) ) { int r = scannernextint( ) int g = scannernextint( ) int b = scannernextint( ) curvecolor = new color( rgb ) } else if ( itemnameequalsignorecase( symmetry ) ) { curvesymmetric = scannernextboolean( ) } else if ( itemnameequalsignorecase( coords ) ) { int x = scannernextint( ) int y = scannernextint( ) curvepointsadd( new point( xy ) ) } else { throw new exception( unknown term in input ) } itemname = scannernext( ) } newcurvesadd( curve ) } else { throw new exception( unknown term in input ) 561 114 </s>
<s> networking } } scannerclose( ) setbackground( newbackgroundcolor ) // install the new picture data curves = newcurves repaint( ) editfile = selectedfile settitle( simplepaint + editfilegetname( ) ) } catch ( exception e ) { joptionpaneshowmessagedialog( this sorry but an error occurred while trying to read the datan + e ) } } the main reason for this long discussion of ﬁle formats has been to get you to think about the problem of representing complex data in a form suitable for storing the data in a ﬁle </s>
<s> the same problem arises when data must be transmitted over a network </s>
<s> there is no one correct solution to the problem but some solutions are certainly better than others </s>
<s> in section 115 we will look at one solution to the data representation problem that has become increasingly common ∗ ∗ ∗ in addition to being able to save sketch data in both text form and binary form simplepaintwithfiles can also save the picture itself as an image ﬁle that could be for example printed or put on a web page </s>
<s> this is a preview of image-handling techniques that will be covered in chapter 13 114 networking as far as a program is concerned a network is just another possible source of input data and another place where data can be output </s>
<s> that does oversimplify things because networks are not as easy to work with as ﬁles are </s>
<s> but in java you can do network communication using input streams and output streams just as you can use such streams to communicate with the user or to work with ﬁles </s>
<s> nevertheless opening a network connection between two computers is a bit tricky since there are two computers involved and they have to somehow agree to open a connection </s>
<s> and when each computer can send data to the other synchronizing communication can be a problem </s>
<s> but the fundamentals are the same as for other forms of i/o one of the standard java packages is called javanet </s>
<s> this package includes several classes that can be used for networking </s>
<s> two diﬀerent styles of network i/o are supported one of these which is fairly high-level is based on the world-wide web and provides the sort of network communication capability that is used by a web browser when it downloads pages for you to view </s>
<s> the main classes for this style of networking are javaneturl and javaneturlconnection </s>
<s> an object of type url is an abstract representation of a universal resource locator which is an address for an html document or other resource on the web </s>
<s> a urlconnection represents a network connection to such a resource the second style of i/o which is more general and much more important views the network at a lower level </s>
<s> it is based on the idea of a socket </s>
<s> a socket is used by a program to establish a connection with another program on a network </s>
<s> communication over a network involves two 562 chapter 11 </s>
<s> streams files and networking sockets one on each of the computers involved in the communication </s>
<s> java uses a class called javanetsocket to represent sockets that are used for network communication </s>
<s> the term socket” presumably comes from an image of physically plugging a wire into a computer to establish a connection to a network but it is important to understand that a socket as the term is used here is simply an object belonging to the class socket </s>
<s> in particular a program can have several sockets at the same time each connecting it to another program running on some other computer on the network </s>
<s> all these connections use the same physical network connection this section gives a brief introduction to these basic networking classes and shows how they relate to input and output streams 1141 urls and urlconnections the url class is used to represent resources on the world-wide web </s>
<s> every resource has an address which identiﬁes it uniquely and contains enough information for a web browser to ﬁnd the resource on the network and retrieve it </s>
<s> the address is called a url” or universal resource locator” an object belonging to the url class represents such an address </s>
<s> once you have a url object you can use it to open a urlconnection to the resource at that address </s>
<s> a url is ordinarily speciﬁed as a string such as http//mathhwsedu/eck/indexhtml” </s>
<s> there are also relative url’s </s>
<s> a relative url speciﬁes the location of a resource relative to the location of another url which is called the base or context for the relative url </s>
<s> for example if the context is given by the url http//mathhwsedu/eck/ then the incomplete relative url indexhtml” would really refer to http//mathhwsedu/eck/indexhtml an object of the class url is not simply a string but it can be constructed from a string representation of a url </s>
<s> a url object can also be constructed from another url object representing a context and a string that speciﬁes a url relative to that context </s>
<s> these constructors have prototypes public url( string urlname ) throws malformedurlexception and public url( url context string relativename ) throws malformedurlexception note that these constructors will throw an exception of type malformedurlexception if the speciﬁed strings don’t represent legal url’s </s>
<s> the malformedurlexception class is a subclass of ioexception and it requires mandatory exception handling </s>
<s> that is you must call the constructor inside a trycatch statement that handles the exception or in a subroutine that is declared to throw the exception the second constructor is especially convenient when writing applets </s>
<s> in an applet two methods are available that provide useful url contexts </s>
<s> the method getdocumentbase( ) deﬁned in the applet and japplet classes returns an object of type url </s>
<s> this url represents the location from which the html page that contains the applet was downloaded </s>
<s> this allows the applet to go back and retrieve other ﬁles that are stored in the same location as that document </s>
<s> for example url url = new url( getdocumentbase( ) datatxt ) constructs a url that refers to a ﬁle named datatxt on the same computer and in the same directory as the source ﬁle for the web page on which the applet is running </s>
<s> another method 114 </s>
<s> networking 563 getcodebase( ) returns a url that gives the location of the applet class ﬁle ( which is not necessarily the same as the location of the document ) once you have a valid url object you can call its openconnection( ) method to set up a connection </s>
<s> this method returns a urlconnection </s>
<s> the urlconnection object can in turn be used to create an inputstream for reading data from the resource represented by the url this is done by calling its getinputstream( ) method </s>
<s> for example url url = new url( urladdressstring ) urlconnection connection = urlopenconnection( ) inputstream in = connectiongetinputstream( ) the openconnection( ) and getinputstream( ) methods can both throw exceptions of type ioexception </s>
<s> once the inputstream has been created you can read from it in the usual way including wrapping it in another input stream type such as buﬀeredreader or using a scanner reading from the stream can of course generate exceptions one of the other useful instance methods in the urlconnection class is getcontenttype( ) which returns a string that describes the type of information available from the url </s>
<s> the return value can be null if the type of information is not yet known or if it is not possible to determine the type </s>
<s> the type might not be available until after the input stream has been created so you should generally call getcontenttype( ) after getinputstream( ) </s>
<s> the string returned by getcontenttype( ) is in a format called a mime type </s>
<s> mime types include text/plain” text/html” image/jpeg” image/gif” and many others </s>
<s> all mime types contain two parts a general type such as text” or image” and a more speciﬁc type within that general category such as html” or gif” </s>
<s> if you are only interested in text data for example you can check whether the string returned by getcontenttype( ) starts with text” ( mime types were ﬁrst introduced to describe the content of email messages </s>
<s> the name stands for multipurpose internet mail extensions” they are now used almost universally to specify the type of information in a ﬁle or other resource ) et’s look at a short example that uses all this to read the data from a url </s>
<s> this subroutine opens a connection to a speciﬁed url checks that the type of data at the url is text and then copies the text onto the screen </s>
<s> many of the operations in this subroutine can throw exceptions </s>
<s> they are handled by declaring that the subroutine throws ioexception” and leaving it up to the main program to decide what to do when an error occurs static void readtextfromurl( string urlstring ) throws ioexception { /* open a connection to the url and get an input stream for reading data from the url */ url url = new url( urlstring ) urlconnection connection = urlopenconnection( ) inputstream urldata = connectiongetinputstream( ) /* check that the content is some type of text */ string contenttype = connectiongetcontenttype( ) if ( contenttype == null || contenttypestartswith( text ) == false ) throw new ioexception( url does not seem to refer to a text file ) /* copy lines of text from the input stream to the screen until end-of-file is encountered ( or an error occurs ) */ bufferedreader in // for reading from the connection’s input stream in = new bufferedreader( new inputstreamreader( urldata ) ) 564 chapter 11 </s>
<s> streams files and networking while ( true ) { string line = inreadline( ) if ( line == null ) break systemoutprintln( line ) } } // end readtextfromurl( ) a complete program that uses this subroutine can be found in the ﬁle readurljava </s>
<s> when using the program note that you have to specify a complete url including the http//” at the beginning </s>
<s> there is also an applet version of the program which you can ﬁnd in the on-line version of this section 1142 tcp/ip and client/server communication over the internet is based on a pair of protocols called the transmission control protocol and the internet protocol which are collectively referred to as tcp/ip ( in fact there is a more basic communication protocol called udp that can be used instead of tcp in certain applications </s>
<s> udp is supported in java but for this discussion i’ll stick to the full tcp/ip which provides reliable two-way communication between networked computers ) for two programs to communicate using tcp/ip each program must create a socket as discussed earlier in this section and those sockets must be connected </s>
<s> once such a connection is made communication takes place using input streams and output streams </s>
<s> each program has its own input stream and its own output stream </s>
<s> data written by one program to its output stream is transmitted to the other computer </s>
<s> there it enters the input stream of the program at the other end of the network connection </s>
<s> when that program reads data from its input stream it is receiving the data that was transmitted to it over the network the hard part then is making a network connection in the ﬁrst place </s>
<s> two sockets are involved </s>
<s> to get things started one program must create a socket that will wait passively until a connection request comes in from another socket </s>
<s> the waiting socket is said to be listening for a connection </s>
<s> on the other side of the connection-to-be another program creates a socket that sends out a connection request to the listening socket </s>
<s> when the listening socket receives the connection request it responds and the connection is established </s>
<s> once that is done each program can obtain an input stream and an output stream for sending data over the connection communication takes place through these streams until one program or the other closes the connection a program that creates a listening socket is sometimes said to be a server and the socket is called a server socket </s>
<s> a program that connects to a server is called a client and the socket that it uses to make a connection is called a client socket </s>
<s> the idea is that the server is out there somewhere on the network waiting for a connection request from some client </s>
<s> the server can be thought of as oﬀering some kind of service and the client gets access to that service by connecting to the server </s>
<s> this is called the client/server model of network communication in many actual applications a server program can provide connections to several clients at the same time </s>
<s> when a client connects to a server’s listening socket that socket does not stop listening </s>
<s> instead it continues listening for additional client connections at the same time that the ﬁrst client is being serviced </s>
<s> to do this it is necessary to use threads </s>
<s> we’ll look at how it works in the next chapter 565 114 </s>
<s> networking the url class that was discussed at the beginning of this section uses a client socket behind the scenes to do any necessary network communication </s>
<s> on the other side of that connection is a server program that accepts a connection request from the url object reads a request from that object for some particular ﬁle on the server computer and responds by transmitting the contents of that ﬁle over the network back to the url object </s>
<s> after transmitting the data the server closes the connection ∗ ∗ ∗ a client program has to have some way to specify which computer among all those on the network it wants to communicate with </s>
<s> every computer on the internet has an ip address which identiﬁes it uniquely among all the computers on the net </s>
<s> many computers can also be referred to by domain names such as mathhwsedu or wwwwhitehousegov ( see section 17 ) traditional ( or ipv4 ) ip addresses are 32-bit integers </s>
<s> they are usually written in the so-called dotted decimal” form such as 6489144135 where each of the four numbers in the address represents an 8-bit integer in the range 0 through 255 </s>
<s> a new version of the internet protocol ipv6 is currently being introduced </s>
<s> ipv6 addresses are 128-bit integers and are usually written in hexadecimal form ( with some colons and maybe some extra information thrown in ) </s>
<s> in actual use ipv6 addresses are still fairly rare a computer can have several ip addresses and can have both ipv4 and ipv6 addresses usually one of these is the loopback address which can be used when a program wants to communicate with another program on the same computer </s>
<s> the loopback address has ipv4 address 127001 and can also in general be referred to using the domain name localhost </s>
<s> in addition there can be one or more ip addresses associated with physical network connections your computer probably has some utility for displaying your computer’s ip addresses </s>
<s> i have written a small java program showmynetworkjava that does the same thing </s>
<s> when i run showmynetwork on my computer the output is en1 lo0 /192168147 /fe8000021124fffe9c5271%5 /127001 /fe800000001%1 /00000001%0 the ﬁrst thing on each line is a network interface name which is really meaningful only to the computer’s operating system </s>
<s> the output also contains the ip addresses for that interface </s>
<s> in this example lo0 refers to the loopback address which has ipv4 address 127001 as usual the most important number here is 192168147 which is the ipv4 address that can be used for communication over the network </s>
<s> the other numbers in the output are ipv6 addresses now a single computer might have several programs doing network communication at the same time or one program communicating with several other computers </s>
<s> to allow for this possibility a network connection is actually identiﬁed by a port number in combination with an ip address </s>
<s> a port number is just a 16-bit integer </s>
<s> a server does not simply listen for connections—it listens for connections on a particular port </s>
<s> a potential client must know both the internet address ( or domain name ) of the computer on which the server is running and the port number on which the server is listening </s>
<s> a web server for example generally listens for connections on port 80 other standard internet services also have standard port numbers ( the standard port numbers are all less than 1024 and are reserved for particular services </s>
<s> if you create your own server programs you should use port numbers greater than 1024 ) 1143 sockets in java to implement tcp/ip connections the javanet package provides two classes serversocket and socket </s>
<s> a serversocket represents a listening socket that waits for connection requests 566 chapter 11 </s>
<s> streams files and networking from clients </s>
<s> a socket represents one endpoint of an actual network connection </s>
<s> a socket can be a client socket that sends a connection request to a server </s>
<s> but a socket can also be created by a server to handle a connection request from a client </s>
<s> this allows the server to create multiple sockets and handle multiple connections </s>
<s> a serversocket does not itself participate in connections it just listens for connection requests and creates sockets to handle the actual connections when you construct a serversocket object you have to specify the port number on which the server will listen </s>
<s> the speciﬁcation for the constructor is public serversocket( int port ) throws ioexception the port number must be in the range 0 through 65535 and should generally be greater than 1024 </s>
<s> the constructor might throw a securityexception if a smaller port number is speciﬁed </s>
<s> an ioexception can occur if for example the speciﬁed port number is already in use ( a parameter value of 0 in this method tells the server socket to listen on any available port ) as soon as a serversocket is created it starts listening for connection requests </s>
<s> the accept( ) method in the serversocket class accepts such a request establishes a connection with the client and returns a socket that can be used for communication with the client </s>
<s> the accept( ) method has the form public socket accept( ) throws ioexception when you call the accept( ) method it will not return until a connection request is received ( or until some error occurs ) </s>
<s> the method is said to block while waiting for the connection ( while the method is blocked the program—or more exactly the thread—that called the method can’t do anything else </s>
<s> if there are other threads in the same program they can proceed ) you can call accept( ) repeatedly to accept multiple connection requests </s>
<s> the serversocket will continue listening for connections until it is closed using its close( ) method or until some error occurs or until the program is terminated in some way suppose that you want a server to listen on port 1728 and suppose that you’ve written a method provideservice( socket ) to handle the communication with one client </s>
<s> then the basic form of the server program would be try { serversocket server = new serversocket( 1728 ) while ( true ) { socket connection = serveraccept( ) provideservice( connection ) } } catch ( ioexception e ) { systemoutprintln( server shut down with error + e ) } on the client side a client socket is created using a constructor in the socket class </s>
<s> to connect to a server on a known computer and port you would use the constructor public socket( string computer int port ) throws ioexception the ﬁrst parameter can be either an ip number or a domain name </s>
<s> this constructor will block until the connection is established or until an error occurs once you have a connected socket no matter how it was created you can use the socket methods getinputstream( ) and getoutputstream( ) to obtain streams that can be used for communication over the connection </s>
<s> these methods return objects of type inputstream and 114 </s>
<s> networking 567 outputstream respectively </s>
<s> keeping all this in mind here is the outline of a method for working with a client connection /** * open a client connection to a specified server computer and * port number on the server and then do communication through * the connection */ void doclientconnection( string computername int serverport ) { socket connection inputstream in outputstream out try { connection = new socket( computernameserverport ) in = connectiongetinputstream( ) out = connectiongetoutputstream( ) } catch ( ioexception e ) { systemoutprintln( attempt to create connection failed with error + e ) return } // use the streams in and out to communicate with the server try { connectionclose( ) // ( alternatively you might depend on the server // to close the connection ) } catch ( ioexception e ) { } } // end doclientconnection( ) all this makes network communication sound easier than it really is ( and if you think it sounded hard then it’s even harder ) if networks were completely reliable things would be almost as easy as i’ve described </s>
<s> the problem though is to write robust programs that can deal with network and human error </s>
<s> i won’t go into detail here </s>
<s> however what i’ve covered here should give you the basic ideas of network programming and it is enough to write some simple network applications </s>
<s> let’s look at a few working examples of client/server programming 1144 a trivial client/server the ﬁrst example consists of two programs </s>
<s> the source code ﬁles for the programs are dateclientjava and dateserverjava </s>
<s> one is a simple network client and the other is a matching server </s>
<s> the client makes a connection to the server reads one line of text from the server and displays that text on the screen </s>
<s> the text sent by the server consists of the current date and time on the computer where the server is running </s>
<s> in order to open a connection the client must know the computer on which the server is running and the port on which it is listening the server listens on port number 32007 </s>
<s> the port number could be anything between 1025 and 65535 as long as the server and the client use the same port </s>
<s> port numbers between 1 and 1024 are reserved for standard services and should not be used for other servers </s>
<s> the name or 568 chapter 11 </s>
<s> streams files and networking ip number of the computer on which the server is running must be speciﬁed as a command-line argument </s>
<s> for example if the server is running on a computer named mathhwsedu then you would typically run the client with the command java dateclient mathhwsedu” </s>
<s> here is the complete client program import javanet* import javaio* /** * this program opens a connection to a computer specified * as the first command-line argument </s>
<s> the connection is made to * the port specified by listening port </s>
<s> the program reads one * line of text from the connection and then closes the * connection </s>
<s> it displays the text that it read on * standard output </s>
<s> this program is meant to be used with * the server program dateserver which sends the current * date and time on the computer where the server is running */ public class dateclient { public static final int listening port = 32007 public static void main( string[] args ) { string hostname // name of the server computer to connect to socket connection // a socket for communicating with the server bufferedreader incoming // for reading data from the connection /* get computer name from command line */ if ( argslength > 0 ) hostname = args[0] else { // no computer name was given </s>
<s> print a message and exit systemoutprintln( usage java dateclient <server host name> ) return } /* make the connection then read and display a line of text */ try { connection = new socket( hostname listening port ) incoming = new bufferedreader( new inputstreamreader( connectiongetinputstream( ) ) ) string linefromserver = incomingreadline( ) if ( linefromserver == null ) { // a null from incomingreadline( ) indicates that // end-of-stream was encountered throw new ioexception( connection was opened + but server did not send any data ) } systemoutprintln( ) systemoutprintln( linefromserver ) systemoutprintln( ) incomingclose( ) } catch ( exception e ) { 569 114 </s>
<s> networking systemoutprintln( error + e ) } } // end main( ) } //end class dateclient note that all the communication with the server is done in a trycatch statement </s>
<s> this will catch the ioexceptions that can be generated when the connection is opened or closed and when data is read from the input stream </s>
<s> the connection’s input stream is wrapped in a buﬀeredreader which has a readline( ) method that makes it easy to read one line of text ( see subsection 1114 ) in order for this program to run without error the server program must be running on the computer to which the client tries to connect </s>
<s> by the way it’s possible to run the client and the server program on the same computer </s>
<s> for example you can open two command windows start the server in one window and then run the client in the other window </s>
<s> to make things like this easier most computers will recognize the domain name localhost and the ip number 127001 as referring to this computer” this means that the command java dateclient localhost” will tell the dateclient program to connect to a server running on the same computer </s>
<s> if that command doesn’t work try java dateclient 127001” the server program that corresponds to the dateclient client program is called dateserver the dateserver program creates a serversocket to listen for connection requests on port 32007 after the listening socket is created the server will enter an inﬁnite loop in which it accepts and processes connections </s>
<s> this will continue until the program is killed in some way—for example by typing a control-c in the command window where the server is running </s>
<s> when a connection request is received from a client the server calls a subroutine to handle the connection </s>
<s> in the subroutine any exception that occurs is caught so that it will not crash the server </s>
<s> just because a connection to one client has failed for some reason it does not mean that the server should be shut down the error might have been the fault of the client </s>
<s> the connection-handling subroutine creates a printwriter for sending data over the connection </s>
<s> it writes the current date and time to this stream and then closes the connection ( the standard class javautildate is used to obtain the current time </s>
<s> an object of type date represents a particular date and time </s>
<s> the default constructor new date( )” creates an object that represents the time when the object is created ) the complete server program is as follows import javanet* import javaio* import javautildate /** * this program is a server that takes connection requests on * the port specified by the constant listening port </s>
<s> when a * connection is opened the program sends the current time to * the connected socket </s>
<s> the program will continue to receive * and process connections until it is killed ( by a control-c * for example ) </s>
<s> note that this server processes each connection * as it is received rather than creating a separate thread * to process the connection */ public class dateserver { public static final int listening port = 32007 570 chapter 11 </s>
<s> streams files and networking public static void main( string[] args ) { serversocket listener socket connection // listens for incoming connections // for communication with the connecting program /* accept and process connections forever or until some error occurs ( note that errors that occur while communicating with a connected program are caught and handled in the senddate( ) routine so they will not crash the server ) */ try { listener = new serversocket( listening port ) systemoutprintln( listening on port + listening port ) while ( true ) { // accept next connection request and handle it connection = listeneraccept( ) senddate( connection ) } } catch ( exception e ) { systemoutprintln( sorry the server has shut down ) systemoutprintln( error + e ) return } } // end main( ) /** * the parameter client is a socket that is already connected to another * program </s>
<s> get an output stream for the connection send the current time * and close the connection */ private static void senddate( socket client ) { try { systemoutprintln( connection from + clientgetinetaddress( )tostring( ) ) date now = new date( ) // the current date and time printwriter outgoing // stream for sending data outgoing = new printwriter( clientgetoutputstream( ) ) outgoingprintln( nowtostring( ) ) outgoingflush( ) // make sure the data is actually sent! clientclose( ) } catch ( exception e ){ systemoutprintln( error + e ) } } // end senddate( ) } //end class dateserver when you run dateserver in a command-line interface it will sit and wait for connection requests and report them as they are received </s>
<s> to make the dateserver service permanently available on a computer the program really should be run as a daemon </s>
<s> a daemon is a program that runs continually on a computer independently of any user </s>
<s> the computer can be conﬁgured to start the daemon automatically as soon as the computer boots up </s>
<s> it then runs 114 </s>
<s> networking 571 in the background even while the computer is being used for other purposes </s>
<s> for example a computer that makes pages available on the world wide web runs a daemon that listens for requests for web pages and responds by transmitting the pages </s>
<s> it’s just a souped-up analog of the dateserver program! however the question of how to set up a program as a daemon is not one i want to go into here </s>
<s> for testing purposes it’s easy enough to start the program by hand and in any case my examples are not really robust enough or full-featured enough to be run as serious servers ( by the way the word daemon” is just an alternative spelling of demon” and is usually pronounced the same way ) note that after calling outgoingprintln( ) to send a line of data to the client the server program calls outgoingflush( ) </s>
<s> the flush( ) method is available in every output stream class </s>
<s> calling it ensures that data that has been written to the stream is actually sent to its destination </s>
<s> you should generally call this function every time you use an output stream to send data over a network connection </s>
<s> if you don’t do so it’s possible that the stream will collect data until it has a large batch of data to send </s>
<s> this is done for eﬃciency but it can impose unacceptable delays when the client is waiting for the transmission </s>
<s> it is even possible that some of the data might remain untransmitted when the socket is closed so it is especially important to call flush( ) before closing the connection </s>
<s> this is one of those unfortunate cases where diﬀerent implementations of java can behave diﬀerently </s>
<s> if you fail to ﬂush your output streams it is possible that your network application will work on some types of computers but not on others 1145 a simple network chat in the dateserver example the server transmits information and the client reads it </s>
<s> it’s also possible to have two-way communication between client and server </s>
<s> as a ﬁrst example we’ll look at a client and server that allow a user on each end of the connection to send messages to the other user </s>
<s> the program works in a command-line interface where the users type in their messages </s>
<s> in this example the server waits for a connection from a single client and then closes down its listener so that no other clients can connect </s>
<s> after the client and server are connected both ends of the connection work in much the same way </s>
<s> the user on the client end types a message and it is transmitted to the server which displays it to the user on that end then the user of the server types a message that is transmitted to the client </s>
<s> then the client user types another message and so on </s>
<s> this continues until one user or the other enters quit” when prompted for a message </s>
<s> when that happens the connection is closed and both programs terminate </s>
<s> the client program and the server program are very similar </s>
<s> the techniques for opening the connections diﬀer and the client is programmed to send the ﬁrst message while the server is programmed to receive the ﬁrst message </s>
<s> the client and server programs can be found in the ﬁles clchatclientjava and clchatserverjava ( the name clchat” stands for command-line chat” ) here is the source code for the server the client is similar import javanet* import javaio* /** * this program is one end of a simple command-line interface chat program * it acts as a server which waits for a connection from the clchatclient * program </s>
<s> the port on which the server listens can be specified as a * command-line argument </s>
<s> if it is not then the port specified by the * constant default port is used </s>
<s> note that if a port number of zero is * specified then the server will listen on any available port 572 chapter 11 </s>
<s> streams files and networking * this program only supports one connection </s>
<s> as soon as a connection is * opened the listening socket is closed down </s>
<s> the two ends of the connection * each send a handshake string to the other so that both ends can verify * that the program on the other end is of the right type </s>
<s> then the connected * programs alternate sending messages to each other </s>
<s> the client always sends * the first message </s>
<s> the user on either end can close the connection by * entering the string quit when prompted for a message </s>
<s> note that the first * character of any string sent over the connection must be 0 or 1 this * character is interpreted as a command */ public class clchatserver { /** * port to listen on if none is specified on the command line */ static final int default port = 1728 /** * handshake string </s>
<s> each end of the connection sends this string to the * other just after the connection is opened </s>
<s> this is done to confirm that * the program on the other side of the connection is a clchat program */ static final string handshake = clchat /** * this character is prepended to every message that is sent */ static final char message = ’0’ /** * this character is sent to the connected program when the user quits */ static final char close = ’1’ public static void main( string[] args ) { int port // the port on which the server listens serversocket listener socket connection bufferedreader incoming printwriter outgoing string messageout string messagein // listens for a connection request // for communication with the client // // // // stream for receiving data from client stream for sending data to client a message to be sent to the client a message received from the client bufferedreader userinput // a wrapper for systemin for reading // lines of input from the user /* first get the port number from the command line or use the default port if none is specified */ if ( argslength == 0 ) port = default port else { try { port= integerparseint( args[0] ) if ( port < 0 || port > 65535 ) 114 </s>
<s> networking 573 throw new numberformatexception( ) } catch ( numberformatexception e ) { systemoutprintln( illegal port number + args[0] ) return } } /* wait for a connection request </s>
<s> when it arrives close down the listener </s>
<s> create streams for communication and exchange the handshake */ try { listener = new serversocket( port ) systemoutprintln( listening on port + listenergetlocalport( ) ) connection = listeneraccept( ) listenerclose( ) incoming = new bufferedreader( new inputstreamreader( connectiongetinputstream( ) ) ) outgoing = new printwriter( connectiongetoutputstream( ) ) outgoingprintln( handshake ) // send handshake to client outgoingflush( ) // make sure handshake is transmitted now messagein = incomingreadline( ) // receive handshake from client if ( ! handshakeequals( messagein ) ) { throw new exception( connected program is not a clchat! ) } systemoutprintln( connected </s>
<s> waiting for the first message ) } catch ( exception e ) { systemoutprintln( an error occurred while opening connection ) systemoutprintln( etostring( ) ) return } /* exchange messages with the other end of the connection until one side or the other closes the connection </s>
<s> this server program waits for the first message from the client </s>
<s> after that messages alternate strictly back and forth */ try { userinput = new bufferedreader( new inputstreamreader( systemin ) ) systemoutprintln( note enter ’quit’ to end the programn ) while ( true ) { systemoutprintln( waiting ) messagein = incomingreadline( ) if ( messageinlength( ) > 0 ) { // the first character of the message is a command </s>
<s> if // the command is close then the connection is closed // otherwise remove the command character from the // message and proceed if ( messageincharat( 0 ) == close ) { systemoutprintln( connection closed at other end ) connectionclose( ) break } 574 chapter 11 </s>
<s> streams files and networking messagein = messageinsubstring( 1 ) } systemoutprintln( received + messagein ) systemoutprint( send ) messageout = userinputreadline( ) if ( messageoutequalsignorecase( quit ) ) { // user wants to quit </s>
<s> inform the other side // of the connection then close the connection outgoingprintln( close ) outgoingflush( ) // make sure the data is sent! connectionclose( ) systemoutprintln( connection closed ) break } outgoingprintln( message + messageout ) outgoingflush( ) // make sure the data is sent! if ( outgoingcheckerror( ) ) { throw new ioexception( error occurred while transmitting message ) } } } catch ( exception e ) { systemoutprintln( sorry an error has occurred systemoutprintln( error + e ) systemexit( 1 ) } } connection lost ) // end main( ) } //end class clchatserver this program is a little more robust than dateserver </s>
<s> for one thing it uses a handshake to make sure that a client who is trying to connect is really a clchatclient program </s>
<s> a handshake is simply information sent between a client and a server as part of setting up a connection before any actual data is sent </s>
<s> in this case each side of the connection sends a string to the other side to identify itself </s>
<s> the handshake is part of the protocol that i made up for communication between clchatclient and clchatserver </s>
<s> a protocol is a detailed speciﬁcation of what data and messages can be exchanged over a connection how they must be represented and what order they can be sent in </s>
<s> when you design a client/server application the design of the protocol is an important consideration </s>
<s> another aspect of the clchat protocol is that after the handshake every line of text that is sent over the connection begins with a character that acts as a command </s>
<s> if the character is 0 the rest of the line is a message from one user to the other </s>
<s> if the character is 1 the line indicates that a user has entered the quit” command and the connection is to be shut down remember that if you want to try out this program on a single computer you can use two command-line windows </s>
<s> in one give the command java clchatserver” to start the server </s>
<s> then in the other use the command java clchatclient localhost” to connect to the server that is running on the same machine 115 </s>
<s> a brief introduction to xml 115 575 a brief introduction to xml when data is saved to a ﬁle or transmitted over a network it must be represented in some way that will allow the same data to be rebuilt later when the ﬁle is read or the transmission is received </s>
<s> we have seen that there are good reasons to prefer textual character-based representations in many cases but there are many ways to represent a given collection of data as text </s>
<s> in this section we’ll take a brief look at one type of character-based data representation that has become increasingly common xml ( extensible markup language ) is a syntax for creating data representation languages there are two aspects or levels of xml </s>
<s> on the ﬁrst level xml speciﬁes a strict but relatively simple syntax </s>
<s> any sequence of characters that follows that syntax is a well-formed xml document </s>
<s> on the second level xml provides a way of placing further restrictions on what can appear in a document </s>
<s> this is done by associating a dtd ( document type deﬁnition ) with an xml document </s>
<s> a dtd is essentially a list of things that are allowed to appear in the xml document </s>
<s> a well-formed xml document that has an associated dtd and that follows the rules of the dtd is said to be a valid xml document </s>
<s> the idea is that xml is a general format for data representation and a dtd speciﬁes how to use xml to represent a particular kind of data ( there is also an alternative to dtds known as xml schemas for deﬁning valid xlm documents but let’s ignore them here ) there is nothing magical about xml </s>
<s> it’s certainly not perfect </s>
<s> it’s a very verbose language and some people think it’s ugly </s>
<s> on the other hand it’s very ﬂexible it can be used to represent almost any type of data </s>
<s> it was built from the start to support all languages and alphabets most important it has become an accepted standard </s>
<s> there is support in just about any programming language for processing xml documents </s>
<s> there are standard dtds for describing many diﬀerent kinds of data </s>
<s> there are many ways to design a data representation language but xml is the one that has happened to come into widespread use </s>
<s> in fact it has found its way into almost every corner of information technology </s>
<s> for example there are xml languages for representing mathematical expressions ( mathml ) musical notation ( musicxml ) molecules and chemical reactions ( cml ) vector graphics ( svg ) and many other kinds of information xml is used by openoﬃce and recent versions of microsoft oﬃce in the document format for oﬃce applications such as word processing spreadsheets and presentations </s>
<s> xml site syndication languages ( rss atom ) make it possible for web sites newspapers and blogs to make a list of recent headlines available in a standard format that can be used by other web sites and by web browsers the same format is used to publish podcasts </s>
<s> and xml is a common format for the electronic exchange of business information my purpose here is not to tell you everything there is to know about xml </s>
<s> i will just explain a few ways in which it can be used in your own programs </s>
<s> in particular i will not say anything further about dtds and valid xml </s>
<s> for many purposes it is suﬃcient to use well-formed xml documents with no associated dtds 1151 basic xml syntax an xml document looks a lot like an html document ( see subsection 623 ) </s>
<s> html is not itself an xml language since it does not follow all the strict xml syntax rules but the basic ideas are similar </s>
<s> here is a short well-formed xml document <xml version=10> <simplepaint version=10> <background red=’255’ green=’153’ blue=’51’/> 576 chapter 11 </s>
<s> streams files and networking <curve> <color red=’0’ green=’0’ blue=’255’/> <symmetric>false</symmetric> <point x=’83’ y=’96’/> <point x=’116’ y=’149’/> <point x=’159’ y=’215’/> <point x=’216’ y=’294’/> <point x=’264’ y=’359’/> <point x=’309’ y=’418’/> <point x=’371’ y=’499’/> <point x=’400’ y=’543’/> </curve> <curve> <color red=’255’ green=’255’ blue=’255’/> <symmetric>true</symmetric> <point x=’54’ y=’305’/> <point x=’79’ y=’289’/> <point x=’128’ y=’262’/> <point x=’190’ y=’236’/> <point x=’253’ y=’209’/> <point x=’341’ y=’158’/> </curve> </simplepaint> the ﬁrst line which is optional merely identiﬁes this as an xml document </s>
<s> this line can also specify other information such as the character encoding that was used to encode the characters in the document into binary form </s>
<s> if this document had an associated dtd it would be speciﬁed in a doctype” directive on the next line of the ﬁle aside from the ﬁrst line the document is made up of elements attributes and textual content </s>
<s> an element starts with a tag such as <curve> and ends with a matching end-tag such as </curve> </s>
<s> between the tag and end-tag is the content of the element which can consist of text and nested elements ( in the example the only textual content is the true or false in the <symmetric> elements ) if an element has no content then the opening tag and end-tag can be combined into a single empty tag such as <point x=’83’ y=’96’/> with a /” before the ﬁnal >” </s>
<s> this is an abbreviation for <point x=’83’ y=’96’></point> </s>
<s> a tag can include attributes such as the x and y in <point x=’83’ y=’96’/> or the version in <simplepaint version=10> </s>
<s> a document can also include a few other things such as comments that i will not discuss here the basic structure should look familiar to someone familiar with html </s>
<s> the most striking diﬀerence is that in xml you get to choose the tags </s>
<s> whereas html comes with a ﬁxed ﬁnite set of tags with xml you can make up meaningful tag names that are appropriate to your application and that describe the data that is being represented ( for an xml document that uses a dtd it’s the author of the dtd who gets to choose the tag names ) every well-formed xml document follows a strict syntax </s>
<s> here are some of the most important syntax rules tag names and attribute names in xml are case sensitive </s>
<s> a name must begin with a letter and can contain letters digits and certain other characters </s>
<s> spaces and ends-of-line are signiﬁcant only in textual content </s>
<s> every tag must either be an empty tag or have a matching end-tag </s>
<s> by matching” here i mean that elements must be properly nested if a tag is inside some element then the matching end-tag must also be inside that element </s>
<s> a document must have a root element which contains all the other elements </s>
<s> the root element in the above example has tag name simplepaint </s>
<s> every attribute must have 115 </s>
<s> a brief introduction to xml 577 a value and that value must be enclosed in quotation marks either single quotes or double quotes can be used for this </s>
<s> the special characters < and & if they appear in attribute values or textual content must be written as &lt and &amp &lt” and &amp” are examples of entities </s>
<s> the entities &gt &quot and &apos are also deﬁned representing > double quote and single quote ( additional entities can be deﬁned in a dtd ) while this description will not enable you to understand everything that you might encounter in xml documents it should allow you to design well-formed xml documents to represent data structures used in java programs 1152 xmlencoder and xmldecoder we will look at two approaches to representing data from java programs in xml format </s>
<s> one approach is to design a custom xml language for the speciﬁc data structures that you want to represent </s>
<s> we will consider this approach in the next subsection </s>
<s> first we’ll look at an easy way to store data in xml ﬁles and to read those ﬁles back into a program </s>
<s> the technique uses the classes xmlencoder and xmldecoder </s>
<s> these classes are deﬁned in the package javabeans </s>
<s> an xmlencoder can be used to write objects to an outputstream in xml form </s>
<s> an xmldecoder can be used to read the output of an xmlencoder and reconstruct the objects that were written by it </s>
<s> xmlencoder and xmldecoder have much the same functionality as objectoutputstream and objectinputstream and are used in much the same way </s>
<s> in fact you don’t even have to know anything about xml to use them </s>
<s> however you do need to know a little about java beans a java bean is just an object that has certain characteristics </s>
<s> the class that deﬁnes a java bean must be a public class </s>
<s> it must have a constructor that takes no parameters </s>
<s> it should have a get” method and a set” method for each of its important instance variables ( see subsection 513 ) the last rule is a little vague </s>
<s> the idea is that it should be possible to inspect all aspects of the object’s state by calling get” methods and it should be possible to set all aspects of the state by calling set” methods </s>
<s> a bean is not required to implement any particular interface it is recognized as a bean just by having the right characteristics usually java beans are passive data structures that are acted upon by other objects but don’t do much themselves xmlencoder and xmldecoder can’t be used with arbitrary objects they can only be used with beans </s>
<s> when an xmlencoder writes an object it uses the get” methods of that object to ﬁnd out what information needs to be saved </s>
<s> when an xmldecoder reconstructs an object it creates the object using the constructor with no parameters and it uses set” methods to restore the object’s state to the values that were saved by the xmlencoder ( some standard java classes are processed using additional techniques </s>
<s> for example a diﬀerent constructor might be used and other methods might be used to inspect and restore the state ) for an example we return to the same simplepaint example that was used in subsection 1134 </s>
<s> suppose that we want to use xmlencoder and xmldecoder to create and read ﬁles in that program </s>
<s> part of the data for a simplepaint sketch is stored in objects of type curvedata deﬁned as private static class curvedata { color color // the color of the curve boolean symmetric // are reflections also drawn arraylist<point> points // the points on the curve } 578 chapter 11 </s>
<s> streams files and networking to use such objects with xmlencoder and xmldecoder we have to modify this class so that it follows the java bean pattern </s>
<s> the class has to be public and we need get and set methods for each instance variable </s>
<s> this gives public static class curvedata { private color color // the color of the curve private boolean symmetric // are reflections also drawn private arraylist<point> points // the points on the curve public color getcolor( ) { return color } public void setcolor( color color ) { thiscolor = color } public arraylist<point> getpoints( ) { return points } public void setpoints( arraylist<point> points ) { thispoints = points } public boolean issymmetric( ) { return symmetric } public void setsymmetric( boolean symmetric ) { thissymmetric = symmetric } } i didn’t really need to make the instance variables private but bean properties are usually private and are accessed only through their get and set methods at this point we might deﬁne another bean class sketchdata to hold all the necessary data for representing the user’s picture </s>
<s> if we did that we could write the data to a ﬁle with a single output statement </s>
<s> in my program however i decided to write the data in several pieces an xmlencoder can be constructed to write to any output stream </s>
<s> the output stream is speciﬁed in the encoder’s constructor </s>
<s> for example to create an encoder for writing to a ﬁle xmlencoder encoder try { fileoutputstream stream = new fileoutputstream( selectedfile ) encoder = new xmlencoder( stream ) once an encoder has been created its writeobject( ) method is used to write objects coded into xml form to the stream </s>
<s> in the simplepaint program i save the background color the number of curves in the picture and the data for each curve </s>
<s> the curve data are stored in a list of type arraylist<curvedata> named curves </s>
<s> so a complete representation of the user’s picture can be created with encoderwriteobject( getbackground( ) ) encoderwriteobject( new integer( curvessize( ) ) ) for ( curvedata c curves ) encoderwriteobject( c ) encoderclose( ) 115 </s>
<s> a brief introduction to xml 579 when reading the data back into the program an xmldecoder is created to read from an input ﬁle stream </s>
<s> the objects are then read using the decoder’s readobject( ) method in the same order in which they were written </s>
<s> since the return type of readobject( ) is object the returned values must be type-cast to their correct type color bgcolor = ( color )decoderreadobject( ) integer curvect = ( integer )decoderreadobject( ) arraylist<curvedata> newcurves = new arraylist<curvedata>( ) for ( int i = 0 i < curvect i++ ) { curvedata c = ( curvedata )decoderreadobject( ) newcurvesadd( c ) } decoderclose( ) curves = newcurves // replace the program’s data with data from the file setbackground( bgcolor ) repaint( ) you can look at the sample program simplepaintwithxmlencoderjava to see this code in the context of a complete program </s>
<s> files are created by the method dosaveasxml( ) and are read by doopenasxml( ) the xml format used by xmlencoder and xmldecoder is more robust than the binary format used for object streams and is more appropriate for long-term storage of objects in ﬁles 1153 working with the dom the output produced by an xmlencoder tends to be long and not very easy for a human reader to understand </s>
<s> it would be nice to represent data in a more compact xml format that uses meaningful tag names to describe the data and makes more sense to human readers </s>
<s> we’ll look at yet another version of simplepaint that does just that </s>
<s> see simplepaintwithxmljava for the source code </s>
<s> the sample xml document shown earlier in this section was produced by this program </s>
<s> i designed the format of that document to represent all the data needed to reconstruct a picture in simplepaint </s>
<s> the document encodes the background color of the picture and a list of curves </s>
<s> each <curve> element contains the data from one object of type curvedata it is easy enough to write data in a customized xml format although we have to be very careful to follow all the syntax rules </s>
<s> here is how i write the data for a simplepaint picture to a printwriter out outprintln( <xml version=10> ) outprintln( <simplepaint version=10> ) color bgcolor = getbackground( ) outprintln( <background red=’ + bgcolorgetred( ) + ’ green=’ + bgcolorgetgreen( ) + ’ blue=’ + bgcolorgetblue( ) + ’/> ) for ( curvedata c curves ) { outprintln( <curve> ) outprintln( <color red=’ + ccolorgetred( ) + ’ green=’ + ccolorgetgreen( ) + ’ blue=’ + ccolorgetblue( ) + ’/> ) outprintln( <symmetric> + csymmetric + </symmetric> ) for ( point pt cpoints ) outprintln( <point x=’ + ptx + ’ y=’ + pty + ’/> ) outprintln( </curve> ) } outprintln( </simplepaint> ) 580 chapter 11 </s>
<s> streams files and networking reading the data back into the program is another matter </s>
<s> to reconstruct the data structure represented by the xml document it is necessary to parse the document and extract the data from it </s>
<s> this could be diﬃcult to do by hand </s>
<s> fortunately java has a standard api for parsing and processing xml documents ( actually it has two but we will only look at one of them ) a well-formed xml document has a certain structure consisting of elements containing attributes nested elements and textual content </s>
<s> it’s possible to build a data structure in the computer’s memory that corresponds to the structure and content of the document </s>
<s> of course there are many ways to do this but there is one common standard representation known as the document object model or dom </s>
<s> the dom speciﬁes how to build data structures to represent xml documents and it speciﬁes some standard methods for accessing the data in that structure </s>
<s> the data structure is a kind of tree whose structure mirrors the structure of the document </s>
<s> the tree is constructed from nodes of various types </s>
<s> there are nodes to represent elements attributes and text ( the tree can also contain several other types of node representing aspects of xml that we can ignore here ) attributes and text can be processed without directly manipulating the corresponding nodes so we will be concerned almost entirely with element nodes the sample program xmldemojava lets you experiment with xml and the dom </s>
<s> it has a text area where you can enter an xml document </s>
<s> initially the input area contains the sample xml document from this section </s>
<s> when you click a button named parse xml input” the program will attempt to read the xml from the input box and build a dom representation of that document </s>
<s> if the input is not legal xml an error message is displayed </s>
<s> if it is legal the program will traverse the dom representation and display a list of elements attributes and textual content that it encounters ( the program uses a few techniques that i won’t discuss here ) in java the dom representation of an xml document ﬁle can be created with just two statements </s>
<s> if selectedfile is a variable of type file that represents the xml ﬁle then documentbuilder docreader = documentbuilderfactorynewinstance( )newdocumentbuilder( ) xmldoc = docreaderparse( selectedfile ) will open the ﬁle read its contents and build the dom representation </s>
<s> the classes documentbuilder and documentbuilderfactory are both deﬁned in the package javaxxmlparsers </s>
<s> the method docreaderparse( ) does the actual work </s>
<s> it will throw an exception if it can’t read the ﬁle or if the ﬁle does not contain a legal xml document </s>
<s> if it succeeds then the value returned by docreaderparse( ) is an object that represents the entire xml document ( this is a very complex task! it has been coded once and for all into a method that can be used very easily in any java program </s>
<s> we see the beneﬁt of using a standardized syntax ) the structure of the dom data structure is deﬁned in the package orgw3cdom which contains several data types that represent an xml document as a whole and the individual nodes in a document </s>
<s> the orgw3c” in the name refers to the world wide web consortium w3c which is the standards organization for the web </s>
<s> dom like xml is a general standard not just a java standard </s>
<s> the data types that we need here are document node element and nodelist ( they are deﬁned as interfaces rather than classes but that fact is not relevant here ) we can use methods that are deﬁned in these data types to access the data in the dom representation of an xml document an object of type document represents an entire xml document </s>
<s> the return value of docreaderparse( )—xmldoc in the above example—is of type document </s>
<s> we will only need one method from this class if xmldoc is of type document then 115 </s>
<s> a brief introduction to xml 581 xmldocgetdocumentelement( ) returns a value of type element that represents the root element of the document ( recall that this is the top-level element that contains all the other elements ) in the sample xml document from earlier in this section the root element consists of the tag <simplepaint version=10> the end-tag </simplepaint> and everything in between </s>
<s> the elements that are nested inside the root element are represented by their own nodes which are said to be children of the root node </s>
<s> an object of type element contains several useful methods </s>
<s> if element is of type element then we have • elementgettagname( ) — returns a string containing the name that is used in the element’s tag </s>
<s> for example the name of a <curve> element is the string curve” • elementgetattribute( attrname ) — if attrname is the name of an attribute in the element then this method returns the value of that attribute </s>
<s> for the element <point x=83 y=42/> elementgetattribute( x ) would return the string 83” note that the return value is always a string even if the attribute is supposed to represent a numerical value </s>
<s> if the element has no attribute with the speciﬁed name then the return value is an empty string • elementgettextcontent( ) — returns a string containing all the textual content that is contained in the element </s>
<s> note that this includes text that is contained inside other elements that are nested inside the element • elementgetchildnodes( ) — returns a value of type nodelist that contains all the nodes that are children of the element </s>
<s> the list includes nodes representing other elements and textual content that are directly nested in the element ( as well as some other types of node that i don’t care about here ) </s>
<s> the getchildnodes( ) method makes it possible to traverse the entire dom data structure by starting with the root element looking at children of the root element children of the children and so on ( there is a similar method that returns the attributes of the element but i won’t be using it here ) • elementgetelementsbytagname( tagname ) — returns a nodelist that contains all the nodes representing all elements that are nested inside element and which have the given tag name </s>
<s> note that this includes elements that are nested to any level not just elements that are directly contained inside element </s>
<s> the getelementsbytagname( ) method allows you to reach into the document and pull out speciﬁc data that you are interested in an object of type nodelist represents a list of nodes </s>
<s> unfortunately it does not use the api deﬁned for lists in the java collection framework </s>
<s> instead a value nodelist of type nodelist has two methods nodelistgetlength( ) returns the number of nodes in the list and nodelistitem( i ) returns the node at position i where the positions are numbered 0 1 nodelistgetlength( ) - 1 </s>
<s> note that the return value of nodelistget( ) is of type node and it might have to be type-cast to a more speciﬁc node type before it is used knowing just this much you can do the most common types of processing of dom representations </s>
<s> let’s look at a few code fragments </s>
<s> suppose that in the course of processing a document you come across an element node that represents the element <background red=’255’ green=’153’ blue=’51’/> this element might be encountered either while traversing the document with getchildnodes( ) or in the result of a call to getelementsbytagname( background ) </s>
<s> our goal is to reconstruct the data structure represented by the document and this element represents part of that data in this case the element represents a color and the red green and blue components are given 582 chapter 11 </s>
<s> streams files and networking by the attributes of the element </s>
<s> if element is a variable that refers to the node the color can be obtained by saying int r int g int b color = integerparseint( elementgetattribute( red ) ) = integerparseint( elementgetattribute( green ) ) = integerparseint( elementgetattribute( blue ) ) bgcolor = new color( rgb ) suppose now that element refers to the node that represents the element <symmetric>true</symmetric> in this case the element represents the value of a boolean variable and the value is encoded in the textual content of the element </s>
<s> we can recover the value from the element with string bool = elementgettextcontent( ) boolean symmetric if ( boolequals( true ) ) symmetric = true else symmetric = false next consider an example that uses a nodelist </s>
<s> suppose we encounter an element that represents a list of points <pointlist> <point x=’17’ y=’42’/> <point x=’23’ y=’8’/> <point x=’109’ y=’342’/> <point x=’18’ y=’270’/> </pointlist> suppose that element refers to the node that represents the <pointlist> element </s>
<s> our goal is to build the list of type arraylist<point> that is represented by the element </s>
<s> we can do this by traversing the nodelist that contains the child nodes of element arraylist<point> points = new arraylist<point>( ) nodelist children = elementgetchildnodes( ) for ( int i = 0 i < childrengetlength( ) i++ ) { node child = childrenitem( i ) // one of the child nodes of element if ( child instanceof element ) { element pointelement = ( element )child // one of the <point> elements int x = integerparseint( pointelementgetattribute( x ) ) int y = integerparseint( pointelementgetattribute( y ) ) point pt = new point( xy ) // create the point represented by pointelement pointsadd( pt ) // add the point to the list of points } } all the nested <point> elements are children of the <pointlist> element </s>
<s> the if statement in this code fragment is necessary because an element can have other children in addition to its nested elements </s>
<s> in this example we only want to process the children that are elements all these techniques can be employed to write the ﬁle input method for the sample program simplepaintwithxmljava </s>
<s> when building the data structure represented by an xml ﬁle my approach is to start with a default data structure and then to modify and add to it as i traverse the dom representation of the ﬁle </s>
<s> it’s not a trivial process but i hope that you can follow it 115 </s>
<s> a brief introduction to xml 583 color newbackground = colorwhite arraylist<curvedata> newcurves = new arraylist<curvedata>( ) element rootelement = xmldocgetdocumentelement( ) if ( ! rootelementgetnodename( )equals( simplepaint ) ) throw new exception( file is not a simplepaint file ) string version = rootelementgetattribute( version ) try { double versionnumber = doubleparsedouble( version ) if ( versionnumber > 10 ) throw new exception( file requires a newer version of simplepaint ) } catch ( numberformatexception e ) { } nodelist nodes = rootelementgetchildnodes( ) for ( int i = 0 i < nodesgetlength( ) i++ ) { if ( nodesitem( i ) instanceof element ) { element element = ( element )nodesitem( i ) if ( elementgettagname( )equals( background ) ) { // read background color int r = integerparseint( elementgetattribute( red ) ) int g = integerparseint( elementgetattribute( green ) ) int b = integerparseint( elementgetattribute( blue ) ) newbackground = new color( rgb ) } else if ( elementgettagname( )equals( curve ) ) { // read data for a curve curvedata curve = new curvedata( ) curvecolor = colorblack curvepoints = new arraylist<point>( ) newcurvesadd( curve ) // add this curve to the new list of curves nodelist curvenodes = elementgetchildnodes( ) for ( int j = 0 j < curvenodesgetlength( ) j++ ) { if ( curvenodesitem( j ) instanceof element ) { element curveelement = ( element )curvenodesitem( j ) if ( curveelementgettagname( )equals( color ) ) { int r = integerparseint( curveelementgetattribute( red ) ) int g = integerparseint( curveelementgetattribute( green ) ) int b = integerparseint( curveelementgetattribute( blue ) ) curvecolor = new color( rgb ) } else if ( curveelementgettagname( )equals( point ) ) { int x = integerparseint( curveelementgetattribute( x ) ) int y = integerparseint( curveelementgetattribute( y ) ) curvepointsadd( new point( xy ) ) } else if ( curveelementgettagname( )equals( symmetric ) ) { string content = curveelementgettextcontent( ) if ( contentequals( true ) ) curvesymmetric = true } } } } 584 chapter 11 </s>
<s> streams files and networking } } curves = newcurves // change picture in window to show the data from file setbackground( newbackground ) repaint( ) ∗ ∗ ∗ xml has developed into an extremely important technology and some applications of it are very complex </s>
<s> but there is a core of simple ideas that can be easily applied in java </s>
<s> knowing just the basics you can make good use of xml in your own java programs 585 exercises exercises for chapter 11 1 </s>
<s> the sample program directorylistjava given as an example in subsection 1122 will print a list of ﬁles in a directory speciﬁed by the user </s>
<s> but some of the ﬁles in that directory might themselves be directories </s>
<s> and the subdirectories can themselves contain directories </s>
<s> and so on </s>
<s> write a modiﬁed version of directorylist that will list all the ﬁles in a directory and all its subdirectories to any level of nesting </s>
<s> you will need a recursive subroutine to do the listing </s>
<s> the subroutine should have a parameter of type file </s>
<s> you will need the constructor from the file class that has the form public file( file dir string filename ) // constructs the file object representing a file // named filename in the directory specified by dir 2 </s>
<s> write a program that will count the number of lines in each ﬁle that is speciﬁed on the command line </s>
<s> assume that the ﬁles are text ﬁles </s>
<s> note that multiple ﬁles can be speciﬁed as in java inecounts file1txt file2txt file3txt write each ﬁle name along with the number of lines in that ﬁle to standard output </s>
<s> if an error occurs while trying to read from one of the ﬁles you should print an error message for that ﬁle but you should still process all the remaining ﬁles </s>
<s> do not use textio to process the ﬁles use a scanner a buﬀeredreader or a textreader to process each ﬁle 3 </s>
<s> for this exercise you will write a network server program </s>
<s> the program is a simple ﬁle server that makes a collection of ﬁles available for transmission to clients </s>
<s> when the server starts up it needs to know the name of the directory that contains the collection of ﬁles this information can be provided as a command-line argument </s>
<s> you can assume that the directory contains only regular ﬁles ( that is it does not contain any sub-directories ) </s>
<s> you can also assume that all the ﬁles are text ﬁles when a client connects to the server the server ﬁrst reads a one-line command from the client </s>
<s> the command can be the string index” </s>
<s> in this case the server responds by sending a list of names of all the ﬁles that are available on the server </s>
<s> or the command can be of the form get <filename>” where <filename> is a ﬁle name </s>
<s> the server checks whether the requested ﬁle actually exists </s>
<s> if so it ﬁrst sends the word ok” as a message to the client </s>
<s> then it sends the contents of the ﬁle and closes the connection </s>
<s> otherwise it sends the word error” to the client and closes the connection write a subroutine to handle each request </s>
<s> see the directorylist example in subsection 1122 for help with the problem of getting the list of ﬁles in the directory 4 </s>
<s> write a client program for the server from exercise 113 </s>
<s> design a user interface that will let the user do at least two things ( 1 ) get a list of ﬁles that are available on the server and display the list on standard output and ( 2 ) get a copy of a speciﬁed ﬁle from the server and save it to a local ﬁle ( on the computer where the client is running ) 5 </s>
<s> the sample program phonedirectoryfiledemojava from subsection 1132 stores name/number pairs for a simple phone book in a text ﬁle in the user’s home directory modify that program so that it uses an xml format for the data </s>
<s> the only signiﬁcant 586 chapter 11 </s>
<s> streams files and networking changes that you will have to make are to the parts of the program that read and write the data ﬁle </s>
<s> use the dom to read the data as discussed in subsection 1153 </s>
<s> you can use the xml format illustrated in the following sample phone directory ﬁle <xml version=10> <phone directory> <entry name=’barney’ number=’890-1203’/> <entry name=’fred’ number=’555-9923’/> </phone directory> ( this is just an easy exercise in simple xml processing as before the program in this exercise is not meant to be a useful phone directory program ) 6 </s>
<s> the sample program checkersjava from subsection 753 lets two players play checkers it would be nice if in the middle of a game the state of the game could be saved to a ﬁle ater the ﬁle could be read back into the ﬁle to restore the game and allow the players to continue </s>
<s> add the ability to save and load ﬁles to the checkers program </s>
<s> design a simple text-based format for the ﬁles </s>
<s> here is a picture of my solution to this exercise just after a ﬁle has been loaded into the program note the original checkers program could be run as either an applet or a stand-alone application </s>
<s> since the new version uses ﬁles however it can only be run as an application an applet running in a web browser is not allowed to access ﬁles it’s a little tricky to completely restore the state of a game </s>
<s> the program has a variable board of type checkersdata that stores the current contents of the board and it has a variable currentplayer of type int that indicates whether red or black is currently moving </s>
<s> this data must be stored in the ﬁle when a ﬁle is saved </s>
<s> when a ﬁle is read into the program you should read the data into two local variables newboard of type checkersdata and newcurrentplayer of type int </s>
<s> once you have successfully read all the data from the ﬁle you can use the following code to set up the program state correctly </s>
<s> this code assumes that you have introduced two new variables savebutton and loadbutton of type jbutton to represent the save game” and load game” buttons 587 exercises board = newboard // set up game with data read from file currentplayer = newcurrentplayer legalmoves = boardgetlegalmoves( currentplayer ) selectedrow = -1 gameinprogress = true newgamebuttonsetenabled( false ) loadbuttonsetenabled( false ) savebuttonsetenabled( true ) resignbuttonsetenabled( true ) if ( currentplayer == checkersdatared ) messagesettext( game loaded -- it’s red’s move ) else messagesettext( game loaded -- it’s black’s move ) repaint( ) ( note by the way that i used a textreader to read the data from the ﬁle into my program </s>
<s> textreader is a non-standard class introduced in subsection 1114 and deﬁned in the ﬁle textreaderjava </s>
<s> how to read the data in a ﬁle depends of course on the format that you have chosen for the data ) 588 chapter 11 </s>
<s> streams files and networking quiz on chapter 11 1 </s>
<s> in java input/output is done using streams </s>
<s> streams are an abstraction </s>
<s> explain what this means and why it is important 2 </s>
<s> java has two types of streams character streams and byte streams </s>
<s> why what is the diﬀerence between the two types of streams 3 </s>
<s> what is a ﬁle why are ﬁles necessary 4 </s>
<s> what is the point of the following statement out = new printwriter( new filewriter( datadat ) ) why would you need a statement that involves two diﬀerent stream classes printwriter and filewriter 5 </s>
<s> the package javaio includes a class named url </s>
<s> what does an object of type url represent and how is it used 6 </s>
<s> what is the purpose of the jfilechooser class 7 </s>
<s> explain what is meant by the client / server model of network communication 8 </s>
<s> what is a socket 9 </s>
<s> what is a serversocket and how is it used 10 </s>
<s> what is meant by an element in an xml document 11 </s>
<s> what is it about xml that makes it suitable for representing almost any type of data 12 </s>
<s> write a complete program that will display the ﬁrst ten lines from a text ﬁle </s>
<s> the lines should be written to standard output systemout </s>
<s> the ﬁle name is given as the commandline argument args[0] </s>
<s> you can assume that the ﬁle contains at least ten lines </s>
<s> don’t bother to make the program robust </s>
<s> do not use textio to process the ﬁle use a filereader to access the ﬁle chapter 12 threads and multiprocessing in the classic programming model there is a single central processing unit that reads instructions from memory and carries them out one after the other </s>
<s> the purpose of a program is to provide the list of instructions for the processor to execute </s>
<s> this is the only type of programming that we have considered so far however this model of programming has limitations </s>
<s> modern computers have multiple processors making it possible for them to perform several tasks at the same time </s>
<s> to use the full potential of all those processors you will need to write programs that can do parallel processing </s>
<s> for java programmers that means learning about threads </s>
<s> a single thread is similar to the programs that you have been writing up until now but more than one thread can be running at the same time in parallel” what makes things more interesting—and more diﬃcult—than single-threaded programming is the fact that the threads in a parallel program are rarely completely independent of one another </s>
<s> they usually need to cooperate and communicate </s>
<s> learning to manage and control cooperation among threads is the main hurdle that you will face in this chapter there are several reasons to use parallel programming </s>
<s> one is simply to do computations more quickly by setting several processors to work on them simultaneously </s>
<s> just as important however is to use threads to deal with blocking” operations where a process can’t proceed until some event occurs </s>
<s> in the previous chapter for example we saw how programs can block while waiting for data to arrive over a network connection </s>
<s> threads make it possible for one part of a program to continue to do useful work even while another part is blocked waiting for some event to occur </s>
<s> in this context threads are a vital programming tool even for a computer that has only a single processing unit 121 introduction to threads ike people computers can multitask that is they can be working on several diﬀerent tasks at the same time </s>
<s> a computer that has just a single central processing unit can’t literally do two things at the same time any more than a person can but it can still switch its attention back and forth among several tasks </s>
<s> furthermore it is increasingly common for computers to have more than one processing unit and such computers can literally work on several tasks simultaneously </s>
<s> it is likely that from now on most of the increase in computing power will come from adding additional processors to computers rather than from increasing the speed of individual processors </s>
<s> to use the full power of these multiprocessing computers a programmer must do parallel programming which means writing a program as a set of several tasks that 589 590 chapter 12 </s>
<s> threads and multiprocessing can be executed simultaneously </s>
<s> even on a single-processor computer parallel programming techniques can be useful since some problems can be tackled most naturally by breaking the solution into a set of simultaneous tasks that cooperate to solve the problem in java a single task is called a thread </s>
<s> the term thread” refers to a thread of control” or thread of execution” meaning a sequence of instructions that are executed one after another— the thread extends through time connecting each instruction to the next </s>
<s> in a multithreaded program there can be many threads of control weaving through time in parallel and forming the complete fabric of the program ( ok enough with the metaphor already! ) every java program has at least one thread when the java virtual machine runs your program it creates a thread that is responsible for executing the main routine of the program </s>
<s> this main thread can in turn create other threads that can continue even after the main thread has terminated </s>
<s> in a gui program there is at least one additional thread which is responsible for handling events and drawing components on the screen </s>
<s> this gui thread is created when the ﬁrst window is opened </s>
<s> so in fact you have already done parallel programming! when a main routine opens a window both the main thread and the gui thread can continue to run in parallel </s>
<s> of course parallel programming can be used in much more interesting ways unfortunately parallel programming is even more diﬃcult than ordinary single-threaded programming </s>
<s> when several threads are working together on a problem a whole new category of errors is possible </s>
<s> this just means that techniques for writing correct and robust programs are even more important for parallel programming than they are for normal programming on the other hand fortunately java has a nice thread api that makes basic uses of threads reasonably easy </s>
<s> it also has some standard classes to help with some of the more tricky parts it won’t be until midway through section 123 that you’ll learn about the low-level techniques that are necessary to handle the trickiest parts of parallel programming 1211 creating and running threads in java a thread is represented by an object belonging to the class javalangthread ( or to a subclass of this class ) </s>
<s> the purpose of a thread object is to execute a single method and to execute it just once </s>
<s> this method represents the task to be carried out by the thread </s>
<s> the method is executed in its own thread of control which can run in parallel with other threads when the execution of the thread’s method is ﬁnished either because the method terminates normally or because of an uncaught exception the thread stops running </s>
<s> once this happens there is no way to restart the thread or to use the same thread object to start another thread there are two ways to program a thread </s>
<s> one is to create a subclass of thread and to deﬁne the method public void run( ) in the subclass </s>
<s> this run( ) method deﬁnes the task that will be performed by the thread that is when the thread is started it is the run( ) method that will be executed in the thread </s>
<s> for example here is a simple and rather useless class that deﬁnes a thread that does nothing but print a message on standard output public class namedthread extends thread { private string name // the name of this thread public namedthread( string name ) { // constructor gives name to thread thisname = name } public void run( ) { // the run method prints a message to standard output systemoutprintln( greetings from thread ’ + name + ’! ) } } 121 </s>
<s> introduction to threads 591 to use a namedthread you must of course create an object belonging to this class </s>
<s> for example namedthread greetings = new namedthread( fred ) however creating the object does not automatically start the thread running or cause its run( ) method to be executed </s>
<s> to do that you must call the start( ) method in the thread object for the example this would be done with the statement greetingsstart( ) the purpose of the start( ) method is to create the new thread of control that will execute the thread object’s run( ) method </s>
<s> the new thread runs in parallel with the thread in which the start( ) method was called along with any other threads that already existed </s>
<s> the start( ) method returns immediately after starting the new thread of control without waiting for the thread to terminate </s>
<s> this means that the code in the thread’s run( ) method executes at the same time as the statements that follow the call to the start( ) method </s>
<s> consider this code segment namedthread greetings = new namedthread( fred ) greetingsstart( ) systemoutprintln( thread has been started ) after greetingsstart( ) is executed there are two threads </s>
<s> one of them will print thread has been started” while the other one wants to print greetings from thread ’fred’ !” </s>
<s> it is important to note that these messages can be printed in either order </s>
<s> the two threads run simultaneously and will compete for access to standard output so that they can print their messages </s>
<s> whichever thread happens to be the ﬁrst to get access will be the ﬁrst to print its message </s>
<s> in a normal single-threaded program things happen in a deﬁnite predictable order from beginning to end </s>
<s> in a multi-threaded program there is a fundamental indeterminacy you can’t be sure what order things will happen in </s>
<s> this indeterminacy is what makes parallel programming so diﬃcult! note that calling greetingsstart( ) is very diﬀerent from calling greetingsrun( ) calling greetingsrun( ) would execute the run( ) method in the same thread rather than creating a new thread </s>
<s> this means that all the work of the run( ) will be done before the computer moves on to the statements that follow the call to greetingsrun( ) </s>
<s> there is no parallelism and no indeterminacy 592 chapter 12 </s>
<s> threads and multiprocessing when a thread calls a subroutine there is still only one thread of control which is in the subroutine for a time then returns to the thread that called the subroutine thread of control time thread of control call subroutine when a thread starts another thread there is a new thread of control that runs in parallel with the original thread of control and can even continue after the original thread terminates start thread start thread return start thread call subroutine end end return end this discussion has assumed that the computer on which the program is running has more than one processing unit so that it is possible for the original thread and the newly created thread to literally be executed at the same time </s>
<s> however it’s possible to create multiple threads even on a computer that has only one processor ( and more generally it is possible to create many more threads than there are processors on any computer ) </s>
<s> in that case the two threads will compete for time on the processor </s>
<s> however there is still indeterminacy because the processor can switch from one thread to another at unpredictable times </s>
<s> in fact from the point of view of the programmer there is no diﬀerence between programming for a singleprocessor computer and programming for a multi-processor computer and we will pretty much ignore the distinction from now on ∗ ∗ ∗ i mentioned that there are two ways to program a thread </s>
<s> the ﬁrst way was to deﬁne a subclass of thread </s>
<s> the second is to deﬁne a class that implements the interface javalangrunnable </s>
<s> the runnable interface deﬁnes a single method public void run( ) given a runnable it is possible to create a thread whose task is to execute the runnable’s run( ) method the thread class has a constructor that takes a runnable as its parameter </s>
<s> when an object that implements the runnable interface is passed to that constructor the run( ) method of the thread will simply call the run( ) method from the runnable and calling the thread’s start( ) method will create a new thread of control in which the runnable’s run( ) method is executed for example as an alternative to the namedthread class we could deﬁne the class public class namedrunnable implements runnable { private string name // the name of this runnable public namedrunnable( string name ) { // constructor gives name to object thisname = name } public void run( ) { // the run method prints a message to standard output systemoutprintln( greetings from runnable ’ + name +’! ) } } 593 121 </s>
<s> introduction to threads to use this version of the class we would create a namedrunnable object and use that object to create an object of type thread namedrunnable greetings = new namedrunnable( fred ) thread greetingsthread = new thread( greetings ) greetingsthreadstart( ) the advantage of doing things this way is that any object can implement the runnable interface and can contain a run( ) method which can then be executed in a separate thread </s>
<s> that run( ) method has access to everything in the class including private variables and methods </s>
<s> the disadvantage is that this way of doing things is not very object-oriented it violates the principle that each object should have a single clearly-deﬁned responsibility </s>
<s> instead of making some random object runnable just so that you can use it to make a thread you can consider using a nested inner subclass of the thread class to deﬁne the thread ( see subsection 572 ) finally i’ll note that it is sometimes convenient to deﬁne a thread using an anonymous inner class ( subsection 573 ) </s>
<s> for example thread greetingsfromfred = new thread( ) { public void run( ) { systemoutprintln( greetings from fred! ) } } greetingsfromfredstart( ) ∗ ∗ ∗ to help you understand how multiple threads are executed in parallel we consider the sample program threadtest1java </s>
<s> this program creates several threads </s>
<s> each thread performs exactly the same task </s>
<s> the task is to count the number of integers less than 1000000 that are prime ( the particular task that is done is not important for our purposes here ) this computation should take less than a second on a modern computer </s>
<s> the threads that perform this task are deﬁned by the following static nested class /** * when a thread belonging to this class is run it will count the * number of primes between 2 and 1000000 </s>
<s> it will print the result * to standard output along with its id number and the elapsed * time between the start and the end of the computation */ private static class countprimesthread extends thread { int id // an id number for this thread specified in the constructor public countprimesthread( int id ) { thisid = id } public void run( ) { long starttime = systemcurrenttimemillis( ) int count = countprimes( 21000000 ) // counts the primes long elapsedtime = systemcurrenttimemillis( ) - starttime systemoutprintln( thread + id + counted + count + primes in + ( elapsedtime/10000 ) + seconds ) } } the main program asks the user how many threads to run and then creates and starts the speciﬁed number of threads 594 chapter 12 </s>
<s> threads and multiprocessing public static void main( string[] args ) { int numberofthreads = 0 while ( numberofthreads < 1 || numberofthreads > 25 ) { systemoutprint( how many threads do you want to use ( 1 to 25 ) ) numberofthreads = textiogetlnint( ) if ( numberofthreads < 1 || numberofthreads > 25 ) systemoutprintln( please enter a number between 1 and 25 ! ) } systemoutprintln( ncreating + numberofthreads + prime-counting threads ) countprimesthread[] worker = new countprimesthread[numberofthreads] for ( int i = 0 i < numberofthreads i++ ) worker[i] = new countprimesthread( i ) for ( int i = 0 i < numberofthreads i++ ) worker[i]start( ) systemoutprintln( threads have been created and started ) } it would be a good idea for you to compile and run the program or to try the applet version which can be found in the on-line version of this section when i ran the program with one thread on a rather old laptop it took 118 seconds for the computer to do the computation </s>
<s> when i ran it using six threads the output was creating 6 prime counting threads threads have been created and started thread 1 counted 78498 primes in 6706 thread 4 counted 78498 primes in 6693 thread 0 counted 78498 primes in 6838 thread 2 counted 78498 primes in 6825 thread 3 counted 78498 primes in 6893 thread 5 counted 78498 primes in 6859 seconds seconds seconds seconds seconds seconds the second line was printed immediately after the ﬁrst </s>
<s> at this point the main program has ended but the six threads continue to run </s>
<s> after a pause of about seven seconds all six threads completed at about the same time </s>
<s> the order in which the threads complete is not the same as the order in which they were started and the order is indeterminate </s>
<s> that is if the program is run again the order in which the threads complete will probably be diﬀerent on this computer six threads took about six times longer than one thread </s>
<s> this is because the computer had only one processor </s>
<s> six threads all doing the same task take six times as much processing as one thread </s>
<s> with only one processor to do the work the total elapsed time for six threads is about six times longer than the time for one thread </s>
<s> on a computer with two processors the computer can work on two tasks at the same time and six threads might complete in as little as three times the time it takes for one thread </s>
<s> on a computer with six or more processors six threads might take no more time than a single thread </s>
<s> because of overhead and other reasons the actual speedup will probably be a little smaller than this analysis indicates but on a multiprocessor machine you should see a deﬁnite speedup </s>
<s> what happens when you run the program on your own computer how many processors do you have whenever there are more threads to be run than there are processors to run them the computer divides its attention among all the runnable threads by switching rapidly from one thread to another </s>
<s> that is each processor runs one thread for a while then switches to another thread and runs that one for a while and so on </s>
<s> typically these context switches” occur about 100 times or more per second </s>
<s> the result is that the computer makes progress on all 595 121 </s>
<s> introduction to threads the tasks and it looks to the user as if all the tasks are being executed simultaneously </s>
<s> this is why in the sample program in which each thread has the same amount of work to do all the threads complete at about the same time over any time period longer than a fraction of a second the computer’s time is divided approximately equally among all the threads 1212 operations on threads much of java’s thread api can be found in the thread class </s>
<s> however we’ll start with a thread-related method in runtime a class that allows a java program to get information about the environment in which it is running </s>
<s> when you do parallel programming in order to spread the work among several processors you might want to take into account the number of available processors </s>
<s> you might for example want to create one thread for each processor </s>
<s> in java you can ﬁnd out the number of processors by calling the function runtimegetruntime( )availableprocessors( ) which returns an int giving the number of processors that are available to the java virtual machine </s>
<s> in some cases this might be less than the actual number of processors in the computer ∗ ∗ ∗ a thread object contains several useful methods for working with threads </s>
<s> most important is the start( ) method which was discussed above once a thread has been started it will continue to run until its run( ) method ends for some reason </s>
<s> sometimes it’s useful for one thread to be able to tell whether another thread has terminated </s>
<s> if thrd is an object of type thread then the boolean-valued function thrdisalive( ) can be used to test whether or not thrd has terminated </s>
<s> a thread is alive” between the time it is started and the time when it terminates </s>
<s> after the thread has terminated it is said to be dead” ( the rather gruesome metaphor is also used when we refer to killing” or aborting” a thread ) remember that a thread that has terminated cannot be restarted the static method threadsleep( milliseconds ) causes the thread that executes this method to sleep” for the speciﬁed number of milliseconds </s>
<s> a sleeping thread is still alive but it is not running </s>
<s> while a thread is sleeping the computer can work on any other runnable threads ( or on other programs ) </s>
<s> threadsleep( ) can be used to insert a pause in the execution of a thread </s>
<s> the sleep( ) method can throw an exception of type interruptedexception which is a checked exception that requires mandatory exception handling </s>
<s> in practice this means that the sleep( ) method is usually called inside a trycatch statement that catches the potential interruptedexception try { threadsleep( lengthofpause ) } catch ( interruptedexception e ) { } one thread can interrupt another thread to wake it up when it is sleeping or paused for certain other reasons </s>
<s> a thread thrd can be interrupted by calling the method thrdinterrupt( ) doing so can be a convenient way to send a signal from one thread to another </s>
<s> a thread knows it has been interrupted when it catches an interruptedexception </s>
<s> outside the catch handler for the exception the thread can check whether it has been interrupted by calling the static method threadinterrupted( ) </s>
<s> this method tells whether the current thread—the thread that executes the method—has been interrupted </s>
<s> it also has the unusual property of clearing 596 chapter 12 </s>
<s> threads and multiprocessing the interrupted status of the thread so you only get one chance to check for an interruption in your own programs your threads are not going to be interrupted unless you interrupt them so most often you are not likely to need to do anything in response to an interruptedexception ( except to catch it ) sometimes it’s necessary for one thread to wait for another thread to die </s>
<s> this is done with the join( ) method from the thread class </s>
<s> suppose that thrd is a thread </s>
<s> then if another thread calls thrdjoin( ) that other thread will go to sleep until thrd terminates </s>
<s> if thrd is already dead when thrdjoin( ) is called then it simply has no eﬀect </s>
<s> the join( ) method can throw an interruptedexception which must be handled as usual </s>
<s> as an example the following code starts several threads waits for them all to terminate and then outputs the elapsed time countprimesthread[] worker = new countprimesthread[numberofthreads] long starttime = systemcurrenttimemillis( ) for ( int i = 0 i < numberofthreads i++ ) { worker[i] = new countprimesthread( ) worker[i]start( ) } for ( int i = 0 i < numberofthreads i++ ) { try { worker[i]join( ) // wait until worker[i] finishes if it hasn’t already } catch ( interruptedexception e ) { } } // at this point all the worker threads have terminated long elapsedtime = systemcurrenttimemillis( ) - starttime systemoutprintln( total elapsed time + ( elapsedtime/10000 ) + seconds ) an observant reader will note that this code assumes that no interruptedexception will occur to be absolutely sure that the thread worker[i] has terminated in an environment where interruptedexceptions are possible you would have to do something like while ( worker[i]isalive( ) ) { try { worker[i]join( ) } catch ( interruptedexception e ) { } } another version of the join( ) method takes an integer parameter that speciﬁes the maximum number of milliseconds to wait </s>
<s> a call to thrdjoin( m ) will wait until either thrd has terminated or until m milliseconds have elapsed </s>
<s> this can be used to allow a thread to wake up occasionally to perform some task while it is waiting </s>
<s> here for example is a code segment that will start a thread thrd and then will output a period every two seconds as long as thrd continues to run systemoutprint( running the thread ) thrdstart( ) while ( thrdisalive( ) ) { try { thrdjoin( 2000 ) systemoutprint( ) } 597 121 </s>
<s> introduction to threads catch ( interruptedexception e ) { } } systemoutprintln( done! ) ∗ ∗ ∗ threads have two properties that are occasionally useful a daemon status and a priority </s>
<s> a thread thrd can be designated as a daemon thread by calling thrdsetdaemon( true ) </s>
<s> this must be done before the thread is started and it can throw an exception of type securityexception if the calling thread is not allowed to modify thrd’s properties </s>
<s> this has only one eﬀect the java virtual machine will exit as soon as there are no non-daemon threads that are still alive </s>
<s> that is the fact that a daemon thread is still alive is not enough to keep the java virtual machine running </s>
<s> a daemon thread might exist for example only to provide some service to other non-daemon threads </s>
<s> when there are no more non-daemon threads there will be no further call for the daemon thread’s services so the program might as well shut down the priority of a thread is a more important property </s>
<s> every thread has a priority speciﬁed as an integer </s>
<s> a thread with a greater priority value will be run in preference to a thread with a smaller priority </s>
<s> for example computations that can be done in the background when no more important thread has work to do can be run with a low priority </s>
<s> in the next section we will see how this can be useful in gui programs </s>
<s> if thrd is of type thread then thrdgetpriority( ) returns the integer that speciﬁes thrd’s priority and thrdsetpriority( p ) can be used to set its priority to a given integer p priorities cannot be arbitrary integers and thrdsetpriority( ) will throw an illegalargumentexception if the speciﬁed priority is not in the legal range for the thread </s>
<s> the range of legal priority values can diﬀer from one computer to another </s>
<s> the range of legal values is speciﬁed by the constants threadmin priority and threadmax priority but a given thread might be further restricted to values less than threadmax priority </s>
<s> the default priority is given by threadnorm priority </s>
<s> to set thrd to run with a priority value just below the normal priority you can call thrdsetpriority( threadnorm priority - 1 ) note that thrdsetpriority( ) can also throw an exception of type securityexception if the thread that calls the method is not allowed to set the priority of thrd finally i’ll note that the static method threadcurrentthread( ) returns the current thread </s>
<s> that is the return value of this method is the thread that executed the method this allows a thread to get a reference to itself so that it can modify its own properties </s>
<s> for example you can determine the priority of the currently running thread by calling threadcurrentthread( )getpriority( ) 1213 mutual exclusion with synchronized” it’s pretty easy to program several threads to carry out completely independent tasks </s>
<s> the real diﬃculty arises when threads have to interact in some way </s>
<s> one way that threads interact is by sharing resources </s>
<s> when two threads need access to the same resource such as a variable or a window on the screen some care must be taken that they don’t try to use the same resource at the same time </s>
<s> otherwise the situation could be something like this imagine several cooks sharing the use of just one measuring cup and imagine that cook a ﬁlls the measuring cup with milk only to have cook b grab the cup before cook a has a chance to empty the milk 598 chapter 12 </s>
<s> threads and multiprocessing into his bowl </s>
<s> there has to be some way for cook a to claim exclusive rights to the cup while he performs the two operations add-milk-to-cup and empty-cup-into-bowl something similar happens with threads even with something as simple as adding one to a counter </s>
<s> the statement count = count + 1 is actually a sequence of three operations step 1 step 2 step 3 get the value of count add 1 to the value store the new value in count suppose that several threads perform these three steps </s>
<s> remember that it’s possible for two threads to run at the same time and even if there is only one processor it’s possible for that processor to switch from one thread to another at any point </s>
<s> suppose that while one thread is between step 2 and step 3 another thread starts executing the same sequence of steps </s>
<s> since the ﬁrst thread has not yet stored the new value in count the second thread reads the old value of count and adds one to that old value </s>
<s> both threads have computed the same new value for count and both threads then go on to store that value back into count by executing step 3 </s>
<s> after both threads have done so the value of count has gone up only by 1 instead of by 2! this type of problem is called a race condition </s>
<s> this occurs when one thread is in the middle of a multi-step operation and another thread can change some value or condition that the ﬁrst thread is depending upon ( the ﬁrst thread is in a race” to complete all the steps before it is interrupted by another thread ) another example of a race condition can occur in an if statement </s>
<s> consider the following statement which is meant to avoid a division-by-zero error if ( a != 0 ) b = c / a suppose that this statement is executed by some thread </s>
<s> if the variable a is shared by one or more other threads and if nothing is done to guard against the race condition then it is possible that one of those other threads will change the value of a to zero between the time that the ﬁrst thread checks the condition a != 0 and the time that it does the division </s>
<s> this means that the thread can end up dividing by zero even though it just checked that a was not zero! to ﬁx the problem of race conditions there has to be some way for a thread to get exclusive access to a shared resource </s>
<s> this is not a trivial thing to implement but java provides a highlevel and relatively easy-to-use approach to exclusive access </s>
<s> it’s done with synchronized methods and with the synchronized statement </s>
<s> these are used to protect shared resources by making sure that only one thread at a time will try to access the resource </s>
<s> synchronization in java actually provides only mutual exclusion which means that exclusive access to a resource is only guaranteed if every thread that needs access to that resource uses synchronization synchronization is like a cook leaving a note that says i’m using the measuring cup” this will get the cook exclusive access to the cup—but only if all the cooks agree to check the note before trying to grab the cup because this is a diﬃcult topic i will start with a simple example </s>
<s> suppose that we want to avoid the race condition that occurs when several threads all want to add 1 to a counter </s>
<s> we can do this by deﬁning a class to represent the counter and by using synchronized methods in that class </s>
<s> a method is declared to be synchronized by adding the reserved word synchronized as a modiﬁer to the deﬁnition of the method 121 </s>
<s> introduction to threads 599 public class threadsafecounter { private int count = 0 // the value of the counter synchronized public void increment( ) { count = count + 1 } synchronized public int getvalue( ) { return count } } if tsc is of type threadsafecounter then any thread can call tscincrement( ) to add 1 to the counter in a completely safe way </s>
<s> the fact that tscincrement( ) is synchronized means that only one thread can be in this method at a time once a thread starts executing this method it is guaranteed that it will ﬁnish executing it without having another thread change the value of tsccount in the meantime </s>
<s> there is no possibility of a race condition </s>
<s> note that the guarantee depends on the fact that count is a private variable </s>
<s> this forces all access to tsccount to occur in the synchronized methods that are provided by the class </s>
<s> if count were public it would be possible for a thread to bypass the synchronization by for example saying tsccount++ </s>
<s> this could change the value of count while another thread is in the middle of tscincrement( ) </s>
<s> remember that synchronization by itself does not guarantee exclusive access it only guarantees mutual exclusion among all the threads that are synchronized the threadsafecounter class does not prevent all possible race conditions that might arise when using a counter </s>
<s> consider the if statement if ( tscgetvalue( ) == 0 ) dosomething( ) where dosomething( ) is some method that requires the value of the counter to be zero </s>
<s> there is still a race condition here which occurs if a second thread increments the counter between the time the ﬁrst thread tests tscgetvalue( ) == 0 and the time it executes dosomething( ) the ﬁrst thread needs exclusive access to the counter during the execution of the whole if statement ( the synchronization in the threadsafecounter class only gives it exclusive access during the time it is evaluating tscgetvalue( ) ) we can solve the race condition by putting the if statement in a synchronized statement synchronized( tsc ) { if ( tscgetvalue( ) == 0 ) dosomething( ) } note that the synchronized statement takes an object—tsc in this case—as a kind of parameter </s>
<s> the syntax of the synchronized statement is synchronized( object statements } ) { in java mutual exclusion is always associated with an object we say that the synchronization is on” that object </s>
<s> for example the if statement above is synchronized on tsc” a synchronized instance method such as those in the class threadsafecounter is synchronized on the object that contains the instance method </s>
<s> in fact adding the synchronized modiﬁer to the 600 chapter 12 </s>
<s> threads and multiprocessing deﬁnition of an instance method is pretty much equivalent to putting the body of the method in a synchronized statement of the form synchronized( this ) {} </s>
<s> it is also possible to have synchronized static methods a synchronized static method is synchronized on the special class object that represents the class containing the static method the real rule of synchronization in java is this two threads cannot be synchronized on the same object at the same time that is they cannot simultaneously be executing code segments that are synchronized on that object </s>
<s> if one thread is synchronized on an object and a second thread tries to synchronize on the same object the second thread is forced to wait until the ﬁrst thread has ﬁnished with the object </s>
<s> this is implemented using something called a synchronization lock </s>
<s> every object has a synchronization lock and that lock can be held” by only one thread at a time </s>
<s> to enter a synchronized statement or synchronized method a thread must obtain the associated object’s lock </s>
<s> if the lock is available then the thread obtains the lock and immediately begins executing the synchronized code </s>
<s> it releases the lock after it ﬁnishes executing the synchronized code </s>
<s> if thread a tries to obtain a lock that is already held by thread b then thread a has to wait until thread b releases the lock in fact thread a will go to sleep and will not be awoken until the lock becomes available ∗ ∗ ∗ as a simple example of shared resources we return to the prime-counting problem </s>
<s> in this case instead of having every thread perform exactly the same task we’ll do some real parallel processing </s>
<s> the program will count the prime numbers in a given range of integers and it will do so by dividing the work up among several threads </s>
<s> each thread will be assigned a part of the full range of integers and it will count the primes in its assigned part </s>
<s> at the end of its computation the thread has to add its count to the overall total of primes in the entire range the variable that represents the total is shared by all the threads since each thread has to add a number to the total </s>
<s> if each thread just says total = total + count then there is a ( small ) chance that two threads will try to do this at the same time and that the ﬁnal total will be wrong </s>
<s> to prevent this race condition access to total has to be synchronized my program uses a synchronized method to add the counts to the total </s>
<s> this method is called once by each thread synchronized private static void addtototal( int x ) { total = total + x systemoutprintln( total + primes found so far ) } the source code for the program can be found in threadtest2java </s>
<s> this program counts the primes in the range 3000001 to 6000000 ( the numbers are rather arbitrary ) the main( ) routine in this program creates between 1 and 5 threads and assigns part of the job to each thread </s>
<s> it waits for all the threads to ﬁnish using the join( ) method as described above </s>
<s> it then reports the total number of primes found along with the elapsed time </s>
<s> note that join( ) is required here since it doesn’t make sense to report the number of primes until all of the threads have ﬁnished if you run the program on a multiprocessor computer it should take less time for the program to run when you use more than one thread </s>
<s> you can compile and run the program or try the equivalent applet in the on-line version of this section ∗ ∗ ∗ 121 </s>
<s> introduction to threads 601 synchronization can help to prevent race conditions but it introduces the possibility of another type of error deadlock </s>
<s> a deadlock occurs when a thread waits forever for a resource that it will never get </s>
<s> in the kitchen a deadlock might occur if two very simple-minded cooks both want to measure a cup of milk at the same time </s>
<s> the ﬁrst cook grabs the measuring cup while the second cook grabs the milk </s>
<s> the ﬁrst cook needs the milk but can’t ﬁnd it because the second cook has it </s>
<s> the second cook needs the measuring cup but can’t ﬁnd it because the ﬁrst cook has it </s>
<s> neither cook can continue and nothing more gets done </s>
<s> this is deadlock exactly the same thing can happen in a program for example if there are two threads ( like the two cooks ) both of which need to obtain locks on the same two objects ( like the milk and the measuring cup ) before they can proceed </s>
<s> deadlocks can easily occur unless great care is taken to avoid them 1214 volatile variables synchronization is only one way of controlling communication among threads </s>
<s> we will cover several other techniques later in the chapter </s>
<s> for now we ﬁnish this section with one more communication technique volatile variables in general threads communicate by sharing variables and accessing those variables in synchronized methods or synchronized statements </s>
<s> however synchronization is fairly expensive computationally and excessive use of it should be avoided </s>
<s> so in some cases it can make sense for threads to refer to shared variables without synchronizing their access to those variables however a subtle problem arises when the value of a shared variable is set in one thread and used in another </s>
<s> because of the way that threads are implemented in java the second thread might not see the changed value of the variable immediately </s>
<s> that is it is possible that a thread will continue to see the old value of the shared variable for some time after the value of the variable has been changed by another thread </s>
<s> this is because threads are allowed to cache shared data </s>
<s> that is each thread can keep its own local copy of the shared data </s>
<s> when one thread changes the value of a shared variable the local copies in the caches of other threads are not immediately changed so the other threads can continue to see the old value at least brieﬂy when a synchronized method or statement is entered threads are forced to update their caches to the most current values of the variables in the cache </s>
<s> so using shared variables in synchronized code is always safe it is possible to use a shared variable safely outside of synchronized code but in that case the variable must be declared to be volatile </s>
<s> the volatile keyword is a modiﬁer that can be added to a variable declaration as in private volatile int count if a variable is declared to be volatile no thread will keep a local copy of that variable in its cache </s>
<s> instead the thread will always use the oﬃcial main copy of the variable </s>
<s> this means that any change that is made to the variable will immediately be visible to all threads </s>
<s> this makes it safe for threads to refer to volatile shared variables even outside of synchronized code </s>
<s> access to volatile variables is less eﬃcient than access to non-volatile variables but more eﬃcient than using synchronization ( remember though that synchronization is still the only way to prevent race conditions ) when the volatile modiﬁer is applied to an object variable only the variable itself is declared to be volatile not the contents of the object that the variable points to </s>
<s> for this 602 chapter 12 </s>
<s> threads and multiprocessing reason volatile is used mostly for variables of simple types such as primitive types and enumerated types a typical example of using volatile variables is to send a signal from one thread to another that tells the second thread to terminate </s>
<s> the two threads would share a variable volatile boolean terminate = false the run method of the second thread would check the value of terminate frequently and it would end when the value of terminate becomes true public void run( ) { while ( terminate == false ) { // do some work } } this thread will run until some other thread sets the value of terminate to true </s>
<s> something like this is really the only clean way for one thread to cause another thread to die ( by the way you might be wondering why threads should use local data caches in the ﬁrst place since it seems to complicate things unnecessarily </s>
<s> caching is allowed because of the structure of multiprocessing computers </s>
<s> in many multiprocessing computers each processor has some local memory that is directly connected to the processor </s>
<s> a thread’s cache can be stored in the local memory of the processor on which the thread is running </s>
<s> access to this local memory is much faster than access to other memory so it is more eﬃcient for a thread to use a local copy of a shared variable rather than some master copy” that is stored in non-local memory ) 122 programming with threads threads introduce new complexity into programming but they are an important tool and will only become more essential in the future </s>
<s> so every programmer should know some of the fundamental design patterns that are used with threads </s>
<s> in this section we will look at some basic techniques with more to come as the chapter progresses 1221 threads versus timers one of the most basic uses of threads is to perform some period task at set intervals </s>
<s> in fact this is so basic that there is a specialized class for performing this task—and you’ve already worked with it </s>
<s> the timer class in package javaxswing can generate a sequence of actionevents separated by a speciﬁed time interval </s>
<s> timers were introduced in section 65 where they were used to implement animations </s>
<s> behind the scenes a timer uses a thread </s>
<s> the thread sleeps most of the time but it wakes up periodically to generate the events associated with the timer </s>
<s> before timers were introduced threads had to be used directly to implement a similar functionality in a typical use of a timer for animation each event from the timer causes a new frame of the animation to be computed and displayed </s>
<s> in the response to the event it is only necessary to update some state variables and to repaint the display to reﬂect the changes </s>
<s> a timer to do that every thirty milliseconds might be created like this 122 </s>
<s> programming with threads 603 timer timer = new timer( 30 new actionlistener( ) { public void actionperformed( actionevent evt ) { updatefornextframe( ) displayrepaint( ) } } ) timerstart( ) suppose that we wanted to do the same thing with a thread </s>
<s> the run( ) method of the thread would have to execute a loop in which the thread sleeps for 30 milliseconds then wakes up to do the updating and repainting </s>
<s> this could be implemented in a nested class as follows using the method threadsleep( ) that was discussed in subsection 1212 private class animator extends thread { public void run( ) { while ( true ) { try { threadsleep( 30 ) } catch ( interruptedexception e ) { } updatefornextframe( ) displayrepaint( ) } } } to run the animation you would create an object belonging to this class and call its start( ) method </s>
<s> as it stands there would be no way to stop the animation once it is started </s>
<s> one way to make it possible to stop the animation would be to end the loop when a volatile boolean variable terminate becomes true as discussed in subsection 1214 </s>
<s> since thread objects can only be executed once in order to restart the animation after it has been stopped it would be necessary to create a new thread </s>
<s> in the next section we’ll see some more versatile techniques for controlling threads there is a subtle diﬀerence between using threads and using timers for animation </s>
<s> the thread that is used by a swing timer does nothing but generate events </s>
<s> the event-handling code that is executed in response to those events is actually executed in the swing eventhandling thread which also handles repainting of components and responses to user actions this is important because the swing gui is not thread-safe </s>
<s> that is it does not use synchronization to avoid race conditions among threads trying to access gui components and their state variables </s>
<s> as long as everything is done in the swing event thread there is no problem </s>
<s> a problem can arise when another thread manipulates components or the variables that they use </s>
<s> in the animator example given above this could happen when the thread calls the updatefornextframe( ) method </s>
<s> the variables that are modiﬁed in updatefornextframe( ) would also be used by the paintcomponent( ) method that draws the frame </s>
<s> there is a race condition here if these two methods are being executed simultaneously there is a possibility that paintcomponent( ) will use inconsistent variable values—some appropriate for the new frame some for the previous frame one solution to this problem would be to declare both paintcomponent( ) and updatefornextframe( ) to be synchronized methods </s>
<s> the real solution in this case is to use a timer rather than a thread </s>
<s> in practice race conditions are not likely to be an issue for 604 chapter 12 </s>
<s> threads and multiprocessing simple animations even if they are implemented using threads </s>
<s> but it can become a real issue when threads are used for more complex tasks i should note that the repaint( ) method of a component can be safely called from any thread without worrying about synchronization </s>
<s> recall that repaint( ) does not actually do any painting itself </s>
<s> it just tells the system to schedule a paint event </s>
<s> the actual painting will be done later in the swing event-handling thread </s>
<s> i will also note that java has another timer class javautiltimer that is appropriate for use in non-gui programs the sample program randomartwiththreadsjava uses a thread to drive a very simple animation </s>
<s> you can compare it to randomartpaneljava from section 65 which implemented the same animation with a timer 1222 recursion in a thread although timers should be used in preference to threads when possible there are times when it is reasonable to use a thread even for a straightforward animation </s>
<s> one reason to do so is when the thread is running a recursive algorithm and you want to repaint the display many times over the course of the recursion ( recursion is covered in section 91 ) it’s diﬃcult to drive a recursive algorithm with a series of events from a timer it’s much more natural to use a single recursive method call to do the recursion and it’s easy to do that in a thread as an example the program quicksortthreaddemojava uses an animation to illustrate the recursive quicksort algorithm for sorting an array </s>
<s> in this case the array contains colors and the goal is to sort the colors into a standard spectrum from red to violet </s>
<s> you can see the program as an applet in the on-line version of this section </s>
<s> in the program the user randomizes the array and starts the sorting process by clicking the start” button below the display </s>
<s> the start” button changes to a finish” button that can be used to abort the sort before it ﬁnishes on its own in this program the display’s repaint( ) method is called every time the algorithm makes a change to the array </s>
<s> whenever this is done the thread sleeps for 100 milliseconds to allow time for the display to be repainted and for the user to see the change </s>
<s> there is also a longer delay one full second just after the array is randomized before the sorting starts </s>
<s> since these delays occur at several points in the code quicksortthreaddemo deﬁnes a delay( ) method that makes the thread that calls it sleep for a speciﬁed period </s>
<s> the delay( ) method calls displayrepaint( ) just before sleeping </s>
<s> while the animation thread sleeps the event-handling thread will have a chance to run and will have plenty of time to repaint the display an interesting question is how to implement the finish” button which should abort the sort and terminate the thread </s>
<s> pressing this button causes the value of a volatile boolean variable running to be set to false as a signal to the thread that it should terminate </s>
<s> the problem is that this button can be clicked at any time even when the algorithm is many levels down in the recursion </s>
<s> before the thread can terminate all of those recursive method calls must return </s>
<s> a nice way to cause that is to throw an exception </s>
<s> quicksortthreaddemo deﬁnes a new exception class threadterminationexception for this purpose </s>
<s> the delay( ) method checks the value of the signal variable running </s>
<s> if running is false the delay( ) method throws the exception that will cause the recursive algorithm and eventually the animation thread itself to terminate </s>
<s> here then is the delay( ) method private void delay( int millis ) { if ( ! running ) throw new threadterminationexception( ) displayrepaint( ) 122 </s>
<s> programming with threads 605 try { threadsleep( millis ) } catch ( interruptedexception e ) { } if ( ! running ) // check again in case it changed during the sleep period throw new threadterminationexception( ) } the threadterminationexception is caught in the thread’s run( ) method /** * this class defines the threads that run the recursive * quicksort algorithm </s>
<s> the thread begins by randomizing the * array hue </s>
<s> it then calls quicksort( ) to sort the entire array * if quicksort( ) is aborted by a threadterminationexception * which would be caused by the user clicking the finish button * then the thread will restore the array to sorted order before * terminating so that whether or not the quicksort is aborted * the array ends up sorted */ private class runner extends thread { public void run( ) { try { for ( int i = huelength-1 i > 0 i -- ) { // randomize array int r = ( int )( ( i+1 )*mathrandom( ) ) int temp = hue[r] hue[r] = hue[i] hue[i] = temp } delay( 1000 ) // wait one second before starting the sort quicksort( 0huelength-1 ) // sort the whole array recursively } catch ( threadterminationexception e ) { // user clicked finish for ( int i = 0 i < huelength i++ ) hue[i] = i } finally {// make sure running is false and button label is correct running = false startbuttonsettext( start ) displayrepaint( ) } } } the program uses a variable runner of type runner to represent the thread that does the sorting </s>
<s> when the user clicks the start” button the following code is executed to create and start the thread startbuttonsettext( finish ) runner = new runner( ) running = true // set the signal before starting the thread! runnerstart( ) 606 chapter 12 </s>
<s> threads and multiprocessing note that the value of the signal variable running is set to true before starting the thread if running were false when the thread was started the thread might see that value as soon as it starts and interpret it as a signal to stop before doing anything </s>
<s> remember that when runnerstart( ) is called runner starts running in parallel with the thread that called it stopping the thread is a little more interesting because the thread might be sleeping when the finish” button is pressed </s>
<s> the thread has to wake up before it can act on the signal that it is to terminate </s>
<s> to make the thread a little more responsive we can call runnerinterrupt( ) which will wake the thread if it is sleeping ( see subsection 1212 ) this doesn’t have much practical eﬀect in this program but it does make the program respond noticeably more quickly if the user presses finish” immediately after pressing start” while the thread is sleeping for a full second 1223 threads for background computation in order for a gui program to be responsive—that is to respond to events very soon after they are generated—it’s important that event-handling methods in the program ﬁnish their work very quickly </s>
<s> remember that events go into a queue as they are generated and the computer cannot respond to an event until after the event-handler methods for previous events have done their work </s>
<s> this means that while one event handler is being executed other events will have to wait </s>
<s> if an event handler takes a while to run the user interface will eﬀectively freeze up during that time </s>
<s> this can be very annoying if the delay is more than a fraction of a second fortunately modern computers can do an awful lot of computation in a fraction of a second however some computations are too big to be done in event handlers </s>
<s> the solution in that case is to do the computation in another thread that runs in parallel with the event-handling thread </s>
<s> this makes it possible for the computer to respond to user events even while the computation is ongoing </s>
<s> we say that the computation is done in the background” note that this application of threads is very diﬀerent from the previous example </s>
<s> when a thread is used to drive a simple animation it actually does very little work </s>
<s> the thread only has to wake up several times each second do a few computations to update state variables for the next frame of the animation and call repaint( ) to cause the next frame to be displayed there is plenty of time while the thread is sleeping for the computer to redraw the display and handle any other events generated by the user when a thread is used for background computation however we want to keep the computer as busy as possible working on the computation </s>
<s> the thread will compete for processor time with the event-handling thread if you are not careful event-handling—repainting in particular—can still be delayed </s>
<s> fortunately you can use thread priorities to avoid the problem by setting the computation thread to run at a lower priority than the event-handling thread you make sure that events will be processed as quickly as possible while the computation thread will get all the extra processing time </s>
<s> since event handling generally uses very little processing time this means that most of the processing time goes to the background computation but the interface is still very responsive ( thread priorities were discussed in subsection 1212 ) the sample program backgroundcomputationdemojava is an example of background processing </s>
<s> this program creates an image that takes some time to compute </s>
<s> the program uses some techniques for working with images that will not be covered until subsection 1311 for now all that you need to know is that it takes some computation to compute the color of each pixel in the image </s>
<s> the image itself is a piece of a mathematical object known as the mandelbrot set </s>
<s> we will use the same image in several examples in this chapter and will return to the mandelbrot set in section 135 122 </s>
<s> programming with threads 607 in outline backgroundcomputationdemo is similar to the quicksortthreaddemo discussed above </s>
<s> the computation is done in a thread deﬁned by a nested class runner </s>
<s> a volatile boolean variable running is used to control the thread </s>
<s> if the value of running is set to false the thread should terminate </s>
<s> the sample program has a button that the user clicks to start and to abort the computation </s>
<s> the diﬀerence is that the thread in this case is meant to run continuously without sleeping </s>
<s> to allow the user to see that progress is being made in the computation ( always a good idea ) every time the thread computes a row of pixels it copies those pixels to the image that is shown on the screen </s>
<s> the user sees the image being built up line-by-line when the computation thread is created in response to the start” button we need to set it to run at a priority lower than the event-handling thread </s>
<s> the code that creates the thread is itself running in the event-handling thread so we can use a priority that is one less than the priority of the thread that is executing the code </s>
<s> note that the priority is set inside a trycatch statement </s>
<s> if an error occurs while trying to set the thread priority the program will still work though perhaps not as smoothly as it would if the priority was correctly set here is how the thread is created and started runner = new runner( ) try { runnersetpriority( threadcurrentthread( )getpriority( ) - 1 ) } catch ( exception e ) { systemoutprintln( error can’t set thread priority + e ) } running = true // set the signal before starting the thread! runnerstart( ) the other major point of interest in this program is that we have two threads that are both using the object that represents the image </s>
<s> the computation thread accesses the image in order to set the color of its pixels </s>
<s> the event-handling thread accesses the same image when it copies the image to the screen </s>
<s> since the image is a resource that is shared by several threads access to the image object should be synchronized </s>
<s> when the paintcomponent( ) method copies the image to the screen ( using a method that we have not yet covered ) it does so in a synchronized statement synchronized( image ) { gdrawimage( image00null ) } when the computation thread sets the colors of a row of pixels ( using another unfamiliar method ) it also uses synchronized synchronized( image ) { imagesetrgb( 0row width 1 rgb 0 width ) } note that both of these statements are synchronized on the same object image </s>
<s> this is essential </s>
<s> in order to prevent the two code segments from being executed simultaneously the synchronization must be on the same object </s>
<s> i use the image object here because it is convenient but just about any object would do it is not required that you synchronize on the object to which you are trying to control access although backgroundcomputationdemo works ok there is one problem the goal is to get the computation done as quickly as possible using all available processing time </s>
<s> the program 608 chapter 12 </s>
<s> threads and multiprocessing accomplishes that goal on a computer that has only one processor </s>
<s> but on a computer that has several processors we are still using only one of those processors for the computation </s>
<s> it would be nice to get all the processors working on the problem </s>
<s> to do that we need real parallel processing with several computation threads </s>
<s> we turn to that problem next 1224 threads for multiprocessing our next example multiprocessingdemo1java is a variation on backgroundcomputationdemo instead of doing the computation in a single thread multiprocessingdemo1 can divide the problem among several threads </s>
<s> the user can select the number of threads to be used </s>
<s> each thread is assigned one section of the image to compute </s>
<s> the threads perform their tasks in parallel </s>
<s> for example if there are two threads the ﬁrst thread computes the top half of the image while the second thread computes the bottom half </s>
<s> here is picture of the program in the middle of a computation using three threads </s>
<s> the gray areas represent parts of the image that have not yet been computed you should try out the program </s>
<s> an applet version is on-line </s>
<s> on a multi-processor computer the computation will complete more quickly when using several threads than when using just one </s>
<s> note that when using one thread this program has the same behavior as the previous example program the approach used in this example for dividing up the problem among threads is not optimal we will see in the next section how it can be improved </s>
<s> however multiprocessingdemo1 makes a good ﬁrst example of multiprocessing when the user clicks the start” button the program has to create and start the speciﬁed number of threads and it has to assign a segment of the image to each thread </s>
<s> here is how this is done workers = new runner[threadcount] // holds the computation threads int rowsperthread // how many rows of pixels should each thread compute rowsperthread = height / threadcount // ( height = vertical size of image ) running = true // set the signal before starting the threads! threadscompleted = 0 // records how many of the threads have terminated for ( int i = 0 i < threadcount i++ ) { int startrow // first row computed by thread number i int endrow // last row computed by thread number i 122 </s>
<s> programming with threads 609 // create and start a thread to compute the rows of the image from // startrow to endrow </s>
<s> note that we have to make sure that // the endrow for the last thread is the bottom row of the image startrow = rowsperthread*i if ( i == threadcount-1 ) endrow = height-1 else endrow = rowsperthread*( i+1 ) - 1 workers[i] = new runner( startrow endrow ) try { workers[i]setpriority( threadcurrentthread( )getpriority( ) - 1 ) } catch ( exception e ) { } workers[i]start( ) } beyond creating more than one thread very few changes are needed to get the beneﬁts of multiprocessing </s>
<s> just as in the previous example each time a thread has computed the colors for a row of pixels it copies that row into the image and synchronization is used in exactly the same way to control access to the image one thing is new however </s>
<s> when all the threads have ﬁnished running the name of the button in the program changes from abort” to start again” and the pop-up menu which has been disabled while the threads were running is re-enabled </s>
<s> the problem is how to tell when all the threads have terminated ( you might think about why we can’t use join( ) to wait for the threads to end as was done in the example in subsection 1212 at least we can’t do that in the event-handling thread! ) in this example i use an instance variable threadscompleted to keep track of how many threads have terminated so far </s>
<s> as each thread ﬁnishes it calls a method that adds one to the value of this variable ( the method is called in the finally clause of a try statement to make absolutely sure that it is called ) when the number of threads that have ﬁnished is equal to the number of threads that were created the method updates the state of the program appropriately </s>
<s> here is the method synchronized private void threadfinished( ) { threadscompleted++ if ( threadscompleted == workerslength ) { // all threads have finished startbuttonsettext( start again ) startbuttonsetenabled( true ) running = false // make sure running is false after the threads end workers = null // discard the array that holds the threads threadcountselectsetenabled( true ) // re-enable pop-up menu } } note that this method is synchronized </s>
<s> this is to avoid the race condition when threadscompleted is incremented </s>
<s> without the synchronization it is possible that two threads might call the method at the same time </s>
<s> if the timing is just right both threads could read the same value for threadscompleted and get the same answer when they increment it </s>
<s> the net result will be that threadscompleted goes up by one instead of by two </s>
<s> one thread is not properly counted and threadscompleted will never become equal to the number of threads created </s>
<s> the program would hang in a kind of deadlock </s>
<s> the problem would occur only very 610 chapter 12 </s>
<s> threads and multiprocessing rarely since it depends on exact timing </s>
<s> but in a large program problems of this sort can be both very serious and very hard to debug </s>
<s> proper synchronization makes the error impossible 123 threads and parallel processing the example at the end of the previous section used parallel processing to execute pieces of a large task </s>
<s> on a computer that has several processors this allows the computation to be completed more quickly </s>
<s> however the way that the program divided up the computation into subtasks was not optimal </s>
<s> nor was the way that the threads were managed </s>
<s> in this section we will look at two more versions of that program </s>
<s> the ﬁrst improves the way the problem is decomposed into subtasks </s>
<s> the second improves the way threads are used </s>
<s> along the way i’ll introduce a couple of built-in classes that java provides to support parallel processing </s>
<s> later in the section i will cover wait( ) and notify( ) lower-level methods that can be used to control parallel processes more directly 1231 problem decomposition the sample program multiprocessingdemo1java divides the task of computing an image into several subtasks and assigns each subtask to a thread </s>
<s> while this works ok there is a problem some of the subtasks might take substantially longer than others </s>
<s> the program divides the image up into equal parts but the fact is that some parts of the image require more computation than others </s>
<s> in fact if you run the program with three threads you’ll notice that the middle piece takes longer to compute than the top or bottom piece </s>
<s> in general when dividing a problem into subproblems it is very hard to predict just how much time it will take to solve each subproblem </s>
<s> let’s say that one particular subproblem happens to take a lot longer than all the others </s>
<s> the thread that computes that subproblem will continue to run for a relatively long time after all the other threads have completed </s>
<s> during that time only one of the computer’s processors will be working the rest will be idle as a simple example suppose that your computer has two processors </s>
<s> you divide the problem into two subproblems and create a thread to run each subproblem your hope is that by using both processors you can get your answer in half the time that it would take when using one processor </s>
<s> but if one subproblem takes four times longer than the other to solve then for most of the time only one processor will be working </s>
<s> in this case you will only have cut the time needed to get your answer by 20% even if you manage to divide your problem into subproblems that require equal amounts of computation you still can’t depend on all the subproblems requiring equal amounts of time to solve </s>
<s> for example some of the processors on your computer might be busy running other programs </s>
<s> or perhaps some of the processors are simply slower than others ( this is not so likely when running your computation on a single computer but when distributing computation across several networked computers as we will do later in this chapter diﬀerences in processor speed can be a major issue ) the common technique for dealing with all this is to divide the problem into a fairly large number of subproblems—many more subproblems than there are processors </s>
<s> this means that each processor will have to solve several subproblems </s>
<s> each time a processor completes one subtask it is assigned another subtask to work on until all the subtasks have been assigned </s>
<s> of course there will still be variation in the time that the various subtasks require </s>
<s> one processor might complete several subproblems while another works on one particularly diﬃcult case </s>
<s> and 123 </s>
<s> threads and parallel processing 611 a slow or busy processor might complete only one or two subproblems while another processor ﬁnishes ﬁve or six </s>
<s> each processor can work at its own pace </s>
<s> as long as the subproblems are fairly small most of the processors can be kept busy until near the end of the computation this is known as load balancing the computational load is balanced among the available processors in order to keep them all as busy as possible </s>
<s> of course some processors will still ﬁnish before others but not by longer than the time it takes to complete the longest subtask while the subproblems should be small they should not be too small </s>
<s> there is some computational overhead involved in creating the subproblems and assigning them to processors if the subproblems are very small this overhead can add signiﬁcantly to the total amount of work that has to be done </s>
<s> in my example program the task is to compute a color for each pixel in an image </s>
<s> for dividing that task up into subtasks one possibility would be to have each subtask compute just one pixel </s>
<s> but the subtasks produced in that way are probably too small </s>
<s> so instead each subtask in my program will compute the colors for one row of pixels since there are several hundred rows of pixels in the image the number of subtasks will be fairly large while each subtask will also be fairly large </s>
<s> the result is fairly good load balancing with a reasonable amount of overhead note by the way that the problem that we are working on is a very easy one for parallel programming </s>
<s> when we divide the problem of calculating an image into subproblems all the subproblems are completely independent </s>
<s> it is possible to work on any number of them simultaneously and they can be done in any order </s>
<s> things get a lot more complicated when some subtasks produce results that are required by other subtasks </s>
<s> in that case the subtasks are not independent and the order in which the subtasks are performed is important </s>
<s> furthermore there has to be some way for results from one subtask to be shared with other tasks </s>
<s> when the subtasks are executed by diﬀerent threads this raises all the issues involved in controlling access of threads to shared resources </s>
<s> so in general decomposing a problem for parallel processing is much more diﬃcult than it might appear from our relatively simple example 1232 thread pools and task queues once we have decided how to decompose a task into subtasks there is the question of how to assign those subtasks to threads </s>
<s> typically in an object-oriented approach each subtask will be represented by an object </s>
<s> since a task represents some computation it’s natural for the object that represents it to have an instance method that does the computation </s>
<s> to execute the task it is only necessary to call its computation method </s>
<s> in my program the computation method is called run( ) and the task object implements the standard runnable interface that was discussed in subsection 1211 </s>
<s> this interface is a natural way to represent computational tasks </s>
<s> it’s possible to create a new thread for each runnable </s>
<s> however that doesn’t really make sense when there are many tasks since there is a signiﬁcant amount of overhead involved in creating each new thread </s>
<s> a better alternative is to create just a few threads and let each thread execute a number of tasks the optimal number of threads to use is not entirely clear and it can depend on exactly what problem you are trying to solve </s>
<s> the goal is to keep all of the computer’s processors busy in the image-computing example it works well to create one thread for each available processor but that won’t be true for all problems </s>
<s> in particular if a thread can block for a non-trivial amount of time while waiting for some event or for access to some resource you want to have extra threads around for the processor to run while other threads are blocked </s>
<s> we’ll encounter exactly that situation when we turn to using threads with networking in section 124 when several threads are available for performing tasks those threads are called a thread 612 chapter 12 </s>
<s> threads and multiprocessing pool </s>
<s> thread pools are used to avoid creating a new thread to perform each task </s>
<s> instead when a task needs to be performed it can be assigned to any idle thread in the pool” once all the threads in the thread pool are busy any additional tasks will have to wait until one of the threads becomes idle </s>
<s> this is a natural application for a queue associated with the thread pool is a queue of waiting tasks </s>
<s> as tasks become available they are added to the queue </s>
<s> every time that a thread ﬁnishes a task it goes to the queue to get another task to work on note that there is only one task queue for the thread pool </s>
<s> all the threads in the pool use the same queue so the queue is a shared resource </s>
<s> as always with shared resources race conditions are possible and synchronization is essential </s>
<s> without synchronization for example it is possible that two threads trying to get items from the queue at the same time will end up retrieving the same item ( see if you can spot the race conditions in the dequeue( ) method in subsection 932 ) java has a built-in class to solve this problem concurrentlinkedqueue </s>
<s> this class and others that can be useful in parallel programming are deﬁned in the package javautilconcurrent it is a parameterized class so that to create for example a queue that can hold objects of type runnable you could say concurrentlinkedqueue<runnable> queue = new concurrentlinkedqueue<runnable>( ) this class represents a queue implemented as a linked list in which operations on the queue are properly synchronized </s>
<s> the operations on a concurrentlinkedqueue are not exactly the queue operations that we are used to </s>
<s> the method for adding a new item x to the end of queue is queueadd( x ) </s>
<s> the method for removing an item from the front of queue is queuepoll( ) the queuepoll( ) method returns null if the queue is empty thus poll( ) can be used to test whether the queue is empty and to retrieve an item if it is not </s>
<s> it makes sense to do things in this way because testing whether the queue is non-empty before taking an item from the queue involves a race condition without synchronization it is possible for another thread to remove the last item from the queue between the time when you check that the queue is non-empty and the time when you try to take the item from the queue </s>
<s> by the time you try to get the item there’s nothing there! ∗ ∗ ∗ to use concurrentlinkedqueue in our image-computing example we can use the queue along with a thread pool </s>
<s> to begin the computation of the image we create all the tasks that make up the image and add them to the queue </s>
<s> then we can create and start the worker threads that will execute the tasks </s>
<s> each thread will run in a loop in which it gets one task from the queue by calling the queue’s poll( ) method and carries out that task </s>
<s> since the task is an object of type runnable it is only necessary for the thread to call the task’s run( ) method </s>
<s> when the poll( ) method returns null the queue is empty and the thread can terminate because all the tasks have been assigned to threads the sample program multiprocessingdemo2java implements this idea </s>
<s> it uses a queue taskqueue of type concurrentlinkedqueue<runnable> to hold the tasks </s>
<s> in addition in order to allow the user to abort the computation before it ﬁnishes it uses the volatile boolean variable running to signal the thread when the user aborts the computation </s>
<s> the thread should terminate when this variable is set to false </s>
<s> the threads are deﬁned by a nested class named workerthread </s>
<s> it is quite short and simple to write at this point private class workerthread extends thread { public void run( ) { 123 </s>
<s> threads and parallel processing 613 try { while ( running ) { runnable task = taskqueuepoll( ) // get a task from the queue if ( task == null ) break // ( because the queue is empty ) taskrun( ) // execute the task } } finally { threadfinished( ) // records fact that this thread has terminated } } } the program uses a nested class named mandelbrottask to represent the task of computing one row of pixels in the image </s>
<s> this class implements the runnable interface </s>
<s> its run( ) method does the actual work compute the color of each pixel and apply the colors to the image </s>
<s> here is what the program does to start the computation ( with a few details omitted ) taskqueue = new concurrentlinkedqueue<runnable>( ) // create the queue int height = // number of rows in the image for ( int row = 0 row < height row++ ) { mandelbrottask task task = // create a task to compute one row of the image taskqueueadd( task ) // add the task to the queue } int threadcount = // number of threads in the pool workers = new workerthread[threadcount] running = true // set the signal before starting the threads! threadscompleted = 0 // records how many of the threads have terminated for ( int i = 0 i < threadcount i++ ) { workers[i] = new workerthread( ) try { workers[i]setpriority( threadcurrentthread( )getpriority( ) - 1 ) } catch ( exception e ) { } workers[i]start( ) } note that it is important that the tasks be added to the queue before the threads are started the threads see an empty queue as a signal to terminate </s>
<s> if the queue is empty when the threads are created they might see an empty queue and terminate immediately after being started without performing any tasks! you should run multiprocessingdemo2 or try the applet version in the on-line version of this section </s>
<s> it computes the same image as multiprocessingdemo1 but the rows of pixels are not computed in the same order as in that program ( assuming that there is more than one thread ) </s>
<s> if you look carefully you might see that the rows of pixels are not added to the image in strict order from top to bottom </s>
<s> this is because it is possible for one thread to ﬁnish row number i+1 while another thread is still working on row i or even earlier rows ( the eﬀect might be more apparent if you use more threads than you have processors ) 614 1233 chapter 12 </s>
<s> threads and multiprocessing producer/consumer and blocking queues multiprocessingdemo2 creates an entirely new thread pool every time it draws an image </s>
<s> this seems wasteful </s>
<s> shouldn’t it be possible to create one set of threads at the beginning of the program and use them whenever an image needs to be computed after all the idea of a thread pool is that the threads should sit around and wait for tasks to come along and should execute them when they do </s>
<s> the problem is that so far we have no way to make a thread wait for a task to come along </s>
<s> to do that we will use something called a blocking queue a blocking queue is an implementation of one of the classic patterns in parallel processing the producer/consumer pattern </s>
<s> this pattern arises when there are one or more producers” who produce things and one or more consumers” who consume those things </s>
<s> all the producers and consumers should be able to work simultaneously ( hence parallel processing ) </s>
<s> if there are no things ready to be processed a consumer will have to wait until one is produced </s>
<s> in many applications producers also have to wait sometimes if things can only be consumed at a rate of say one per minute it doesn’t make sense for the producers to produce them indeﬁnitely at a rate of two per minute </s>
<s> that would just lead to an unlimited build-up of things waiting to be processed </s>
<s> therefore it’s often useful to put a limit on the number of things that can be waiting for processing </s>
<s> when that limit is reached producers should wait before producing more things we need a way to get the things from the producers to the consumers </s>
<s> a queue is an obvious answer producers can place items into the queue as they are produced </s>
<s> consumers can remove items from the other end of the queue consumer 1 producer 1 blocking queue producer 2 producer 3 consumer 2 consumer 3 consumer 4 we are talking parallel processing so we need a synchronized queue but we need more than that </s>
<s> when the queue is empty we need a way to have consumers wait until an item appears in the queue </s>
<s> if the queue becomes full we need a way to have producers wait until a space opens up in the queue </s>
<s> in our application the producers and consumers are threads </s>
<s> a thread that is suspended waiting for something to happen is said to be blocked and the type of queue that we need is called a blocking queue </s>
<s> in a blocking queue the operation of dequeueing an item from the queue can block if the queue is empty </s>
<s> that is if a thread tries to dequeue an item from an empty queue the thread will be suspended until an item becomes available at that time it will wake up retrieve the item and proceed </s>
<s> similarly if the queue has a limited capacity a producer that tries to enqueue an item can block if there is no space in the queue java has two classes that implement blocking queues linkedblockingqueue and arrayblockingqueue </s>
<s> these are parameterized types to allow you to specify the type of item that the queue can hold </s>
<s> both classes are deﬁned in the package javautilconcurrent and both implement 123 </s>
<s> threads and parallel processing 615 an interface called blockingqueue </s>
<s> if bqueue is a blocking queue belonging to one of these classes then the following operations are deﬁned • bqueuetake( ) – removes an item from the queue and returns it </s>
<s> if the queue is empty when this method is called the thread that called it will block until an item becomes available </s>
<s> this method throws an interruptedexception if the thread is interrupted while it is blocked • bqueueput( item ) – adds the item to the queue </s>
<s> if the queue has a limited capacity and is full the thread that called it will block until a space opens up in the queue </s>
<s> this method throws an interruptedexception if the thread is interrupted while it is blocked • bqueueadd( item ) – adds the item to the queue if space is available </s>
<s> if the queue has a limited capacity and is full an illegalstateexception is thrown </s>
<s> this method does not block • bqueueclear( ) – removes all items from the queue and discards them java’s blocking queues deﬁne many additional methods ( for example bqueuepoll( 500 ) is similar to bqueuetake( ) except that it will not block for longer than 500 milliseconds ) but the four listed here are suﬃcient for our purposes </s>
<s> note that i have listed two methods for adding items to the queue bqueueput( item ) blocks if there is not space available in the queue and is meant for use with blocking queues that have a limited capacity bqueueadd( item ) does not block and is meant for use with blocking queues that have an unlimited capacity an arrayblockingqueue has a maximum capacity that is speciﬁed when it is constructed for example to create a blocking queue that can hold up to 25 objects of type itemtype you could say arrayblockingqueue<itemtype> bqueue = new arrayblockingqueue<itemtype>( 25 ) with this declaration bqueueput( item ) will block if bqueue already contains 25 items while bqueueadd( item ) will throw an exception in that case </s>
<s> recall that this ensures that tasks are not produced indeﬁnitely at a rate faster than they can be consumed </s>
<s> a linkedblockingqueue is meant for creating blocking queues with unlimited capacity </s>
<s> for example inkedblockingqueue<itemtype> bqueue = new linkedblockingqueue<itemtype>( ) creates a queue with no upper limit on the number of items that it can contain </s>
<s> in this case bqueueput( item ) will never block and bqueueadd( item ) will never throw an illegalstateexception </s>
<s> you would use a linkedblockingqueue when you want to avoid blocking and you have some other way of ensuring that the queue will not grow to arbitrary size for both types of blocking queue bqueuetake( ) will block if the queue is empty ∗ ∗ ∗ the sample program multiprocessingdemo3java uses a linkedblockingqueue in place of the concurrentlinkedqueue in the previous version multiprocessingdemo2java </s>
<s> in this example the queue holds tasks that is items of type runnable and the queue is declared as an instance variable named taskqueue inkedblockingqueue<runnable> taskqueue when the user clicks the start” button and it’s time to compute an image all of the tasks that make up the computation are put into this queue </s>
<s> this is done by calling taskqueueadd( task ) for each task </s>
<s> it’s important that this can be done without blocking since the tasks are created in the event-handling thread and we don’t want to block that </s>
<s> the queue cannot grow 616 chapter 12 </s>
<s> threads and multiprocessing indeﬁnitely because the program only works on one image at a time and there are only a few hundred tasks per image just as in the previous version of the program worker threads belonging to a thread pool will remove tasks from the queue and carry them out </s>
<s> however in this case the threads are created once at the beginning of the program—actually the ﬁrst time the start” button is pressed—and the same threads are reused for any number of images </s>
<s> when there are no tasks to execute the task queue is empty and the worker threads will block until tasks become available each worker thread runs in an inﬁnite loop processing tasks forever but it will spend a lot of its time blocked waiting for a task to be added to the queue </s>
<s> here is the inner class that deﬁnes the worker threads /** * this class defines the worker threads that make up the thread pool * a workerthread runs in a loop in which it retrieves a task from the * taskqueue and calls the run( ) method in that task </s>
<s> note that if * the queue is empty the thread blocks until a task becomes available * in the queue </s>
<s> the constructor starts the thread so there is no * need for the main program to do so </s>
<s> the thread will run at a priority * that is one less than the priority of the thread that calls the * constructor * * a workerthread is designed to run in an infinite loop </s>
<s> it will * end only when the java virtual machine exits ( this assumes that * the tasks that are executed don’t throw exceptions which is true * in this program ) the constructor sets the thread to run as * a daemon thread the java virtual machine will exit when the * only threads are daemon threads ( in this program this is not * necessary since the virtual machine is set to exit when the * window is closed </s>
<s> in a multi-window program however we can’t * simply end the program when a window is closed ) */ private class workerthread extends thread { workerthread( ) { try { setpriority( threadcurrentthread( )getpriority( ) - 1 ) } catch ( exception e ) { } try { setdaemon( true ) } catch ( exception e ) { } start( ) } public void run( ) { while ( true ) { try { runnable task = taskqueuetake( ) // wait for task if necessary taskrun( ) } catch ( interruptedexception e ) { } 123 </s>
<s> threads and parallel processing 617 } } } we should look more closely at how the thread pool works </s>
<s> the worker threads are created and started before there is any task to perform </s>
<s> each thread immediately calls taskqueuetake( ) since the task queue is empty all the worker threads will block as soon as they are started </s>
<s> to start the computation of an image the event-handling thread will create tasks and add them to the queue </s>
<s> as soon as this happens worker threads will wake up and start processing tasks and they will continue doing so until the queue is emptied ( note that on a multi-processor computer some worker threads can start processing even while the event thread is still adding tasks to the queue ) when the queue is empty the worker threads will go back to sleep until processing starts on the next image ∗ ∗ ∗ an interesting point in this program is that we want to be able to abort the computation before it ﬁnishes but we don’t want the worker threads to terminate when that happens </s>
<s> when the user clicks the abort” button the program calls taskqueueclear( ) which prevents any more tasks from being assigned to worker threads </s>
<s> however some tasks are most likely already being executed when the task queue is cleared </s>
<s> those tasks will complete after the computation in which they are subtasks has supposedly been aborted </s>
<s> when those subtasks complete we don’t want their output to be applied to the image </s>
<s> it’s not a big deal in this program but in more general applications we don’t want output meant for a previous computation job to be applied to later jobs my solution is to assign a job number to each computation job </s>
<s> the job number of the current job is stored in an instance variable named jobnum and each task object has an instance variable that tells which task that job is part of </s>
<s> when a job ends—either because the job ﬁnishes on its own or because the user aborts it—the value of jobnum is incremented </s>
<s> when a task completes the job number stored in the task object is compared to jobnum </s>
<s> if they are equal then the task is part of the current job and its output is applied to the image </s>
<s> if they are not equal then the task was part of a previous job and its output is discarded it’s important that access to jobnum be properly synchronized </s>
<s> otherwise one thread might check the job number just as another thread is incrementing it and output meant for an old job might sneak through after that job has been aborted </s>
<s> in the program all the methods that access or change jobnum are synchronized </s>
<s> you can read the source code to see how it works ∗ ∗ ∗ one more point about multiprocessingdemo3 </s>
<s> i have not provided any way to terminate the worker threads in this program </s>
<s> they will continue to run until the java virtual machine exits </s>
<s> to allow thread termination before that we could use a volatile signaling variable running and set its value to false when we want the worker threads to terminate </s>
<s> the run( ) methods for the threads would be replaced by public void run( ) { while ( running ) { try { runnable task = taskqueuetake( ) taskrun( ) } catch ( interruptedexception e ) { } 618 chapter 12 </s>
<s> threads and multiprocessing } } however if a thread is blocked in taskqueuetake( ) it will not see the new value of running until it becomes unblocked </s>
<s> to ensure that that happens it is necessary to call workerinterrupt( ) for each worker thread worker just after setting runner to false if a worker thread is executing a task when runner is set to false the thread will not terminate until that task has completed </s>
<s> if the tasks are reasonably short this is not a problem if tasks can take longer to execute than you are willing to wait for the threads to terminate then each task must also check the value of running periodically and exit when that value becomes false 1234 wait and notify to implement a blocking queue we must be able to make a thread block just until some event occurs </s>
<s> the thread is waiting for the event to occur </s>
<s> somehow it must be notiﬁed when that happens </s>
<s> there are two threads involved since the event that will wake one thread is caused by an action taken by another thread such as adding an item to the queue note that this is not just an issue for blocking queues </s>
<s> whenever one thread produces some sort of result that is needed by another thread that imposes some restriction on the order in which the threads can do their computations </s>
<s> if the second thread gets to the point where it needs the result from the ﬁrst thread it might have to stop and wait for the result to be produced </s>
<s> since the second thread can’t continue it might as well go to sleep </s>
<s> but then there has to be some way to notify the second thread when the result is ready so that it can wake up and continue its computation java of course has a way to do this kind of waiting” and notifying” it has wait( ) and notify( ) methods that are deﬁned as instance methods in class object and so can be used with any object </s>
<s> these methods are used internally in blocking queues </s>
<s> they are fairly low-level tricky and error-prone and you should use higher-level control strategies such as blocking queues when possible </s>
<s> however it’s nice to know about wait( ) and notify( ) in case you ever need to use them directly the reason why wait( ) and notify( ) should be associated with objects is not obvious so don’t worry about it at this point </s>
<s> it does at least make it possible to direct diﬀerent notiﬁcations to diﬀerent recipients depending on which object’s notify( ) method is called the general idea is that when a thread calls a wait( ) method in some object that thread goes to sleep until the notify( ) method in the same object is called </s>
<s> it will have to be called obviously by another thread since the thread that called wait( ) is sleeping </s>
<s> a typical pattern is that thread a calls wait( ) when it needs a result from thread b but that result is not yet available </s>
<s> when thread b has the result ready it calls notify( ) which will wake thread a up if it is waiting so that it can use the result </s>
<s> it is not an error to call notify( ) when no one is waiting it just has no eﬀect </s>
<s> to implement this thread a will execute code similar to the following where obj is some object if ( resultisavailable( ) == false ) objwait( ) // wait for notification that the result is available usetheresult( ) while thread b does something like generatetheresult( ) objnotify( ) // send out a notification that the result is available 123 </s>
<s> threads and parallel processing 619 now there is a really nasty race condition in this code </s>
<s> the two threads might execute their code in the following order 1 2 3 thread so thread thread a checks resultisavailable( ) and finds that the result is not ready it decides to execute the objwait( ) statement but before it does b finishes generating the result and calls objnotify( ) a calls objwait( ) to wait for notification that the result is ready in step 3 thread a is waiting for a notiﬁcation that will never come because notify( ) has already been called in step 2 </s>
<s> this is a kind of deadlock that can leave thread a waiting forever obviously we need some kind of synchronization </s>
<s> the solution is to enclose both thread a’s code and thread b’s code in synchronized statements and it is very natural to synchronize on the same object obj that is used for the calls to wait( ) and notify( ) </s>
<s> in fact since synchronization is almost always needed when wait( ) and notify( ) are used java makes it an absolute requirement </s>
<s> in java a thread can legally call objwait( ) or objnotify( ) only if that thread holds the synchronization lock associated with the object obj </s>
<s> if it does not hold that lock then an exception is thrown ( the exception is of type illegalmonitorstateexception which does not require mandatory handling and which is typically not caught ) one further complication is that the wait( ) method can throw an interruptedexception and so should be called in a try statement that handles the exception to make things more deﬁnite let’s consider how we can get a result that is computed by one thread to another thread that needs the result </s>
<s> this is a simpliﬁed producer/consumer problem in which only one item is produced and consumed </s>
<s> assume that there is a shared variable named sharedresult that is used to transfer the result from the producer to the consumer </s>
<s> when the result is ready the producer sets the variable to a non-null value </s>
<s> the consumer can check whether the result is ready by testing whether the value of sharedresult is null </s>
<s> we will use a variable named lock for synchronization </s>
<s> the code for the producer thread could have the form makeresult = generatetheresult( ) synchronized( lock ) { sharedresult = makeresult locknotify( ) } // not synchronized! while the consumer would execute code such as synchronized( lock ) { while ( sharedresult == null ) { try { lockwait( ) } catch ( interruptedexception e ) { } } useresult = sharedresult } usetheresult( useresult ) // not synchronized! the calls to generatetheresult( ) and usetheresult( ) are not synchronized which allows them to run in parallel with other threads that might also synchronize on lock </s>
<s> since sharedresult is a shared variable all references to sharedresult should be synchronized so 620 chapter 12 </s>
<s> threads and multiprocessing the references to sharedresult must be inside the synchronized statements </s>
<s> the goal is to do as little as possible ( but not less ) in synchronized code segments if you are uncommonly alert you might notice something funny lockwait( ) does not ﬁnish until locknotify( ) is executed but since both of these methods are called in synchronized statements that synchronize on the same object shouldn’t it be impossible for both methods to be running at the same time in fact lockwait( ) is a special case when a thread calls lockwait( ) it gives up the lock that it holds on the synchronization object lock this gives another thread a chance to execute the synchronized( lock ) block that contains the locknotify( ) statement </s>
<s> after the second thread exits from this block the lock is returned to the consumer thread so that it can continue in the full producer/consumer pattern multiple results are produced by one or more producer threads and are consumed by one or more consumer threads </s>
<s> instead of having just one sharedresult object we keep a list of objects that have been produced but not yet consumed et’s see how this might work in a very simple class that implements the three operations on a inkedblockingqueue<runnable> that are used in multiprocessingdemo3 import javautillinkedlist public class mylinkedblockingqueue { private linkedlist<runnable> tasklist = new linkedlist<runnable>( ) public void clear( ) { synchronized( tasklist ) { tasklistclear( ) } } public void add( runnable task ) { synchronized( tasklist ) { tasklistaddlast( task ) tasklistnotify( ) } } public runnable take( ) throws interruptedexception { synchronized( tasklist ) { while ( tasklistisempty( ) ) tasklistwait( ) return tasklistremovefirst( ) } } } an object of this class could be used as a direct replacement for the taskqueue in multiprocessingdemo3 in this class i have chosen to synchronize on the tasklist object but any object could be used </s>
<s> in fact i could simply use synchronized methods which is equivalent to synchronizing on this ( note that you might see a call to wait( ) or notify( ) in a synchronized instance method with no reference to the object that is being used </s>
<s> remember that wait( ) and notify( ) in that context really mean thiswait( ) and thisnotify( ) ) by the way it is essential that the call to tasklistclear( ) be synchronized on the same object even though it doesn’t call wait( ) or notify( ) </s>
<s> otherwise there is a race condition 123 </s>
<s> threads and parallel processing 621 that can occur the list might be cleared just after the take( ) method checks that tasklist is non-empty and before it removes an item from the list </s>
<s> in that case the list is empty again by the time tasklistremovefirst( ) is called resulting in an error ∗ ∗ ∗ it is possible for several threads to be waiting for notiﬁcation </s>
<s> a call to objnotify( ) will wake only one of the threads that is waiting on obj </s>
<s> if you want to wake all threads that are waiting on obj you can call objnotifyall( ) objnotify( ) works ok in the above example because only consumer threads can be blocked </s>
<s> we only need to wake one consumer thread when a task is added to the queue because it doesn’t matter which consumer gets the task but consider a blocking queue with limited capacity where producers and consumers can both block </s>
<s> when an item is added to the queue we want to make sure that a consumer thread is notiﬁed not just another producer </s>
<s> one solution is to call notifyall( ) instead of notify( ) which will notify all threads including any waiting consumer i should also mention a possible confusion about the method objnotify( ) </s>
<s> this method does not notify obj of anything </s>
<s> it notiﬁes a thread that has called objwait( ) ( if there is such a thread ) </s>
<s> similarly in objwait( ) it’s not obj that is waiting for something it’s the thread that calls the method and a ﬁnal note on wait there is another version of wait( ) that takes a number of milliseconds as a parameter </s>
<s> a thread that calls objwait( milliseconds ) will wait only up to the speciﬁed number of milliseconds for a notiﬁcation </s>
<s> if a notiﬁcation doesn’t occur during that period the thread will wake up and continue without the notiﬁcation </s>
<s> in practice this feature is most often used to let a waiting thread wake periodically while it is waiting in order to perform some periodic task such as causing a message waiting for computation to ﬁnish” to blink ∗ ∗ ∗ et’s look at an example that uses wait( ) and notify( ) to allow one thread to control another </s>
<s> the sample program towersofhanoiwithcontrolsjava solves the towers of hanoi puzzle ( subsection 912 ) with control buttons that allow the user to control the execution of the algorithm </s>
<s> clicking next step” executes one step which moves a single disk from one pile to another </s>
<s> clicking run” lets the algorithm run automatically on its own run” changes to pause” and clicking pause” stops the automatic execution </s>
<s> there is also a start over” button that aborts the current solution and puts the puzzle back into its initial conﬁguration here is a picture of the program in the middle of a solution in this program there are two threads a thread that runs a recursive algorithm to solve the puzzle and the event-handling thread that reacts to user actions </s>
<s> when the user clicks one of the buttons a method is called in the event-handling thread </s>
<s> but it’s actually the thread that is running the recursion that has to respond by for example doing one step of the solution or starting over </s>
<s> the event-handling thread has to send some sort of signal to the solution thread 622 chapter 12 </s>
<s> threads and multiprocessing this is done by setting the value of a variable that is shared by both threads </s>
<s> the variable is named status and its possible values are the constants go pause step and restart when the event-handling thread changes the value of this variable the solution thread should see the new value and respond </s>
<s> when status equals pause the solution thread is paused waiting for the user to click run” or next step” </s>
<s> this is the initial state when the program starts </s>
<s> if the user clicks next step” the event-handling thread sets the value of status to step” the solution thread should respond by executing one step of the solution and then resetting status to pause </s>
<s> if the user clicks run” status is set to go which should cause the solution thread to run automatically </s>
<s> when the user clicks pause” while the solution is running status is reset to pause and the solution thread should return to its paused state </s>
<s> if the user clicks start over” the event-handling thread sets status to restart and the solution thread should respond by ending the current recursive solution and restoring the puzzle to its initial state the main point for us is that when the solution thread is paused it is sleeping </s>
<s> it won’t see a new value for status unless it wakes up! to make that possible the program uses wait( ) in the solution thread to put that thread to sleep and it uses notify( ) in the event-handling thread to wake up the solution thread whenever it changes the value of status </s>
<s> here is the actionperformed( ) method that responds to clicks on the buttons </s>
<s> when the user clicks a button this method changes the value of status and calls notify( ) to wake up the solution thread synchronized public void actionperformed( actionevent evt ) { object source = evtgetsource( ) if ( source == runpausebutton ) { // toggle between running and paused if ( status == go ) { // animation is running </s>
<s> pause it status = pause nextstepbuttonsetenabled( true ) // enable while paused runpausebuttonsettext( run ) } else { // animation is paused </s>
<s> start it running status = go nextstepbuttonsetenabled( false ) // disable while running runpausebuttonsettext( pause ) } } else if ( source == nextstepbutton ) { // makes animation run one step status = step } else if ( source == startoverbutton ) { // restore to initial state status = restart } notify( ) // wake up the thread so it can see the new status value! } this method is synchronized to allow the call to notify( ) </s>
<s> remember that the notify( ) method in an object can only be called by a thread that holds that object’s synchronization lock </s>
<s> in this case the synchronization object is this </s>
<s> synchronization is also necessary because of race conditions that arise because the value of status can also be changed by the solution thread the solution thread calls a method named checkstatus( ) to check the value of status this method calls wait( ) if the status is pause which puts the solution thread to sleep until 124 </s>
<s> threads and networking 623 the event-handling thread calls notify( ) </s>
<s> note that if the status is restart checkstatus( ) throws an illegalstateexception synchronized private void checkstatus( ) { while ( status == pause ) { try { wait( ) } catch ( interruptedexception e ) { } } // at this point status is run step or restart if ( status == restart ) throw new illegalstateexception( restart ) // at this point status is run or step } the run( ) method for the solution thread runs in an inﬁnite loop in which it sets up the initial state of the puzzle and then calls a solve( ) method to solve the puzzle </s>
<s> to implement the wait/notify control strategy run( ) calls checkstatus( ) before starting the solution and solve( ) calls checkstatus( ) after each move </s>
<s> if checkstatus( ) throws an illegalstateexception the call to solve( ) is terminated early and the run( ) method returns to the beginning of the while loop where the initial state of the puzzle and of the user interface is restored public void run( ) { while ( true ) { runpausebuttonsettext( run ) // set user interface to initial state nextstepbuttonsetenabled( true ) startoverbuttonsetenabled( false ) setupproblem( ) // set up the initial state of the puzzle status = pause // initially the solution thread is paused checkstatus( ) // returns only when user has clicked run or next step startoverbuttonsetenabled( true ) try { solve( 10012 ) // move 10 disks from pile 0 to pile 1 } catch ( illegalstateexception e ) { // exception was thrown because use clicked start over } } } you can check the source code to see how this all ﬁts into the complete program </s>
<s> if you want to learn how to use wait( ) and notify( ) directly understanding this example is a good place to start! 124 in threads and networking the previous chapter we looked at several examples of network programming </s>
<s> those examples showed how to create network connections and communicate through them but they didn’t deal with one of the fundamental characteristics of network programming the fact that network communication is asynchronous </s>
<s> from the point of view of a program on one end of a network connection messages can arrive from the other side of the connection at any time the 624 chapter 12 </s>
<s> threads and multiprocessing arrival of a message is an event that is not under the control of the program that is receiving the message </s>
<s> perhaps an event-oriented networking api would be a good approach to dealing with the asynchronous nature of network communication but that is not the approach that is taken in java ( or typically in other languages ) </s>
<s> instead network programming in java typically uses threads 1241 the blocking i/o problem a covered in section 114 network programming uses sockets </s>
<s> a socket in the sense that we are using the term here represents one end of a network connection </s>
<s> every socket has an associated input stream and output stream </s>
<s> data written to the output stream on one end of the connection is transmitted over the network and appears in the input stream at the other end a program that wants to read data from a socket’s input stream calls one of that input stream’s input methods </s>
<s> it is possible that the data has already arrived before the input method is called in that case the input method retrieves the data and returns immediately more likely however the input method will have to wait for data to arrive from the other side of the connection </s>
<s> until the data arrives the input method and the thread that called it will be blocked it is also possible for an output method in a socket’s output stream to block </s>
<s> this can happen if the program tries to output data to the socket faster than the data can be transmitted over the network ( it’s a little complicated a socket uses a buﬀer” to hold data that is supposed to be transmitted over the network </s>
<s> a buﬀer is just a block of memory that is used like a queue the output method drops its data into the buﬀer lower-level software removes data from the buﬀer and transmits it over the network </s>
<s> the output method will block if the buﬀer ﬁlls up note that when the output method returns it doesn’t mean that the data has gone out over the network—it just means that the data has gone into the buﬀer and is scheduled for later transmission ) we say that network communication uses blocking i/o because input and output operations on the network can block for indeﬁnite periods of time </s>
<s> programs that use the network must be prepared to deal with this blocking </s>
<s> in some cases it’s acceptable for a program to simply shut down all other processing and wait for input ( this is what happens when a command line program reads input typed by the user </s>
<s> user input is another type of blocking i/o ) however threads make it possible for some parts of a program to continue doing useful work while other parts are blocked </s>
<s> a network client program that sends requests to a server might get by with a single thread if it has nothing else to do while waiting for the server’s responses a network server program on the other hand can typically be connected to several clients at the same time </s>
<s> while waiting for data to arrive from a client the server certainly has other things that it can do namely communicate with other clients </s>
<s> when a server uses diﬀerent threads to handle the communication with diﬀerent clients the fact that i/o with one client is blocked won’t stop the server from communicating with other clients it’s important to understand that using threads to deal with blocking i/o diﬀers in a fundamental way from using threads to speed up computation </s>
<s> when using threads for speedup in subsection 1232 it made sense to use one thread for each available processor </s>
<s> if only one processor is available using more than one thread will yield no speed-up at all in fact it would slow things down because of the extra overhead involved in creating and managing the threads in the case of blocking i/o on the other hand it can make sense to have many more threads 124 </s>
<s> threads and networking 625 than there are processors since at any given time many of the threads can be blocked </s>
<s> only the active unblocked threads are competing for processing time </s>
<s> in the ideal case to keep all the processors busy you would want to have one active thread per processor ( actually somewhat less than that on average to allow for variations over time in the number of active threads ) on a network server program for example threads generally spend most of their time blocked waiting for i/o operations to complete </s>
<s> if threads are blocked say about 90% of the time you’d like to have about ten times as many threads as there are processors </s>
<s> so even on a computer that has just a single processor server programs can make good use of large numbers of threads 1242 an asynchronous network chat program as a ﬁrst example of using threads for network communication we consider a gui chat program the command-line chat programs clchatclientjava and clchatserverjava from the subsection 1145 use a straight-through step-by-step protocol for communication </s>
<s> after a user on one side of a connection enters a message the user must wait for a reply from the other side of the connection </s>
<s> an asynchronous chat program would be much nicer </s>
<s> in such a program a user could just keep typing lines and sending messages without waiting for any response </s>
<s> messages that arrive—asynchronously—from the other side would be displayed as soon as they arrive </s>
<s> it’s not easy to do this in a command-line interface but it’s a natural application for a graphical user interface </s>
<s> the basic idea for a gui chat program is to create a thread whose job is to read messages that arrive from the other side of the connection </s>
<s> as soon as the message arrives it is displayed to the user then the message-reading thread blocks until the next incoming message arrives </s>
<s> while it is blocked however other threads can continue to run </s>
<s> in particular the event-handling thread that responds to user actions keeps running that thread can send outgoing messages as soon as the user generates them the sample program guichatjava is an example of this </s>
<s> guichat is a two-way network chat program that allows two users to send messages to each other over the network </s>
<s> in this chat program each user can send messages at any time and incoming messages are displayed as soon as they are received the guichat program can act as either the client end or the server end of a connection ( refer back to subsection 1143 for information about how clients and servers work ) the program has a listen” button that the user can click to create a server socket that will listen for an incoming connection request this makes the program act as a server </s>
<s> it also has a connect” button that the user can click to send a connection request this makes the program act as a client </s>
<s> as usual the server listens on a speciﬁed port number </s>
<s> the client needs to know the computer on which the server is running and the port on which the server is listening there are input boxes in the guichat window where the user can enter this information once a connection has been established between two guichat windows each user can send messages to the other </s>
<s> the window has an input box where the user types a message </s>
<s> pressing return while typing in this box sends the message </s>
<s> this means that the sending of the message is handled by the usual event-handling thread in response to an event generated by a user action </s>
<s> messages are received by a separate thread that just sits around waiting for incoming messages </s>
<s> this thread blocks while waiting for a message to arrive when a message does arrive it displays that message to the user </s>
<s> the window contains a large transcript area that displays both incoming and outgoing messages along with other information about the network connection i urge you to compile the source code guichatjava and try the program </s>
<s> to make it easy 626 chapter 12 </s>
<s> threads and multiprocessing to try it on a single computer you can make a connection between one window and another window on the same computer using localhost” or 127001” as the name of the computer ( once you have one guichat window open you can open a second one by clicking the new” button ) i also urge you to read the source code </s>
<s> i will discuss only parts of it here the program uses a nested class connectionhandler to handle most network-related tasks connectionhandler is a subclass of thread </s>
<s> the connectionhandler thread is responsible for opening the network connection and then for reading incoming messages once the connection has been opened </s>
<s> by putting the connection-opening code in a separate thread we make sure that the gui is not blocked while the connection is being opened </s>
<s> like reading incoming messages opening a connection is a blocking operation that can take some time to complete a connectionhandler is created when the user clicks the listen” or connect” button </s>
<s> the listen” button should make the thread act as a server while connect” should make it act as a client </s>
<s> to distinguish these two cases the connectionhandler class has two constructors /** * listen for a connection on a specified port </s>
<s> the constructor * does not perform any network operations it just sets some * instance variables and starts the thread </s>
<s> note that the * thread will only listen for one connection and then will * close its server socket */ connectionhandler( int port ) { state = connectionstatelistening thisport = port postmessage( nlistening on port + port + n ) start( ) } /** * open a connection to a specified computer and port </s>
<s> the constructor * does not perform any network operations it just sets some * instance variables and starts the thread */ connectionhandler( string remotehost int port ) { state = connectionstateconnecting thisremotehost = remotehost thisport = port postmessage( nconnecting to + remotehost + on port + port + n ) start( ) } here state is an instance variable whose type is deﬁned by an enumerated type enum connectionstate { listening connecting connected closed } the values of this enum represent diﬀerent possible states of the network connection </s>
<s> it is often useful to treat a network connection as a state machine ( see subsection 654 ) since the response to various events can depend on the state of the connection when the event occurs </s>
<s> setting the state variable to listening or connecting tells the thread whether it should act as a server or as a client </s>
<s> note that the postmessage( ) method posts a message to the transcript area of the window where it will be visible to the user once the thread has been started it executes the following run( ) method 124 </s>
<s> threads and networking 627 /** * the run( ) method that is executed by the thread </s>
<s> it opens a * connection as a client or as a server ( depending on which * constructor was used ) */ public void run( ) { try { if ( state == connectionstatelistening ) { // open a connection as a server listener = new serversocket( port ) socket = listeneraccept( ) listenerclose( ) } else if ( state == connectionstateconnecting ) { // open a connection as a client socket = new socket( remotehostport ) } connectionopened( ) // sets up to use the connection ( including // creating a bufferedreader in for reading // incoming messages ) while ( state == connectionstateconnected ) { // read one line of text from the other side of // the connection and report it to the user string input = inreadline( ) if ( input == null ) connectionclosedfromotherside( ) else received( input ) // report message to user } } catch ( exception e ) { // an error occurred </s>
<s> report it to the user but not // if the connection has been closed ( since the error // might be the expected error that is generated when // a socket is closed ) if ( state != connectionstateclosed ) postmessage( nn error + e ) } finally { // clean up before terminating the thread cleanup( ) } } this method calls several other methods to do some of its work but you can see the general outline of how it works </s>
<s> after opening the connection as either a server or client the run( ) method enters a while loop in which it receives and processes messages from the other side of the connection until the connection is closed </s>
<s> it is important to understand how the connection can be closed </s>
<s> the guichat window has a disconnect” button that the user can click to close the connection </s>
<s> the program responds to this event by closing the socket that represents the connection </s>
<s> it is likely that when this happens the connection-handling thread is blocked in the inreadline( ) method waiting for an incoming message </s>
<s> when the socket is closed by another thread this method will fail and will throw an exception this exception causes the thread to terminate ( if the connection-handling thread happens to be between calls to inreadline( ) 628 chapter 12 </s>
<s> threads and multiprocessing when the socket is closed the while loop will terminate because the connection state changes from connected to closed ) note that closing the window will also close the connection in the same way it is also possible for the user on the other side of the connection to close the connection when that happens the stream of incoming messages ends and the inreadline( ) on this side of the connection returns the value null which indicates end-of-stream and acts as a signal that the connection has been closed by the remote user for a ﬁnal look into the guichat code consider the methods that send and receive messages these methods are called from diﬀerent threads </s>
<s> the send( ) method is called by the eventhandling thread in response to a user action </s>
<s> its purpose is to transmit a message to the remote user ( it is conceivable though not likely that the data output operation could block if the socket’s output buﬀer ﬁlls up </s>
<s> a more sophisticated program might take this possibility into account ) this method uses a printwriter out that writes to the socket’s output stream synchronization of this method prevents the connection state from changing in the middle of the send operation /** * send a message to the other side of the connection and post the * message to the transcript </s>
<s> this should only be called when the * connection state is connectionstateconnected if it is called at * other times it is ignored */ synchronized void send( string message ) { if ( state == connectionstateconnected ) { postmessage( send + message ) outprintln( message ) outflush( ) if ( outcheckerror( ) ) { postmessage( nerror occurred while trying to send data ) close( ) // closes the connection } } } the received( ) method is called by the connection-handling thread after a message has been read from the remote user </s>
<s> its only job is to display the message to the user but again it is synchronized to avoid the race condition that could occur if the connection state were changed by another thread while this method is being executed /** * this is called by the run( ) method when a message is received from * the other side of the connection </s>
<s> the message is posted to the * transcript but only if the connection state is connected ( this * is because a message might be received after the user has clicked * the disconnect button that message should not be seen by the * user ) */ synchronized private void received( string message ) { if ( state == connectionstateconnected ) postmessage( receive + message ) } 629 124 </s>
<s> threads and networking 1243 a threaded network server threads are often used in network server programs </s>
<s> they allow the server to deal with several clients at the same time </s>
<s> when a client can stay connected for an extended period of time other clients shouldn’t have to wait for service </s>
<s> even if the interaction with each client is expected to be very brief you can’t always assume that that will be the case </s>
<s> you have to allow for the possibility of a misbehaving client—one that stays connected without sending data that the server expects </s>
<s> this can hang up a thread indeﬁnitely but in a threaded server there will be other threads that can carry on with other clients the dateserverjava sample program from subsection 1144 is an extremely simple network server program </s>
<s> it does not use threads so the server must ﬁnish with one client before it can accept a connection from another client </s>
<s> let’s see how we can turn dateserver into a threaded server ( this server is so simple that doing so doesn’t make a great deal of sense however the same techniques will work for more complicated servers </s>
<s> see for example exercise 124 ) as a ﬁrst attempt consider dateserverwiththreadsjava </s>
<s> this sample program creates a new thread every time a connection request is received </s>
<s> the main program simply creates the thread and hands the connection to the thread </s>
<s> this takes very little time and in particular will not block </s>
<s> the run( ) method of the thread handles the connection in exactly the same way that it would be handled by the original program </s>
<s> this is not at all diﬃcult to program here’s the new version of the program with signiﬁcant changes shown in italic import javanet* import javaio* import javautildate /** * this program is a server that takes connection requests on * the port specified by the constant listening port </s>
<s> when a * connection is opened the program sends the current time to * the connected socket </s>
<s> the program will continue to receive * and process connections until it is killed ( by a control-c * for example ) * * this version of the program creates a new thread for * every connection request */ public class dateserverwiththreads { public static final int listening port = 32007 public static void main( string[] args ) { serversocket listener socket connection // listens for incoming connections // for communication with the connecting program /* accept and process connections forever or until some error occurs */ try { listener = new serversocket( listening port ) systemoutprintln( listening on port + listening port ) while ( true ) { // accept next connection request and create thread to handle it connection = listeneraccept( ) 630 chapter 12 </s>
<s> threads and multiprocessing connectionhandler handler = new connectionhandler( connection ) handlerstart( ) } } catch ( exception e ) { systemoutprintln( sorry the server has shut down ) systemoutprintln( error + e ) return } } // end main( ) /** * defines a thread that handles the connection with one * client */ private static class connectionhandler extends thread { socket client connectionhandler( socket socket ) { client = socket } public void run( ) { string clientaddress = clientgetinetaddress( )tostring( ) try { systemoutprintln( connection from + clientaddress ) date now = new date( ) // the current date and time printwriter outgoing // stream for sending data outgoing = new printwriter( clientgetoutputstream( ) ) outgoingprintln( nowtostring( ) ) outgoingflush( ) // make sure the data is actually sent! clientclose( ) } catch ( exception e ){ systemoutprintln( error on connection with + clientaddress + + e ) } } } } //end class dateserverwiththreads one interesting change is at the end of the run( ) method where i’ve added the clientaddress to the output of the error message </s>
<s> i did this to identify which connection the error message refers to </s>
<s> since threads run in parallel it’s possible for outputs from diﬀerent threads to be intermingled in various orders </s>
<s> messages from the same thread don’t necessarily come together in the output they might be separated by messages from other threads </s>
<s> this is just one of the complications that you have to keep in mind when working with threads! 1244 using a thread pool it’s not very eﬃcient to create a new thread for every connection especially when the connections are typically very short-lived </s>
<s> fortunately we have an alternative thread pools ( subsection 1232 ) 124 </s>
<s> threads and networking 631 dateserverwiththreadpooljava is an improved version of our server that uses a thread pool </s>
<s> each thread in the pool runs in an inﬁnite loop </s>
<s> each time through the loop it handles one connection </s>
<s> we need a way for the main program to send connections to the threads it’s natural to use a blocking queue named connectionqueue for that purpose </s>
<s> a connectionhandling thread takes connections from this queue </s>
<s> since it is blocking queue the thread blocks when the queue is empty and wakes up when a connection becomes available in the queue </s>
<s> no other synchronization or communication technique is needed it’s all built into the blocking queue </s>
<s> here is the run( ) method for the connection-handling threads public void run( ) { while ( true ) { socket client try { client = connectionqueuetake( ) // blocks until item is available } catch ( interruptedexception e ) { continue // ( if interrupted just go back to start of while loop ) } string clientaddress = clientgetinetaddress( )tostring( ) try { systemoutprintln( connection from + clientaddress ) systemoutprintln( handled by thread + this ) date now = new date( ) // the current date and time printwriter outgoing // stream for sending data outgoing = new printwriter( clientgetoutputstream( ) ) outgoingprintln( nowtostring( ) ) outgoingflush( ) // make sure the data is actually sent! clientclose( ) } catch ( exception e ){ systemoutprintln( error on connection with + clientaddress + + e ) } } } the main program in the meantime runs in an inﬁnite loop in which connections are accepted and added to the queue while ( true ) { // accept next connection request and put it in the queue connection = listeneraccept( ) try { connectionqueueput( connection ) // blocks if queue is full } catch ( interruptedexception e ) { } } the queue in this program is of type arrayblockingqueue<socket> </s>
<s> as such it has a limited capacity and the put( ) operation on the queue will block if the queue is full </s>
<s> but wait—didn’t we want to avoid blocking the main program when the main program is blocked the server is no longer accepting connections and clients who are trying to connect are kept waiting </s>
<s> would it be better to use a linkedblockingqueue with an unlimited capacity 632 chapter 12 </s>
<s> threads and multiprocessing in fact connections in the queue are waiting anyway they are not being serviced </s>
<s> if the queue grows unreasonably long connections in the queue will have to wait for an unreasonable amount of time </s>
<s> if the queue keeps growing indeﬁnitely that just means that the server is receiving connection requests faster than it can process them </s>
<s> that could happen for several reasons your server might simply not be powerful enough to handle the volume of traﬃc that you are getting you need to buy a new server </s>
<s> or perhaps the thread pool doesn’t have enough threads to fully utilize your server you should increase the size of the thread pool to match the server’s capabilities </s>
<s> or maybe your server is under a denial of service” attack in which some bad guy is deliberately sending your server more requests than it can handle in an attempt to keep other legitimate clients from getting service in any case arrayblockingqueue with limited capacity is the correct choice </s>
<s> the queue should be short enough so that connections in the queue will not have to wait too long for service </s>
<s> in a real server the size of the queue and the number of threads in the thread pool should be adjusted to tune” the server to account for the particular hardware and network on which the server is running and for the nature of the client requests that it typically processes optimal tuning is in general a diﬃcult problem there is by the way another way that things can go wrong suppose that the server needs to read some data from the client but the client doesn’t send the expected data </s>
<s> the thread that is trying to read the data can then block indeﬁnitely waiting for the input </s>
<s> if a thread pool is being used this could happen to every thread in the pool </s>
<s> in that case no further processing can ever take place! the solution to this problem is to have connections time out” if they are inactive for an excessive period of time </s>
<s> typically each connection thread will keep track of the time when it last received data from the client </s>
<s> the server runs another thread ( sometimes called a reaper thread” after the grim reaper ) that wakes up periodically and checks each connection thread to see how long it has been inactive </s>
<s> a connection thread that has been waiting too long for input is terminated and a new thread is started in its place </s>
<s> the question of how long the timeout period should be is another diﬃcult tuning issue 1245 distributed computing we have seen how threads can be used to do parallel processing where a number of processors work together to complete some task </s>
<s> so far we have assumed that all the processors were inside one multi-processor computer </s>
<s> but parallel processing can also be done using processors that are in diﬀerent computers as long as those computers are connected to a network over which they can communicate </s>
<s> this type of parallel processing—in which a number of computers work together on a task and communicate over a network—is called distributed computing in some sense the whole internet is an immense distributed computation but here i am interested in how computers on a network can cooperate to solve some computational problem there are several approaches to distributed computing that are supported in java </s>
<s> rmi and corba are standards that enable a program running on one computer to call methods in objects that exist on other computers </s>
<s> this makes it possible to design an object-oriented program in which diﬀerent parts of the program are executed on diﬀerent computers </s>
<s> rmi ( remote method invocation ) only supports communication between java objects </s>
<s> corba ( common object request broker architecture ) is a more general standard that allows objects written in various programming languages including java to communicate with each other as is commonly the case in networking there is the problem of locating services ( where in this case a service” means an object that is available to be called over the network ) </s>
<s> that is how can one computer know which computer a service is located on and what port it is listening 633 124 </s>
<s> threads and networking on rmi and corba solve this problem using a request broker”—a server program running at a known location keeps a list of services that are available on other computers </s>
<s> computers that oﬀer services register those services with the request broker computers that need services contact the broker to ﬁnd out where they are located rmi and corba are complex systems that are not very easy to use </s>
<s> i mention them here because they are part of java’s standard network api but i will not discuss them further instead we will look at a relatively simple demonstration of distributed computing that uses only basic networking the problem that we will consider is the same one that we used in multiprocessingdemo1java and its variations in section 122 and section 123 namely the computation of a complex image </s>
<s> this is an application that uses the simplest type of parallel programming in which the problem can be broken down into tasks that can be performed independently with no communication between the tasks </s>
<s> to apply distributed computing to this type of problem we can use one master” program that divides the problem into tasks and sends those tasks over the network to worker” programs that do the actual work </s>
<s> the worker programs send their results back to the master program which combines the results from all the tasks into a solution of the overall problem </s>
<s> in this context the worker programs are often called slaves” and the program uses the so-called master/slave approach to distributed computing the demonstration program is deﬁned by three source code ﬁles clmandelbrotmasterjava deﬁnes the master program clmandelbrotworkerjava deﬁnes the worker programs and clmandelbrottaskjava deﬁnes the class clmandelbrottask that represents an individual task that is performed by the workers </s>
<s> to run the demonstration you must start the clmandelbrotworker program on several computers ( probably by running it on the command line ) </s>
<s> this program uses clmandelbrottask so both class ﬁles clmandelbrotworkerclass and clmandelbrottaskclass must be present on the worker computers </s>
<s> you can then run clmandelbrotmaster on the master computer </s>
<s> note that this program also requires the class clmandelbrottask </s>
<s> you must specify the host name or ip address of each of the worker computers as command line arguments for clmandelbrotmaster </s>
<s> a worker program listens for connection requests from the master program and the master program must be told where to send those requests </s>
<s> for example if the worker program is running on three computers with ip addresses 17230217101 17230217102 and 17230217103 then you can run clmandelbrotmaster with the command java clmandelbrotmaster 17230217101 17230217102 17230217103 the master will make a network connection to the worker at each ip address these connections will be used for communication between the master program and the workers it is possible to run several copies of clmandelbrotworker on the same computer but they must listen for network connections on diﬀerent ports </s>
<s> it is also possible to run clmandelbrotworker on the same computer as clmandelbrotmaster </s>
<s> you might even see some speed-up when you do this if your computer has several processors </s>
<s> see the comments in the program source code ﬁles for more information but here are some commands that you can use to run the master program and two copies of the worker program on the same computer give these commands in separate command windows java clmandelbrotworker ( listens on default port ) java clmandelbrotworker 2501 java clmandelbrotmaster localhost ( listens on port 2501 ) localhost2501 634 chapter 12 </s>
<s> threads and multiprocessing every time clmandelbrotmaster is run it solves exactly the same problem ( for this demonstration the nature of the problem is not important but the problem is to compute the data needed for a picture of a small piece of the famous mandelbrot set” if you are interested in seeing the picture that is produced uncomment the call to the saveimage( ) method at the end of the main( ) routine in clmandelbrotmasterjava ) you can run clmandelbrotmaster with diﬀerent numbers of worker programs to see how the time required to solve the problem depends on the number of workers ( note that the worker programs continue to run after the master program exists so you can run the master program several times without having to restart the workers ) in addition if you run clmandelbrotmaster with no command line arguments it will solve the entire problem on its own so you can see how long it takes to do so without using distributed computing </s>
<s> in a trial that i ran on some rather old slow computers it took 40 seconds for clmandelbrotmaster to solve the problem on its own </s>
<s> using just one worker it took 43 seconds </s>
<s> the extra time represents extra work involved in using the network it takes time to set up a network connection and to send messages over the network </s>
<s> using two workers ( on diﬀerent computers ) the problem was solved in 22 seconds </s>
<s> in this case each worker did about half of the work and their computations were performed in parallel so that the job was done in about half the time with larger numbers of workers the time continued to decrease but only up to a point </s>
<s> the master program itself has a certain amount of work to do no matter how many workers there are and the total time to solve the problem can never be less than the time it takes for the master program to do its part </s>
<s> in this case the minimum time seemed to be about ﬁve seconds ∗ ∗ ∗ et’s take a look at how this distributed application is programmed </s>
<s> the master program divides the overall problem into a set of tasks </s>
<s> each task is represented by an object of type clmandelbrottask </s>
<s> these tasks have to be communicated to the worker programs and the worker programs must send back their results </s>
<s> some protocol is needed for this communication i decided to use character streams </s>
<s> the master encodes a task as a line of text which is sent to a worker </s>
<s> the worker decodes the text ( into an object of type clmandelbrottask ) to ﬁnd out what task it is supposed to perform </s>
<s> it performs the assigned task </s>
<s> it encodes the results as another line of text which it sends back to the master program </s>
<s> finally the master decodes the results and combines them with the results from other tasks </s>
<s> after all the tasks have been completed and their results have been combined the problem has been solved a worker receives not just one task but a sequence of tasks </s>
<s> each time it ﬁnishes a task and sends back the result it is assigned a new task </s>
<s> after all tasks are complete the worker receives a close” command that tells it to close the connection </s>
<s> in clmandelbrotworkerjava all this is done in a method named handleconnection( ) that is called to handle a connection that has already been opened to the master program </s>
<s> it uses a method readtask( ) to decode a task that it receives from the master and a method writeresults( ) to encode the results of the task for transmission back to the master </s>
<s> it must also handle any errors that occur private static void handleconnection( socket connection ) { try { bufferedreader in = new bufferedreader( new inputstreamreader( connectiongetinputstream( ) ) ) printwriter out = new printwriter( connectiongetoutputstream( ) ) while ( true ) { string line = inreadline( ) // message from the master if ( line == null ) { // end-of-stream encountered -- should not happen 124 </s>
<s> threads and networking 635 throw new exception( connection closed unexpectedly ) } if ( linestartswith( close connection command ) ) { // represents the normal termination of the connection systemoutprintln( received close command ) break } else if ( linestartswith( task command ) ) { // represents a clmandelbrottask that this worker is // supposed to perform clmandelbrottask task = readtask( line ) // decode the message taskcompute( ) // perform the task outprintln( writeresults( task ) ) // send back the results outflush( ) // make sure data is sent promptly! } else { // no other messages are part of the protocol throw new exception( illegal command received ) } } } catch ( exception e ) { systemoutprintln( client connection closed with error + e ) } finally { try { connectionclose( ) // make sure the socket is closed } catch ( exception e ) { } } } note that this method is not executed in a separate thread </s>
<s> the worker has only one thing to do at a time and does not need to be multithreaded turning to the master program clmandelbrotmasterjava we encounter a more complex situation </s>
<s> the master program must communicate with several workers over several network connections </s>
<s> to accomplish this the master program is multi-threaded with one thread to manage communication with each worker </s>
<s> a pseudocode outline of the main( ) routine is quite simple create a list of all tasks that must be performed if there are no command line arguments { // the master program does all the tasks itself perform each task } else { // the tasks will be performed by worker programs for each command line argument get information about a worker from command line argument create and start a thread to communicate with the worker wait for all threads to terminate } // all tasks are now complete ( assuming no error occurred ) 636 chapter 12 </s>
<s> threads and multiprocessing the list of tasks is stored in a variable tasks of type concurrentblockingqueue<clmandelbrottask> tasks ( see subsection 1232 ) the communication threads take tasks from this list and send them to worker programs </s>
<s> the method taskspoll( ) is used to remove a task from the queue </s>
<s> if the queue is empty it returns null which acts as a signal that all tasks have been assigned and the communication thread can terminate the job of a thread is to send a sequence of tasks to a worker thread and to receive the results that the worker sends back </s>
<s> the thread is also responsible for opening the connection in the ﬁrst place </s>
<s> a pseudocode outline for the process executed by the thread might look like create a socket connected to the worker program create input and output streams for communicating with the worker while ( true ) { et task = taskspoll( ) if task == null break // all tasks have been assigned encode the task into a message and transmit it to the worker read the response from the worker decode and process the response } send a close command to the worker close the socket this would work ok </s>
<s> however there are a few subtle points </s>
<s> first of all the thread must be ready to deal with a network error </s>
<s> for example a worker might shut down unexpectedly </s>
<s> but if that happens the master program can continue provided other workers are still available ( you can try this when you run the program stop one of the worker programs with control-c and observe that the master program still completes successfully ) a diﬃculty arises if an error occurs while the thread is working on a task if the problem as a whole is going to be completed that task will have to be reassigned to another worker </s>
<s> i take care of this by putting the uncompleted task back into the task list ( unfortunately my program does not handle all possible errors </s>
<s> if the last worker thread fails there will be no one left to take over the uncompleted task </s>
<s> also if a network connection hangs” indeﬁnitely without actually generating an error my program will also hang waiting for a response from a worker that will never arrive </s>
<s> a more robust program would have some way of detecting the problem and reassigning the task ) another defect in the procedure outlined above is that it leaves the worker program idle while the thread is processing the worker’s response </s>
<s> it would be nice to get a new task to the worker before processing the response from the previous task </s>
<s> this would keep the worker busy and allow two operations to proceed simultaneously instead of sequentially ( in this example the time it takes to process a response is so short that keeping the worker waiting while it is done probably makes no signiﬁcant diﬀerence </s>
<s> but as a general principle it’s desirable to have as much parallelism as possible in the algorithm ) we can modify the procedure to take this into account try { create a socket connected to the worker program create input and output streams for communicating with the worker et currenttask = taskspoll( ) encode currenttask into a message and send it to the worker while ( true ) { read the response from the worker 124 </s>
<s> threads and networking 637 et nexttask = taskspoll( ) if nexttask != null { // send nexttask to the worker before processing the // response to currenttask encode nexttask into a message and send it to the worker } decode and process the response to currenttask currenttask = nexttask if ( currenttask == null ) break // all tasks have been assigned } send a close command to the worker close the socket } catch ( exception e ) { put uncompleted task if any back into the task queue } finally { close the connection } finally here is how this translates into java </s>
<s> the pseudocode presented above becomes the run( ) method in the class that deﬁnes the communication threads used by the master program /** * this class represents one worker thread </s>
<s> the job of a worker thread * is to send out tasks to a clmandelbrotworker program over a network * connection and to get back the results computed by that program */ private static class workerconnection extends thread { int id string host int port // identifies this thread in output statements // the host to which this thread will connect // the port number to which this thread will connect /** * the constructor just sets the values of the instance * variables id host and port and starts the thread */ workerconnection( int id string host int port ) { thisid = id thishost = host thisport = port start( ) } /** * the run( ) method of the thread opens a connection to the host and * port specified in the constructor then sends tasks to the * clmandelbrotworker program on the other side of that connection * if the thread terminates normally it outputs the number of tasks * that it processed </s>
<s> if it terminates with an error it outputs * an error message */ public void run( ) { 638 chapter 12 </s>
<s> threads and multiprocessing int taskscompleted = 0 // how many tasks has this thread handled socket socket // the socket for the connection try { socket = new socket( hostport ) // open the connection } catch ( exception e ) { systemoutprintln( thread + id + could not open connection to + host + + port ) systemoutprintln( error + e ) return } clmandelbrottask currenttask = null clmandelbrottask nexttask = null try { printwriter out = new printwriter( socketgetoutputstream( ) ) bufferedreader in = new bufferedreader( new inputstreamreader( socketgetinputstream( ) ) ) currenttask = taskspoll( ) if ( currenttask != null ) { // send first task to the worker program string taskstring = writetask( currenttask ) outprintln( taskstring ) outflush( ) } while ( currenttask != null ) { string resultstring = inreadline( ) // get results for currenttask if ( resultstring == null ) throw new ioexception( connection closed unexpectedly ) if ( ! resultstringstartswith( result command ) ) throw new ioexception( illegal string received from worker ) nexttask = taskspoll( ) // get next task and send it to worker if ( nexttask != null ) { // send nexttask to worker before processing results for // currenttask so that the worker can work on nexttask // while the currenttask results are processed string taskstring = writetask( nexttask ) outprintln( taskstring ) outflush( ) } readresults( resultstring currenttask ) finishtask( currenttask ) // process results from currenttask taskscompleted++ currenttask = nexttask // we are finished with old currenttask nexttask = null } outprintln( close connection command ) // send close command to worker outflush( ) } catch ( exception e ) { systemoutprintln( thread + id + terminated because of an error ) systemoutprintln( error + e ) eprintstacktrace( ) 125 </s>
<s> network programming example 639 // put uncompleted tasks if any back into the task list if ( currenttask != null ) reassigntask( currenttask ) if ( nexttask != null ) reassigntask( nexttask ) } finally { systemoutprintln( thread + id + ending after completing + taskscompleted + tasks ) try { socketclose( ) } catch ( exception e ) { } } } //end run( ) } // end nested class workerconnection 125 network programming example a networked game framework this section presents several programs that use networking and threads </s>
<s> the common problem in each application is to support network communication between several programs running on diﬀerent computers </s>
<s> a typical example of such an application is a networked game with two or more players but the same problem can come up in less frivolous applications as well </s>
<s> the ﬁrst part of this section describes a common framework that can be used for a variety of such applications and the rest of the section discusses three speciﬁc applications that use that framework this section was inspired by a pair of students alexander kittelberger and kieran koehnlein who wanted to write a networked poker game as a ﬁnal project in a class that i was teaching </s>
<s> i helped them with the network part of the project by writing a basic framework to support communication between the players </s>
<s> since the application illustrates a variety of important ideas i decided to include a somewhat more advanced and general version of that framework in the current edition of this book </s>
<s> the ﬁnal example is a networked poker game 1251 the netgame framework one can imagine playing many diﬀerent games over the network </s>
<s> as far as the network goes all of those games have at least one thing in common there has to be some way for actions taken by one player to be communicated over the network to other players </s>
<s> it makes good programming sense to make that capability available in a reusable common core that can be used in many diﬀerent games </s>
<s> i have written such a core it is deﬁned by several classes in the package netgamecommon we have not done much with packages in this book aside from using built-in classes </s>
<s> packages were introduced in subsection 264 but we have stuck to the default package” in our programming examples </s>
<s> in practice however packages are used in all but the simplest programming projects to divide the code into groups of related classes </s>
<s> it makes particularly good 640 chapter 12 </s>
<s> threads and multiprocessing sense to deﬁne a reusable framework in a package that can be included as a unit in a variety of projects integrated development environments such as eclipse or netbeans make it very easy to use packages to use the netgame package in a project in an ide simply copy-and-paste the entire netgame directory into the project if you work on the command line you should be in a working directory that includes the netgame directory as a subdirectory </s>
<s> then to compile all the java ﬁles in the package netgamecommon for example you can use the following command in mac os or linux javac netgame/common/*java for windows you should use backslashes instead of forward slashes javac netgamecommon*java to run a main program that is deﬁned in a package you should again be in a directory that contains the package as a subdirectory and you should use the full name of the class that you want to run </s>
<s> for example the chatroomserver class discussed later in this section is deﬁned in the package netgamechat so you would run it with the command java netgamechatchatroomserver i will have more to say about packages in the ﬁnal example of the book in section 135 ∗ ∗ ∗ the applications discussed in this section are examples of distributed computing since they involve several computers communicating over a network </s>
<s> like the example in subsection 1245 they use a central server” or master” to which a number of clients” will connect </s>
<s> all communication goes through the server a client cannot send messages directly to another client </s>
<s> in this section i will refer to the server as a hub in the sense of communications hub” client client hub client client in subsection 1245 messages were sent back and forth between the server and the client in a deﬁnite predetermined sequence </s>
<s> communication between the server and a client was actually communication between one thread running on the server and another thread running on the client </s>
<s> for the netgame framework however i want to allow for asynchronous communication in which it is not possible to wait for messages to arrive in a predictable sequence </s>
<s> to make this possible a netgame client will use two threads for communication one for sending messages and one for receiving messages </s>
<s> similarly the netgame hub will use two threads for communicating with each client 641 125 </s>
<s> network programming example the hub is generally connected to many clients and can receive messages from any of those clients at any time </s>
<s> the hub will have to process each message in some way </s>
<s> to organize this processing the hub uses a single thread to process all incoming messages </s>
<s> when a communication thread receives a message from a client it simply drops that message into a queue of incoming messages </s>
<s> there is only one such queue which is used for messages from all clients the message processing thread runs in a loop in which it removes a message from the queue processes it removes another message from the queue processes it and so on </s>
<s> the queue itself is implemented as an object of type linkedblockingqueue ( see subsection 1233 ) send thread client hub receive thread receive send incoming messages queue message processing thread client there is one more thread in the hub not shown in the illustration </s>
<s> this ﬁnal thread creates a serversocket and uses it to listen for connection requests from clients </s>
<s> each time it accepts a connection request it hands oﬀ the client to another object deﬁned by the nested class connectiontoclient which will handle communication with that client </s>
<s> each connected client is identiﬁed by an id number </s>
<s> id numbers 1 2 3 are assigned to clients as they connect </s>
<s> since clients can also disconnect the clients connected at any give time might not have consecutive ids </s>
<s> a variable of type treemap<integerconnectiontoclient> associates the id numbers of connected clients with the objects that handle their connections the messages that are sent and received are objects </s>
<s> the i/o streams that are used for reading and writing objects are of type objectinputstream and objectoutputstream ( see subsection 1116 ) the output stream of a socket is wrapped in an objectoutputstream to make it possible to transmit objects through that socket </s>
<s> the socket’s input stream is wrapped in an objectinputstream to make it possible to receive objects </s>
<s> remember that the objects that are used with such streams must implement the interface javaioserializable the netgame hub class is deﬁned in the ﬁle hubjava in the package netgamecommon the port on which the server socket will listen must be speciﬁed as a parameter to the hub constructor </s>
<s> the hub class deﬁnes a method protected void messagereceived( int playerid object message ) which is called to process messages that are received from clients </s>
<s> the ﬁrst parameter playerid is the id number of the client from whom the message was received and the second parameter is the message itself </s>
<s> in the hub class this method will simply forward the message to all connected clients </s>
<s> to forward the message it wraps both the playerid and the message in an object of type forwardedmessage ( deﬁned in the ﬁle forwardedmessagejava in the package netgamecommon ) </s>
<s> in a simple application such as the chat room discussed in the next subsection this might be suﬃcient </s>
<s> for most applications however it will be necessary to 642 chapter 12 </s>
<s> threads and multiprocessing deﬁne a subclass of hub and redeﬁne the messagereceived( ) method to do more complicated message processing </s>
<s> there are several other methods that a subclass might redeﬁne including • protected void playerconnected( int playerid ) — this method is called each time a player connects to the hub </s>
<s> the parameter playerid is the id number of the newly connected player </s>
<s> in the hub class this method does nothing </s>
<s> note that the complete list of id numbers for currently connected players can be obtained by calling getplayerlist( ) • protected void playerdisconnected( int playerid ) — this is called each time a player disconnects from the hub </s>
<s> the parameter tells which player has just disconnected in the hub class this method does nothing the hub class also deﬁnes a number of useful public methods notably • sendtoall( message ) — sends the speciﬁed message to every client that is currently connected to the hub </s>
<s> the message must be a non-null object that implements the serializable interface • sendtoone( recipientidmessage ) — sends a speciﬁed message to just one user </s>
<s> the ﬁrst parameter recipientid is the id number of the client who will receive the message this method returns a boolean value which is false if there is no connected client with the speciﬁed recipientid • shutdownserversocket( ) — shuts down the hub’s server socket so that no additional clients will be able to connect </s>
<s> this could be used for example in a two-person game after the second client has connected • setautoreset( autoreset ) — sets the boolean value of the autoreset property </s>
<s> if this property is true then the objectoutputstreams that are used to transmit messages to clients will automatically be reset before each message is transmitted ( resetting an objectoutputstream is something that has to be done if an object is written to the stream modiﬁed and then written to the stream again </s>
<s> if the stream is not reset before writing the modiﬁed object then the old unmodiﬁed value is sent to the stream instead of the new value </s>
<s> see subsection 1116 for a discussion of this technicality ) for more information—and to see how all this is implemented—you should read the source code ﬁle hubjava </s>
<s> with some eﬀort you should be able to understand everything in that ﬁle ∗ ∗ ∗ turning to the client side the basic netgame client class is deﬁned in the ﬁle clientjava in the package netgamecommon </s>
<s> the client class has a constructor that speciﬁes the host name ( or ip address ) and port number of the hub to which the client will connect </s>
<s> this constructor blocks until the connection has been established client is an abstract class </s>
<s> every netgame application must deﬁne a subclass of client and provide a deﬁnition for the abstract method abstract protected void messagereceived( object message ) this method is called each time a message is received from the netgame hub to which the client is connected </s>
<s> a subclass of client might also override the protected methods playerconnected playerdisconnected servershutdown and connectionclosedbyerror </s>
<s> see the source code for more information </s>
<s> i should also note that client contains the protected instance variable connectedplayerids of type int[] an array containing the id numbers of all the clients that are currently connected to the hub </s>
<s> the most important public methods that are provided by the client class are 643 125 </s>
<s> network programming example • send( message ) — transmits a message to the hub </s>
<s> the message can be any non-null object that implements the serializable interface • getid( ) — gets the id number that was assigned to this client by the hub • disconnect( ) — closes the client’s connection to the hub </s>
<s> it is not possible to send messages after disconnecting </s>
<s> the send( ) method will throw an illegalstateexception if an attempt is made to do so the hub and client classes are meant to deﬁne a general framework that can be used as the basis for a variety of networked games—and indeed of other distributed programs </s>
<s> the low level details of network communication and multithreading are hidden in the private sections of these classes </s>
<s> applications that build on these classes can work in terms of higher-level concepts such as players and messages </s>
<s> the design of these classes was developed though several iterations based on experience with several actual applications </s>
<s> i urge you to look at the source code to see how hub and client use threads sockets and streams </s>
<s> in the remainder of this section i will discuss three applications built on the netgame framework </s>
<s> i will not discuss these applications in great detail </s>
<s> you can ﬁnd the complete source code for all three in the netgame package 1252 a simple chat room our ﬁrst example is a chat room” a network application where users can connect to a server and can then post messages that will be seen by all current users of the room </s>
<s> it is similar to the guichat program from subsection 1242 except that any number of users can participate in a chat </s>
<s> while this application is not a game as such it does show the basic functionality of the netgame framework the chat room application consists of two programs </s>
<s> the ﬁrst chatroomserverjava is a completely trivial program that simply creates a netgame hub to listen for connection requests from netgame clients public static void main( string[] args ) { try { new hub( port ) } catch ( ioexception e ) { systemoutprintln( can’t create listening socket } } shutting down ) the port number port is deﬁned as a constant in the program and is arbitrary as long as both the server and the clients use the same port the second part of the chat room application is the program chatroomwindowjava which is meant to be run by users who want to participate in the chat room </s>
<s> a potential user must know the name ( or ip address ) of the computer where the hub is running ( for testing it is possible to run the client program on the same computer as the hub using localhost as the name of the computer where the hub is running ) when chatroomwindow is executed it uses a dialog box to ask the user for this information </s>
<s> it then opens a window that will serve as the user’s interface to the chat room </s>
<s> the window has a large transcript area that displays messages that users post to the chat room </s>
<s> it also has a text input box where the user can enter messages </s>
<s> when the user enters a message that message will be posted to the transcript 644 chapter 12 </s>
<s> threads and multiprocessing of every user who is connected to the hub so all users see every message sent by every user et’s look at some of the programming any netgame application must deﬁne a subclass of the abstract client class </s>
<s> for the chat room application clients are deﬁned by a nested class chatclient inside chatroomwindow the program has an instance variable connection of type chatclient which represents the program’s connection to the hub </s>
<s> when the user enters a message that message is sent to the hub by calling connectionsend( message ) when the hub receives the message it packages it into an object of type forwardedmessage along with the id number of the client who sent the message </s>
<s> the hub sends a copy of that forwardedmessage to every connected client including the client who sent the message </s>
<s> when the message is received from the hub by a client object the messagereceived( ) method of the client object is called </s>
<s> chatclient overrides this method to make it add the message to the transcript of the chatclientwindow a client is also notiﬁed when a player connects to or disconnects from the hub and when the connection with the hub is lost </s>
<s> chatclient overrides the methods that are called when these events happen so that they post appropriate messages to the transcript </s>
<s> here’s the complete deﬁnition of the client class for the chat room application /** * a chatclient connects to a hub and is used to send messages to * and receive messages from the hub </s>
<s> messages received from the * hub will be of type forwardedmessage and will contain the * id number of the sender and the string that was sent by that user */ private class chatclient extends client { /** * opens a connection to the chat room server on a specified computer */ chatclient( string host ) throws ioexception { super( host port ) } /** * responds when a message is received from the server </s>
<s> it should be * a forwardedmessage representing something that one of the participants * in the chat room is saying </s>
<s> the message is simply added to the * transcript along with the id number of the sender */ protected void messagereceived( object message ) { if ( message instanceof forwardedmessage ) { // ( no other message types are expected ) forwardedmessage fm = ( forwardedmessage )message addtotranscript( # + fmsenderid + says + fmmessage ) } } /** * called when the connection to the client is shut down because of some * error message ( this will happen if the server program is terminated ) */ 125 </s>
<s> network programming example 645 protected void connectionclosedbyerror( string message ) { addtotranscript( sorry communication has shut down due to an errorn + message ) sendbuttonsetenabled( false ) messageinputsetenabled( false ) messageinputseteditable( false ) messageinputsettext( ) connected = false connection = null } /** * posts a message to the transcript when someone leaves the chat room */ protected void playerconnected( int newplayerid ) { addtotranscript( someone new has joined the chat room with id number + newplayerid ) } /** * posts a message to the transcript when someone leaves the chat room */ protected void playerdisconnected( int departingplayerid ) { addtotranscript( the person with id number + departingplayerid + has left the chat room ) } } // end nested class chatclient for the full source code of the chat room application see the source code ﬁles which can be found in the package netgamechat note a user of my chat room application is identiﬁed only by an id number that is assigned by the hub when the client connects </s>
<s> essentially users are anonymous which is not very satisfying </s>
<s> see exercise 126 at the end of this chapter for a way of addressing this issue 1253 a networked tictactoe game my second example is a very simple game the familiar children’s game tictactoe </s>
<s> in tictactoe two players alternate placing marks on a three-by-three board </s>
<s> one player plays x’s the other plays o’s </s>
<s> the object is to get three x’s or three o’s in a row at a given time the state of a tictactoe game consists of various pieces of information such as the current contents of the board whose turn it is and—when the game is over—who won or lost </s>
<s> in a typical non-networked version of the game this state would be represented by instance variables </s>
<s> the program would consult those instance variables to determine how to draw the board and how to respond to user actions such as mouse clicks </s>
<s> in the networked netgame version however there are three programs involved two copies of a client program which provide the interface to the two players of the game and the hub program that manages the connections to the clients </s>
<s> these programs are not even running on the same computer so they can’t share the same instance variables </s>
<s> nevertheless the game has to have a single well-deﬁned state at any time and both players have to be aware of that state my solution is to store the oﬃcial” game state in the hub and to send a copy of that state to each player every time the state changes </s>
<s> the players can’t change the state directly </s>
<s> when a player takes some action such as placing a piece on the board that action is sent as a message 646 chapter 12 </s>
<s> threads and multiprocessing to the hub </s>
<s> the hub changes the state to reﬂect the result of the action and it sends the new state to both players </s>
<s> the window used by each player will then be updated to reﬂect the new state </s>
<s> in this way we can be sure that the game always looks the same to both players networked tictactoe is deﬁned in several classes in the package netgametictactoe </s>
<s> tictactoegamestate represents the state of a game </s>
<s> it includes a method public void applymessage( int senderid object message ) that modiﬁes the state to reﬂect the eﬀect of a message received from one of the players of the game </s>
<s> the message will represent some action taken by the player such as clicking on the board the hub class knows nothing about tictactoe </s>
<s> since the hub for the tictactoe game has to keep track of the state of the game it has to be deﬁned by a subclass of hub </s>
<s> the tictactoegamehub class is quite simple </s>
<s> it overrides the messagereceived( ) method so that it responds to a message from a player by applying that message to the game state and sending a copy of the new state to both players </s>
<s> it also overrides the playerconnected( ) and playerdisconnected( ) methods to take appropriate actions since the game can only be played when there are exactly two connected players </s>
<s> here is the complete source code package netgametictactoe import javaioioexception import netgamecommonhub /** * a hub for the network tictactoe game </s>
<s> there is only one hub * for a game and both network players connect to the same hub * official information about the state of the game is maintained * on the hub </s>
<s> when the state changes the hub sends the new * state to both players ensuring that both players see the * same state */ public class tictactoegamehub extends hub { private tictactoegamestate state // records the state of the game /** * create a hub listening on the specified port </s>
<s> note that this * method calls setautoreset( true ) which will cause the output stream * to each client to be reset before sending each message </s>
<s> this is * essential since the same state object will be transmitted over and * over with changes between each transmission * @param port the port number on which the hub will listen * @throws ioexception if a listener cannot be opened on the specified port */ public tictactoegamehub( int port ) throws ioexception { super( port ) state = new tictactoegamestate( ) setautoreset( true ) } /** * responds when a message is received from a client </s>
<s> in this case * the message is applied to the game state by calling stateapplymessage( ) * then the possibly changed state is transmitted to all connected players 125 </s>
<s> network programming example 647 */ protected void messagereceived( int playerid object message ) { stateapplymessage( playerid message ) sendtoall( state ) } /** * this method is called when a player connects </s>
<s> if that player * is the second player then the server’s listening socket is * shut down ( because only two players are allowed ) the * first game is started and the new state -- with the game * now in progress -- is transmitted to both players */ protected void playerconnected( int playerid ) { if ( getplayerlist( )length == 2 ) { shutdownserversocket( ) statestartfirstgame( ) sendtoall( state ) } } /** * this method is called when a player disconnects </s>
<s> this will * end the game and cause the other player to shut down as * well </s>
<s> this is accomplished by setting stateplayerdisconnected * to true and sending the new state to the remaining player if * there is one to notify that player that the game is over */ protected void playerdisconnected( int playerid ) { stateplayerdisconnected = true sendtoall( state ) } } a player’s interface to the game is represented by the class tictactoewindow </s>
<s> as in the chat room application this class deﬁnes a nested subclass of client to represent the client’s connection to the hub </s>
<s> one interesting point is how the client responds to a message from the hub </s>
<s> such a message represents a new game state </s>
<s> when the message is received the window must be updated to show the new state </s>
<s> the message is received and processed by one thread the updating is done in another thread </s>
<s> this has the potential of introducing race conditions that require synchronization ( in particular as i was developing the program i found that it was possible for a message to be received before the window’s constructor had ﬁnished executing </s>
<s> this led to a very hard-to-diagnose bug because my response to the message was trying to use objects that had not yet been created ) when working with the swing api it is recommended that all modiﬁcations to the gui be made in the gui event thread </s>
<s> an alternative would be to make paintcomponent( ) and other methods synchronized but that would negatively impact the performance of the gui swing includes a method swingutilititesinvokelater( runnable ) to make it possible to run arbitrary code in the gui event thread </s>
<s> the parameter runnable is an object that implements the runnable interface that was discussed in subsection 1211 </s>
<s> a runnable object has a run( ) method </s>
<s> swingutilitiesrunlater( ) will schedule the run( ) method of the object to be executed in the gui event thread </s>
<s> it will be executed after that thread has 648 chapter 12 </s>
<s> threads and multiprocessing ﬁnished handling any pending events </s>
<s> by executing run( ) in the event thread you can be sure that it will not introduce any synchronization problems </s>
<s> in the tictactoe client class this technique is used in the method that processes events received from the hub protected void messagereceived( final object message ) { if ( message instanceof tictactoegamestate ) { swingutilitiesinvokelater( new runnable( ){ public void run( ) { // the newstate( ) method updates the gui for the new state newstate( ( tictactoegamestate )message ) } } ) } } ( the swingutilities class by the way includes a variety of useful static methods that can be used in programming with swing it’s worth taking a look at the documentation for that class ) to run the tictactoe netgame the two players should each run the program mainjava in the package netgametictactoe </s>
<s> this program presents the user with a dialog box where the user can choose to start a new game or to join an existing game </s>
<s> if the user starts a new game then a tictactoehub is created to manage the game a tictactoewindow is created and connects to that hub </s>
<s> if the user chooses to connect to an existing game then only the window is created that window connects to the hub that was created by the ﬁrst player </s>
<s> the second player has to know the name of the computer where the ﬁrst player’s program is running </s>
<s> as usual for testing you can run everything on one computer and use localhost” as the computer name 1254 a networked poker game and ﬁnally we turn very brieﬂy to the application that inspired the netgame framework poker in particular i have implemented a two-player version of the traditional ﬁve card draw” version of that game </s>
<s> this is a rather complex application and i do not intend to say much about it here other than to describe the general design </s>
<s> the full source code can be found in the package netgameﬁvecarddraw </s>
<s> to fully understand it you will need to be familiar with the game of ﬁve card draw poker </s>
<s> and it uses some techniques from section 131 for drawing the cards in general outline the poker game is similar to the tictactoe game </s>
<s> there is a main class that can be run by either player to start a new game or to join an existing game </s>
<s> there is a class pokergamestate to represent the state of a game </s>
<s> and there is a subclass pokerhub of hub to manage the game but poker is a much more complicated game than tictactoe and the game state is correspondingly more complicated </s>
<s> it’s not clear that we want to broadcast a new copy of the complete game state to the players every time some minor change is made in the state </s>
<s> furthermore it doesn’t really make sense for both players to know the full game state—that would include the opponent’s hand and full knowledge of the deck from which the cards are dealt ( of course our client programs wouldn’t have to show the full state to the players but it would be easy enough for a player to substitute their own client program to enable cheating ) so in the poker application the full game state is known only to the pokerhub </s>
<s> a pokergamestate object represents a view of the game from the point of view of one player only </s>
<s> when the state of the game changes the pokerhub creates two diﬀerent pokergamestate objects representing the state of the game from each player’s point of view and it sends the appropriate game state objects to each player </s>
<s> you can see the source code for details 125 </s>
<s> network programming example 649 ( one of the hard parts in poker is to implement some way to compare two hands to see which is higher </s>
<s> in my game this is handled by the class pokerrank </s>
<s> you might ﬁnd this class useful in other poker games ) 650 chapter 12 </s>
<s> threads and multiprocessing exercises for chapter 12 1 </s>
<s> subsection 1213 discusses the need for synchronization in multithreaded programs and it deﬁnes a threadsafecounter class with the necessary synchronization </s>
<s> is this really important can you really get errors by using an unsynchronized counter with multiple threads write a program to ﬁnd out </s>
<s> use the following unsynchronized counter class which you can include as a nested class in your program static class counter { int count void inc( ) { count = count+1 } int getcount( ) { return count } } write a thread class that will call the inc( ) method in this class a speciﬁed number of times </s>
<s> create several threads start them all and wait for all the threads to terminate print the ﬁnal value of the counter and see whether it is correct et the user enter the number of threads and the number of times that each thread will increment the counter </s>
<s> you might need a fairly large number of increments to see an error </s>
<s> and of course there can never be any error if you use just one thread </s>
<s> your program can use join( ) to wait for a thread to terminate ( see subsection 1212 ) 2 </s>
<s> exercise 32 asked you to ﬁnd the integer in the range 1 to 10000 that has the largest number of divisors </s>
<s> now write a program that uses multiple threads to solve the same problem but for the range 1 to 100000 ( or less if you don’t have a fast computer ) </s>
<s> by using threads your program will take less time to do the computation when it is run on a multiprocessor computer </s>
<s> at the end of the program output the elapsed time the integer that has the largest number of divisors and the number of divisors that it has the program can be modeled on the sample prime-counting program threadtest2java from subsection 1213 </s>
<s> for this exercise you should simply divide up the problem into parts and create one thread to do each part 3 </s>
<s> in the previous exercise you divided up a large task into a small number of large pieces and created a thread to execute each task </s>
<s> because of the nature of the problem this meant that some threads had much more work to do than others—it is much easier to ﬁnd the number of divisors of a small number than it is of a big number </s>
<s> as discussed in subsection 1231 a better approach is to break up the problem into a fairly large number of smaller problems </s>
<s> subsection 1232 shows how to use a thread pool to execute the tasks each thread in the pool runs in a loop in which it repeatedly takes a task from a queue and carries out that task </s>
<s> implement a thread pool strategy for solving the same maximum-number-of-divisors problem as in the previous exercise to make things even more interesting you should try a new technique for combining the results from all the tasks use two queues in your program </s>
<s> use a queue of tasks as usual to hold the tasks that will be executed by the thread pool ( subsection 1232 ) </s>
<s> but also use a queue of results produced by the threads </s>
<s> when a task completes the result exercises 651 from that task should be placed into the result queue </s>
<s> the main program can read results from the second queue as they become available and combine all the results to get the ﬁnal answer </s>
<s> the result queue will have to be a blocking queue ( subsection 1233 ) since the main program will have to wait for tasks to become available </s>
<s> note that the main program knows the exact number of results that it expects to read from the queue so it can do so in a for loop when the for loop completes the main program knows that all the tasks have been executed 4 </s>
<s> in exercise 113 you wrote a network server program that can send text ﬁles from a speciﬁed directory to clients </s>
<s> that program used a single thread which handled all the communication with each client </s>
<s> modify the program to turn it into a multithreaded server </s>
<s> use a thread pool of connection-handling threads and use an arrayblockingqueue to get connected sockets from the main( ) routine to the threads </s>
<s> the sample program dateserverwiththreadsjava from subsection 1243 is an example of a multithreaded server that works in this way </s>
<s> your server program will work with the same client program as the original server </s>
<s> you wrote the client program as the solution to exercise 114 5 </s>
<s> it is possible to get an estimate of the mathematical constant π by using a random process the idea is based on the fact that the area of a circle of radius 1 is equal to π and the area of a quarter of that circle is π/4 </s>
<s> here is a picture of a quarter of a circle of radius 1 inside a 1-by-1 square the area of the whole square is one while the area of the part inside the circle is π/4 </s>
<s> if we choose a point in the square at random the probability that it is inside the circle is π/4 </s>
<s> if we choose n points in the square at random and if c of them are inside the circle we expect the fraction c/n of points that fall inside the circle to be about π/4 </s>
<s> that is we expect 4*c/n to be close to π </s>
<s> if n is large we can expect 4*c/n to be a good estimate for π and as n gets larger and larger the estimate is likely to improve we can pick a random number in the square by choosing numbers x and y in the range 0 to 1 ( using mathrandom( ) ) </s>
<s> since the equation of the circle is x*x+y*y=1 the point lies inside the circle if x*x+y*y is less than 1 </s>
<s> one trial consists of picking x and y and testing whether x*x+y*y is less than 1 </s>
<s> to get an estimate for π you have to do many trials count the trials and count the number of trials in which x*x+y*y is less than 1 for this exercise you should write a gui program that does this computation and displays the result </s>
<s> the computation should be done in a separate thread and the results should be displayed periodically </s>
<s> the program can use jlabels to the display the results it should set the text on the labels after running each batch of say one million trials ( setting the text after each trial doesn’t make sense since millions of trials can be done in one second and trying to change the display millions of times per second would be silly your program should have a run”/”pause” button that controls the computation when the program starts clicking run” will start the computation and change the text on the button to pause” </s>
<s> clicking pause” will cause the computation to pause </s>
<s> the 652 chapter 12 </s>
<s> threads and multiprocessing thread that does the computation should be started at the beginning of the program but should immediately go into the paused state until the run” button is pressed </s>
<s> use the wait( ) method in the thread to make it wait until run” is pressed </s>
<s> use the notify( ) method when the run” button is pressed to wake up the thread </s>
<s> use a boolean signal variable running to control whether the computation thread is paused ( the wait( ) and notify( ) methods are covered in subsection 1234 ) here is a picture of the program after it has run more than ten billion trials you might want to start with a version of the program with no control button </s>
<s> in that version the computation thread can run continually from the time it is started </s>
<s> once that is working you can add the button and the control feature to get you started here is the code from the thread in my solution that runs one batch of trials and updates the display labels for ( int i = 0 i < batch size i++ ) { double x = mathrandom( ) double y = mathrandom( ) trialcount++ if ( x*x + y*y < 1 ) incirclecount++ } double estimateforpi = 4 * ( ( double )incirclecount / trialcount ) countlabelsettext( number of trials + trialcount ) piestimatelabelsettext( current estimate + estimateforpi ) the variables trialcount and incirclecount are of type long in order to allow the number of trials to be more than the two billion or so that would be possible with a variable of type int ( i was going to ask you to use multiple computation threads one for each available processor but i ran into an issue when using the mathrandom( ) method in several threads this method requires synchronization which causes serious performance problems when several threads are using it to generate large amounts of random numbers </s>
<s> a solution to this problem is to have each thread use its own object of type javautilrandom to generate its random numbers ( see subsection 531 ) </s>
<s> my on-line solution to this exercise discusses this problem further ) 6 </s>
<s> the chat room example from subsection 1252 can be improved in several ways </s>
<s> first it would be nice if the participants in the chat room could be identiﬁed by name instead of by number </s>
<s> second it would be nice if one person could send a private message to another person that would be seen just by that person rather than by everyone </s>
<s> make these two changes </s>
<s> you can start with a copy of the package netgamechat </s>
<s> you will also need the package netgamecommon which deﬁnes the netgame framework to make the ﬁrst change you will have to implement a subclass of hub that can keep track of client names as well as numbers </s>
<s> to get the name of a client to the hub you exercises 653 can override the extrahandshake( ) method both in the hub subclass and in the client subclass </s>
<s> the extrahandshake( ) method is called as part of setting up the connection between the client and the hub </s>
<s> it is called after the client has been assigned an id number but before the connection is considered to be fully connected </s>
<s> it should throw an ioexception if some error occurs during the setup process </s>
<s> note that messages that are sent by the hub should be read by the client and vice versa </s>
<s> the extrahandshake( ) method in the client is deﬁned as protected void extrahandshake( objectinputstream in objectoutputstream out ) throws ioexception while in the hub there is an extra parameter that tells the id number of the client whose connection is being set up protected void extrahandshake( in playerid objectinputstream in objectoutputstream out ) throws ioexception in the chatroomwindow class the main( ) routine asks the user for the name of the computer where the server is running </s>
<s> you can add some code there to ask the user their name </s>
<s> you will have to decide what to do if two users want to use the same name </s>
<s> you might consider having a list of users who are allowed to join the chat room </s>
<s> you might even assign them passwords for the second improvement personal messages i suggest deﬁning a privatemessage class </s>
<s> a privatemessage object would include both the string that represents the message and the id numbers of the player to whom the message is being sent and the player who sent the message </s>
<s> the hub will have to be programmed to know how to deal with such messages </s>
<s> a privatemessage should only be sent to the client who is listed as the recipient of the message </s>
<s> you need to decide how the user will input a private message and how the user will select the recipient of the message 654 chapter 12 </s>
<s> threads and multiprocessing quiz on chapter 12 1 </s>
<s> write a complete subclass of thread to represent a thread that writes out the numbers from 1 to 10 </s>
<s> then write some code that would create and start a thread belonging to that class 2 </s>
<s> suppose that thrd is an object of type thread </s>
<s> explain the diﬀerence between calling thrdstart( ) and calling thrdrun( ) 3 </s>
<s> what is a race condition 4 </s>
<s> how does synchronization prevent race conditions and what does it mean to say that synchronization only provides mutual exclusion 5 </s>
<s> suppose that a program uses a single thread that takes 4 seconds to run </s>
<s> now suppose that the program creates two threads and divides the same work between the two threads what can be said about the expected execution time of the program that uses two threads 6 </s>
<s> what is an arrayblockingqueue and how does it solve the producer/consumer problem 7 </s>
<s> what is a thread pool 8 </s>
<s> network server programs are often multithreaded </s>
<s> explain what this means and why it is true 9 </s>
<s> why does a multithreaded network server program often use many times more threads than the number of available processors 10 </s>
<s> consider the threadsafecounter example from subsection 1213 public class threadsafecounter { private int count = 0 // the value of the counter synchronized public void increment( ) { count = count + 1 } synchronized public int getvalue( ) { return count } } the increment( ) method is synchronized so that the caller of the method can complete the three steps of the operation get value of count” add 1 to value” store new value in count” without being interrupted by another thread </s>
<s> but getvalue( ) consists of a single simple step </s>
<s> why is getvalue( ) synchronized ( this is a deep and tricky question ) chapter 13 advanced gui programming it’s possible to program a wide variety of gui applications using only the techniques covered in chapter 6 </s>
<s> in many cases the basic events components layouts and graphics routines covered in that chapter suﬃce </s>
<s> but the swing graphical user interface library is far richer than what we have seen so far and it can be used to build highly sophisticated applications </s>
<s> this chapter is a further introduction to swing and other aspects of gui programming </s>
<s> although the title of the chapter is advanced gui programming” it is still just an introduction </s>
<s> full coverage of this topic would require at least another complete book 131 images and resources we have seen how to use the graphics class to draw on a gui component that is visible on the computer’s screen </s>
<s> often however it is useful to be able to create a drawing oﬀ-screen in the computer’s memory </s>
<s> it is also important to be able to work with images that are stored in ﬁles to a computer an image is just a set of numbers </s>
<s> the numbers specify the color of each pixel in the image </s>
<s> the numbers that represent the image on the computer’s screen are stored in a part of memory called a frame buﬀer </s>
<s> many times each second the computer’s video card reads the data in the frame buﬀer and colors each pixel on the screen according to that data </s>
<s> whenever the computer needs to make some change to the screen it writes some new numbers to the frame buﬀer and the change appears on the screen a fraction of a second later the next time the screen is redrawn by the video card since it’s just a set of numbers the data for an image doesn’t have to be stored in a frame buﬀer </s>
<s> it can be stored elsewhere in the computer’s memory </s>
<s> it can be stored in a ﬁle on the computer’s hard disk </s>
<s> just like any other data ﬁle an image ﬁle can be downloaded over the internet </s>
<s> java includes standard classes and subroutines that can be used to copy image data from one part of memory to another and to get data from an image ﬁle and use it to display the image on the screen 1311 images and buﬀeredimages the class javaawtimage represents an image stored in the computer’s memory </s>
<s> there are two fundamentally diﬀerent types of image </s>
<s> one kind represents an image read from a source outside the program such as from a ﬁle on the computer’s hard disk or over a network connection </s>
<s> the second type is an image created by the program </s>
<s> i refer to this second type as an oﬀ-screen canvas </s>
<s> an oﬀ-screen canvas is a region of the computer’s memory that can be used as a 655 656 chapter 13 </s>
<s> advanced gui programming drawing surface </s>
<s> it is possible to draw to an oﬀ-screen image using the same graphics class that is used for drawing on the screen an image of either type can be copied onto the screen ( or onto an oﬀ-screen canvas ) using methods that are deﬁned in the graphics class </s>
<s> this is most commonly done in the paintcomponent( ) method of a jcomponent </s>
<s> suppose that g is the graphics object that is provided as a parameter to the paintcomponent( ) method and that img is of type image then the statement gdrawimage( img x y this ) will draw the image img in a rectangular area in the component </s>
<s> the integer-valued parameters x and y give the position of the upper-left corner of the rectangle in which the image is displayed and the rectangle is just large enough to hold the image </s>
<s> the fourth parameter this is the special variable from subsection 561 that refers to the jcomponent itself </s>
<s> this parameter is there for technical reasons having to do with the funny way java treats image ﬁles </s>
<s> for most applications you don’t need to understand this but here is how it works gdrawimage( ) does not actually draw the image in all cases </s>
<s> it is possible that the complete image is not available when this method is called this can happen for example if the image has to be read from a ﬁle </s>
<s> in that case gdrawimage( ) merely initiates the drawing of the image and returns immediately </s>
<s> pieces of the image are drawn later asynchronously as they become available the question is how do they get drawn that’s where the fourth parameter to the drawimage method comes in </s>
<s> the fourth parameter is something called an imageobserver </s>
<s> when a piece of the image becomes available to be drawn the system will inform the imageobserver and that piece of the image will appear on the screen </s>
<s> any jcomponent object can act as an imageobserver </s>
<s> the drawimage method returns a boolean value to indicate whether the image has actually been drawn or not when the method returns </s>
<s> when drawing an image that you have created in the computer’s memory or one that you are sure has already been completely loaded you can set the imageobserver parameter to null </s>
<s> this is true in particular for any buﬀeredimage there are a few useful variations of the drawimage( ) method </s>
<s> for example it is possible to scale the image as it is drawn to a speciﬁed width and height </s>
<s> this is done with the command gdrawimage( img x y width height imageobserver ) the parameters width and height give the size of the rectangle in which the image is displayed another version makes it possible to draw just part of the image </s>
<s> in the command gdrawimage( img dest x1 dest y1 dest x2 dest y2 source x1 source y1 source x2 source y2 imageobserver ) the integers source x1 source y1 source x2 and source y2 specify the top-left and bottomright corners of a rectangular region in the source image </s>
<s> the integers dest x1 dest y1 dest x2 and dest y2 specify the corners of a region in the destination graphics context </s>
<s> the speciﬁed rectangle in the image is drawn with scaling if necessary to the speciﬁed rectangle in the graphics context </s>
<s> for an example in which this is useful consider a card game that needs to display 52 diﬀerent cards </s>
<s> dealing with 52 image ﬁles can be cumbersome and ineﬃcient especially for downloading over the internet </s>
<s> so all the cards might be put into a single image 131 </s>
<s> images and resources 657 ( this image is from the gnome desktop project http//wwwgnomeorg and is shown here much smaller than its actual size ) now just one image object is needed </s>
<s> drawing one card means drawing a rectangular region from the image </s>
<s> this technique is used in a variation of the sample program highlowguijava from subsection 676 </s>
<s> in the original version the cards are represented by textual descriptions such as king of hearts” in the new version highlowwithimagesjava the cards are shown as images </s>
<s> an applet version of the program can be found in the on-line version of this section in the program the cards are drawn using the following method </s>
<s> the instance variable cardimages is a variable of type image that represents the image that is shown above containing 52 cards plus two jokers and a face-down card </s>
<s> each card is 79 by 123 pixels </s>
<s> these numbers are used together with the suit and value of the card to compute the corners of the source rectangle for the drawimage( ) command /** * draws a card in a 79x123 pixel rectangle with its * upper left corner at a specified point ( xy ) </s>
<s> drawing the card * requires the image file cardspng * @param g the graphics context used for drawing the card * @param card the card that is to be drawn </s>
<s> if the value is null then a * face-down card is drawn * @param x the x-coord of the upper left corner of the card * @param y the y-coord of the upper left corner of the card */ public void drawcard( graphics g card card int x int y ) { int cx // x-coord of upper left corner of the card inside cardsimage int cy // y-coord of upper left corner of the card inside cardsimage if ( card == null ) { cy = 4*123 // coords for a face-down card cx = 2*79 } else { 658 chapter 13 </s>
<s> advanced gui programming cx = ( cardgetvalue( )-1 )*79 switch ( cardgetsuit( ) ) { case cardclubs cy = 0 break case carddiamonds cy = 123 break case cardhearts cy = 2*123 break default // spades cy = 3*123 break } } gdrawimage( cardimagesxyx+79y+123cxcycx+79cy+123this ) } i will tell you later in this section how the image ﬁle cardspng can be loaded into the program ∗ ∗ ∗ in addition to images loaded from ﬁles it is possible to create images by drawing to an oﬀ-screen canvas </s>
<s> an oﬀ-screen canvas can be represented by an object belonging to the class buﬀeredimage which is deﬁned in the package javaawtimage </s>
<s> buﬀeredimage is a subclass of image so that once you have a buﬀeredimage you can copy it into a graphics context g using one of the gdrawimage( ) methods just as you would do with any other image </s>
<s> a buﬀeredimage can be created using the constructor public bufferedimage( int width int height int imagetype ) where width and height specify the width and height of the image in pixels and imagetype can be one of several constants that are deﬁned in the buﬀeredimage </s>
<s> the image type speciﬁes how the color of each pixel is represented </s>
<s> the most likely value for imagetype is bufferedimagetype int rgb which speciﬁes that the color of each pixel is a usual rgb color with red green and blue components in the range 0 to 255 </s>
<s> the image type bufferedimagetype int argb represents an rgb image with transparency” see the next section for more information on this </s>
<s> the image type bufferedimagetype byte gray can be used to create a grayscale image in which the only possible colors are shades of gray to draw to a buﬀeredimage you need a graphics context that is set up to do its drawing on the image </s>
<s> if osc is of type buﬀeredimage then the method oscgetgraphics( ) returns an object of type graphics that can be used for drawing on the image there are several reasons why a programmer might want to draw to an oﬀ-screen canvas one is to simply keep a copy of an image that is shown on the screen </s>
<s> remember that a picture that is drawn on a component can be lost for example when the component is covered by another window </s>
<s> this means that you have to be able to redraw the picture on demand and that in turn means keeping enough information around to enable you to redraw the picture one way to do this is to keep a copy of the picture in an oﬀ-screen canvas </s>
<s> whenever the onscreen picture needs to be redrawn you just have to copy the contents of the oﬀ-screen canvas onto the screen </s>
<s> essentially the oﬀ-screen canvas allows you to save a copy of the color of every 131 </s>
<s> images and resources 659 individual pixel in the picture </s>
<s> the sample program paintwithoﬀscreencanvasjava is a little painting program that uses an oﬀ-screen canvas in this way </s>
<s> in this program the user can draw curves lines and various shapes a tool” menu allows the user to select the thing to be drawn there is also an erase” tool and a smudge” tool that i will get to later </s>
<s> a buﬀeredimage is used to store the user’s picture </s>
<s> when the user changes the picture the changes are made to the image and the changed image is then copied to the screen </s>
<s> no record is kept of the shapes that the user draws the only record is the color of the individual pixels in the oﬀ-screen image ( you should contrast this with the program simplepaint2java in subsection 734 where the user’s drawing is recorded as a list of objects that represent the shapes that the user drew ) you should try the program ( or the applet version in the on-line version of this section ) </s>
<s> try drawing a filled rectangle on top of some other shapes </s>
<s> as you drag the mouse the rectangle stretches from the starting point of the mouse drag to the current mouse location </s>
<s> as the mouse moves the underlying picture seems to be unaﬀected—parts of the picture can be covered up by the rectangle and later uncovered as the mouse moves and they are still there </s>
<s> what this means is that the rectangle that is shown as you drag the mouse can’t actually be part of the oﬀ-screen canvas since drawing something into an image means changing the color of some pixels in the image </s>
<s> the previous colors of those pixels are not stored anywhere else and so are permanently lost </s>
<s> in fact when you draw a line rectangle or oval in paintwithoffscreencanvas the shape that is shown as you drag the mouse is not drawn to the oﬀ-screen canvas at all </s>
<s> instead the paintcomponent( ) method draws the shape on top of the contents of the canvas </s>
<s> only when you release the mouse does the shape become a permanent part of the oﬀ-screen canvas </s>
<s> this illustrates the point that when an oﬀ-screen canvas is used not everything that is visible on the screen has to be drawn on the canvas </s>
<s> some extra stuﬀ can be drawn on top of the contents of the canvas by the paintcomponent( ) method </s>
<s> the other tools are handled diﬀerently from the shape tools </s>
<s> for the curve erase and smudge tools the changes are made to the canvas immediately as the mouse is being dragged et’s look at how an oﬀ-screen canvas is used in this program </s>
<s> the canvas is represented by an instance variable osc of type buﬀeredimage </s>
<s> the size of the canvas must be the same size as the panel on which the canvas is displayed </s>
<s> the size can be determined by calling the getwidth( ) and getheight( ) instance methods of the panel </s>
<s> furthermore when the canvas is ﬁrst created it should be ﬁlled with the background color which is represented in the program by an instance variable named fillcolor </s>
<s> all this is done by the method /** * this method creates the off-screen canvas and fills it with the current * fill color */ private void createosc( ) { osc = new bufferedimage( getwidth( )getheight( )bufferedimagetype int rgb ) graphics osg = oscgetgraphics( ) osgsetcolor( fillcolor ) osgfillrect( 00getwidth( )getheight( ) ) osgdispose( ) } note how it uses oscgetgraphics( ) to obtain a graphics context for drawing to the image also note that the graphics context is disposed at the end of the method </s>
<s> it is good practice to dispose a graphics context when you are ﬁnished with it </s>
<s> there still remains the problem of where to call this method </s>
<s> the problem is that the width and height of the panel object are not set until some time after the panel object is constructed </s>
<s> if createosc( ) is called in 660 chapter 13 </s>
<s> advanced gui programming the constructor getwidth( ) and getheight( ) will return the value zero and we won’t get an oﬀ-screen image of the correct size </s>
<s> the approach that i take in paintwithoffscreencanvas is to call createosc( ) in the paintcomponent( ) method the ﬁrst time the paintcomponent( ) method is called </s>
<s> at that time the size of the panel has deﬁnitely been set but the user has not yet had a chance to draw anything </s>
<s> with this in mind you are ready to understand the paintcomponent( ) method public void paintcomponent( graphics g ) { /* first create the off-screen canvas if it does not already exist */ if ( osc == null ) createosc( ) /* copy the off-screen canvas to the panel </s>
<s> since we know that the image is already completely available the fourth imageobserver parameter to gdrawimage( ) can be null </s>
<s> since the canvas completely fills the panel there is no need to call superpaintcomponent( g ) */ gdrawimage( osc00null ) /* if the user is currently dragging the mouse to draw a line oval or rectangle draw the shape on top of the image from the off-screen canvas using the current drawing color ( this is not done if the user is drawing a curve or using the smudge tool or the erase tool ) */ if ( dragging && shape toolscontains( currenttool ) ) { gsetcolor( currentcolor ) putcurrentshape( g ) } } here dragging is a boolean instance variable that is set to true while the user is dragging the mouse and currenttool tells which tool is currently in use </s>
<s> the possible tools are deﬁned by an enum named tool and shape tools is a variable of type enumset<tool> that contains the line oval rectangle ﬁlled oval and ﬁlled rectangle tools ( see subsection 1024 ) you might notice that there is a problem if the size of the panel is ever changed since the size of the oﬀ-screen canvas will not be changed to match </s>
<s> the paintwithoffscreencanvas program does not allow the user to resize the program’s window so this is not an issue in that program </s>
<s> if we want to allow resizing however a new oﬀ-screen canvas must be created whenever the size of the panel changes </s>
<s> one simple way to do this is to check the size of the canvas in the paintcomponent( ) method and to create a new canvas if the size of the canvas does not match the size of the panel if ( osc == null || getwidth( ) != oscgetwidth( ) || getheight( ) != oscgetheight( ) ) createosc( ) of course this will discard the picture that was contained in the old canvas unless some arrangement is made to copy the picture from the old canvas to the new one before the old canvas is discarded the other point in the program where the oﬀ-screen canvas is used is during a mouse-drag operation which is handled in the mousepressed( ) mousedragged( ) and mousereleased( ) methods </s>
<s> the strategy that is implemented was discussed above </s>
<s> shapes are drawn to the oﬀscreen canvas only at the end of the drag operation in the mousereleased( ) method </s>
<s> however 661 131 </s>
<s> images and resources as the user drags the mouse the part of the image over which the shape appears is re-copied from the canvas onto the screen each time the mouse is moved </s>
<s> then the paintcomponent( ) method draws the shape that the user is creating on top of the image from the canvas </s>
<s> for the non-shape ( curve and smudge ) tools on the other hand changes are made directly to the canvas and the region that was changed is repainted so that the change will appear on the screen ( by the way the program uses a version of the repaint( ) method that repaints just a part of a component </s>
<s> the command repaint( xywidthheight ) tells the system to repaint the rectangle with upper left corner ( xy ) and with the speciﬁed width and height this can be substantially faster than repainting the entire component ) see the source code paintwithoﬀscreencanvasjava if you want to see how it’s all done ∗ ∗ ∗ one traditional use of oﬀ-screen canvasses is for double buﬀering </s>
<s> in double-buﬀering the oﬀ-screen image is an exact copy of the image that appears on screen whenever the on-screen picture needs to be redrawn the new picture is drawn step-by-step to an oﬀ-screen image this can take some time </s>
<s> if all this drawing were done on screen the user might see the image ﬂicker as it is drawn </s>
<s> instead the long drawing process takes place oﬀ-screen and the completed image is then copied very quickly onto the screen </s>
<s> the user doesn’t see all the steps involved in redrawing </s>
<s> this technique can be used to implement smooth ﬂicker-free animation the term double buﬀering” comes from the term frame buﬀer” which refers to the region in memory that holds the image on the screen </s>
<s> in fact true double buﬀering uses two frame buﬀers </s>
<s> the video card can display either frame buﬀer on the screen and can switch instantaneously from one frame buﬀer to the other </s>
<s> one frame buﬀer is used to draw a new image for the screen </s>
<s> then the video card is told to switch from one frame buﬀer to the other no copying of memory is involved </s>
<s> double-buﬀering as it is implemented in java does require copying which takes some time and is not perfectly ﬂicker-free in java’s older awt graphical api it was up to the programmer to do double buﬀering by hand </s>
<s> in the swing graphical api double buﬀering is applied automatically by the system and the programmer doesn’t have to worry about it ( it is possible to turn this automatic double buﬀering oﬀ in swing but there is seldom a good reason to do so ) one ﬁnal historical note about oﬀ-screen canvasses there is an alternative way to create them </s>
<s> the component class deﬁnes the following instance method which can be used in any gui component object public image createimage( int width int height ) this method creates an image with a speciﬁed width and height </s>
<s> you can use this image as an oﬀ-screen canvas in the same way that you would a buﬀeredimage </s>
<s> in fact you can expect that in a modern version of java the image that is returned by this method is in fact a buﬀeredimage </s>
<s> the createimage( ) method was part of java from the beginning before the buﬀeredimage class was introduced 1312 working with pixels one good reason to use a buﬀeredimage is that it allows easy access to the colors of individual pixels </s>
<s> if image is of type buﬀeredimage then we have the methods • imagegetrgb( xy ) — returns an int that encodes the color of the pixel at coordinates ( xy ) in the image </s>
<s> the values of the integers x and y must lie within the image </s>
<s> that is 662 chapter 13 </s>
<s> advanced gui programming it must be true that 0 <= x < imagegetwidth( ) and 0 <= y < imagegetheight( ) if not then an exception is thrown • imagesetrgb( xyrgb ) — sets the color of the pixel at coordinates ( xy ) to the color encoded by rgb </s>
<s> again x and y must be in the valid range </s>
<s> the third parameter rgb is an integer that encodes the color these methods use integer codes for colors </s>
<s> if c is of type color the integer code for the color can be obtained by calling cgetrgb( ) </s>
<s> conversely if rgb is an integer that encodes a color the corresponding color object can be obtained with the constructor call new color( rgb ) this means that you can use color c = new color( imagegetrgb( xy ) ) to get the color of a pixel as a value of type color </s>
<s> and if c is of type color you can set a pixel to that color with imagesetrgb( x y cgetrgb( ) ) the red green and blue components of a color are represented as 8-bit integers in the range 0 to 255 </s>
<s> when a color is encoded as a single int the blue component is contained in the eight low-order bits of the int the green component in the next lowest eight bits and the red component in the next eight bits ( the eight high order bits store the alpha component” of the color which we’ll encounter in the next section ) it is easy to translate between the two representations using the shift operators << and >> and the bitwise logical operators & and | ( i have not covered these operators previously in this book </s>
<s> brieﬂy if a and b are integers then a << b is the integer obtained by shifting each bit of a b bit positions to the left a >> b is the integer obtained by shifting each bit of a b bit positions to the right a & b is the integer obtained by applying the logical and operation to each pair of bits in a and b and a | b is obtained similarly using the logical or operation </s>
<s> for example using 8-bit binary numbers we have 01100101 & 10100001 is 00100001 while 01100101 | 10100001 is 11100101 ) you don’t necessarily need to understand these operators </s>
<s> here are incantations that you can use to work with color codes /* suppose that rgb is an int that encodes a color to get separate red green and blue color components */ int red = ( rgb >> 16 ) & 0xff int green = ( rgb >> 8 ) & 0xff int blue = rgb & 0xff /* suppose that red green and blue are color components in the range 0 to 255 </s>
<s> to combine them into a single int */ int rgb = ( red << 16 ) | ( green << 8 ) | blue ∗ ∗ ∗ an example of using pixel colors in a buﬀeredimage is provided by the smudge tool in the sample program paintwithoﬀscreencanvasjava </s>
<s> the purpose of this tool is to smear the colors of an image as if it were drawn in wet paint </s>
<s> for example if you rub the middle of a black rectangle with the smudge tool you’ll get something like this 131 </s>
<s> images and resources 663 this is an eﬀect that can only be achieved by manipulating the colors of individual pixels! here’s how it works when the user presses the mouse using the smudge tool the color components of a 7-by-7 block of pixels are copied from the oﬀ-screen canvas into arrays named smudgered smudgegreen and smudgeblue </s>
<s> this is done in the mousepressed( ) routine with the following code int int int int for w = oscgetwidth( ) h = oscgetheight( ) x = evtgetx( ) y = evtgety( ) ( int i = 0 i < 7 i++ ) for ( int j = 0 j < 7 j++ ) { int r = y + j - 3 int c = x + i - 3 if ( r < 0 || r >= h || c < 0 || c >= w ) { // a -1 in the smudgered array indicates that the // corresponding pixel was outside the canvas smudgered[i][j] = -1 } else { int color = oscgetrgb( cr ) smudgered[i][j] = ( color >> 16 ) & 0xff smudgegreen[i][j] = ( color >> 8 ) & 0xff smudgeblue[i][j] = color & 0xff } } the arrays are of type double[ ][ ] because i am going to do some computations with them that require real numbers </s>
<s> as the user moves the mouse the colors in the array are blended with the colors in the image just as if you were mixing wet paint by smudging it with your ﬁnger that is the colors at the new mouse position in the image are replaced with a weighted average of the current colors in the image and the colors in the arrays </s>
<s> this has the eﬀect of moving some of the color from the previous mouse position to the new mouse position </s>
<s> at the same time the colors in the arrays are replaced by a weighted average of the old colors in the arrays and the colors from the image </s>
<s> this has the eﬀect of moving some color from the image into the arrays </s>
<s> this is done using the following code for each pixel position ( cr ) in a 7-by-7 block around the new mouse location int curcol = oscgetrgb( cr ) int curred = ( curcol >> 16 ) & 0xff int curgreen = ( curcol >> 8 ) & 0xff int curblue = curcol & 0xff int newred = ( int )( curred*07 + smudgered[i][j]*03 ) int newgreen = ( int )( curgreen*07 + smudgegreen[i][j]*03 ) int newblue = ( int )( curblue*07 + smudgeblue[i][j]*03 ) int newcol = newred << 16 | newgreen << 8 | newblue oscsetrgb( crnewcol ) 664 chapter 13 </s>
<s> advanced gui programming smudgered[i][j] = curred*03 + smudgered[i][j]*07 smudgegreen[i][j] = curgreen*03 + smudgegreen[i][j]*07 smudgeblue[i][j] = curblue*03 + smudgeblue[i][j]*07 1313 resources throughout this textbook up until now we have been thinking of a program as made up entirely of java code </s>
<s> however programs often use other types of data including images sounds and text as part of their basic structure </s>
<s> these data are referred to as resources </s>
<s> an example is the image ﬁle cardspng that was used in the highlowwithimagesjava program earlier in this section </s>
<s> this ﬁle is part of the program </s>
<s> the program needs it in order to run the user of the program doesn’t need to know that this ﬁle exists or where it is located as far as the user is concerned it is just part of the program </s>
<s> the program of course does need some way of locating the resource ﬁle and loading its data resources are ordinarily stored in ﬁles that are in the same locations as the compiled class ﬁles for the program </s>
<s> class ﬁles are located and loaded by something called a class loader which is represented in java by an object of type classloader </s>
<s> a class loader has a list of locations where it will look for class ﬁles </s>
<s> this list is called the class path </s>
<s> it includes the location where java’s standard classes are stored </s>
<s> it generally includes the current directory if the program is stored in a jar ﬁle the jar ﬁle is included on the class path </s>
<s> in addition to class ﬁles a classloader is capable of ﬁnding resource ﬁles that are located on the class path or in subdirectories of locations that are on the class path the ﬁrst step in using a resource is to obtain a classloader and to use it to locate the resource ﬁle </s>
<s> in the highlowwithimages program this is done with classloader cl = highlowwithimagesclassgetclassloader( ) url imageurl = clgetresource( cardspng ) the idea of the ﬁrst line is that in order to get a class loader you have to ask a class that was loaded by the class loader </s>
<s> here highlowwithimagesclass is a name for the object that represents the actual class highlowwithimages </s>
<s> in other programs you would just substitute for highlowwithimages” the name of the class that contains the call to getclassloader( ) </s>
<s> alternatively if obj is any object then you can obtain a class loader by calling objgetclass( )getclassloader( ) the second line in the above code uses the class loader to locate the resource ﬁle named cardspng </s>
<s> the return value of clgetresource( ) is of type javaneturl and it represents the location of the resource rather than the resource itself </s>
<s> if the resource ﬁle cannot be found then the return value is null </s>
<s> the class url was discussed in subsection 1141 often resources are stored not directly on the class path but in a subdirectory </s>
<s> in that case the parameter to getresource( ) must be a path name that includes the directory path to the resource </s>
<s> for example suppose that the image ﬁle cardspng” were stored in a directory named images inside a directory named resources where resources is directly on the class path </s>
<s> then the path to the ﬁle is resources/images/cardspng” and the command for locating the resource would be url imageurl = clgetresource( resources/images/cardspng ) once you have a url that represents the location of a resource ﬁle you could use a urlconnection as discussed in subsection 1141 to read the contents of that ﬁle </s>
<s> however java provides more convenient methods for loading several types of resources </s>
<s> for loading image 665 131 </s>
<s> images and resources resources a convenient method is available in the class javaawttoolkit </s>
<s> it can be used as in the following line from highlowwithimages where cardimages is an instance variable of type image and imageurl is the url that represents the location of the image ﬁle cardimages = toolkitgetdefaulttoolkit( )createimage( imageurl ) this still does not load the image completely—that will only be done later for example when cardimages is used in a drawimage command </s>
<s> another technique which does read the image completely is to use the imageioread( ) method which will be discussed in subsection 1315 ∗ ∗ ∗ the applet and japplet classes have an instance method that can be used to load an image from a given url public image getimage( url imageurl ) when you are writing an applet this method can be used as yet another technique for loading an image resource more interesting is the fact that applet and japplet contain a static method that can be used to load sound resources public static audioclip newaudioclip( url soundurl ) since this is a static method it can be used in any program not just in applets simply by calling it as appletnewaudioclip( soundurl ) or jappletnewaudioclip( soundurl ) ( this seems to be the only easy way to use sounds in a java program it’s not clear why this capability is only in the applet classes ) the return value is of type javaappletaudioclip </s>
<s> once you have an audioclip you can call its play( ) method to play the audio clip from the beginning here is a method that puts all this together to load and play the sound from an audio resource ﬁle private void playaudioresource( string audioresourcename ) { classloader cl = soundandcursordemoclassgetclassloader( ) url resourceurl = clgetresource( audioresourcename ) if ( resourceurl != null ) { audioclip sound = jappletnewaudioclip( resourceurl ) soundplay( ) } } this method is from a sample program soundandcursordemo that will be discussed in the next subsection </s>
<s> of course if you plan to reuse the sound often it would be better to load the sound once into an instance variable of type audioclip which could then be used to play the sound any number of times without the need to reload it each time the audioclip class supports audio ﬁles in the common wav aiff and au formats 1314 cursors and icons the position of the mouse is represented on the computer’s screen by a small image called a cursor </s>
<s> in java the cursor is represented by an object of type javaawtcursor </s>
<s> a cursor has an associated image </s>
<s> it also has a hot spot which is a point that speciﬁes the pixel within the image that corresponds to the exact position on the screen where the mouse is pointing for example for a typical arrow” cursor the hot spot is the tip of the arrow </s>
<s> for a crosshair” cursor the hot spot is the center of the crosshairs 666 chapter 13 </s>
<s> advanced gui programming the cursor class deﬁnes several standard cursors which are identiﬁed by constants such as cursorcrosshair cursor and cursordefault cursor </s>
<s> you can get a standard cursor by calling the static method cursorgetpredefinedcursor( code ) where code is one of the constants that identify the standard cursors </s>
<s> it is also possible to create a custom cursor from an image </s>
<s> the image might be obtained as an image resource as described in the previous subsection </s>
<s> it could even be a buﬀeredimage that you create in your program </s>
<s> it should be small maybe 16-by-16 or 24-by-24 pixels ( some platforms might only be able to handle certain cursor sizes see the documentation for toolkitgetbestcursorsize( ) for more information ) a custom cursor can be created by calling the static method createcustomcursor( ) in the toolkit class cursor c = toolkitgetdefaulttoolkit( )createcustomcursor( imagehotspotname ) where hotspot is of type point and name is a string that will act as a name for the cursor ( and which serves no real purpose that i know of ) cursors are associated with gui components </s>
<s> when the mouse moves over a component the cursor changes to whatever cursor is associated with that component </s>
<s> to associate a cursor with a component call the component’s instance method setcursor( cursor ) </s>
<s> for example to set the cursor for a jpanel panel to be the standard wait” cursor panelsetcursor( cursorgetpredefinedcursor( cursorwait cursor ) ) to reset the cursor to be the default cursor you can use panelsetcursor( cursorgetdefaultcursor( ) ) to set the cursor to be an image that is deﬁned in an image resource ﬁle named imageresource you might use classloader cl = soundandcursordemoclassgetclassloader( ) url resourceurl = clgetresource( imageresource ) if ( resourceurl != null ) { toolkit toolkit = toolkitgetdefaulttoolkit( ) image image = toolkitcreateimage( resourceurl ) point hotspot = new point( 77 ) cursor cursor = toolkitcreatecustomcursor( image hotspot mycursor ) panelsetcursor( cursor ) } the sample program soundandcursordemojava shows how to use predeﬁned and custom cursors and how to play sounds from resource ﬁles </s>
<s> the program has several buttons that you can click </s>
<s> some of the buttons change the cursor that is associated with the main panel of the program </s>
<s> some of the buttons play sounds </s>
<s> when you play a sound the cursor is reset to be the default cursor </s>
<s> you can ﬁnd an applet version of the program in the on-line version of this section another standard use of images in gui interfaces is for icons </s>
<s> an icon is simply a small picture </s>
<s> as we’ll see in section 133 icons can be used on java’s buttons menu items and labels in fact for our purposes an icon is simply an image that can be used in this way an icon is represented by an object of type icon which is actually an interface rather than a class </s>
<s> the class imageicon which implements the icon interface is used to create icons from images </s>
<s> if image is a ( rather small ) image then the constructor call new imageicon( image ) creates an imageicon whose picture is the speciﬁed image </s>
<s> often the image comes from a resource ﬁle </s>
<s> we will see examples of this later in this chapter 131 </s>
<s> images and resources 1315 667 image file i/o the class javaximageioimageio makes it easy to save images from a program into ﬁles and to read images from ﬁles into a program </s>
<s> this would be useful in a program such as paintwithoffscreencanvas so that the users would be able to save their work and to open and edit existing images ( see exercise 131 ) there are many ways that the data for an image could be stored in a ﬁle </s>
<s> many standard formats have been created for doing this </s>
<s> java supports at least three standard image formats png jpeg and gif ( individual implementations of java might support more ) the jpeg format is lossy” which means that the picture that you get when you read a jpeg ﬁle is only an approximation of the picture that was saved </s>
<s> some information in the picture has been lost </s>
<s> allowing some information to be lost makes it possible to compress the image into a lot fewer bits than would otherwise be necessary </s>
<s> usually the approximation is quite good </s>
<s> it works best for photographic images and worst for simple line drawings </s>
<s> the png format on the other hand is lossless” meaning that the picture in the ﬁle is an exact duplicate of the picture that was saved </s>
<s> a png ﬁle is compressed but not in a way that loses information </s>
<s> the compression works best for images made up mostly of large blocks of uniform color it works worst for photographic images </s>
<s> gif is an older format that is limited to just 256 colors in an image it has mostly been superseded by png suppose that image is a buﬀeredimage </s>
<s> the image can be saved to a ﬁle simply by calling imageiowrite( image format file ) where format is a string that speciﬁes the image format of the ﬁle and file is a file that speciﬁes the ﬁle that is to be written ( see subsection 1122 for information about the file class ) the format string should ordinarily be either png or jpeg although other formats might be supported imageiowrite( ) is a static method in the imageio class </s>
<s> it returns a boolean value that is false if the image format is not supported </s>
<s> that is if the speciﬁed image format is not supported then the image is not saved but no exception is thrown </s>
<s> this means that you should always check the return value! for example boolean hasformat = imageiowrite( oscformatselectedfile ) if ( ! hasformat ) throw new exception( format + format is not available ) if the image format is recognized it is still possible that an ioexception might be thrown when the attempt is made to send the data to the ﬁle usually the ﬁle to be used in imageiowrite( ) will be selected by the user using a jfilechooser as discussed in subsection 1123 </s>
<s> for example here is a typical method for saving an image ( the use of this” as a parameter in several places assumes that this method is deﬁned in a subclass of jcomponent ) /** * attempts to save an image to a file selected by the user * @param image the bufferedimage to be saved to the file * @param format the format of the image probably either png or jpeg */ private void dosavefile( bufferedimage image string format ) { if ( filedialog == null ) filedialog = new jfilechooser( ) filedialogsetselectedfile( new file( image + formattolowercase( ) ) ) 668 chapter 13 </s>
<s> advanced gui programming filedialogsetdialogtitle( select file to be saved ) int option = filedialogshowsavedialog( this ) if ( option != jfilechooserapprove option ) return // user canceled or clicked the dialog’s close box file selectedfile = filedialoggetselectedfile( ) if ( selectedfileexists( ) ) { // ask the user whether to replace the file int response = joptionpaneshowconfirmdialog( null the file + selectedfilegetname( ) + already existsndo you want to replace it confirm save joptionpaneyes no option joptionpanewarning message ) if ( response != joptionpaneyes option ) return // user does not want to replace the file } try { boolean hasformat = imageiowrite( imageformatselectedfile ) if ( ! hasformat ) throw new exception( format + format is not available ) } catch ( exception e ) { joptionpaneshowmessagedialog( this sorry an error occurred while trying to save image ) ) eprintstacktrace( ) } } ∗ ∗ ∗ the imageio class also has a static read( ) method for reading an image from a ﬁle into a program </s>
<s> the method imageioread( inputfile ) takes a variable of type file as a parameter and returns a buﬀeredimage </s>
<s> the return value is null if the ﬁle does not contain an image that is stored in a supported format </s>
<s> again no exception is thrown in this case so you should always be careful to check the return value </s>
<s> it is also possible for an ioexception to occur when the attempt is made to read the ﬁle </s>
<s> there is another version of the read( ) method that takes an inputstream instead of a ﬁle as its parameter and a third version that takes a url earlier in this section we encountered another method for reading an image from a url the createimage( ) method from the toolkit class </s>
<s> the diﬀerence is that imageioread( ) reads the image data completely and stores the result in a buﬀeredimage </s>
<s> on the other hand createimage( ) does not actually read the data it really just stores the image location and the data won’t be read until later when the image is used </s>
<s> this has the advantage that the createimage( ) method itself can complete very quickly </s>
<s> imageioread( ) on the other hand can take some time to execute 132 fancier graphics the graphics commands provided by the graphics class are suﬃcient for many purposes however recent versions of java provide a much larger and richer graphical toolbox in the form 132 </s>
<s> fancier graphics 669 of the class javaawtgraphics2d </s>
<s> i mentioned graphics2d in subsection 635 and promised to discuss it further in this chapter graphics2d is a subclass of graphics so all of the graphics commands that you already know can be used with a graphics2d object </s>
<s> in fact when you obtain a graphics context for drawing on a swing component or on a buﬀeredimage the graphics object is actually of type graphics2d and can be type-cast to gain access to the advanced graphics2d graphics commands </s>
<s> furthermore buﬀeredimage has an instance method creategraphics( ) that returns a graphics context of type graphics2d </s>
<s> for example if image is of type buﬀeredimage then you can get a graphics2d for drawing on the image using graphics2d g2 = imagecreategraphics( ) and as mentioned in subsection 635 to use graphics2d commands in the paintcomponent( ) method of a swing component you can write a paintcomponent( ) method of the form public void paintcomponent( graphics g ) { superpaintcomponent( g ) graphics g2 = ( graphics2d )g // draw to the component using g2 ( and g ) } note that when you do this g and g2 are just two variables that refer to the same object so they both draw to the same drawing surface g2 just gives you access to methods that are deﬁned in graphics2d but not in graphics </s>
<s> when properties of g2 such as drawing color are changed the changes also apply to g </s>
<s> by saying graphics2d g2 = ( graphics2d )gcreate( ) you can obtain a newly created graphics context </s>
<s> the object created by gcreate( ) is a graphics context that draws to the same drawing surface as g and that initially has all the same properties as g </s>
<s> however it is a separate object so that changing properties in g2 has no eﬀect on g </s>
<s> this can be useful if you want to keep an unmodiﬁed copy of the original graphics context around for some drawing operations ( in this case it is good practice to call g2dispose( ) to dispose of the new graphics context when you are ﬁnished using it ) 1321 measuring text although this section is mostly about graphics2d we start with a topic that has nothing to do with it often when drawing a string it’s important to know how big the image of the string will be </s>
<s> for example you need this information if you want to center a string in a component </s>
<s> or if you want to know how much space to leave between two lines of text when you draw them one above the other </s>
<s> or if the user is typing the string and you want to position a cursor at the end of the string </s>
<s> in java questions about the size of a string can be answered by an object belonging to the standard class javaawtfontmetrics there are several lengths associated with any given font </s>
<s> some of them are shown in this illustration 670 chapter 13 </s>
<s> advanced gui programming ascent descent eading measuring strings ineheight the dashed lines in the illustration are the baselines of the two lines of text </s>
<s> the baseline of a string is the line on which the bases of the characters rest </s>
<s> the suggested distance between two baselines for single-spaced text is known as the lineheight of the font </s>
<s> the ascent is the distance that tall characters can rise above the baseline and the descent is the distance that tails like the one on the letter g” can descend below the baseline </s>
<s> the ascent and descent do not add up to the lineheight because there should be some extra space between the tops of characters in one line and the tails of characters on the line above </s>
<s> the extra space is called leading ( the term comes from the time when lead blocks were used for printing </s>
<s> characters were formed on blocks of lead that were lined up to make up the text of a page covered with ink and pressed onto paper to print the page </s>
<s> extra blank leading” was used to separate the lines of characters ) all these quantities can be determined by calling instance methods in a fontmetrics object </s>
<s> there are also methods for determining the width of a character and the total width of a string of characters recall that a font in java is represented by the class font </s>
<s> a fontmetrics object is associated with a given font and is used to measure characters and strings in that font </s>
<s> if font is of type font and g is a graphics context you can get a fontmetrics object for the font by calling ggetfontmetrics( font ) </s>
<s> if fm is the variable that refers to the fontmetrics object then the ascent descent leading and lineheight of the font can be obtained by calling fmgetascent( ) fmgetdescent( ) fmgetleading( ) and fmgetheight( ) </s>
<s> if ch is a character then fmcharwidth( ch ) is the width of the character when it is drawn in that font </s>
<s> if str is a string then fmstringwidth( str ) is the width of the string when drawn in that font for example here is a paintcomponent( ) method that shows the message hello world” in the exact center of the component public void paintcomponent( graphics g ) { superpaintcomponent( g ) int int int int strwidth strheight centerx centery basex basey topofstring // // // // width and height of the string coordinates of the center of the component coordinates of the basepoint of the string y-coordinate of the top of the string centerx = getwidth( ) / 2 centery = getheight( ) / 2 font font = ggetfont( ) // what font will g draw in fontmetrics fm = ggetfontmetrics( font ) strwidth = fmstringwidth( hello world ) strheight = fmgetascent( ) // note there are no tails on // any of the chars in the string! basex = centerx - ( strwidth/2 ) // move back from center by half the 671 132 </s>
<s> fancier graphics // topofstring = centery - ( strheight/2 ) basey = topofstring + fmgetascent( ) width of the string // move up from center by half // the height of the string // baseline is fmgetascent( ) pixels // below the top of the string gdrawstring( hello world basex basey ) // draw the string } you can change the font that is used for drawing strings as described in subsection 633 </s>
<s> for the height of the string in this method i use fmgetascent( ) </s>
<s> if i were drawing goodbye world” instead of hello world” i would have used fmgetascent( ) + fmgetdescent( ) where the descent is added to the height in order to take into account the tail on the y” in goodbye” </s>
<s> the value of basex is computed to be the amount of space between the left edge of the component and the start of the string </s>
<s> it is obtained by subtracting half the width of the string from the horizontal center of the component </s>
<s> this will center the string horizontally in the component </s>
<s> the next line computes the position of the top of the string in the same way however to draw the string we need the y-coordinate of the baseline not the y-coordinate of the top of the string </s>
<s> the baseline of the string is below the top of the string by an amount equal to the ascent of the font there is an example of centering a two-line block of text in the sample program transparencydemojava which is discussed in the next subsection 1322 transparency a color is represented by red blue and green components </s>
<s> in java’s usual representation each component is an eight-bit number in the range 0 to 255 </s>
<s> the three color components can be packed into a 32-bit integer but that only accounts for 24 bits in the integer </s>
<s> what about the other eight bits they don’t have to be wasted </s>
<s> they can be used as a fourth component of the color the alpha component </s>
<s> the alpha component can be used in several ways but it is most commonly associated with transparency </s>
<s> when you draw with a transparent color it’s like laying down a sheet of colored glass </s>
<s> it doesn’t completely obscure the part of the image that is colored over </s>
<s> instead the background image is blended with the transparent color that is used for drawing—as if you were looking at the background through colored glass this type of drawing is properly referred to as alpha blending and it is not equivalent to true transparency nevertheless most people refer to it as transparency the value of the alpha component determines how transparent that color is </s>
<s> actually the alpha component gives the opaqueness of the color </s>
<s> opaqueness is the opposite of transparency </s>
<s> if something is fully opaque you can’t see through it at all if something is almost fully opaque then it is just a little transparent and so on </s>
<s> when the alpha component of a color has the maximum possible value the color is fully opaque </s>
<s> when you draw with a fully opaque color that color simply replaces the color of the background over which you draw </s>
<s> this is the only type of color that we have used up until now </s>
<s> if the alpha component of a color is zero then the color is perfectly transparent and drawing with that color has no eﬀect at all intermediate values of the alpha component give partially opaque colors that will blend with the background when they are used for drawing the sample program transparencydemojava can help you to understand transparency when you run the program you will see a display area containing a triangle an oval a rectangle and some text </s>
<s> sliders at the bottom of the applet allow you to control the degree of 672 chapter 13 </s>
<s> advanced gui programming transparency of each shape </s>
<s> when a slider is moved all the way to the right the corresponding shape is fully opaque all the way to the left and the shape is fully transparent </s>
<s> an applet version of the program can be found in the on-line version of this section ∗ ∗ ∗ colors with alpha components were introduced in java along with graphics2d but they can be used with ordinary graphics objects as well </s>
<s> to specify the alpha component of a color you can create the color object using one of the following constructors from the color class public color( int red int green int blue int alpha ) public color( float red float green float blue float alpha ) in the ﬁrst constructor all the parameters must be integers in the range 0 to 255 </s>
<s> in the second the parameters must be in the range 00 to 10 </s>
<s> for example color transparentred = new color( 255 0 0 200 ) makes a slightly transparent red while color tranparentcyan = new color( 00f 10f 10f 05f ) makes a blue-green color that is 50% opaque ( the advantage of the constructor that takes parameters of type ﬂoat is that it lets you think in terms of percentages ) when you create an ordinary rgb color as in new color( 25500 ) you just get a fully opaque color once you have a transparent color you can use it in the same way as any other color </s>
<s> that is if you want to use a color c to draw in a graphics context g you just say gsetcolor( c ) and subsequent drawing operations will use that color </s>
<s> as you can see transparent colors are very easy to use ∗ ∗ ∗ a buﬀeredimage with image type bufferedimagetype int argb can use transparency the color of each pixel in the image can have its own alpha component which tells how transparent that pixel will be when the image is drawn over some background </s>
<s> a pixel whose alpha component is zero is perfectly transparent and has no eﬀect at all when the image is drawn in eﬀect it’s not part of the image at all </s>
<s> it is also possible for pixels to be partly transparent </s>
<s> when an image is saved to a ﬁle information about transparency might be lost depending on the ﬁle format </s>
<s> the png image format supports transparency jpeg does not ( if you look at the images of playing cards that are used in the program highlowwithimages in subsection 1311 you might notice that the tips of the corners of the cards are fully transparent the card images are from a png ﬁle cardspng ) an argb buﬀeredimage should be fully transparent when it is ﬁrst created but if you want to make sure here is one way of doing so the graphics2d class has a method setbackground( ) that can be used to set a background color for the graphics context and it has a clearrect( ) method that ﬁlls a rectangle with the current background color </s>
<s> to create a fully transparent image with width w and height h you can use bufferedimage image = new bufferedimage( w h bufferedimagetype int argb ) graphics2d g2 = ( graphics2d )imagegetgraphics( ) g2setbackground( new color( 0000 ) ) // ( the r g and b values don’t matter ) g2clearrect( 0 0 w h ) ( note that simply drawing with a transparent color will not make pixels in the image transparent </s>
<s> the alpha component of a color makes the color transparent when it is used for drawing it does not change the transparency of the pixels that are modiﬁed by the drawing operation ) 132 </s>
<s> fancier graphics 673 as an example just for fun here is a method that will set the cursor of a component to be a red square with a transparent interior private void useredsquarecursor( ) { bufferedimage image = new bufferedimage( 2424bufferedimagetype int argb ) graphics2d g2 = ( graphics2d )imagegetgraphics( ) g2setbackground( new color( 0000 ) ) g2clearrect( 0 0 24 24 ) // ( should not be necessary in a new image ) g2setcolor( colorred ) g2drawrect( 002323 ) g2drawrect( 112121 ) g2dispose( ) point hotspot = new point( 1212 ) toolkit tk = toolkitgetdefaulttoolkit( ) cursor cursor = tkcreatecustomcursor( imagehotspotsquare ) setcursor( cursor ) } 1323 antialiasing to draw a geometric ﬁgure such as a line or circle you just have to color the pixels that are part of the ﬁgure right actually there is a problem with this </s>
<s> pixels are little squares </s>
<s> geometric ﬁgures on the other hand are made of geometric points that have no size at all </s>
<s> think about drawing a circle and think about a pixel on the boundary of that circle </s>
<s> the inﬁnitely thin geometric boundary of the circle cuts through the pixel </s>
<s> part of the pixel lies inside the circle part lies outside </s>
<s> so when we are ﬁlling the circle with color do we color that pixel or not a possible solution is to color the pixel if the geometric circle covers 50% or more of the pixel following this procedure however leads to a visual defect known as aliasing </s>
<s> it is visible in images as a jaggedness or staircasing” eﬀect along the borders of curved shapes </s>
<s> lines that are not horizontal or vertical also have a jagged aliased appearance ( the term aliasing” seems to refer to the fact that many diﬀerent geometric points map to the same pixel </s>
<s> if you think of the real-number coordinates of a geometric point as a name” for the pixel that contains that point then each pixel has many diﬀerent names or aliases” ) it’s not possible to build a circle out of squares but there is a technique that can eliminate some of the jaggedness of aliased images </s>
<s> the technique is called antialiasing </s>
<s> antialiasing is based on transparency </s>
<s> the idea is simple if 50% of a pixel is covered by the geometric ﬁgure that you are trying to draw then color that pixel with a color that is 50% transparent </s>
<s> if 25% of the pixel is covered use a color that is 75% transparent ( 25% opaque ) </s>
<s> if the entire pixel is covered by the ﬁgure of course use a color that is 100% opaque—antialiasing only aﬀects pixels that are only partly covered by the geometric shape in antialiasing the color that you are drawing with is blended with the original color of the pixel and the amount of blending depends on the fraction of the pixel that is covered by the geometric shape ( the fraction is diﬃcult to compute exactly so in practice various methods are used to approximate it ) of course you still don’t get a picture of the exact geometric shape but antialiased images do tend to look better than jagged aliased images for an example look at the image in the next subsection </s>
<s> antialiasing is used to draw the panels in the second and third row of the image but it is not used in the top row </s>
<s> you should note the jagged appearance of the lines and rectangles in the top row ( by the way when antialiasing is applied to a line the line is treated as a geometric rectangle whose width is equal to the size of one pixel ) 674 chapter 13 </s>
<s> advanced gui programming antialiasing is supported in graphics2d </s>
<s> by default antialiasing is turned oﬀ </s>
<s> if g2 is a graphics context of type graphics2d you can turn on antialiasing in g2 by saying g2setrenderinghint( renderinghintskey antialiasing renderinghintsvalue antialias on ) as you can see this is only a hint” that you would like to use antialiasing and it is even possible that the hint will be ignored </s>
<s> however it is likely that subsequent drawing operations in g2 will be antialiased </s>
<s> if you want to turn antialiasing oﬀ in g2 you should say g2setrenderinghint( renderinghintskey antialiasing renderinghintsvalue antialias off ) 1324 strokes and paints when using the graphics class any line that you draw will be a solid line that is one pixel thick the graphics2d class makes it possible to draw a much greater variety of lines </s>
<s> you can draw lines of any thickness and you can draw lines that are dotted or dashed instead of solid an object of type stroke contains information about how lines should be drawn including how thick the line should be and what pattern of dashes and dots if any should be used </s>
<s> every graphics2d has an associated stroke object </s>
<s> the default stroke draws a solid line of thickness one </s>
<s> to get lines with diﬀerent properties you just have to install a diﬀerent stroke into the graphics context stroke is an interface not a class </s>
<s> the class basicstroke which implements the stroke interface is the one that is actually used to create stroke objects </s>
<s> for example to create a stroke that draws solid lines with thickness equal to 3 use basicstroke line3 = new basicstroke( 3 ) if g2 is of type graphics2d the stroke can be installed in g2 by calling its setstroke( ) command g2setstroke( line3 ) after calling this method subsequent drawing operations will use lines that are three times as wide as the usual thickness </s>
<s> the thickness of a line can be given by a value of type ﬂoat not just by an int </s>
<s> for example to use lines of thickness 25 in the graphics context g2 you can say g2setstroke( new basicstroke( 25f ) ) ( fractional widths make more sense if antialiasing is turned on ) when you have a thick line the question comes up what to do at the ends of the line </s>
<s> if you draw a physical line with a large round piece of chalk the ends of the line will be rounded when you draw a line on the computer screen should the ends be rounded or should the line simply be cut oﬀ ﬂat with the basicstroke class the choice is up to you </s>
<s> maybe it’s time to look at examples </s>
<s> this illustration shows ﬁfteen lines drawn using diﬀerent basicstrokes </s>
<s> lines in the middle row have rounded ends lines in the other two rows are simply cut oﬀ at their endpoints </s>
<s> lines of various thicknesses are shown and the bottom row shows dashed lines ( and as mentioned above only the bottom two rows are antialiased ) 132 </s>
<s> fancier graphics 675 this illustration shows the sample program strokedemojava ( you can try an applet version of the program in the on-line version of this section ) in this program you can click and drag in any of the small panels and the lines in all the panels will be redrawn as you move the mouse </s>
<s> in addition if you right-click and drag then rectangles will be drawn instead of lines this shows that strokes are used for drawing the outlines of shapes and not just for straight lines </s>
<s> if you look at the corners of the rectangles that are drawn by the program you’ll see that there are several ways of drawing a corner where two wide line segments meet all the options that you want for a basicstroke have to be speciﬁed in the constructor </s>
<s> once the stroke object is created there is no way to change the options </s>
<s> there is one constructor that lets you specify all possible options public basicstroke( float width int captype int jointype float miterlimit float[] dashpattern float dashphase ) i don’t want to cover all the options in detail but here’s some basic info • width speciﬁes the thickness of the line • captype speciﬁes how the ends of a line are capped” the possible values are basicstrokecap square basicstrokecap round and basicstrokecap butt </s>
<s> these values are used respectively in the ﬁrst second and third rows of the above picture </s>
<s> the default is basicstrokecap square • jointype speciﬁes how two line segments are joined together at corners </s>
<s> possible values are basicstrokejoin miter basicstrokejoin round and basicstrokejoin bevel again these are used in the three rows of panels in the sample program the eﬀect is only seen in the applet when drawing rectangles </s>
<s> the default is basicstrokejoin miter • miterlimit is used only if the value of jointype is join miter just use the default value 100f • dashpattern is used to specify dotted and dashed lines </s>
<s> the values in the array specify lengths in the dot/dash pattern </s>
<s> the numbers in the array represent the length of a solid piece followed by the length of a transparent piece followed by the length of a solid piece 676 chapter 13 </s>
<s> advanced gui programming and so on </s>
<s> at the end of the array the pattern wraps back to the beginning of the array if you want a solid line use a diﬀerent constructor that has fewer parameters • dashphase tells the computer where to start in the dashpattern array for the ﬁrst segment of the line </s>
<s> use 0 for this parameter in most cases for the third row in the above picture the dashpattern is set to new float[] {55} </s>
<s> this means that the lines are drawn starting with a solid segment of length 5 followed by a transparent section of length 5 and then repeating the same pattern </s>
<s> a simple dotted line would have thickness 1 and dashpattern new float[] {11} </s>
<s> a pattern of short and long dashes could be made by using new float[] {10444} </s>
<s> for more information see the java documentation or try experimenting with the source code for the sample program ∗ ∗ ∗ so now we can draw fancier lines </s>
<s> but any drawing operation is still restricted to drawing with a single color </s>
<s> we can get around that restriction by using paint </s>
<s> an object of type paint is used to assign color to each pixel that is hit” by a drawing operation </s>
<s> paint is an interface and the color class implements the paint interface </s>
<s> when a color is used for painting it applies the same color to every pixel that is hit </s>
<s> however there are other types of paint where the color that is applied to a pixel depends on the coordinates of that pixel </s>
<s> standard java includes two classes that deﬁne paint with this property gradientpaint and texturepaint </s>
<s> in a gradient the color that is applied to pixels changes gradually from one color to a second color as you move from point to point </s>
<s> in a texture the pixel colors come from an image which is repeated if necessary like a wallpaper pattern to cover the entire xy-plane it will be helpful to look at some examples </s>
<s> this illustration shows a polygon ﬁlled with two diﬀerent paints </s>
<s> the polygon on the left uses a gradientpaint while the one on the right uses a texturepaint </s>
<s> note that in this picture the paint is used only for ﬁlling the polygon the outline of the polygon is drawn in a plain black color </s>
<s> however paint objects can be used for drawing lines as well as for ﬁlling shapes </s>
<s> these pictures were made by the sample program paintdemojava </s>
<s> in that program you can select among several diﬀerent paints and you can control certain properties of the paints </s>
<s> as usual an applet version of the program is available on line basic gradient paints are created using the constructor public gradientpaint( float x1 float y1 color c1 float x2 float y2 color c2 boolean cyclic ) 132 </s>
<s> fancier graphics 677 this constructs a gradient that has color c1 at the point with coordinates ( x1y1 ) and color c2 at the point ( x2y2 ) </s>
<s> as you move along the line between the two points the color of the gradient changes from c1 to c2 along lines perpendicular to this line the color is constant the last parameter cyclic tells what happens if you move past the point ( x2y2 ) on the line from ( x1y1 ) to ( x2y2 ) </s>
<s> if cyclic is false the color stops changing and any point beyond ( x2y2 ) has color c2 </s>
<s> if cyclic is true then the colors continue to change in a cyclic pattern after you move past ( x2y2 ) ( it works the same way if you move past the other endpoint ( x1y1 ) ) in most cases you will set cyclic to true </s>
<s> note that you can vary the points ( x1y1 ) and ( x2y2 ) to change the width and direction of the gradient </s>
<s> for example to create a cyclic gradient that varies from black to light gray along the line from ( 00 ) to ( 100100 ) use new gradientpaint( 0 0 colorblack 100 100 colorlight gray true ) java 6 introduced two new gradient paint classes lineargradientpaint and radialgradientpaint inear gradient paints are similar to gradientpaint but can be based on more than two colors radial gradients color pixels based on their distance from a central point which produces rings of constant color instead of lines of constant color </s>
<s> see the api documentation for details to construct a texturepaint you need a buﬀeredimage that contains the image that will be used for the texture </s>
<s> you also specify a rectangle in which the image will be drawn </s>
<s> the image will be scaled if necessary to exactly ﬁll the rectangle </s>
<s> outside the speciﬁed rectangle the image will be repeated horizontally and vertically to ﬁll the plane </s>
<s> you can vary the size and position of the rectangle to change the scale of the texture and its positioning on the plane ordinarily however the upper left corner of the rectangle is placed at ( 00 ) and the size of the rectangle is the same as the actual size of the image </s>
<s> the constructor for texturepaint is deﬁned as public texturepaint( bufferedimage textureimage rectangle2d anchorrect ) the rectangle2d is part of the graphics2d framework and will be discussed at the end of this section </s>
<s> often a call to the constructor takes the form new texturepaint( image new rectangle2ddouble( 00imagegetwidth( )imagegetheight( ) ) once you have a paint object you can use the setpaint( ) method of a graphics2d object to install the paint in a graphics context </s>
<s> for example if g2 is of type graphics2d then the command g2setpaint( new gradientpaint( 00colorblue100100colorgreentrue ) ) sets up g2 to use a gradient paint </s>
<s> subsequent drawing operations with g2 will draw using a blue/green gradient 1325 transforms in the standard drawing coordinates on a component the upper left corner of the component has coordinates ( 00 ) </s>
<s> coordinates are integers and the coordinates ( xy ) refer to the point that is x pixels over from the left edge of the component and y pixels down from the top </s>
<s> with graphics2d however you are not restricted to using these coordinates </s>
<s> in fact you can can set up a graphics2d graphics context to use any system of coordinates that you like </s>
<s> you can use this capability to select the coordinate system that is most appropriate for the things that 678 chapter 13 </s>
<s> advanced gui programming you want to draw </s>
<s> for example if you are drawing architectural blueprints you might use coordinates in which one unit represents an actual distance of one foot changes to a coordinate system are referred to as transforms </s>
<s> there are three basic types of transform </s>
<s> a translate transform changes the position of the origin ( 00 ) </s>
<s> a scale transform changes the scale that is the unit of distance </s>
<s> and a rotation transform applies a rotation about some point </s>
<s> you can make more complex transforms by combining transforms of the three basic types </s>
<s> for example you can apply a rotation followed by a scale followed by a translation followed by another rotation </s>
<s> when you apply several transforms in a row their eﬀects are cumulative </s>
<s> it takes a fair amount of study to fully understand complex transforms i will limit myself here to discussing a few of the most simple cases just to give you an idea of what transforms can do suppose that g2 is of type graphics2d </s>
<s> then g2translate( xy ) moves the origin ( 00 ) to the point ( xy ) </s>
<s> this means that if you use coordinates ( 00 ) after saying g2translate( xy ) then you are referring to the point that used to be ( xy ) before the translation was applied </s>
<s> all other coordinate pairs are moved by the same amount </s>
<s> for example saying gtranslate( xy ) gdrawline( 0 0 100 200 ) draws the same line as gdrawline( x y 100+x 200+y ) in the second case you are just doing the same translation by hand” a translation ( like all transforms ) aﬀects all subsequent drawing operations </s>
<s> instead of thinking in terms of coordinate systems you might ﬁnd it clearer to think of what happens to the objects that are drawn </s>
<s> after you say g2translate( xy ) any objects that you draw are displaced x units horizontally and y units vertically </s>
<s> note that the parameters x and y can be real numbers as an example perhaps you would prefer to have ( 00 ) at the center of a component instead of at its upper left corner </s>
<s> to do this just use the following command in the paintcomponent( ) method of the component g2translate( getwidth( )/2 getheight( )/2 ) to apply a scale transform to a graphics2d g2 use g2scale( ss ) where s is the real number that speciﬁes the scaling factor </s>
<s> if s is greater than 1 everything is magniﬁed by a factor of s while if s is between 0 and 1 everything is shrunk by a factor of s </s>
<s> the center of scaling is ( 00 ) </s>
<s> that is the point ( 00 ) is unaﬀected by the scaling and other points more towards or away from ( 00 ) by a factor of s </s>
<s> again it can be clearer to think of the eﬀect on objects that are drawn after a scale transform is applied </s>
<s> those objects will be magniﬁed or shrunk by a factor of s </s>
<s> note that scaling aﬀects everything including thickness of lines and size of fonts </s>
<s> it is possible to use diﬀerent scale factors in the horizontal and vertical direction with a command of the form g2scale( sxsy ) although that will distort the shapes of objects </s>
<s> by the way it is even possible to use scale factors that are less than 0 which results in reﬂections </s>
<s> for example after calling g2scale( -11 ) objects will be reﬂected horizontally through the line x=0 the third type of basic transform is rotation </s>
<s> the command g2rotate( r ) rotates all subsequently drawn objects through an angle of r about the point ( 00 ) </s>
<s> you can rotate instead about the point ( xy ) with the command g2rotate( rxy ) </s>
<s> all the parameters can be real numbers </s>
<s> angles are measured in radians where π radians are equal to 180 degrees </s>
<s> to rotate through an angle of d degrees use 679 132 </s>
<s> fancier graphics g2rotate( d * mathpi / 180 ) positive angles are clockwise rotations while negative angles are counterclockwise ( unless you have applied a negative scale factor which reverses the orientation ) rotation is not as common as translation or scaling but there are a few things that you can do with it that can’t be done any other way </s>
<s> for example you can use it to draw an image on the slant” rotation also makes it possible to draw text that is rotated so that its baseline is slanted or even vertical </s>
<s> to draw the string hello world” with its basepoint at ( xy ) and rising at an angle of 30 degrees use g2rotate( -30 * mathpi / 180 x y ) g2drawstring( hello world x y ) to draw the message vertically with the center of its baseline at the point ( xy ) we can use fontmetrics to measure the string and say fontmetrics fm = g2getfontmetrics( g2getfont( ) ) int baselinelength = fmstringwidth( hello world ) g2rotate( -90 * mathpi / 180 x y ) g2drawstring( hello world x - baselinelength/2 y ) ∗ ∗ ∗ the drawing operations in the graphics class use integer coordinates only </s>
<s> graphics2d makes it possible to use real numbers as coordinates </s>
<s> this becomes particularly important once you start using transforms since after you apply a scale a square of size one might cover many pixels instead of just a single pixel </s>
<s> unfortunately the designers of java couldn’t decide whether to use numbers of type ﬂoat or double as coordinates and their indecision makes things a little more complicated than they need to be ( my guess is that they really wanted to use ﬂoat since values of type ﬂoat have enough accuracy for graphics and are probably used in the underlying graphical computations of the computer </s>
<s> however in java programming it’s easier to use double than ﬂoat so they wanted to make it possible to use double values too ) to use real number coordinates you have to use classes deﬁned in the package javaawtgeom </s>
<s> among the classes in this package are classes that represent geometric shapes such as lines and rectangles </s>
<s> for example the class line2d represents a line whose endpoints are given as real number coordinates </s>
<s> the unfortunate thing is that line2d is an abstract class which means that you can’t create objects of type line2d directly </s>
<s> however line2d has two concrete subclasses that can be used to create objects </s>
<s> one subclass uses coordinates of type ﬂoat and one uses coordinates of type double </s>
<s> the most peculiar part is that these subclasses are deﬁned as static nested classes inside line2d </s>
<s> their names are line2dfloat and ine2ddouble </s>
<s> this means that line2d objects can be created for example with ine2d line1 = new line2dfloat( 017f 13f -27f 521f ) ine2d line2 = new line2ddouble( 0 0 1 0 ) ine2d line3 = new line2ddouble( x1 y1 x2 y2 ) where x1 y1 x2 y2 are any numeric variables </s>
<s> in my own code i generally use line2ddouble rather than line2dfloat other shape classes in javaawtgeom are similar </s>
<s> the class that represents rectangles is rectangle2d </s>
<s> to create a rectangle object you have to use either rectangle2dfloat or rectangle2ddouble </s>
<s> for example rectangle2d rect = new rectangle2ddouble( -05 -05 10 10 ) 680 chapter 13 </s>
<s> advanced gui programming creates a rectangle with a corner at ( -05-05 ) and with width and height both equal to 1 other classes include point2d which represents a single point ellipse2d which represents an oval and arc2d which represents an arc of a circle if g2 is of type graphics2d and shape is an object belonging to one of the 2d shape classes then the command g2draw( shape ) draws the shape </s>
<s> for a shape such as a rectangle or ellipse that has an interior only the outline is drawn </s>
<s> to ﬁll in the interior of such a shape use g2fill( shape ) for example to draw a line from ( x1y1 ) to ( x2y2 ) use g2draw( new line2ddouble( x1y1x2y2 ) ) and to draw a ﬁlled rectangle with a corner at ( 357 ) with width 5 and height 3 use g2fill( new rectangle2ddouble( 35 7 5 3 ) ) the package javaawtgeom also has a very nice class generalpath that can be used to draw polygons and curves deﬁned by any number of points </s>
<s> see the java documentation if you want to ﬁnd out how to use it </s>
<s> in java 6 generalpath has been largely superseded by path2d which provides the same functionality but more closely follows the conventions used by other shape classes this section has introduced you to many of the interesting features of graphics2d but there is still a large part of the graphics2d framework for you to explore 133 actions and buttons for the past two sections we have been looking at some of the more advanced aspects of the java graphics api </s>
<s> but the heart of most graphical user interface programming is using gui components </s>
<s> in this section and the next we’ll be looking at jcomponents </s>
<s> we’ll cover several component classes that were not covered in chapter 6 as well as some additional features of classes that were covered there this section is mostly about buttons </s>
<s> buttons are among the simplest of gui components and it seems like there shouldn’t be all that much to say about them </s>
<s> however buttons are not as simple as they seem </s>
<s> for one thing there are many diﬀerent types of buttons </s>
<s> the basic functionality of buttons in java is deﬁned by the class javaxswingabstractbutton subclasses of this class represent push buttons check boxes and radio buttons </s>
<s> menu items are also considered to be buttons </s>
<s> the abstractbutton class deﬁnes a surprisingly large api for controlling the appearance of buttons </s>
<s> this section will cover part of that api but you should see the class documentation for full details in this section we’ll also encounter a few classes that do not themselves deﬁne buttons but that are related to the button api starting with actions” 1331 action and abstractaction the jbutton class represents push buttons </s>
<s> up until now we have created push buttons using the constructor public jbutton( string text ) 133 </s>
<s> actions and buttons 681 which speciﬁes text that will appear on the button </s>
<s> we then added an actionlistener to the button to respond when the user presses it </s>
<s> another way to create a jbutton is using an action </s>
<s> the action interface represents the general idea of some action that can be performed together with properties associated with that action such as a name for the action an icon that represents the action and whether the action is currently enabled or disabled </s>
<s> actions are usually deﬁned using the class abstractaction an abstract class which includes a method public void actionperformed( actionevent evt ) that must be deﬁned in any concrete subclass </s>
<s> often this is done in an anonymous inner class for example if display is an object that has a clear( ) method an action object that represents the action clear the display” might be deﬁned as action clearaction = new abstractaction( clear ) { public void actionperformed( actionevent evt ) { displayclear( ) } } the parameter clear in the constructor of the abstractaction is the name of the action other properties can be set by calling the method putvalue( keyvalue ) which is part of the action interface </s>
<s> for example clearactionputvalue( actionshort description clear the display ) sets the short description property of the action to have the value clear the display” </s>
<s> the key parameter in the putvalue( ) method is usually given as one of several constants deﬁned in the action interface </s>
<s> as another example you can change the name of an action by using actionname as the key in the putvalue( ) method once you have an action you can use it in the constructor of a button </s>
<s> for example using the action clearaction deﬁned above we can create the jbutton jbutton clearbutton = new jbutton( clearaction ) the name of the action will be used as the text of the button and some other properties of the button will be taken from properties of the action </s>
<s> for example if the short description property of the action has a value then that value is used as the tooltip text for the button ( the tooltip text appears when the user hovers the mouse over the button ) furthermore when you change a property of the action the corresponding property of the button will also be changed the action interface deﬁnes a setenabled( ) method that is used to enable and disable the action </s>
<s> the clearaction action can be enabled and disabled by calling clearactionsetenabled( true ) and clearactionsetenabled( false ) </s>
<s> when you do this any button that has been created from the action is also enabled or disabled at the same time now of course the question is why should you want to use actions at all one advantage is that using actions can help you to organize your code better </s>
<s> you can create separate objects that represent each of the actions that can be performed in your program </s>
<s> this represents a nice division of responsibility </s>
<s> of course you could do the same thing with individual actionlistener objects but then you couldn’t associate descriptions and other properties with the actions more important is the fact that actions can also be used in other places in the java api you can use an action to create a jmenuitem in the same way as for a jbutton jmenuitem clearcommand = new jmenuitem( clearaction ) 682 chapter 13 </s>
<s> advanced gui programming a jmenuitem in fact is a kind of button and shares many of the same properties that a jbutton can have </s>
<s> you can use the same action to create both a button and a menu item ( or even several of each if you want ) </s>
<s> whenever you enable or disable the action or change its name the button and the menu item will both be changed to match </s>
<s> if you change the name property of the action the text of both the menu item and the button will be set to the new name of the action </s>
<s> if you disable the action both menu item and button will be disabled </s>
<s> you can think of the button and the menu items as being two presentations of the action and you don’t have to keep track of the button or menu item after you create them </s>
<s> you can do everything that you need to do by manipulating the action object it is also possible to associate an action with a key on the keyboard so that the action will be performed whenever the user presses that key </s>
<s> i won’t explain how to do it here but you can look up the documentation for the classes javaxswinginputmap and javaxswingactionmap by the way if you want to add a menu item that is deﬁned by an action to a menu you don’t even need to create the jmenuitem yourself </s>
<s> you can add the action object directly to the menu and the menu item will be created from the properties of the action </s>
<s> for example if menu is a jmenu and clearaction is an action you can simply say menuadd( clearaction ) 1332 icons on buttons in addition to—or instead of—text buttons can also show icons </s>
<s> icons are represented by the icon interface and are usually created as imageicons as discussed in subsection 1314 </s>
<s> for example here is a picture of a button that displays an image of a large x” as its icon the icon for a button can be set by calling the button’s seticon( ) method or by passing the icon object as a parameter to the constructor when the button is created </s>
<s> to create the button shown above i created an imageicon from a buﬀeredimage on which i drew the picture that i wanted and i constructed the jbutton using a constructor that takes both the text and the icon for the button as parameters </s>
<s> here’s the code segment that does it bufferedimage image = new bufferedimage( 2424bufferedimagetype int rgb ) graphics2d g2 = ( graphics2d )imagegetgraphics( ) g2setcolor( colorlight gray ) // draw the image for the icon g2fillrect( 002424 ) g2setstroke( new basicstroke( 3 ) ) // use thick lines g2setcolor( colorblack ) g2drawline( 442020 ) // draw the x g2drawline( 420204 ) g2dispose( ) icon clearicon = new imageicon( image ) // create the icon jbutton clearbutton = new jbutton( clear the display clearicon ) you can create a button with an icon but no text by using a constructor that takes just the icon as parameter </s>
<s> another alternative is for the button to get its icon from an action </s>
<s> when a button is constructed from an action it takes its icon from the value of the action property actionsmall icon </s>
<s> for example suppose that we want to use an action named clearaction to create the button shown above </s>
<s> this could be done with 133 </s>
<s> actions and buttons 683 clearactionputvalue( actionsmall icon clearicon ) jbutton clearbutton = new jbutton( clearaction ) the icon could also be associated with the action by passing it as a parameter to the constructor of an abstractaction action clearaction = new abstractaction( clear the display clearicon ) { public void actionperformed( actionevent evt ) { // carry out the action } } jbutton clearbutton = new jbutton( clearaction ) ( in java 60 and later a button will use the value of the actionlarge icon key property of the action if that property has a value in preference to actionsmall icon ) the appearance of buttons can be tweaked in many ways </s>
<s> for example you can change the size of the gap between the button’s text and its icon </s>
<s> you can associate additional icons with a button that are used when the button is in certain states such as when it is pressed or when it is disabled </s>
<s> it is even possible to change the positioning of the text with respect to the icon for example to place the text centered below the icon on a button you can say buttonsethorizontaltextposition( jbuttoncenter ) buttonsetverticaltextposition( jbuttonbottom ) these methods and many others are deﬁned in the class abstractbutton </s>
<s> this class is a superclass for jmenuitem as well as for jbutton and for the classes that deﬁne check boxes and radio buttons </s>
<s> note in particular that an icon can be shown in a menu by associating the icon with a menu item or with the action that is used to create the menu item finally i will mention that it is possible to use icons on jlabels in much the same way that they can be used on jbuttons </s>
<s> placing an imageicon on a jlabel can be a convenient way to add a static image to your gui 1333 radio buttons the jcheckbox class was covered in subsection 663 and the equivalent for use in menus jcheckboxmenuitem in subsection 681 </s>
<s> a checkbox has two states selected and not selected and the user can change the state by clicking on the check box </s>
<s> the state of a checkbox can also be set programmatically by calling its setselected( ) method and the current value of the state can be checked using the isselected( ) method closely related to checkboxes are radio buttons </s>
<s> like a checkbox a radio button can be either selected or not </s>
<s> however radio buttons are expected to occur in groups and at most one radio button in a group can be selected at any given time </s>
<s> in java a radio button is represented by an object of type jradiobutton </s>
<s> when used in isolation a jradiobutton acts just like a jcheckbox and it has the same methods and events </s>
<s> ordinarily however a jradiobutton is used in a group </s>
<s> a group of radio buttons is represented by an object belonging to the class buttongroup </s>
<s> a buttongroup is not a component and does not itself have a visible representation on the screen </s>
<s> a buttongroup works behind the scenes to organize a group of radio buttons to ensure that at most one button in the group can be selected at any given time 684 chapter 13 </s>
<s> advanced gui programming to use a group of radio buttons you must create a jradiobutton object for each button in the group and you must create one object of type buttongroup to organize the individual buttons into a group </s>
<s> each jradiobutton must be added individually to some container so that it will appear on the screen ( a buttongroup plays no role in the placement of the buttons on the screen ) each jradiobutton must also be added to the buttongroup which has an add( ) method for this purpose </s>
<s> if you want one of the buttons to be selected initially you can call setselected( true ) for that button </s>
<s> if you don’t do this then none of the buttons will be selected until the user clicks on one of them as an example here is how you could set up a set of radio buttons that can be used to select a color jradiobutton redradio blueradio greenradio blackradio // variables to represent the radio buttons // these should probably be instance variables so // that they can be used throughout the program buttongroup colorgroup = new buttongroup( ) redradio = new jradiobutton( red ) colorgroupadd( redradio ) // create a button // add it to the group blueradio = new jradiobutton( blue ) colorgroupadd( blueradio ) greenradio = new jradiobutton( green ) colorgroupadd( greenradio ) blackradio = new jradiobutton( black ) colorgroupadd( blackradio ) redradiosetselected( true ) // make an initial selection the individual buttons must still be added to a container if they are to appear on the screen if you want to respond immediately when the user clicks on one of the radio buttons you can register an actionlistener for each button </s>
<s> just as for checkboxes it is not always necessary to register listeners for radio buttons </s>
<s> in some cases you can simply check the state of each button when you need to know it using the button’s isselected( ) method all this is demonstrated in the sample program radiobuttondemojava </s>
<s> the program shows four radio buttons </s>
<s> when the user selects one of the radio buttons the text and background color of a label is changed </s>
<s> here is a picture of the program with the green” radio button selected 685 133 </s>
<s> actions and buttons you can add the equivalent of a group of radio buttons to a menu by using the class jradiobuttonmenuitem </s>
<s> to use this class create several objects of this type and create a buttongroup to manage them </s>
<s> add each jradiobuttonmenuitem to the buttongroup and also add them to a jmenu </s>
<s> if you want one of the items to be selected initially call its setselected( ) method to set its selection state to true </s>
<s> you can add actionlisteners to each jradiobuttonmenuitem if you need to take some action when the user selects the menu item if not you can simply check the selected states of the buttons whenever you need to know them </s>
<s> as an example suppose that menu is a jmenu </s>
<s> then you can add a group of buttons to menu as follows jradiobuttonmenuitem selectreditem selectgreenitem selectblueitem // these might be defined as instance variables buttongroup group = new buttongroup( ) selectreditem = new jradiobuttonmenuitem( red ) groupadd( selectreditem ) menuadd( selectreditem ) selectgreenitem = new jradiobuttonmenuitem( green ) groupadd( selectgreenitem ) menuadd( selectgreenitem ) selectblueitem = new jradiobuttonmenuitem( blue ) groupadd( selectblueitem ) menuadd( selectblueitem ) ∗ ∗ ∗ when it’s drawn on the screen a jcheckbox includes a little box that is either checked or unchecked to show the state of the box </s>
<s> that box is actually a pair of icons </s>
<s> one icon is shown when the check box is unselected the other is shown when it is selected </s>
<s> you can change the appearance of the check box by substituting diﬀerent icons for the standard ones the icon that is shown when the check box is unselected is just the main icon for the jcheckbox </s>
<s> you can provide a diﬀerent unselected icon in the constructor or you can change the icon using the seticon( ) method of the jcheckbox object </s>
<s> to change the icon that is shown when the check box is selected use the setselectedicon( ) method of the jcheckbox all this applies equally to jradiobutton jcheckboxmenuitem and jradiobuttonmenuitem an example of this can be found in the sample program toolbardemojava which is discussed in the next subsection </s>
<s> that program creates a set of radio buttons that use custom icons </s>
<s> the buttons are created by the following method /** * create a jradiobutton and add it to a specified button group </s>
<s> the button * is meant for selecting a drawing color in the display </s>
<s> the color is used to * create two custom icons one for the unselected state of the button and one * for the selected state </s>
<s> these icons are used instead of the usual * radio button icons * @param c the color of the button and the color to be used for drawing * ( note that c has to be final since it is used in the anonymous inner * class that defines the response to actionevents on the button ) * @param grp the buttongroup to which the radio button will be added * @param selected if true then the state of the button is set to selected * @return the radio button that was just created sorry but the button is not as pretty as i would like! */ private jradiobutton makecolorradiobutton( final color c 686 chapter 13 </s>
<s> advanced gui programming buttongroup grp boolean selected ) { /* create an imageicon for the normal unselected state of the button using a bufferedimage that is drawn here from scratch */ bufferedimage image = new bufferedimage( 3030bufferedimagetype int rgb ) graphics g = imagegetgraphics( ) gsetcolor( colorlight gray ) gfillrect( 003030 ) gsetcolor( c ) gfill3drect( 1 1 24 24 true ) gdispose( ) icon unselectedicon = new imageicon( image ) /* create an imageicon for the selected state of the button */ image = new bufferedimage( 3030bufferedimagetype int rgb ) g = imagegetgraphics( ) gsetcolor( colordark gray ) gfillrect( 003030 ) gsetcolor( c ) gfill3drect( 3 3 24 24 false ) gdispose( ) icon selectedicon = new imageicon( image ) /* create and configure the button */ jradiobutton button = new jradiobutton( unselectedicon ) buttonsetselectedicon( selectedicon ) buttonaddactionlistener( new actionlistener( ) { public void actionperformed( actionevent e ) { // the action for this button sets the current drawing color // in the display to c displaysetcurrentcolor( c ) } } ) grpadd( button ) if ( selected ) buttonsetselected( true ) return button } // end makecolorradiobutton ∗ ∗ ∗ it is possible to create radio buttons and check boxes from actions </s>
<s> the button takes its name main icon tooltip text and enabled/disabled state from the action </s>
<s> in java 50 this was less useful since an action had no property corresponding to the selected/unselected state </s>
<s> this meant that you couldn’t check or set the selection state through the action </s>
<s> in java 6 the action api is considerably improved and among the changes is support for selection state </s>
<s> in java 6 the selected state of an action named action can be set by calling actionputvalue( actionselected keytrue ) and actionputvalue( actionselected keyfalse ) </s>
<s> when you do this the selection state of any checkbox or radio button that was created from action is automatically changed to match </s>
<s> conversely when the state of the checkbox or radio button is changed in some other way the property of the action—and hence of any other components created 133 </s>
<s> actions and buttons 687 from the action—will automatically change as well </s>
<s> the state can be checked by calling actiongetvalue( actionselected key ) 1334 toolbars it has become increasingly common for programs to have a row of small buttons along the top or side of the program window that oﬀer access to some of the commonly used features of the program </s>
<s> the row of buttons is known as a tool bar </s>
<s> typically the buttons in a tool bar are presented as small icons with no text </s>
<s> tool bars can also contain other components such as jtextfields and jlabels in swing tool bars are represented by the class jtoolbar </s>
<s> a jtoolbar is a container that can hold other components </s>
<s> it is also itself a component and so can be added to other containers in general the parent component of the tool bar should use a borderlayout </s>
<s> the tool bar should occupy one of the edge positions—north south east or west—in the borderlayout furthermore the other three edge positions should be empty </s>
<s> the reason for this is that it might be possible ( depending on the platform and conﬁguration ) for the user to drag the tool bar from one edge position in the parent container to another </s>
<s> it might even be possible for the user to drag the tool bar oﬀ its parent entirely so that it becomes a separate window here is a picture of a tool bar from the sample program toolbardemojava in this program the user can draw colored curves in a large drawing area </s>
<s> the ﬁrst three buttons in the tool bar are a set of radio buttons that control the drawing color </s>
<s> the fourth button is a push button that the user can click to clear the drawing tool bars are easy to use </s>
<s> you just have to create the jtoolbar object add it to a container and add some buttons and possibly other components to the tool bar </s>
<s> one ﬁne point is adding space to a tool bar such as the gap between the radio buttons and the push button in the sample program </s>
<s> you can leave a gap by adding a separator to the tool bar </s>
<s> for example toolbaraddseparator( new dimension( 2020 ) ) this adds an invisible 20-by-20 pixel block to the tool bar </s>
<s> this will appear as a 20 pixel gap between components here is the constructor from the toolbardemo program </s>
<s> it shows how to create the tool bar and place it in a container </s>
<s> note that class toolbardemo is a subclass of jpanel and the tool bar and display are added to the panel object that is being constructed public toolbardemo( ) { setlayout( new borderlayout( 22 ) ) setbackground( colorgray ) setborder( borderfactorycreatelineborder( colorgray2 ) ) display = new display( ) add( display borderlayoutcenter ) jtoolbar toolbar = new jtoolbar( ) add( toolbar borderlayoutnorth ) buttongroup group = new buttongroup( ) 688 chapter 13 </s>
<s> advanced gui programming toolbaradd( makecolorradiobutton( colorredgrouptrue ) ) toolbaradd( makecolorradiobutton( colorgreengroupfalse ) ) toolbaradd( makecolorradiobutton( colorbluegroupfalse ) ) toolbaraddseparator( new dimension( 2020 ) ) toolbaradd( makeclearbutton( ) ) } note that the gray outline of the tool bar comes from two sources the line at the bottom shows the background color of the main panel which is visible because the borderlayout that is used on that panel has vertical and horizontal gaps of 2 pixels </s>
<s> the other three sides are part of the border of the main panel if you want a vertical tool bar that can be placed in the east or west position of a borderlayout you should specify the orientation in the tool bar’s constructor jtoolbar toolbar = new jtoolbar( jtoolbarvertical ) the default orientation is jtoolbarhorizontal </s>
<s> the orientation is adjusted automatically when the user drags the tool bar into a new position </s>
<s> if you want to prevent the user from dragging the tool bar just say toolbarsetfloatable( false ) 1335 keyboard accelerators in most programs commonly used menu commands have keyboard equivalents </s>
<s> the user can type the keyboard equivalent instead of selecting the command from the menu and the result will be exactly the same </s>
<s> typically for example the save” command has keyboard equivalent control-s and the undo” command corresponds to control-z ( under mac os the keyboard equivalents for these commands would probably be meta-s and meta-z where meta refers to holding down the apple” key ) the keyboard equivalents for menu commands are referred to as accelerators the class javaxswingkeystroke is used to represent key strokes that the user can type on the keyboard </s>
<s> a key stroke consists of pressing a key possibly while holding down one or more of the modiﬁer keys control shift alt and meta </s>
<s> the keystroke class has a static method getkeystroke( string ) that makes it easy to create key stroke objects </s>
<s> for example keystrokegetkeystroke( ctrl s ) returns a keystroke that represents the action of pressing the s” key while holding down the control key </s>
<s> in addition to ctrl” you can use the modiﬁers shift” alt” and meta” in the string that describes the key stroke </s>
<s> you can even combine several modiﬁers so that keystrokegetkeystroke( ctrl shift z ) represents the action of pressing the z” key while holding down both the control and the shift keys </s>
<s> when the key stroke involves pressing a character key the character must appear in the string in upper case form </s>
<s> you can also have key strokes that correspond to non-character keys the number keys can be referred to as 1” 2” etc while certain special keys have names such as f1” enter” and left” ( for the left arrow key ) </s>
<s> the class keyevent deﬁnes many constants such as vk enter vk left and vk s </s>
<s> the names that are used for keys in the keystroke description are just these constants with the leading vk ” removed there are at least two ways to associate a keyboard accelerator with a menu item </s>
<s> one is to use the setaccelerator( ) method of the menu item object 689 133 </s>
<s> actions and buttons jmenuitem savecommand = new jmenuitem( save ) savecommandsetaccelerator( keystrokegetkeystroke( ctrl s ) ) the other technique can be used if the menu item is created from an action </s>
<s> the action property actionaccelerator key can be used to associate a keystroke with an action </s>
<s> when a menu item is created from the action the keyboard accelerator for the menu item is taken from the value of this property </s>
<s> for example if redoaction is an action representing a redo” action then you might say redoactionputvalue( actionaccelerator key keystrokegetkeystroke( ctrl shift z ) ) jmenuitem redocommand = new jmenuitem( redoaction ) or alternatively you could simply add the action to a jmenu editmenu with editmenuadd( redoaction ) ( note by the way that accelerators apply only to menu items not to push buttons </s>
<s> when you create a jbutton from an action the accelerator key property of the action is ignored ) note that you can use accelerators for jcheckboxmenuitems and jradiobuttonmenuitems as well as for simple jmenuitems for an example of using keyboard accelerators see the solution to exercise 132 ∗ ∗ ∗ by the way as noted above in the mac os operating system the meta ( or apple ) key is usually used for keyboard accelerators instead of the control key </s>
<s> if you would like to make your program more mac-friendly you can test whether your program is running under mac os and if so adapt your accelerators to the mac os style </s>
<s> the recommended way to detect mac os is to test the value of systemgetproperty( mrjversion ) </s>
<s> this function call happens to return a non-null value under mac os but returns null under other operating systems </s>
<s> for example here is a simple utility routine for making mac-friendly accelerators /** * create a keystroke that uses the meta key on mac os and * the control key on other operating systems * @param description a string that describes the keystroke * without the meta or ctrl for example s or * shift z or alt f1 * @return a keystroke created from the description string * with either ctrl or meta prepended */ private static keystroke makeaccelerator( string description ) { string commandkey if ( systemgetproperty( mrjversion ) == null ) commandkey = ctrl else commandkey = meta return keystrokegetkeystroke( commandkey + + description ) } 1336 html on buttons as a ﬁnal stop in this brief tour of ways to spiﬀ up your buttons i’ll mention the fact that the text that is displayed on a button can be speciﬁed in html format </s>
<s> html is the markup language that is used to write web pages </s>
<s> a brief introduction to html can be found in 690 chapter 13 </s>
<s> advanced gui programming subsection 623 </s>
<s> html allows you to apply color or italics or other styles to just part of the text on your buttons </s>
<s> it also makes it possible to have buttons that display multiple lines of text ( you can also use html on jlabels which can be even more useful ) here’s a picture of a button with html text ( along with a java” icon ) if the string of text that is applied to a button starts with <html>” then the string is interpreted as html </s>
<s> the string does not have to use strict html format for example you don’t need a closing </html> at the end of the string </s>
<s> to get multi-line text use <br> in the string to represent line breaks </s>
<s> if you would like the lines of text to be center justiﬁed include the entire text ( except for the <html> ) between <center> and </center> </s>
<s> for example jbutton button = new jbutton( <html><center>this button has<br>two lines of text</center> ) creates a button that displays two centered lines of text </s>
<s> you can apply italics to part of the string by enclosing that part between <i> and </i> </s>
<s> similarly use <b></b> for bold text and <u></u> for underlined text </s>
<s> for green text enclose the text between <font color=green> and </font > </s>
<s> you can of course use other colors in place of green” the java” button that is shown above was created using jbutton javabutton = new jbutton( <html><b>now</b> is the time for<br> + a nice cup of <font color=red>coffee</font> ) other html features can also be used on buttons and labels—experiment to see what you can get away with! 134 since complex components and mvc even buttons turn out to be pretty complex as seen in the previous section you might guess that there is a lot more complexity lurking in the swing api </s>
<s> while this is true a lot of that complexity works to your beneﬁt as a programmer since a lot of it is hidden in normal uses of swing components </s>
<s> for example you don’t have to know about all the complex details of buttons in order to use them eﬀectively in most programs swing deﬁnes several component classes that are much more complex than those we have looked at so far but even the most complex components are not very diﬃcult to use for many purposes </s>
<s> in this section we’ll look at components that support display and manipulation of lists tables and text documents </s>
<s> to use these complex components eﬀectively you’ll need to know something about the model-view-controller pattern that is used as a basis for the design of many swing components </s>
<s> this pattern is discussed in the ﬁrst part of this section this section is our last look at swing components but there are a number of component classes that have not even been touched on in this book </s>
<s> some useful ones that you might want to look into include jtabbedpane jsplitpane jtree jspinner jpopupmenu jprogressbar and jscrollbar at the end of the section we’ll look brieﬂy at the idea of writing custom component classes— something that you might consider when even the large variety of components that are already deﬁned in swing don’t do quite what you want 134 </s>
<s> complex components and mvc 1341 691 model-view-controller one of the principles of object-oriented design is division of responsibilities </s>
<s> ideally an object should have a single clearly deﬁned role with a limited realm of responsibility </s>
<s> one application of this principle to the design of graphical user interfaces is the mvc pattern mvc” stands for model-view-controller” and refers to three diﬀerent realms of responsibility in the design of a graphical user interface when the mvc pattern is applied to a component the model consists of the data that represents the current state of the component </s>
<s> the view is simply the visual presentation of the component on the screen </s>
<s> and the controller is the aspect of the component that carries out actions in response to events generated by the user ( or by other sources such as timers ) </s>
<s> the idea is to assign responsibility for the model the view and the controller to diﬀerent objects the view is the easiest part of the mvc pattern to understand </s>
<s> it is often represented by the component object itself and its responsibility is to draw the component on the screen </s>
<s> in doing this of course it has to consult the model since the model represents the state of the component and that state can determine what appears on the screen </s>
<s> to get at the model data—which is stored in a separate object according to the mvc pattern—the component object needs to keep a reference to the model object </s>
<s> furthermore when the model changes the view might have to be redrawn to reﬂect the changed state </s>
<s> the component needs some way of knowing when changes in the model occur </s>
<s> typically in java this is done with events and listeners </s>
<s> the model object is set up to generate events when its data changes </s>
<s> the view object registers itself as a listener for those events </s>
<s> when the model changes an event is generated the view is notiﬁed of that event and the view responds by updating its appearance on the screen when mvc is used for swing components the controller is generally not so well deﬁned as the model and view and its responsibilities are often split among several objects </s>
<s> the controller might include mouse and keyboard listeners that respond to user events on the view actions that respond to menu commands or buttons and listeners for other high-level events such as those from a slider that aﬀect the state of the component </s>
<s> usually the controller responds to events by making modiﬁcations to the model and the view is changed only indirectly in response to the changes in the model the mvc pattern is used in many places in the design of swing </s>
<s> it is even used for buttons the state of a swing button is stored in an object of type buttonmodel </s>
<s> the model stores such information as whether the button is enabled whether it is selected and what buttongroup it is part of if any </s>
<s> if button is of type jbutton ( or one of the other subclasses of abstractbutton ) then its buttonmodel can be obtained by calling buttongetmodel( ) </s>
<s> in the case of buttons you might never need to use the model or even know that it exists </s>
<s> but for the list and table components that we will look at next knowledge of the model is essential 1342 ists and listmodels a jlist is a component that represents a list of items that can be selected by the user </s>
<s> the sample program sillystamperjava allows the user to select one icon from a jlist of icons </s>
<s> the user selects an icon from the list by clicking on it </s>
<s> the selected icon can be stamped” onto a drawing area by clicking on the drawing area ( the icons in this program are from the kde desktop project ) here is a picture of the program with several icons already stamped onto the drawing area and with the light bulb” icon selected 692 chapter 13 </s>
<s> advanced gui programming note that the scrollbar in this program is not part of the jlist </s>
<s> to add a scrollbar to a list the list must be placed into a jscrollpane </s>
<s> see subsection 664 where the use of jscrollpane to hold a jtextarea was discussed </s>
<s> scroll panes are used in the same way with lists and with other components </s>
<s> in this case the jlist iconlist was added to a scroll pane and the scroll pane was added to a panel with the single command add( new jscrollpane( iconlist ) borderlayouteast ) one way to construct a jlist is from an array that contains the objects that will appear in the list </s>
<s> the items can be of any type but only icons and strings can actually appear in the list an item that is not of type icon or string is converted into a string by calling its tostring( ) method ( it’s possible to teach” a jlist to display other types of items see the setcellrenderer( ) method in the jlist class ) in the sillystamper program the images for the icons are read from resource ﬁles the icons are placed into an array and the array is used to construct the list </s>
<s> this is done by the following method private jlist createiconlist( ) { string[] iconnames = new string[] { icon5png icon7png icon8png icon9png icon10png icon11png icon24png icon25png icon26png icon31png icon33png icon34png } // array containing resource file names for the icon images iconimages = new image[iconnameslength] classloader classloader = getclass( )getclassloader( ) toolkit toolkit = toolkitgetdefaulttoolkit( ) try { // get the icon images from the resource files for ( int i = 0 i < iconnameslength i++ ) { url imageurl = classloadergetresource( stamper icons/ + iconnames[i] ) if ( imageurl == null ) throw new exception( ) iconimages[i] = toolkitcreateimage( imageurl ) } } catch ( exception e ) { iconimages = null return null 134 </s>
<s> complex components and mvc 693 } imageicon[] icons = new imageicon[iconimageslength] for ( int i = 0 i < iconimageslength i++ ) // create the icons icons[i] = new imageicon( iconimages[i] ) jlist list = new jlist( icons ) // a list containing the image icons listsetselectionmode( listselectionmodelsingle selection ) listsetselectedindex( 0 ) // first item in the list is currently selected return list } by default the user can select any number of items in a list </s>
<s> a single item is selected by clicking on it </s>
<s> multiple items can be selected by shift-clicking and by either control-clicking or meta-clicking ( depending on the platform ) </s>
<s> in the sillystamper program i wanted to restrict the selection so that only one item can be selected at a time </s>
<s> this restriction is imposed by calling listsetselectionmode( listselectionmodelsingle selection ) with this selection mode when the user selects an item the previously selected item if any is deselected </s>
<s> note that the selection can be changed by the program by calling listsetselectedindex( itemnum ) </s>
<s> items are numbered starting from zero </s>
<s> to ﬁnd out the currently selected item in single selection mode call listgetselectedindex( ) </s>
<s> this returns the item number of the selected item or -1 if no item is currently selected </s>
<s> if multiple selections are allowed you can call listgetselectedindices( ) which returns an array of ints that contains the item numbers of all selected items now the list that you see on the screen is only the view aspect of the list </s>
<s> the controller consists of the listener objects that respond when the user clicks an item in the list </s>
<s> for its model a jlist uses an object of type listmodel </s>
<s> this is the object that knows the actual list of items </s>
<s> now a model is deﬁned not only by the data that it contains but by the set of operations that can be performed on the data </s>
<s> when a jlist is constructed from an array of objects the model that is used is very simple </s>
<s> the model can tell you how many items it contains and what those items are but it can’t do much else </s>
<s> in particular there is no way to add items to the list or to delete items from the list! if you need that capability you will have to use a diﬀerent list model the class defaultlistmodel deﬁnes list models that support adding items to and removing items from the list ( note that the list model that you get when you create a jlist from an array is not of this type ) if dlmodel is of type defaultlistmodel the following methods among others are deﬁned • dlmodelgetsize( ) — returns the number of items • dlmodelgetelementat( index ) — returns the item at position index in the list • dlmodeladdelement( item ) — adds item to the end of the list item can be any object • dlmodelinsertelementat( item index ) — inserts the speciﬁed item into the list at the speciﬁed index items that come after that position in the list are moved down to make room for the new item • dlmodelsetelementat( item index ) — replaces the item that is currently at position index in the list with item • dlmodelremove( index ) — removes the item at position index in the list 694 chapter 13 </s>
<s> advanced gui programming • dlmodelremoveallelements( ) — removes everything from the list leaving it empty to use a modiﬁable jlist you should create a defaultlistmodel add any items to it that should be in the list initially and pass it to the jlist constructor </s>
<s> for example defaultlistmodel listmodel jlist flavorlist // should probably be instance variables! listmodel = new defaultlistmodel( ) // create the model object listmodeladdelement( chocolate ) listmodeladdelement( vanilla ) listmodeladdelement( strawberry ) listmodeladdelement( rum raisin ) // add items to the model flavorlist = new jlist( listmodel ) // create the list component by keeping a reference to the model around in an instance variable you will be able to add and delete ﬂavors as the program is running by calling the appropriate methods in listmodel </s>
<s> keep in mind that changes that are made to the model will automatically be reﬂected in the view behind the scenes when a list model is modiﬁed it generates an event of type listdataevent the jlist registers itself with its model as a listener for these events and it responds to an event by redrawing itself to reﬂect the changes in the model </s>
<s> the programmer doesn’t have to take any extra action beyond changing the model by the way the model for a jlist actually has another part in addition to the listmodel an object of type listselectionmodel stores information about which items in the list are currently selected </s>
<s> when the model is complex it’s not uncommon to use several model objects to store diﬀerent aspects of the state 1343 tables and tablemodels ike a jlist a jtable displays a collection of items to the user </s>
<s> however tables are much more complicated than lists </s>
<s> perhaps the most important diﬀerence is that it is possible for the user to edit items in the table </s>
<s> table items are arranged in a grid of rows and columns </s>
<s> each grid position is called a cell of the table </s>
<s> each column can have a header which appears at the top of the column and contains a name for the column it is easy to create a jtable from an array that contains the names of the columns and a two-dimensional array that contains the items that go into the cells of the table </s>
<s> as an example the sample program statesandcapitalstabledemojava creates a table with two columns named state” and capital city” the ﬁrst column contains a list of the states of the united states and the second column contains the name of the capital city of each state </s>
<s> the table can be created as follows string[][] statesandcapitals = new string[][] { { alabama montgomery } { alaska juneau } { arizona phoenix } { wisconsin madison } { wyoming cheyenne } } 134 </s>
<s> complex components and mvc 695 string[] columnheads = new string[] { state capital city } jtable table = new jtable( statesandcapitals columnheads ) since a table does not come with its own scroll bars it is almost always placed in a jscrollpane to make it possible to scroll the table </s>
<s> in the example program this is done with add( new jscrollpane( table ) borderlayoutcenter ) the column headers of a jtable are not actually part of the table they are in a separate component </s>
<s> but when you add the table to a jscrollpane the column headers are automatically placed at the top of the pane using the default settings the user can edit any cell in the table ( to select an item for editing click it and start typing </s>
<s> the arrow keys can be used to move from one cell to another ) the user can change the order of the columns by dragging a column header to a new position </s>
<s> the user can also change the width of the columns by dragging the line that separates neighboring column headers </s>
<s> you can try all this in the sample program there is an applet version in the on-line version of this section allowing the user to edit all entries in the table is not always appropriate certainly it’s not appropriate in the states and capitals” example </s>
<s> a jtable uses an object of type tablemodel to store information about the contents of the table </s>
<s> the model object is also responsible for deciding whether or not the user should be able to edit any given cell in the table </s>
<s> tablemodel includes the method public boolean iscelleditable( int rownum columnnum ) where rownum and columnnum are the position of a cell in the grid of rows and columns that make up the table </s>
<s> when the controller wants to know whether a certain cell is editable it calls this method in the table model </s>
<s> if the return value is true the user is allowed to edit the cell the default model that is used when the table is created as above from an array of objects allows editing of all cells </s>
<s> for this model the return value of iscelleditable( ) is true in all cases </s>
<s> to make some cells non-editable you have to provide a diﬀerent model for the table </s>
<s> one way to do this is to create a subclass of defaulttablemodel and override the iscelleditable( ) method ( defaulttablemodel and some other classes that are discussed in this section are deﬁned in the package javaxswingtable ) here is how this might be done in the states and capitals” program to make all cells non-editable tablemodel model = new defaulttablemodel( statesandcapitalscolumnheads ) { public boolean iscelleditable( int row int col ) { return false } } jtable table = new jtable( model ) here an anonymous subclass of defaulttablemodel is created in which the iscelleditable( ) method returns false in all cases and the model object that is created from that class is passed as a parameter to the jtable constructor the defaulttablemodel class deﬁnes many methods that can be used to modify the table including for example setvalueat( itemrownumcolnum ) to change the item in a given cell removerow( rownum ) to delete a row and addrow( itemarray ) to add a new row at the end of the table that contains items from the array itemarray </s>
<s> note that if the item in a given cell 696 chapter 13 </s>
<s> advanced gui programming is null then that cell will be empty </s>
<s> remember again that when you modify the model the view is automatically updated to reﬂect the changes in addition to the iscelleditable( ) method the table model method that you are most likely to want to override is getcolumnclass( ) which is deﬁned as public class<> getcolumnclass( columnnum ) the purpose of this method is to specify what kind of values are allowed in the speciﬁed column </s>
<s> the return value from this method is of type class ( the <>” is there for technical reasons having to do with generic programming </s>
<s> see section 105 but don’t worry about understanding it here ) although class objects have crept into this book in a few places— in the discussion of classloaders in subsection 1313 for example—this is the ﬁrst time we have directly encountered the class named class </s>
<s> an object of type class represents a class a class object is usually obtained from the name of the class using expressions of the form doubleclass” or jtableclass” </s>
<s> if you want a three-column table in which the column types are string double and boolean you can use a table model in which getcolumnclass is deﬁned as public class<> getcolumnclass( columnnum ) { if ( columnnum == 0 ) return stringclass else if ( columnnum = 1 ) return doubleclass else return booleanclass } the table will call this method and use the return value to decide how to display and edit items in the table </s>
<s> for example if a column is speciﬁed to hold boolean values the cells in that column will be displayed and edited as check boxes </s>
<s> for numeric types the table will not accept illegal input when the user types in the value ( it is possible to change the way that a table edits or displays items </s>
<s> see the methods setdefaulteditor( ) and setdefaultrenderer( ) in the jtable class ) as an alternative to using a subclass of defaulttablemodel a custom table model can also be deﬁned using a subclass of abstracttablemodel </s>
<s> whereas defaulttablemodel provides a lot of predeﬁned functionality abstracttablemodel provides very little </s>
<s> however using abstracttablemodel gives you the freedom to represent the table data any way you want </s>
<s> the sample program scatterplottabledemojava uses a subclass of abstracttablemodel to deﬁne the model for a jtable </s>
<s> in this program the table has three columns </s>
<s> the ﬁrst column holds a row number and is not editable </s>
<s> the other columns hold values of type double these two columns represent the x- and y-coordinates of points in the plane </s>
<s> the points themselves are graphed in a scatter plot” next to the table </s>
<s> initially the program ﬁlls in the ﬁrst six points with random values </s>
<s> here is a picture of the program with the x-coordinate in row 5 selected for editing 134 </s>
<s> complex components and mvc 697 note by the way that in this program the scatter plot can be considered to be a view of the table model in the same way that the table itself is </s>
<s> the scatter plot registers itself as a listener with the model so that it will receive notiﬁcation whenever the model changes </s>
<s> when that happens the scatter plot redraws itself to reﬂect the new state of the model </s>
<s> it is an important property of the mvc pattern that several views can share the same model oﬀering alternative presentations of the same data </s>
<s> the views don’t have to know about each other or communicate with each other except by sharing the model </s>
<s> although i didn’t do it in this program it would even be possible to add a controller to the scatter plot view </s>
<s> this would let the user drag a point in the scatter plot to change its coordinates </s>
<s> since the scatter plot and table share the same model the values in the table would automatically change to match here is the deﬁnition of the class that deﬁnes the model in the scatter plot program </s>
<s> all the methods in this class must be deﬁned in any subclass of abstracttablemodel except for setvalueat( ) which only has to be deﬁned if the table is modiﬁable /** * this class defines the tablemodel that is used for the jtable in this * program </s>
<s> the table has three columns </s>
<s> column 0 simply holds the * row number of each row </s>
<s> column 1 holds the x-coordinates of the * points for the scatter plot and column 2 holds the y-coordinates * the table has 25 rows </s>
<s> no support is provided for adding more rows */ private class coordinputtablemodel extends abstracttablemodel { private private // // double[] xcoord = new double[25] // data for column 1 double[] ycoord = new double[25] // data for column 2 initially all the values in the array are null which means that all the cells are empty public int getcolumncount( ) { return 3 } public int getrowcount( ) { return xcoordlength } // tells caller how many columns there are // tells caller how many rows there are 698 chapter 13 </s>
<s> advanced gui programming public object getvalueat( int if ( col == 0 ) return ( row+1 ) else if ( col == 1 ) return xcoord[row] else return ycoord[row] } row int col ) { // get value from cell // column 0 holds the row number // column 1 holds the x-coordinates // column 2 holds the y-coordinates public class<> getcolumnclass( int col ) { if ( col == 0 ) return integerclass else return doubleclass } public string getcolumnname( int col ) { if ( col == 0 ) return num else if ( col == 1 ) return x else return y } // get data type of column // returns a name for column header public boolean iscelleditable( int row int col ) { // can user edit cell return col > 0 } public void setvalueat( object obj int row int col ) { // ( this method is called by the system if the value of the cell // needs to be changed because the user has edited the cell // it can also be called to change the value programmatically // in this case only columns 1 and 2 can be modified and the data // type for obj must be double </s>
<s> the method firetablecellupdated( ) // has to be called to send an event to registered listeners to // notify them of the modification to the table model ) if ( col == 1 ) xcoord[row] = ( double )obj else if ( col == 2 ) ycoord[row] = ( double )obj firetablecellupdated( row col ) } } // end nested class coordinputtablemodel in addition to deﬁning a custom table model i customized the appearance of the table in several ways </s>
<s> because this involves changes to the view most of the changes are made by calling methods in the jtable object </s>
<s> for example since the default height of the cells was too small for my taste i called tablesetrowheight( 25 ) to increase the height </s>
<s> to make lines appear between the rows and columns i found that i had to call both tablesetshowgrid( true ) and tablesetgridcolor( colorblack ) </s>
<s> some of the customization has to be done to other objects </s>
<s> for example to prevent the user from changing the order of the columns by dragging the column headers i had to use tablegettableheader( )setreorderingallowed( false ) 134 </s>
<s> complex components and mvc 699 tables are quite complex and i have only discussed a part of the table api here </s>
<s> nevertheless i hope that you have learned enough to start using them and to learn more about them on your own 1344 documents and editors as a ﬁnal example of complex components we look brieﬂy at jtextcomponent and its subclasses </s>
<s> a jtextcomponent displays text that can optionally be edited by the user </s>
<s> two subclasses jtextfield and jtextarea were introduced in subsection 664 </s>
<s> but the real complexity comes in another subclass jeditorpane that supports display and editing of styled text this allows features such as boldface and italic </s>
<s> a jeditorpane can even work with basic html documents it is almost absurdly easy to write a simple web browser program using a jeditorpane </s>
<s> this is done in the sample program simplewebbrowserjava </s>
<s> in this program the user enters the url of a web page and the program tries to load and display the web page at that location a jeditorpane can handle pages with content type text/plain” text/html” and text/rtf” ( the content type text/rtf” represents styled or rich text format” text </s>
<s> urls and content types were covered in subsection 1141 ) if editpane is of type jeditorpane and url is of type url then the statement editpanesetpage( url )” is suﬃcient to load the page and display it </s>
<s> since this can generate an exception the following method is used in simplewebbrowserjava to display a page private void loadurl( url url ) { try { editpanesetpage( url ) } catch ( exception e ) { editpanesetcontenttype( text/plain ) // set pane to display plain text editpanesettext( sorry the requested document was not foundn +or cannot be displayednnerror + e ) } } an html document can include links to other pages </s>
<s> when the user clicks on a link the web browser should go to the linked page </s>
<s> a jeditorpane does not do this automatically but it does generate an event of type hyperlinkevent when the user clicks a link ( provided that the edit pane has been set to be non-editable by the user ) </s>
<s> a program can register a listener for such events and respond by loading the new page there are a lot of web pages that a jeditorpane won’t be able to display correctly but it can be very useful in cases where you have control over the pages that will be displayed </s>
<s> a nice application is to distribute html-format help and information ﬁles with a program </s>
<s> the ﬁles can be stored as resource ﬁles in the jar ﬁle of the program and a url for a resource ﬁle can be obtained in the usual way using the getresource( ) method of a classloader ( see subsection 1313 ) it turns out by the way that simplewebbrowserjava is a little too simple </s>
<s> a modiﬁed version simplewebbrowserwiththreadjava improves on the original by using a thread to load a page and by checking the content type of a page before trying to load it </s>
<s> it actually does work as a simple web browser the model for a jtextcomponent is an object of type document </s>
<s> if you want to be notiﬁed of changes in the model you can add a listener to the model using 700 chapter 13 </s>
<s> advanced gui programming textcomponentgetdocument( )adddocumentlistener( listener ) where textcomponent is of type jtextcomponent and listener is of type documentlistener the document class also has methods that make it easy to read a document from a ﬁle and write a document to a ﬁle </s>
<s> i won’t discuss all the things you can do with text components here for one more peek at their capabilities see the sample program simplertfeditjava a very minimal editor for ﬁles that contain styled text of type text/rtf” 1345 custom components java’s standard component classes are usually all you need to construct a user interface </s>
<s> at some point however you might need a component that java doesn’t provide </s>
<s> in that case you can write your own component class building on one of the components that java does provide </s>
<s> we’ve already done this actually every time we’ve written a subclass of the jpanel class to use as a drawing surface </s>
<s> a jpanel is a blank slate </s>
<s> by deﬁning a subclass you can make it show any picture you like and you can program it to respond in any way to mouse and keyboard events </s>
<s> sometimes if you are lucky you don’t need such freedom and you can build on one of java’s more sophisticated component classes for example suppose i have a need for a stopwatch” component </s>
<s> when the user clicks on the stopwatch i want it to start timing </s>
<s> when the user clicks again i want it to display the elapsed time since the ﬁrst click </s>
<s> the textual display can be done with a jlabel but we want a jlabel that can respond to mouse clicks </s>
<s> we can get this behavior by deﬁning a stopwatchlabel component as a subclass of the jlabel class </s>
<s> a stopwatchlabel object will listen for mouse clicks on itself </s>
<s> the ﬁrst time the user clicks it will change its display to timing” and remember the time when the click occurred </s>
<s> when the user clicks again it will check the time again and it will compute and display the elapsed time ( of course i don’t necessarily have to deﬁne a subclass </s>
<s> i could use a regular label in my program set up a listener to respond to mouse events on the label and let the program do the work of keeping track of the time and changing the text displayed on the label </s>
<s> however by writing a new class i have something that can be reused in other projects </s>
<s> i also have all the code involved in the stopwatch function collected together neatly in one place </s>
<s> for more complicated components both of these considerations are very important ) the stopwatchlabel class is not very hard to write </s>
<s> i need an instance variable to record the time when the user starts the stopwatch </s>
<s> times in java are measured in milliseconds and are stored in variables of type long ( to allow for very large values ) </s>
<s> in the mousepressed( ) method i need to know whether the timer is being started or stopped so i need a boolean instance variable running to keep track of this aspect of the component’s state </s>
<s> there is one more item of interest how do i know what time the mouse was clicked the method systemcurrenttimemillis( ) returns the current time </s>
<s> but there can be some delay between the time the user clicks the mouse and the time when the mousepressed( ) routine is called to make my stopwatch as accurate as possible i don’t want to know the current time </s>
<s> i want to know the exact time when the mouse was pressed </s>
<s> when i wrote the stopwatchlabel class this need sent me on a search in the java documentation </s>
<s> i found that if evt is an object of type mouseevent then the function evtgetwhen( ) returns the time when the event occurred i call this function in the mousepressed( ) routine to determine the exact time when the user clicked on the label </s>
<s> the complete stopwatch class is rather short import javaawtevent* import javaxswing* 134 </s>
<s> complex components and mvc 701 /** * a custom component that acts as a simple stop-watch </s>
<s> when the user clicks * on it this component starts timing </s>
<s> when the user clicks again * it displays the time between the two clicks </s>
<s> clicking a third time * starts another timer etc </s>
<s> while it is timing the label just * displays the message timing */ public class stopwatchlabel extends jlabel implements mouselistener { private long starttime // start time of timer // ( time is measured in milliseconds ) private boolean running // true when the timer is running /** * constructor sets initial text on the label to * click to start timer and sets up a mouse listener * so the label can respond to clicks */ public stopwatchlabel( ) { super( click to start timer jlabelcenter ) addmouselistener( this ) } /** * tells whether the timer is currently running */ public boolean isrunning( ) { return running } /** * react when the user presses the mouse by starting or stopping * the timer and changing the text that is shown on the label */ public void mousepressed( mouseevent evt ) { if ( running == false ) { // record the time and start the timer running = true starttime = evtgetwhen( ) // time when mouse was clicked settext( timing ) } else { // stop the timer </s>
<s> compute the elapsed time since the // timer was started and display it running = false long endtime = evtgetwhen( ) double seconds = ( endtime - starttime ) / 10000 settext( time + seconds + sec ) } } public void mousereleased( mouseevent evt ) { } public void mouseclicked( mouseevent evt ) { } public void mouseentered( mouseevent evt ) { } 702 chapter 13 </s>
<s> advanced gui programming public void mouseexited( mouseevent evt ) { } } don’t forget that since stopwatchlabel is a subclass of jlabel you can do anything with a stopwatchlabel that you can do with a jlabel </s>
<s> you can add it to a container </s>
<s> you can set its font foreground color and background color </s>
<s> you can set the text that it displays ( although this would interfere with its stopwatch function ) </s>
<s> you can even add a border if you want et’s look at one more example of deﬁning a custom component </s>
<s> suppose that—for no good reason whatsoever—i want a component that acts like a jlabel except that it displays its text in mirror-reversed form </s>
<s> since no standard component does anything like this the mirrortext class is deﬁned as a subclass of jpanel </s>
<s> it has a constructor that speciﬁes the text to be displayed and a settext( ) method that changes the displayed text </s>
<s> the paintcomponent( ) method draws the text mirror-reversed in the center of the component </s>
<s> this uses techniques discussed in subsection 1311 and subsection 1321 </s>
<s> information from a fontmetrics object is used to center the text in the component </s>
<s> the reversal is achieved by using an oﬀ-screen canvas </s>
<s> the text is drawn to the oﬀ-screen canvas in the usual way </s>
<s> then the image is copied to the screen with the following command where osc is the variable that refers to the oﬀ-screen canvas and width and height give the size of both the component and the oﬀ-screen canvas gdrawimage( osc width 0 0 height 0 0 width height this ) this is the version of drawimage( ) that speciﬁes corners of destination and source rectangles </s>
<s> the corner ( 00 ) in osc is matched to the corner ( width0 ) on the screen while ( widthheight ) is matched to ( 0height ) </s>
<s> this reverses the image left-to-right </s>
<s> here is the complete class import javaawt* import javaxswing* import javaawtimagebufferedimage /** * a component for displaying a mirror-reversed line of text * the text will be centered in the available space </s>
<s> this component * is defined as a subclass of jpanel </s>
<s> it respects any background * color foreground color and font that are set for the jpanel * the settext( string ) method can be used to change the displayed * text </s>
<s> changing the text will also call revalidate( ) on this * component */ public class mirrortext extends jpanel { private string text // the text displayed by this component private bufferedimage osc // holds an un-reversed picture of the text /** * construct a mirrortext component that will display the specified * text in mirror-reversed form */ public mirrortext( string text ) { if ( text == null ) text = thistext = text } 134 </s>
<s> complex components and mvc /** * change the text that is displayed on the label * @param text the new text to display */ public void settext( string text ) { if ( text == null ) text = if ( ! textequals( thistext ) ) { thistext = text // change the instance variable revalidate( ) // tell container to recompute its layout repaint( ) // make sure component is redrawn } } /** * return the text that is displayed on this component * the return value is non-null but can be an empty string */ public string gettext( ) { return text } /** * the paintcomponent method makes a new off-screen canvas if necessary * writes the text to the off-screen canvas then copies the canvas onto * the screen in mirror-reversed form */ public void paintcomponent( graphics g ) { int width = getwidth( ) int height = getheight( ) if ( osc == null || width != oscgetwidth( ) || height != oscgetheight( ) ) { osc = new bufferedimage( widthheightbufferedimagetype int rgb ) } graphics osg = oscgetgraphics( ) osgsetcolor( getbackground( ) ) osgfillrect( 0 0 width height ) osgsetcolor( getforeground( ) ) osgsetfont( getfont( ) ) fontmetrics fm = osggetfontmetrics( getfont( ) ) int x = ( width - fmstringwidth( text ) ) / 2 int y = ( height + fmgetascent( ) - fmgetdescent( ) ) / 2 osgdrawstring( text x y ) osgdispose( ) gdrawimage( osc width 0 0 height 0 0 width height null ) } /** * compute a preferred size that includes the size of the text plus * a boundary of 5 pixels on each edge */ public dimension getpreferredsize( ) { fontmetrics fm = getfontmetrics( getfont( ) ) return new dimension( fmstringwidth( text ) + 10 fmgetascent( ) + fmgetdescent( ) + 10 ) 703 704 chapter 13 </s>
<s> advanced gui programming } } // end mirrortext this class deﬁnes the method public dimension getpreferredsize( )” </s>
<s> this method is called by a layout manager when it wants to know how big the component would like to be standard components come with a way of computing a preferred size </s>
<s> for a custom component based on a jpanel it’s a good idea to provide a custom preferred size </s>
<s> every component has a method setpreferredsize( ) that can be used to set the preferred size of the component for our mirrortext component however the preferred size depends on the font and the text of the component and these can change from time to time </s>
<s> we need a way to compute a preferred size on demand based on the current font and text </s>
<s> that’s what we do by deﬁning a getpreferredsize( ) method </s>
<s> the system calls this method when it wants to know the preferred size of the component </s>
<s> in response we can compute the preferred size based on the current font and text the stopwatchlabel and mirrortext classes deﬁne components </s>
<s> components don’t stand on their own </s>
<s> you have to add them to a panel or other container </s>
<s> the sample program customcomponenttestjava demonstrates using a mirrortext and a stopwatchlabel component which are deﬁned by the source code ﬁles mirrortextjava and stopwatchlabeljava in this program the two custom components and a button are added to a panel that uses a flowlayout as its layout manager so the components are not arranged very neatly </s>
<s> if you click the button labeled change text in this program” the text in all the components will be changed </s>
<s> you can also click on the stopwatch label to start and stop the stopwatch </s>
<s> when you do any of these things you will notice that the components will be rearranged to take the new sizes into account </s>
<s> this is known as validating” the container </s>
<s> this is done automatically when a standard component changes in some way that requires a change in preferred size or location </s>
<s> this may or may not be the behavior that you want ( validation doesn’t always cause as much disruption as it does in this program </s>
<s> for example in a gridlayout where all the components are displayed at the same size it will have no eﬀect at all </s>
<s> i chose a flowlayout for this example to make the eﬀect more obvious ) when the text is changed in a mirrortext component there is no automatic validation of its container </s>
<s> a custom component such as mirrortext must call the revalidate( ) method to indicate that the container that contains the component should be validated </s>
<s> in the mirrortext class revalidate( ) is called in the settext( ) method 135 in finishing touches this final section i will present a program that is more complex and more polished than those we have looked at previously </s>
<s> most of the examples in this book have been toy” programs that illustrated one or two points about programming techniques </s>
<s> it’s time to put it all together into a full-scale program that uses many of the techniques that we have covered and a few more besides </s>
<s> after discussing the program and its basic design i’ll use it as an excuse to talk brieﬂy about some of the features of java that didn’t ﬁt into the rest of this book the program that we will look at is a mandelbrot viewer that lets the user explore the famous mandelbrot set </s>
<s> i will begin by explaining what that means </s>
<s> if you have downloaded the web version of this book note that the jar ﬁle mandelbrotviewerjar is an executable jar ﬁle that you can use to run the program as a stand-alone application </s>
<s> the jar ﬁle is in the 135 </s>
<s> finishing touches 705 directory c13 which contains all the ﬁles for this chapter </s>
<s> the on-line version of this page has two applet versions of the program </s>
<s> one shows the program running on the web page </s>
<s> the other applet appears on the web page as a button clicking the button opens the program in a separate window 1351 the mandelbrot set the mandelbrot set is a set of points in the xy-plane that is deﬁned by a computational procedure </s>
<s> to use the program all you really need to know is that the mandelbrot set can be used to make some pretty pictures but here are the mathematical details consider the point that has real-number coordinates ( ab ) and apply the following computation et x = a et y = b repeat et newx = x*x - y*y + a et newy = 2*x*y + b et x = newx et y = newy as the loop is repeated the point ( xy ) changes </s>
<s> the question is does ( xy ) grow without bound or is it trapped forever in a ﬁnite region of the plane if ( xy ) escapes to inﬁnity ( that is grows without bound ) then the starting point ( ab ) is not in the mandelbrot set </s>
<s> if ( xy ) is trapped in a ﬁnite region then ( ab ) is in the mandelbrot set </s>
<s> now it is known that if x2 + y2 ever becomes strictly greater than 4 then ( xy ) will escape to inﬁnity </s>
<s> if x2 + y2 ever becomes bigger than 4 in the above loop we can end the loop and say that ( ab ) is deﬁnitely not in the mandelbrot set </s>
<s> for a point ( ab ) in the mandelbrot set the loop will never end when we do this on a computer of course we don’t want to have a loop that runs forever so we put a limit on the number of times that the loop is executed x = a y = b count = 0 while ( x*x + y*y < 41 ) { count++ if ( count > maxiterations ) break double newx = x*x - y*y + a double newy = 2*x*y + b x = newy y = newy } after this loop ends if count is less than or equal to maxiterations we can say that ( ab ) is not in the mandelbrot set </s>
<s> if count is greater than maxiterations then ( ab ) might or might not be in the mandelbrot set but the larger maxiterations is the more likely that ( ab ) is actually in the set to make a picture from this procedure use a rectangular grid of pixels to represent some rectangle in the plane </s>
<s> each pixel corresponds to some real number coordinates ( ab ) ( use the coordinates of the center of the pixel ) run the above loop for each pixel </s>
<s> if the count goes past maxiterations color the pixel black this is a point that is possibly in the mandelbrot set otherwise base the color of the pixel on the value of count after the loop ends using diﬀerent 706 chapter 13 </s>
<s> advanced gui programming colors for diﬀerent counts </s>
<s> in some sense the higher the count the closer the point is to the mandelbrot set so the colors give some information about points outside the set and about the shape of the set </s>
<s> however it’s important to understand that the colors are arbitrary and that colored points are not in the set </s>
<s> here is a picture that was produced by the mandelbrot viewer program using this computation </s>
<s> the black region is the mandelbrot set when you use the program you can zoom in” on small regions of the plane </s>
<s> to do so just drag the mouse on the picture </s>
<s> this will draw a rectangle around part of the picture </s>
<s> when you release the mouse the part of the picture inside the rectangle will be zoomed to ﬁll the entire display </s>
<s> if you simply click a point in the picture you will zoom in on the point where you click by a magniﬁcation factor of two ( shift-click or use the right mouse button to zoom out instead of zooming in ) the interesting points are along the boundary of the mandelbrot set </s>
<s> in fact the boundary is inﬁnitely complex ( note that if you zoom in too far you will exceed the capabilities of the double data type nothing is done in the program to prevent this ) use the maxiterations” menu to increase the maximum number of iterations in the loop remember that black pixels might or might not be in the set when you increase maxiterations” you might ﬁnd that a black region becomes ﬁlled with color </s>
<s> the palette” menu determines the set of colors that are used </s>
<s> diﬀerent palettes give very diﬀerent visualizations of the set </s>
<s> the palettelength” menu determines how many diﬀerent colors are used </s>
<s> in the default setting a diﬀerent color is used for each possible value of count in the algorithm </s>
<s> sometimes you can get a much better picture by using a diﬀerent number of colors </s>
<s> if the palette length is less than maxiterations the palette is repeated to cover all the possible values of count if the palette length is greater than maxiterations only part of of the palette will be used ( if the picture is of an almost uniform color try decreasing the palette length since that makes the color vary more quickly as count changes </s>
<s> if you see what look like randomly colored dots instead of bands of color try increasing the palette length ) if you run the mandelbrot viewer program as a stand-alone application it will have a file” menu that can be used to save the picture as a png image ﬁle </s>
<s> you can also save a param” ﬁle which simply saves the settings that produced the current picture </s>
<s> a param ﬁle can be read back into the program using the open” command the mandelbrot set is named after benoit mandelbrot who was the ﬁrst person to note the incredible complexity of the set </s>
<s> it is astonishing that such complexity and beauty can arise 707 135 </s>
<s> finishing touches out of such a simple algorithm 1352 design of the program most classes in java are deﬁned in packages </s>
<s> while we have used standard packages such as javaxswing and javaio extensively almost all of my programming examples have been in the default package” which means that they are not declared to belong to any named package however when doing more serious programming it is good style to create a package to hold the classes for your program </s>
<s> the oracle corporation recommends that package names should be based on an internet domain name of the organization that produces the package </s>
<s> my oﬃce computer has domain name eckhwsedu and no other computer in the world should have the same name </s>
<s> according to oracle this allows me to use the package name eduhwseck with the elements of the domain name in reverse order </s>
<s> i can also use sub-packages of this package such as eduhwseckmdb which is the package name that i decided to use for my mandelbrot viewer application </s>
<s> no one else—or at least no one else who uses the same naming convention—will ever use the same package name so this package name uniquely identiﬁes my program i brieﬂy discussed using packages in subsection 264 and in the context of the programming examples in section 125 here’s what you need to know for the mandelbrot viewer program the program is deﬁned in ten java source code ﬁles </s>
<s> they can be found in the directory edu/hws/eck/mdb inside the source directory of the web site ( that is they are in a directory named mdb which is inside a directory named eck which is inside hws which is inside edu the directory structure must follow the package name in this way ) the same directory also contains a ﬁle named stringsproperties that is used by the program and that will be discussed below </s>
<s> for an integrated development environment such as eclipse you should just have to add the edu directory to your project </s>
<s> to compile the ﬁles on the command line you must be working in the directory that contains the edu directory </s>
<s> use the command javac edu/hws/eck/mdb/*java or if you use windows javac eduhwseckmdb*java to compile the source code </s>
<s> the main routine for the stand-alone application version of the program is deﬁned by a class named main </s>
<s> to run this class use the command java eduhwseckmdbmain this command must also be given in the directory that contains the edu directory ∗ ∗ ∗ the work of computing and displaying images of the mandelbrot set is done in mandelbrotdisplayjava </s>
<s> the mandelbrotdisplay class is a subclass of jpanel </s>
<s> it uses an oﬀ-screen canvas to hold a copy of the image ( see subsection 1311 ) the paintcomponent( ) method copies this image onto the panel </s>
<s> then if the user is drawing a zoom box” with the mouse the zoom box is drawn on top of the image </s>
<s> in addition to the image the class uses a two-dimensional array to store the iteration count for each pixel in the image </s>
<s> if the range of xy-values changes or if the size of the window changes all the counts must be recomputed </s>
<s> since the computation can take quite a while it would not be acceptable to block the user interface while the computation is being performed </s>
<s> the solution is to do the computation in separate worker” threads as discussed in chapter 12 </s>
<s> the program uses one worker thread for each available 708 chapter 13 </s>
<s> advanced gui programming processor </s>
<s> when the computation begins the image is ﬁlled with gray </s>
<s> every so often about twice a second the data that has been computed by the computation threads is gathered and applied to the oﬀ-screen canvas and the part of the canvas that has been modiﬁed is copied to the screen </s>
<s> a timer is used to control this process—each time the timer ﬁres the image is updated with any new data that has been computed by the threads </s>
<s> the user can continue to use the menus and even the mouse while the image is being computed the ﬁle mandelbrotpaneljava deﬁnes the main panel of the mandelbrot viewer window mandelbrotpanel is another subclass of jpanel </s>
<s> a mandelbrotpanel is mostly ﬁlled with a mandelbrotdisplay </s>
<s> it also adds a jlabel beneath the display </s>
<s> the jlabel is used as a status bar” that shows some information that might be interesting to the user </s>
<s> the mandelbrotpanel also deﬁnes the program’s mouse listener </s>
<s> in addition to handling zooming the mouse listener puts the x and y coordinates of the current mouse location in the status bar as the user moves or drags the mouse </s>
<s> also when the mouse exits the drawing area the text in the status bar is set to read idle” </s>
<s> this is the ﬁrst time that we have seen an actual use for mousemoved and mouseexited events ( see subsection 642 and subsection 644 ) the menu bar for the program is deﬁned in menusjava </s>
<s> commands in the file” and control” menu are deﬁned as actions ( see subsection 1331 ) note that among the actions are ﬁle manipulation commands that use techniques from subsection 1123 subsection 1153 and subsection 1315 </s>
<s> the maxiterations” palette” and palettelength” menus each contain a group of jradiobuttonmenuitems ( see subsection 1333 ) i have tried several approaches for handling such groups and none of them have satisﬁed me completely </s>
<s> in this program i have deﬁned a nested class inside menus to represent each group </s>
<s> for example the palettemanager class contains the menu items in the palette” menu as instance variables </s>
<s> it registers an action listener with each item and it deﬁnes a few utility routines for operating on the menu </s>
<s> the classes for the three menus are very similar and should probably have been deﬁned as subclasses of some more general class one interesting point is that the contents of the menu bar are diﬀerent depending on whether the program is being run as an applet or as a stand-alone application </s>
<s> since applets cannot access the ﬁle system there is no file” menu for an applet </s>
<s> furthermore accelerator keys are generally not functional in an applet that is running on a web page so accelerator keys are only added to menu items if the program is being run in its own window ( see subsection 1335 for information on accelerators ) to accomplish this the constructor in the menus class has parameters that tell it whether the menu bar will be used by an applet and whether it will be used in a frame these parameters are consulted as the menu bar is being built a third parameter to the constructor is the mandelbrotpanel that is being used in the program </s>
<s> many of the menu commands operate on this panel or on the mandelbrotdisplay that it contains </s>
<s> in order to carry out these commands the menus object needs a reference to the mandelbrotpanel </s>
<s> as for the mandelbrotdisplay the panel has a method getdisplay( ) that returns a reference to the display that it contains </s>
<s> so as long as the menu bar has a reference to the panel it can obtain a reference to the display </s>
<s> in previous examples everything was written as one large class ﬁle so all the objects were directly available to all the code </s>
<s> when a program is made up of multiple interacting ﬁles getting access to the necessary objects can be more of a problem mandelbrotpanel mandelbrotdisplay and menus are the main classes that make up the mandelbrot viewer program </s>
<s> mandelbrotframejava deﬁnes a simple subclass of jframe that runs the program in its own window </s>
<s> mandelbrotappletjava deﬁnes an applet that runs the 135 </s>
<s> finishing touches 709 program on a web page ( this applet version has an extra examples” menu that is discussed in the source code ﬁle ) there are a few other classes that i will discuss below this brief discussion of the design of the mandelbrot viewer has shown that it uses a wide variety of techniques that were covered earlier in this book </s>
<s> in the rest of this section we’ll look at a few new features of java that were used in the program 1353 internationalization internationalization refers to writing a program that is easy to adapt for running in diﬀerent parts of the world </s>
<s> internationalization is often referred to as i18n where 18 is the number of letters between the i” and the ﬁnal n” in internationalization” the process of adapting the program to a particular location is called localization and the locations are called locales ocales diﬀer in many ways including the type of currency used and the format used for numbers and dates but the most obvious diﬀerence is language </s>
<s> here i will discuss how to write a program so that it can be easily translated into other languages the key idea is that strings that will be presented to the user should not be coded into the program source code </s>
<s> if they were then a translator would have to search through the entire source code replacing every string with its translation </s>
<s> then the program would have to be recompiled </s>
<s> in a properly internationalized program all the strings are stored together in one or more ﬁles that are separate from the source code where they can easily be found and translated </s>
<s> and since the source code doesn’t have to be modiﬁed to do the translation no recompilation is necessary to implement this idea the strings are stored in one or more properties ﬁles </s>
<s> a properties ﬁle is just a list of key/value pairs </s>
<s> for translation purposes the values are strings that will be presented to the user these are the strings that have to be translated </s>
<s> the keys are also strings but they don’t have to be translated because they will never be presented to the user </s>
<s> since they won’t have to be modiﬁed the key strings can be used in the program source code </s>
<s> each key uniquely identiﬁes one of the value strings </s>
<s> the program can use the key string to look up the corresponding value string from the properties ﬁle </s>
<s> the program only needs to know the key string the user will only see the value string </s>
<s> when the properties ﬁle is translated the user of the program will see diﬀerent value strings the format of a properties ﬁle is very simple </s>
<s> the key/value pairs take the form keystring=value string there are no spaces in the key string or before the equals sign </s>
<s> the value string can contain spaces or any other characters </s>
<s> if the line ends with a backslash ( ” ) the value string is continued on the next line in this case spaces at the beginning of that line are ignored </s>
<s> one unfortunate detail is that a properties ﬁle can contain only plain ascii characters </s>
<s> the ascii character set only supports the english alphabet </s>
<s> nevertheless a value string can include arbitrary unicode characters </s>
<s> non-ascii characters just have to be specially encoded </s>
<s> the jdk comes with a program native2ascii that can convert ﬁles that use non-ascii characters into a form that is suitable for use as a properties ﬁle suppose that the program wants to present a string to the user ( as the name of a menu command for example ) </s>
<s> the properties ﬁle would contain a key/value pair such as menusaveimage=save png image where save png image ” is the string that will appear in the menu </s>
<s> the program would use the key string menusaveimage” to look up the corresponding value string and would then 710 chapter 13 </s>
<s> advanced gui programming use the value string as the text of the menu item </s>
<s> in java the look up process is supported by the resourcebundle class which knows how to retrieve and use properties ﬁles </s>
<s> sometimes a string that is presented to the user contains substrings that are not known until the time when the program is running </s>
<s> a typical example is the name of a ﬁle </s>
<s> suppose for example that the program wants to tell the user sorry the ﬁle ﬁlename cannot be loaded” where ﬁlename is the name of a ﬁle that was selected by the user at run time </s>
<s> to handle cases like this value strings in properties ﬁles can include placeholders that will be replaced by strings to be determined by the program at run time </s>
<s> the placeholders take the form {0}” {1}” {2}” </s>
<s> for the ﬁle error example the properties ﬁle might contain errorcantload=sorry the file {0} cannot be loaded the program would fetch the value string for the key errorcantload </s>
<s> it would then substitute the actual ﬁle name for the placeholder {0}” </s>
<s> note that when the string is translated the word order might be completely diﬀerent </s>
<s> by using a placeholder for the ﬁle name you can be sure that the ﬁle name will be put in the correct grammatical position for the language that is being used </s>
<s> placeholder substitution is not handled by the resourcebundle class but java has another class messageformat that makes such substitutions easy for the mandelbrot viewer program the properties ﬁle is stringsproperties ( any properties ﬁle should have a name that ends in properties” ) any string that you see when you run the program comes from this ﬁle </s>
<s> for handling value string lookup i wrote i18njava </s>
<s> the i18n class has a static method public static tr( string key object args ) that handles the whole process </s>
<s> here key is the key string that will be looked up in stringsproperties </s>
<s> additional parameters if any will be substituted for placeholders in the value string ( recall that the formal parameter declaration object” means that there can be any number of actual parameters after key see subsection 726 ) typical uses would include string saveimagecommandtext = i18ntr( menusaveimage ) string errmess = i18ntr( errorcantload selectedfilegetname( ) ) you will see function calls like this throughout the mandelbrot viewer source code </s>
<s> the i18n class is written in a general way so that it can be used in any program </s>
<s> as long as you provide a properties ﬁle as a resource the only things you need to do are change the resource ﬁle name in i18njava and put the class in your own package it is actually possible to provide several alternative properties ﬁles in the same program </s>
<s> for example you might include french and japanese versions of the properties ﬁle along with an english version </s>
<s> if the english properties ﬁle is named stringsproperties then the names for the french and japanese versions should be strings frproperties and strings japroperties </s>
<s> every language has a two-letter code such as fr” and ja” that is used in constructing properties ﬁle names for that language </s>
<s> the program asks for the properties ﬁle using the simple name strings” </s>
<s> if the program is being run on a java system in which the preferred language is french the program will try to load strings frproperties” if that fails it will look for stringsproperties” </s>
<s> this means that the program will use the french properties ﬁles in a french locale it will use the japanese properties ﬁle in a japanese locale and in any other locale it will use the default properties ﬁle 711 135 </s>
<s> finishing touches 1354 events events events we have worked extensively with mouse events key events and action events but these are only a few of the event types that are used in java </s>
<s> the mandelbrot viewer program makes use of several other types of events </s>
<s> it also serves as an example of the beneﬁts of event-oriented programming et’s start from the following fact the mandelbrotdisplay class knows nothing about any of the other classes that make up the program ( with the single exception of one call to the internationalization method i18ntr ) </s>
<s> yet other classes are aware of things that are going on in the mandelbrotdisplay class </s>
<s> for example when the size of the display is changed the new size is reported in the status bar that is part of the mandelbrotpanel class </s>
<s> in the menus class certain menus are disabled when the display begins the computation of an image and are re-enabled when the computation completes </s>
<s> the display doesn’t call methods in the mandelbrotpanel or menus classes so how do these classes get their information about what is going on in the display the answer of course is events </s>
<s> the mandelbrotdisplay object emits events of various types when various things happen </s>
<s> the mandelbrotpanel and mandelbrotdisplay objects set up listeners that hear those events and respond to them the point is that because events are used for communication the mandelbrotdisplay class is not strongly coupled to the other classes </s>
<s> in fact it can be used in other programs without any modiﬁcation and without access to the other classes </s>
<s> the alternative to using events would be to have the display object call methods such as displaysizechanged( ) or computationstarted( ) in the mandelbrotpanel and mandelbrotframe objects to tell them what is going on in the display this would be strong coupling any programmer who wanted to use mandelbrotdisplay would also have to use the other two classes or would have to modify the display class so that it no longer refers to the other classes </s>
<s> of course not everything can be done with events and not all strong coupling is bad the mandelbrotpanel class refers directly to the mandelbrotdisplay class and cannot be used without it—but since the whole purpose of a mandelbrotpanel is to hold a mandelbrotdisplay the coupling is not a problem ∗ ∗ ∗ the mandelbrot viewer program responds to mouse events on the display </s>
<s> these events are generated by the display object but the display class itself doesn’t care about mouse events and doesn’t do anything in response to them </s>
<s> mouse events are handled by a listener in the mandelbrotpanel which responds to them by zooming the display and by showing mouse coordinates in the status bar the status bar also shows the new size of the display whenever that size is changed </s>
<s> to handle this events of type componentevent are used </s>
<s> when the size of a component is changed a componentevent is generated </s>
<s> in the mandelbrot viewer program a componentlistener in the mandelbrotpanel class listens for size-change events in the display </s>
<s> when one occurs the listener responds by showing the new size in the status bar the display knows nothing about the status bar that shows the display’s size component events are also used internally in the mandelbrotdisplay class in an interesting way </s>
<s> when the user dynamically changes the size of the display its size can change several times each second </s>
<s> normally a change of display size would trigger the creation of a new oﬀscreen canvas and the start of a new asynchronous computation of the image </s>
<s> however doing this is a big deal not something i want to do several times in a second </s>
<s> if you try resizing the program’s window you’ll notice that the image doesn’t change size dynamically as the window size changes </s>
<s> the same image and oﬀ-screen canvas are used as long as the size is changing 712 chapter 13 </s>
<s> advanced gui programming only about one-third of a second after the size has stopped changing will a new resized image be produced </s>
<s> here is how this works the display sets up a componentevent to listen for resize events on itself </s>
<s> when a resize occurs the listener starts a timer that has a delay of 1/3 second ( see subsection 651 ) while this timer is running the paintcomponent( ) method does not resize the image instead it reuses the image that already exists </s>
<s> if the timer ﬁres 1/3 second later the image will be resized at that time </s>
<s> however if another resize event occurs while the ﬁrst timer is running then the ﬁrst timer will be stopped before it has a chance to ﬁre and a new timer will be started with a delay of 1/3 second </s>
<s> the result is that the image does not get resized until 1/3 second after the size of the window stops changing the mandelbrot viewer program also uses events of type windowevent which are generated by a window when it opens or closes ( among other things ) </s>
<s> one example is in the ﬁle launcherappletjava </s>
<s> this ﬁle deﬁnes an applet that appears as a button on the web page </s>
<s> the button is labeled launch mandelbrot viewer” </s>
<s> when the user clicks the button a mandelbrotframe is opened on the screen and the text on the button changes to close mandelbrot viewer” when the frame closes the button changes back to launch mandelbrot viewer” and the button can be used to open another window </s>
<s> the frame can be closed by clicking the button but it can also be closed using a close” command in the frame’s menu bar or by clicking the close box in the frame’s title bar </s>
<s> the question is how does the button’s text get changed when the frame is closed by one of the latter two methods one possibility would be to have the frame call a method in the applet to tell the applet that it is closing but that would tightly couple the frame class to the applet class </s>
<s> in fact it’s done with windowevents </s>
<s> a windowlistener in the applet listens for close events from the frame </s>
<s> in response to a close event the text of the button is changed </s>
<s> again this can happen even though the frame class knows nothing about the applet class </s>
<s> window events are also used by mainjava to trigger an action that has to be taken when the program is ending this will be discussed below perhaps the most interesting use of events in the mandelbrot viewer program is to enable and disable menu commands based on the status of the display </s>
<s> for this events of type propertychangeevent are used </s>
<s> this event class is part of the bean” framework that was discussed brieﬂy in subsection 1152 and class propertychangeevent and related classes are deﬁned in the package javabeans </s>
<s> the idea is that bean objects are deﬁned by their properties” ( which are just aspects of the state of the bean ) </s>
<s> when a bean property changes the bean can emit a propertychangeevent to notify other objects of the change </s>
<s> properties for which property change events are emitted are known technically as bound properties </s>
<s> a bound property has a name that identiﬁes that particular property among all the properties of the bean </s>
<s> when a property change event is generated the event object includes the name of the property that has changed the previous value of the property and the new value of the property the mandelbrotdisplay class has a bound property whose name is given by the constant mandelbrotdisplaystatus property </s>
<s> a display emits a property change event when its status changes </s>
<s> the possible values of the status property are given by other constants such as mandelbrotdisplaystatus ready </s>
<s> the ready status indicates that the display is not currently running a computation and is ready to do another one </s>
<s> there are several menu commands that should be enabled only when the status of the display is ready </s>
<s> to implement this the menus class deﬁnes a propertychangelistener to listen for property change events from the display </s>
<s> when this listener hears an event it responds by enabling or disabling menu commands according to the new value of the status property all of java’s gui components are beans and are capable of emitting property change events in any subclass of component this can be done simply by calling the method 135 </s>
<s> finishing touches 713 public void firepropertychange( string propertyname object oldvalue object newvalue ) for example the mandelbrotdisplay class uses the following method for setting its current status private void setstatus( string status ) { if ( status == thisstatus ) { // note event should be fired only if status actually changes return } string oldstatus = thisstatus thisstatus = status firepropertychange( status property oldstatus status ) } when writing bean classes from scratch you have to add support for property change events if you need them </s>
<s> to make this easier the javabeans package provides the propertychangesupport class 1355 custom dialogs java has several standard dialog boxes that are deﬁned in the classes joptionpane jcolorchooser and jfilechooser </s>
<s> these were introduced in subsection 682 and subsection 1123 dialogs of all these types are used in the mandelbrot viewer program </s>
<s> however sometimes other types of dialog are needed </s>
<s> in such cases you can build a custom dialog box dialog boxes are deﬁned by subclasses of the class jdialog </s>
<s> like frames dialog boxes are separate windows on the screen and the jdialog class is very similar to the jframe class </s>
<s> the big diﬀerence is that a dialog box has a parent which is a frame or another dialog box that owns” the dialog box </s>
<s> if the parent of a dialog box closes the dialog box closes automatically furthermore the dialog box will probably ﬂoat” on top of its parent even when its parent is the active window dialog boxes can be either modal or modeless </s>
<s> when a modal dialog is put up on the screen the rest of the application is blocked until the dialog box is dismissed </s>
<s> this is the most common case and all the standard dialog boxes are modal </s>
<s> modeless dialog boxes are more like independent windows since they can stay on the screen while the user interacts with other windows </s>
<s> there are no modeless dialogs in the mandelbrot viewer program the mandelbrot viewer program uses two custom dialog boxes </s>
<s> they are used to implement the set image size” and set limits” commands and are deﬁned by the ﬁles setimagesizedialogjava and setlimitsdialogjava </s>
<s> the set image size” dialog lets the user enter a new width and height for the mandelbrot image </s>
<s> the set limits” dialog lets the user input the minimum and maximum values for x and y that are shown in the image </s>
<s> the two dialog classes are very similar </s>
<s> in both classes several jtextfields are used for user input </s>
<s> two buttons named ok” and cancel” are added to the window and listeners are set up for these buttons </s>
<s> if the user clicks ok” the listener checks whether the inputs in the text ﬁelds are legal if not an error message is displayed to the user and the dialog stays on the screen </s>
<s> if the input is legal when the user clicks ok” the dialog is disposed </s>
<s> the dialog is also disposed if the user clicks cancel” or clicks the dialog box’s close box </s>
<s> the net eﬀect is that the dialog box stays on the screen until the user either cancels the dialog or enters legal values for the inputs and clicks ok” </s>
<s> the program can ﬁnd out which of these occurred by calling a method named getinput( ) in the dialog object after showing the dialog </s>
<s> this method returns null if the dialog was canceled otherwise it returns the user input 714 chapter 13 </s>
<s> advanced gui programming to make my custom dialog boxes easy to use i added a static showdialog( ) method to each dialog class </s>
<s> when this function is called it shows the dialog waits for it to be dismissed and then returns the value of the getinput( ) method </s>
<s> this makes it possible to use my custom dialog boxes in much the same way as java’s standard dialog boxes are used custom dialog boxes are not diﬃcult to create and to use if you already know about frames i will not discuss them further here but you can look at the source code ﬁle setimagesizedialogjava as a model 1356 preferences most serious programs allow the user to set preferences </s>
<s> a preference is really just a piece of the program’s state that is saved between runs of the program </s>
<s> in order to make preferences persistent from one run of the program to the next the preferences could simply be saved to a ﬁle in the user’s home directory </s>
<s> however there would then be the problem of locating the ﬁle there would be the problem of naming the ﬁle in a way that avoids conﬂicts with ﬁle names used by other programs </s>
<s> and there would be the problem of cluttering up the user’s home directory with ﬁles that the user shouldn’t even have to know about to deal with these problems java has a standard means of handling preferences </s>
<s> it is deﬁned by the package javautilprefs </s>
<s> in general the only thing that you need from this package is the class named preferences in the mandelbrot viewer program the ﬁle mainjava has an example of using preferences mainjava runs the stand-alone application version of the program and its use of preferences applies only when the program is run in that way in most programs the user sets preferences in a custom dialog box </s>
<s> however the mandelbrot program doesn’t have any preferences that are appropriate for that type of treatment instead as an example i automatically save a few aspects of the program’s state as preferences every time the program starts up it reads the preferences if any are available </s>
<s> every time the program terminates it saves the preferences ( saving the preferences poses an interesting problem because the program ends when the mandelbrotframe window closes not when the main( ) routine ends </s>
<s> in fact the main( ) routine ends as soon as the window appears on the screen </s>
<s> so it won’t work to save the preferences at the end of the main program </s>
<s> the solution is to use events a listener listens for windowevents from the frame </s>
<s> when a window-closed event is received indicating that the program is ending the listener saves the preferences ) preferences for java programs are stored in some platform-dependent form in some platformdependent location </s>
<s> as a java programmer you don’t have to worry about it the java preferences system knows where to store the data </s>
<s> there is still the problem of identifying the preferences for one program among all the possible java programs that might be running on a computer </s>
<s> java solves this problem in the same way that it solves the package naming problem </s>
<s> in fact by convention the preferences for a program are identiﬁed by the package name of the program with a slight change in notation </s>
<s> for example the mandelbrot viewer program is deﬁned in the package eduhwseckmdb and its preferences are identiﬁed by the string /edu/hws/eck/mdb” ( the periods have been changed to /” and an extra /” has been added at the beginning ) the preferences for a program are stored in something called a node” the user preferences node for a given program identiﬁer can be accessed as follows preferences root = preferencesuserroot( ) preferences node = rootnode( pathname ) 715 135 </s>
<s> finishing touches where pathname is the string such as /edu/hws/eck/mdb” that identiﬁes the node </s>
<s> the node itself consists of a simple list of key/value pairs where both the key and the value are strings you can store any strings you want in preferences nodes—they are really just a way of storing some persistent data between program runs </s>
<s> in general though the key string identiﬁes some particular preference item and the associated value string is the value of that preference </s>
<s> a preferences object prefnode contains methods prefnodeget( key ) for retrieving the value string associated with a given key and prefnodeput( keyvalue ) for setting the value string for a given key in mainjava i use preferences to store the shape and position of the program’s window this makes the size and shape of the window persistent between runs of the program when you run the program the window will be right where you left it the last time you ran it </s>
<s> i also store the name of the directory that is currently selected in the ﬁle dialog box that is used by the program for the save and open commands </s>
<s> this is particularly satisfying since the default behavior for a ﬁle dialog box is to start in the user’s home directory which is hardly ever the place where the user wants to keep a program’s ﬁles </s>
<s> with the preferences feature i can switch to the right directory the ﬁrst time i use the program and from then on i’ll automatically be back in that directory when i use the program again </s>
<s> you can look at the source code in mainjava for the details ∗ ∗ ∗ and that’s it </s>
<s> there’s a lot more that i could say about java and about programming in general but this book is only an introduction to programming using java” and it’s time for our journey to end </s>
<s> i hope that it has been a pleasant journey for you and i hope that i have helped you establish a foundation that you can use as a basis for further exploration 716 chapter 13 </s>
<s> advanced gui programming exercises for chapter 13 1 </s>
<s> the sample program paintwithoﬀscreencanvasjava from section 131 is a simple paint program </s>
<s> make two improvements to this program first add a file” menu that lets the user open an image ﬁle and save the current image in either png or jpeg format second add a basic one-level undo” command that lets the user undo the most recent operation that was applied to the image ( do not try to make a multilevel undo which would allow the user to undo several operations ) when you read a ﬁle into the program you should copy the image that you read into the program’s oﬀ-screen canvas </s>
<s> since the canvas in the program has a ﬁxed size you should scale the image that you read so that it exactly ﬁlls the canvas 2 </s>
<s> for this exercise you should continue to work on the program from the previous exercise add a strokewidth” menu that allows the user to draw lines of varying thicknesses </s>
<s> make it possible to use diﬀerent colors for the interior of a ﬁlled shape and for the outline of that shape </s>
<s> to do this change the color” menu to strokecolor” and add a fillcolor” menu ( my solution adds two new tools stroked filled rectangle” and stroked filled oval” to represent ﬁlled shapes that are outlined with the current stroke ) add support for ﬁlling shapes with transparent color </s>
<s> a simple approach to this is to use a jcheckboxmenuitem to select either fully opaque or 50% opaque ﬁll ( don’t try to apply transparency to stokes—it’s very diﬃcult to make transparency work correctly for the curve tool and in any case shape outlines look better if they are opaque ) finally make the menus more user friendly by adding some keyboard accelerators to some commands and by using jradiobuttonmenuitems where appropriate such as in the color and tool menus </s>
<s> this exercise takes quite a bit of work to get it all right so you should tackle the problem in pieces 3 </s>
<s> the stopwatchlabel component from subsection 1345 displays the text timing ” when the stop watch is running </s>
<s> it would be nice if it displayed the elapsed time since the stop watch was started </s>
<s> for that you need to create a timer ( see subsection 651 ) add a timer to the original source code stopwatchlabeljava to drive the display of the elapsed time in seconds </s>
<s> create the timer in the mousepressed( ) routine when the stop watch is started </s>
<s> stop the timer in the mousepressed( ) routine when the stop watch is stopped </s>
<s> the elapsed time won’t be very accurate anyway so just show the integral number of seconds </s>
<s> you only need to set the text a few times per second </s>
<s> for my timer method i use a delay of 200 milliseconds for the timer 4 </s>
<s> the custom component example mirrortextjava from subsection 1345 uses an oﬀscreen canvas to show mirror-reversed text in a jpanel </s>
<s> an alternative approach would be to draw the text after applying a transform to the graphics context that is used for drawing ( see subsection 1325 ) with this approach the custom component can be deﬁned as a subclass of jlabel in which the paintcomponent( ) method is overridden write a version of the mirrortext component that takes this approach </s>
<s> the solution is very short but tricky </s>
<s> note that the scale transform g2scale( -11 ) does a left-right reﬂection through the left edge of the component 5 </s>
<s> the sample program phonedirectoryfiledemojava from subsection 1132 keeps data for a phone directory” in a ﬁle in the user’s home directory </s>
<s> exercise 115 asked you to 717 exercises revise that program to use an xml format for the data </s>
<s> both programs have a simple command-line user interface </s>
<s> for this exercise you should provide a gui interface for the phone directory data </s>
<s> you can base your program either on the original sample program or on the modiﬁed version from the exercise </s>
<s> use a jtable to hold the data </s>
<s> the user should be able to edit all the entries in the table </s>
<s> also the user should be able to add and delete rows </s>
<s> include either buttons or menu commands that can be used to perform these actions </s>
<s> the delete command should delete the selected row if any </s>
<s> new rows should be added at the end of the table </s>
<s> for this program you can use a standard defaulttablemodel your program should load data from the ﬁle when it starts and save data to the ﬁle when it ends just as the two previous programs do </s>
<s> for a gui program you can’t simply save the data at the end of the main( ) routine since main( ) terminates as soon as the window shows up on the screen </s>
<s> you want to save the data when the user closes the window and ends the program </s>
<s> there are several approaches </s>
<s> one is to use a windowlistener to detect the event that occurs when the window closes </s>
<s> another is to use a quit” command to end the program when the user quits you can save the data and close the window ( by calling its dispose( ) method ) and end the program </s>
<s> if you use the quit” command approach you don’t want the user to be able to end the program simply by closing the window </s>
<s> to accomplish this you should call framesetdefaultcloseoperation( jframedo nothing on close ) where frame refers to the jframe that you have created for the program’s user interface when using a windowlistener you want the close box on the window to close the window not end the program </s>
<s> for this you need framesetdefaultcloseoperation( jframedispose on close ) when the listener is notiﬁed of a window closed event it can save the data and end the program most of the jtable and defaulttablemodel methods that you need for this exercise are discussed in subsection 1343 but there are a few more that you need to know about </s>
<s> to determine which row is selected in a jtable call tablegetselectedrow( ) </s>
<s> this method returns the row number of the selected row or returns -1 if no row is selected </s>
<s> to specify which cell is currently being edited you can use tablesetrowselectioninterval( rownum rownum ) // selects row number rownum tableeditcellat( rownum colnum ) // edit cell at position ( rownumcolnum ) phonetablegeteditorcomponent( )requestfocus( ) // put input cursor in cell one particularly troublesome point is that the data that is in the cell that is currently being edited is not in the table model </s>
<s> the value in the edit cell is not put into the table model until after the editing is ﬁnished </s>
<s> this means that even though the user sees the data in the cell it’s not really part of the table data yet </s>
<s> if you lose that data the user would be justiﬁed in complaining </s>
<s> to make sure that you get the right data when you save the data at the end of the program you have to turn oﬀ editing before retrieving the data from the model </s>
<s> this can be done with the following method private void stopediting( ) { if ( tablegetcelleditor( ) != null ) tablegetcelleditor( )stopcellediting( ) } this method must also be called before modifying the table by adding or deleting rows if such modiﬁcations are made while editing is in progress the eﬀect can be very strange 718 chapter 13 </s>
<s> advanced gui programming quiz on chapter 13 1 </s>
<s> describe the object that is created by the following statement and give an example of how it might be used in a program bufferedimage osc = new bufferedimage( 3232bufferedimagetype int rgb ) 2 </s>
<s> many programs depend on resource ﬁles </s>
<s> what is meant by a resource in this sense give an example 3 </s>
<s> what is the fontmetrics class used for 4 </s>
<s> if a color c is created as c = new color( 00255125 ) what is the eﬀect of drawing with this color 5 </s>
<s> what is antialiasing 6 </s>
<s> how is the buttongroup class used 7 </s>
<s> what does the acronym mvc stand for and how does it apply to the jtable class 8 </s>
<s> describe the picture that is produced by the following paintcomponent( ) method public void paintcomponent( graphics g ) { superpaintcomponent( g ) graphics2d g2 = ( graphics2d )g g2translate( getwidth( )/2 getheight( )/2 ) g2rotate( 30 * mathpi / 180 ) g2fillrect( 00100100 ) } 9 </s>
<s> what is meant by internationalization of a program 10 </s>
<s> suppose that the class that you are writing has an instance method doopen( ) ( with no parameters ) that is meant to be used to open a ﬁle selected by the user </s>
<s> write a code segment that creates an action that represents the action of opening a ﬁle </s>
<s> then show how to create a button and a menu item from that action appendix source files this appendix contains a list of the examples appearing in the free on-line textbook introduction to programming using java sixth edition </s>
<s> the source code ﬁles can be found in the on-line version of this book or in the source directory of a download of the web site </s>
<s> you should be able to compile the ﬁles and use them </s>
<s> note however that some of these examples depend on other source ﬁles such as textiojava and mosaicpaneljava that are not built into java </s>
<s> these are classes that i have written </s>
<s> links to all necessary non-standard source code ﬁles are provided below </s>
<s> to compile a program that uses a non-standard class the source code ﬁle or the compiled class ﬁle for that class should be in the same location as the program that uses it </s>
<s> to run the program you only need the compiled class ﬁle </s>
<s> note that almost all of my classes are meant to be placed in the default package to be used by programs that are also in the default package </s>
<s> to use them in other packages you will have to add an appropriate package” declaration to the beginning of the source code the solutions to end-of-chapter exercises are not listed in this appendix </s>
<s> each end-ofchapter exercise has its own web page which discusses its solution </s>
<s> the source code of a sample solution of each exercise is given in full on the solution page for that exercise </s>
<s> if you want to compile the solution you should be able to cut-and-paste the solution out of a web browser window and into a text editing program ( you can’t cut-and-paste from the html source of the solution page since it contains extra html markup commands that the java compiler won’t understand the html markup does not appear when the page is displayed in a web browser ) note that most of these examples require java version 50 or later </s>
<s> a few of them were written for older versions but will still work with current versions </s>
<s> when you compile some of these older programs with current versions of java you might get warnings about deprecated” methods </s>
<s> these warnings are not errors </s>
<s> when a method is deprecated it means that it should not be used in new code but it has not yet been removed from the language </s>
<s> it is possible that deprecated methods might be removed from the language at some future time but for now you just get a warning about using them part 1 text-oriented examples many of the sample programs in the text are based on console-style input/output where the computer and the user type lines of text back and forth to each other </s>
<s> some of these programs use the standard output object systemout for output </s>
<s> many of them use my non-standard class textio for both input and output </s>
<s> for the programs that use textio one of the ﬁles textiojava or textioclass must be available when you compile the program and textioclass must be available when you run the program </s>
<s> there is also a gui version of textio you can ﬁnd information about it at the end of part 4 below 719 720 source code listing the programs listed here are stand-alone applications not applets but i have written applets that simulate many of the programs </s>
<s> these console applets” appear on web pages in the on-line version of this textbook </s>
<s> they are based on textioappletjava which provides the same methods as textio but in an applet instead of in a stand-alone application </s>
<s> it is straightforward to convert a textio program to a textioapplet applet </s>
<s> see the comments in the textioappletjava ﬁle for information about how to do it </s>
<s> one example of this can be found in the ﬁle interest3consolejava • interestjava from section 22 computes the interest on a speciﬁc amount of money over a period of one year • timedcomputationjava from section 23 demonstrates a few basic built-in subroutines and functions • enumdemojava from section 23 a very simple ﬁrst demonstration of enum types • printsquarejava from section 24 reads an integer typed in by the user and prints the square of that integer </s>
<s> this program depends on textiojava </s>
<s> the same is true for almost all of the programs in the rest of this list • interest2java from section 24 calculates interest on an investment for one year based on user input • createproﬁlejava from section 24 a simple demo of output to a ﬁle using textio • interest2withscannerjava from section 24 is a version of interest2java that uses scanner instead of textio to read input from the user • interest3java from section 31 the ﬁrst example that uses control statements • threen1java from section 32 outputs a 3n+1 sequence for a given stating value • computeaveragejava from section 33 computes the average value of some integers entered by the user • countdivisorsjava from section 34 counts the number of divisors of an integer entered by the user • listlettersjava from section 34 lists all the distinct letters in a string entered by the user • lengthconverterjava from section 35 converts length measurements input by the user into diﬀerent units of measure • readnumbersfromfilejava from section 37 ﬁnds the sum and the average of numbers read from a ﬁle </s>
<s> demonstrates trycatch statements • guessinggamejava from section 42 lets the user play guessing games where the computer picks a number and the user tries to guess it </s>
<s> a slight variation of this program which reports the number of games won by the user is guessinggame2java • rowsofcharsjava from section 43 a rather useless program in which one subroutine calls another • threen2java from section 44 is an improved 3n+1 program that uses subroutines and prints its output in neat columns • highlowjava from section 54 a simple card game </s>
<s> it uses the classes cardjava and deckjava which are given as examples of object-oriented programming </s>
<s> also available the card-related classes handjava and from subsection 551 blackjackhandjava • rolltwopairsjava from subsection 552 uses pairofdicejava to simulate rolling two pairs of dice until the same total is rolled on both pairs source code listing 721 • birthdayproblemdemojava from section 72 demonstrates random access to array elements using the birthday problem” ( how many people do you have to choose at random until two are found whose birthdays are on the same day of the year ) • reverseinputnumbersjava from section 73 is a short program that illustrates the use of a partially full array by reading some numbers from the user and then printing them in reverse order • reversewithdynamicarrayjava from section 73 reads numbers from the user then prints them out in reverse order </s>
<s> it does this using the class dynamicarrayofintjava as an example of using dynamic arrays • lengthconverter2java from section 82 converts measurements input by the user to inches feet yards and miles </s>
<s> this improvement on lengthconverterjava allows inputs combining several measurements such as 3 feet 7 inches” and it detects illegal inputs • lengthconverter3java from section 83 is a revision of the previous example that uses exceptions to handle errors in the user’s input • towersofhanoijava from section 92 prints out the steps in a solution to the towers of hanoi problem an example of recursion • stringlistjava from section 92 implements a linked list of strings </s>
<s> the program listdemojava tests this class • postﬁxevaljava from section 93 evaluates postﬁx expressions using a stack </s>
<s> depends on the stackofdouble class deﬁned in stackofdoublejava • sorttreedemojava from section 94 demonstrates a binary sort tree of strings • simpleparser1java from section 95 evaluates fully parenthesized expressions input by the user • simpleparser2java from section 95 evaluates ordinary inﬁx expressions input by the user • simpleparser3java from section 95 reads inﬁx expressions input by the user and constructs expression trees that represent those expressions • wordlistwithtreesetjava from section 102 makes an alphabetical list of words from a ﬁle </s>
<s> a treeset is used to eliminate duplicates and sort the words • simpleinterpreterjava from section 104 demonstrates the use of a hashmap as a symbol table in a program that interprets simple commands from the user • wordcountjava from section 104 counts the number of occurrences of each word in a ﬁle </s>
<s> the program uses several features from the java collection framework • reversefilejava from section 112 shows how to read and write ﬁles in a simple command-line application uses the non-standard class textreaderjava </s>
<s> reversefilewithscannerjava is a version of the program that uses a scanner instead of a textreader • directorylistjava from section 112 lists the contents of a directory speciﬁed by the user demonstrates the use of the file class • copyfilejava from section 113 is a program that makes a copy of a ﬁle using ﬁle names that are given as command-line arguments • phonedirectoryfiledemojava from section 113 demonstrates the use of a ﬁle for storing data between runs of a program 722 source code listing • readurljava from section 114 reads and displays the contents of a speciﬁed url if the url refers to a text ﬁle </s>
<s> readurlappletjava is an applet that does much the same thing • showmynetworkjava mentioned in section 114 is a short program that prints information about each network interface on the computer where it is run including ip addresses associated with each interface • dateclientjava and dateserverjava from section 114 are very simple ﬁrst examples of network client and server programs • clchatclientjava and clchatserverjava from section 114 demonstrate two-way communication over a network by letting users send messages back and forth however no threading is used and the messages must strictly alternate • threadtest1java from section section 121 runs one or more threads that all perform the same task to demonstrate that they run simultaneously and ﬁnish in an indeterminate order • threadtest2java from section section 121 divides up a task ( counting primes ) among several threads to demonstrate parallel processing and the use of synchronization • dateserverwiththreadsjava and dateserverwiththreadpooljava from section 124 are modiﬁcations of dateserverjava ( subsection 1144 ) that use threads to handle communication with clients </s>
<s> the ﬁrst program creates a new thread for each connection </s>
<s> the second uses a thread pool and it uses a blocking queue to send connections from the main program to the pool </s>
<s> the threaded servers will work with original client program dateclientjava • clmandelbrotmasterjava clmandelbrotworkerjava and clmandelbrottaskjava from section 124 are a demonstration of distributed computing in which pieces of a large computation are sent over a network to be computed by worker” programs part 2 graphical examples from the text the following programs use a graphical user interface </s>
<s> the majority of them can be run both as stand-alone applications and as applets ( if you have downloaded the web site for this book note that most of the jar ﬁles for chapter 6 and chapter 13 are executable jar ﬁles which can be run as applications ) • guidemojava is a simple demonstration of some basic gui components from the swing graphical user interface library </s>
<s> it appears in the text in section 16 but you won’t be able to understand it until you learn about gui programming • staticrectsjava is a rather useless applet that simply draws a static image </s>
<s> it is the ﬁrst example of gui programming in section 38 </s>
<s> this applet depends on animationbasejava which is a simple framework for writing animated applets ( even though there’s actually no animation ) • movingrectsjava also from section 38 draws an animated version of the image in the preceding example </s>
<s> this applet depends on animationbasejava which is a simple framework for writing animated applets • randommosaicwalkjava a standalone program that displays a window full of colored squares with a moving disturbance from section 46 </s>
<s> this program depends on mosaiccanvasjava and mosaicjava source code listing 723 • randommosaicwalk2java is a version of the previous example modiﬁed to use a few named constants </s>
<s> from section 47 • shapedrawjava from section 55 is an applet that lets the user place various shapes on a drawing area an example of abstract classes subclasses and polymorphism • helloworldgui1java and helloworldgui2java from section 61 show the message hello world” in a window the ﬁrst one by using the built-in joptionpane class and the second by building the interface by hand” another variation helloworldgui4java from section 64 uses anonymous inner classes where helloworldgui1java uses named nested classes • helloworldappletjava from section 62 deﬁnes an applet that displays the message hello world” or goodbye world” </s>
<s> the message changes when the user clicks a button • helloworldpaneljava from section 62 is a panel that displays a message </s>
<s> the panel is used as the content pane both in the applet helloworldapplet2java and in the window of the stand-alone application helloworldgui3java </s>
<s> this example illustrates the technique of using the same panel class in both an applet and a stand-alone application a technique that will be used in many examples in the rest of the book • colorchooserappletjava used in section 63 to demonstrate rgb and hsb colors </s>
<s> this applet uses techniques that are not covered until later in the text and it is not presented as a programming example • randomstringsappletjava from section 63 shows 25 copies of the string java!” ( or some other string speciﬁed in an applet param ) in random colors and fonts </s>
<s> the applet uses randomstringspaneljava for its content pane and there is a stand-alone application randomstringsappjava that uses the same panel class • clickablerandomstringsappjava from section 64 is similar to randomstringsappjava except that the window is repainted when the user clicks the window </s>
<s> this is a ﬁrst example of using a mouse listener </s>
<s> the applet version is clickablerandomstringsappletjava • simplestamperjava from section 64 lets the user place rectangles and ovals on a drawing area by clicking with the mouse </s>
<s> the applet version is simplestamperappletjava </s>
<s> both versions use simplestamperpaneljava for their content panes • simpletrackmousejava from section 64 shows information about mouse events </s>
<s> the applet version is simpletrackmouseappletjava </s>
<s> both versions use simpletrackmousepaneljava for their content panes • simplepaintjava from section 64 lets the user draw curves in a drawing area and select the drawing color from a palette </s>
<s> the class simplepaint can be used either as an applet or as a stand-alone application • randomartpaneljava from section 65 shows a new random artwork” every four seconds </s>
<s> this is an example of using a timer </s>
<s> used in an applet version of the program randomartappletjava and a stand-alone application version randomartjava • keyboardandfocusdemojava from section 65 shows how to use keyboard and focus events </s>
<s> this class can be run either has an applet or as a stand-alone application • subkillerpaneljava from section 65 lets the user play a simple game </s>
<s> uses a timer as well as keyboard and focus events </s>
<s> the applet version is subkillerappletjava and the stand-alone application version is subkillerjava • sliderdemojava a simple demo from section 66 is an applet that shows three jsliders 724 source code listing • textareademojava from section 66 is an applet that demonstrates a jtextarea in a jscrollpane • borderdemojava from section 67 a very simple applet that demonstrates six types of border • sliderandcomboboxdemojava from section 67 shows how to create several components and lay them out in a gridlayout </s>
<s> can be used either as an applet or as a stand-alone application • simplecalcjava from section 67 lets the user add subtract multiply or divide two numbers input by the user </s>
<s> a demo of text ﬁelds buttons and layout with nested subpanels can be used either as an applet or as a stand-alone application • nulllayoutdemojava from section 67 shows how to lay out the components in a container for which the layout manager has been set to null </s>
<s> can be used either as an applet or as a stand-alone application • highlowguipaneljava from section 67 is a subclass of jpanel that implements a gui version of the card game highlowjava in which the user sees a playing card and guesses whether the next card will be higher or lower in value </s>
<s> this class depends on cardjava handjava and deckjava </s>
<s> a standalone application that uses this panel is in highlowguijava </s>
<s> an applet that uses it is in highlowguiappletjava • mosaicdrawcontrollerjava from section 68 demonstrates menus and a color chooser dialog </s>
<s> this is used in a program where the user colors the squares of a mosaic by clicking-and-dragging the mouse </s>
<s> it uses mosaicpaneljava to deﬁne the mosaic panel itself </s>
<s> mosaicdrawcontroller is used in the stand-alone application mosaicdrawframejava in the applet mosaicdrawappletjava and in the applet mosaicdrawlauncherappletjava the latter applet appears as a button on a web page clicking the button opens a mosaicdrawframe • simpledialogdemojava from section 68 is an applet that demonstrates jcolorchooser and some dialogs from joptionpane • randomstringswitharrayjava from section 72 shows 25 copies of a message in random colors sizes and positions </s>
<s> this is an improved version of randomstringspaneljava that uses an array to keep track of the data so that the same picture can be redrawn whenever necessary ( written only as an applet ) • simpledrawrectsjava from section 73 lets the user place colored rectangles in a drawing area </s>
<s> illustrates the use of an arraylist </s>
<s> an applet version is simpledrawrectsappletjava this program uses and depends on rainbowpalettejava • simplepaint2java from section 73 lets the user draw colored curves and stores the data needed for repainting the drawing surface in a list of type arraylist<curvedata> simplepaint2appletjava runs the program as an applet • checkersjava from section 75 lets two users play a game of checkers against each other illustrates the use of a two-dimensional array ( this is the longest program in the book so far at over 750 lines! ) checkersappletjava runs the program as an applet • blobsjava from section 91 recursively counts groups of colored squares in a grid • depthbreadthjava from section 93 demonstrates stacks and queues • trivialeditjava from section 113 lets the user edit short text ﬁles </s>
<s> this program demonstrates reading and writing ﬁles and using ﬁle dialogs source code listing 725 • simplepaintwithfilesjava from section 113 demonstrates saving data from a program to a ﬁle in both binary and character form </s>
<s> the program is a simple sketching program based on simplepaint2java • simplepaintwithxmljava and simplepaintwithxmlencoderjava from section 115 demonstrate saving data from a program to a ﬁle in xml format </s>
<s> the ﬁrst program uses an invented xml language while the second uses an xmlencoder for writing ﬁles and an xmldecoder for reading ﬁles </s>
<s> these programs are modiﬁcations of simplepaintwithfilesjava • xmldemojava from section 115 is a simple program that demonstrates basic parsing of an xml document and traversal of the document object model representation of the document </s>
<s> the user enters the xml to be parsed in a text area </s>
<s> the trivial class xmldemoappletjava runs the program as an applet • randomartwiththreadsjava from section 122 uses a thread to drive a very simple animation </s>
<s> compare to randomartpaneljava which does the same thing with a timer • quicksortthreaddemojava from section 122 demonstrates using a separate thread to perform a computation with simple inter-thread communication </s>
<s> the program is a visual demo of the quicksort algorithm ( quicksortthreaddemoappletjava is a trivial class that shows the program as an applet ) • backgroundcomputationdemojava from section 122 demonstrates using a thread running at a lower priority to perform a lengthy computation in the background ( the program computes a visualization of a small piece of the mandelbrot set but the particular computation that is done is not important ) • multiprocessingdemo1java from section 122 is a modiﬁcation of the previous example that uses several threads to perform the background computation </s>
<s> this speeds up the computation on multi-processor machines ( multiprocessingdemo1appletjava is a trivial class that shows the program as an applet ) • multiprocessingdemo2java from section 123 is a modiﬁcation of the previous example that decomposes its task into a large number of fairly small subtasks in order to achieve better load balancing </s>
<s> the program uses a thread pool and a queue of tasks ( multiprocessingdemo2appletjava is a trivial class that shows the program as an applet ) • multiprocessingdemo3java from section 123 is yet another version of the previous examples </s>
<s> this one uses a pool of threads that run forever taking tasks from a queue and executing them </s>
<s> to make this possible a blocking queue is used deﬁned by the standard inkedblockingqueue class </s>
<s> mylinkedblockingqueuejava is a simple example of using wait( ) and notify( ) directly that can be used as a replacement for linkedblockingqueue in multiprocessingdemo3 • towersofhanoiwithcontrolsjava from section 123 shows an animation of the famous towers of hanoi problem </s>
<s> the user can control the animation with run/pause next and startagain buttons </s>
<s> the program is an example of using wait( ) and notify( ) directly for communication between threads ( towersofhanoiwithcontrolsappletjava is a trivial class that shows the program as an applet ) • chatsimulationjava from section 124 ( on-line version only ) is an applet that simulates a network chat </s>
<s> there is no networking in this applet </s>
<s> the only point is to demonstrate how a thread could be used to process ( simulated ) incoming messages 726 source code listing • guichatjava from section 124 is a simple gui program for chatting between two people over a network </s>
<s> it demonstrates using a thread for reading data from a network connection • netgamecommon from section 125 is a package that deﬁnes a framework for networked games </s>
<s> this framework is used in several examples a chat room deﬁned in package netgamechat a tic-tac-toe game deﬁned in package netgametictactoe and a poker game deﬁned in package netgameﬁvecarddraw • highlowwithimagesjava from section 131 is a variation of highlowguijava that takes playing card images from an image ﬁle </s>
<s> requires the image ﬁle cardspng and depends on cardjava deckjava and handjava </s>
<s> highlowwithimagesappletjava runs this program as an applet • paintwithoﬀscreencanvasjava from section 131 is a little paint program that illustrates the use of a buﬀeredimage as an oﬀ-screen canvas </s>
<s> this class like many other examples from chapter 12 includes a static nested subclass of japplet that can be used to run the program as an applet </s>
<s> this is admittedly a somewhat tricky way to do things see the source code for information about how to use the applet class • soundandcursordemojava from section 131 lets the user play a few sounds and change the cursor by clicking some buttons </s>
<s> this demonstrates using audio resource ﬁles and using an image resource to create a custom cursor </s>
<s> requires the resource ﬁles in the directory snc resources • transparencydemojava from section 132 demonstrates using the alpha component of colors </s>
<s> it is also an example of using fontmetrics • strokedemojava from section 132 demonstrates the use of various basicstrokes for drawing lines and rectangles </s>
<s> also demonstrates antialiasing • paintdemojava from section 132 demonstrates using a gradientpaint and using a texturepaint to ﬁll a polygon </s>
<s> uses the image resource ﬁles tinysmileypng and queenofheartspng • radiobuttondemojava from section 133 does what its name indicates • toolbardemojava from section 133 uses a jtoolbar that holds a group of 3 radio buttons and a push button </s>
<s> all the buttons use custom icons and the push button is created from an action • sillystamperjava from section 134 demonstrates using a jlist of icons </s>
<s> the user can stamp” images of a selected icon onto a drawing area </s>
<s> this program uses the icon images in the directory stamper icons as resources • statesandcapitalstabledemojava from section 134 is a completely trivial demo of a jtable • scatterplottabledemojava from section 134 uses a tablemodel to customize a jtable the table is a list of xy-points that the user can edit </s>
<s> a scatter plot of the points is displayed • simplewebbrowserjava and simplewebbrowserwiththreadjava from section 134 implement a simple web browser using jeditorpane ( which is ridiculously easy ) </s>
<s> the difference between the programs is that the ﬁrst loads documents synchronously which can hang the program in an unpleasant way while the second uses a thread to load documents asynchronously source code listing 727 • simplertfeditjava mentioned but just barely discussed in section 134 lets the user edit rtf ﬁles which are text ﬁles in a format that include style information such as bold and italics </s>
<s> this is mainly a simple demo of using actions deﬁned by editor kits” • stopwatchlabeljava and mirrortextjava from section 134 are classes that implement custom components </s>
<s> customcomponenttestjava is a program that tests them • the mandelbrot program from section 135 which computes and displays visualizations of the mandelbrot set is deﬁned by several classes in the package eduhwseckmdb </s>
<s> the source code ﬁles can be found in the directory edu/hws/eck/mdb part 3 end-of-chapter applets this section contains the source code for the applets that are used as decorations at the end of each chapter in the on-line version of this textbook </s>
<s> in general you should not expect to be able to understand these applets at the time they occur in the text </s>
<s> some of these are older applets that will work with java 11 or even java 10 </s>
<s> they are not meant as examples of good programming practice for more recent versions of java • moirejava an animated design shown at the end of section 17 </s>
<s> you can use applet parameters to control various aspects of this applet’s behavior </s>
<s> also note that you can click on the applet and drag the pattern around by hand </s>
<s> see the source code for details • javapopsjava from section 26 is a simple animation that shows copies of the string java!” in various sizes and colors appearing and disappearing </s>
<s> this is an old applet that depends on an old animation framework named simpleanimationappletjava • randombrightenjava showing a grid of colored squares that get more and more red as a wandering disturbance visits them from the end of section 47 </s>
<s> depends on mosaiccanvasjava • symmetricbrightenjava a subclass of the previous example that makes a symmetric pattern from the end of section 57 </s>
<s> depends on mosaiccanvasjava and randombrightenjava • tracklinesjava an applet with lines that track the mouse from section 68 • kaleidoanimatejava from section 75 shows moving kaleidoscopic images • simplecajava a cellular automaton applet from the end of section 85 </s>
<s> this applet depends on the ﬁle cacanvasjava for more information on cellular automata see http//mathhwsedu/xjava/ca/ • towersofhanoiguijava from section 95 graphically shows the solution to the towers of hanoi problem with 10 disks </s>
<s> a newer version of this program with buttons that allow some control of the animation is towersofhanoiwithcontrolsjava from section 123 • littlepentominosappletjava from section 105 solves pentominos puzzles using a simple recursive backtracking algorithm </s>
<s> this applet depends on mosaicpaneljava </s>
<s> for a much more complex pentominos applet see http//mathhwsedu/xjava/pentominossolver/ • mazejava an applet that creates a random maze and solves it from section 115 • littlequicksortdemojava from the end of section 125 is a simpliﬁed version of quicksortthreaddemojava which is discussed in section 122 </s>
<s> the applet shows a visualization of the quicksort algorithm where the goal is to sort a list of colored bars into spectral order from red to violet 728 source code listing • the applet at the end of section 135 is the same mandelbrot program that is discussed as an example in that section with source ﬁles in the directory edu/hws/eck/mdb part 4 auxiliary files this section lists some of the extra source ﬁles that are required by various examples in the previous sections </s>
<s> the ﬁles listed here are those which are general enough to be potentially useful in other programming projects </s>
<s> links to these ﬁles are also given above along with the programs that use them • textiojava deﬁnes a class containing some static methods for doing input/output </s>
<s> these methods make it easier to use the standard input and output streams systemin and systemout </s>
<s> textio also supports other input sources and output destinations such as ﬁles </s>
<s> note that this version of textio requires java 50 ( or higher ) </s>
<s> the textio class deﬁned by this ﬁle is only useful in a command-line environment and it might be inconvenient to use in integrated development environments such as eclipse in which standard input does not work particularly well </s>
<s> in that case you might want to use the following ﬁle instead • textiojava for gui deﬁnes an alternative to the preceding ﬁle </s>
<s> it deﬁnes a version of textio with the same set of input and output routines as the original version </s>
<s> but instead of using standard i/o this gui version opens its own window and the input/output is done in that window </s>
<s> please read the comments at the beginning of the ﬁle ( for people who have downloaded this book the ﬁle is located in a directory named textio-gui inside the source directory ) • textioappletjava can be used for writing applets that simulate textio programs </s>
<s> this makes it possible to write applets that use console-style” input/output </s>
<s> such applets are created as subclasses of textioapplet </s>
<s> see the comments in the ﬁle for more information about how to convert a textio program into a textioapplet applet </s>
<s> an example can be found in the ﬁle interest3consolejava • animationbasejava a class that can be used as a framework for writing animated applets to use the framework you have to deﬁne a subclass of animationbase </s>
<s> section 38 has an example • mosaicjava contains subroutines for opening and controlling a window that contains a grid of colored rectangles </s>
<s> it depends on mosaiccanvasjava </s>
<s> this is a toolbox for writing simple stand-alone applications that use a mosaic window” this is rather old code but it is used in examples in section 46 and section 47 • mosaicpaneljava is a greatly improved version of mosaiccanvasjava that has many options </s>
<s> this class deﬁnes a subclass of jpanel that shows little rectangles arranged in rows and columns </s>
<s> it is used in the mosaic draw” example in section 68 • exprjava deﬁnes a class expr that represent mathematical expressions involving the variable x </s>
<s> it is used in some of the exercises in chapter 8 • netgamecommon is a package that deﬁnes a framework for networked games which is discussed in detail in section 125 ( if you have downloaded the web site for this book you can ﬁnd the ﬁles that make up this package in the subdirectory netgame/common of the source directory ) source code listing 729 • pokerrankjava can be used to assign ranks to hands of cards in poker games </s>
<s> the cards are deﬁned in the class pokercardjava </s>
<s> both of these classes are part of the package netgameﬁvecarddraw which is discussed in subsection 1254 ( the ﬁle can be found in the subdirectory netgame/fivecarddraw of the source directory ) • i18njava is a class that can be used to help in internationalization of a program </s>
<s> see subsection 1353 ( this ﬁle in the subdirectory edu/hws/eck/mdb of the source directory ) 730 source code listing glossary abstract class </s>
<s> a class that cannot be used to create objects and that exists only for the purpose of creating subclasses </s>
<s> abstract classes in java are deﬁned using the modiﬁer abstract abstract data type ( adt ) </s>
<s> a data type for which the possible values of the type and the permissible operations on those values are speciﬁed without specifying how the values and operations are to be implemented access speciﬁer </s>
<s> a modiﬁer used on a method deﬁnition or variable speciﬁcation that determines what classes can use that method or variable </s>
<s> the access speciﬁers in java are public protected and private </s>
<s> a method or variable that has no access speciﬁer is said to have package” visibility activation record </s>
<s> a data structure that contains all the information necessary to implement a subroutine call including the values of parameters and local variables of the subroutine and the return address to which the computer will return when the subroutine ends activation records are stored on a stack which makes it possible for several subroutine calls to be active at the same time </s>
<s> this is particularly important for recursion where several calls to the same subroutine can be active at the same time actual parameter </s>
<s> a parameter in a subroutine call statement whose value will be passed to the subroutine when the call statement is executed </s>
<s> actual parameters are also called arguments” address </s>
<s> each location in the computer’s memory has an address which is a number that identiﬁes that location </s>
<s> locations in memory are numbered sequentially </s>
<s> in modern computers each byte of memory has its own address </s>
<s> addresses are used when information is being stored into or retrieved from memory algorithm </s>
<s> an unambiguous step-by-step procedure for performing some task which is guaranteed to terminate after a ﬁnite number of steps alpha color component </s>
<s> a component of a color that says how transparent or opaque that color is </s>
<s> the higher the alpha component the more opaque the color api </s>
<s> application programming interface </s>
<s> a speciﬁcation of the interface to a software package or toolbox” the api says what classes or subroutines are provided in the toolbox and how to use them applet </s>
<s> a type of java program that is meant to run on a web page in a web browser as opposed to a stand-alone application animation </s>
<s> an apparently moving picture created by rapidly showing a sequence of still images called frames one after the other </s>
<s> in java animations are often driven by timer objects a new frame of the animation is shown each time the timer ﬁres 731 732 glossary antialiasing </s>
<s> adjusting the color of pixels to reduce the jagged” eﬀect that can occur when shapes and text are represented by pixels </s>
<s> for antialiased drawing when the shape covers only part of a pixel the color of the shape is blended with the previous color of the pixel the degree of blending depends on how much of the pixel is covered array </s>
<s> a list of items sequentially numbered </s>
<s> each item in the list can be identiﬁed by its index that is its sequence number </s>
<s> in java all the items in array must have the same type called the base type of the array </s>
<s> an array is a random access data structure that is you can get directly at any item in the array at any time array type </s>
<s> a data type whose possible values are arrays </s>
<s> if type is the name of a type then type[ ] is the array type for arrays that have base type type assignment statement </s>
<s> a statement in a computer program that retrieves or computes a value and stores that value in a variable </s>
<s> an assignment statement in java has the form variable-name = expression asynchronous event </s>
<s> an event that can occur at an unpredictable time outside the control of a computer program </s>
<s> user input events such as pressing a button on the mouse are asynchronous ascii </s>
<s> american standard code for information interchange </s>
<s> a way of encoding characters using 7 bits for characters </s>
<s> ascii code only supports 128 characters with no accented letters non-english alphabets special symbols or ideograms for non-alphabetic languages such as chinese </s>
<s> java uses the much larger and more complete unicode code for characters base case </s>
<s> in a recursive algorithm a simple case that is handled directly rather than by applying the algorithm recursively binary number </s>
<s> a number encoded as a sequence of zeros and ones </s>
<s> a binary number is represented in the base 2” in the same way that ordinary numbers are represented in the base 10” binary tree </s>
<s> a linked data structure that is either empty or consists of a root node that contains pointers to two smaller ( possibly empty ) binary trees </s>
<s> the two smaller binary trees are called the left subtree and the right subtree bit </s>
<s> a single-digit binary number which can be either 0 or 1 black box </s>
<s> a system or component of a system that can be used without understanding what goes on inside the box </s>
<s> a black box has an interface and an implementation </s>
<s> a black box that is meant to be used as a component in a system is called a module block </s>
<s> in java programming a sequence of statements enclosed between a pair of braces { and } </s>
<s> blocks are used to group several statements into a single statement </s>
<s> a block can also be empty meaning that it contains no statements at all and consists of just an empty pair of braces blocking operation </s>
<s> an operation such as reading data from a network connection is said to block” if it has to wait for some event to occur </s>
<s> a thread that performs a blocking operation can be blocked” until the required event occurs </s>
<s> a thread cannot execute any instructions while it is blocked </s>
<s> other threads in the same program however can continue to run blocking queue </s>
<s> a queue in which the dequeue operation will block if the queue is empty until an item is added to the queue </s>
<s> if the blocking queue has a limited capacity the enqueue operation can also block if the queue is full glossary 733 bottom-up design </s>
<s> an approach to software design in which you start by designing basic components of the system then combine them into more complex components and so on buﬀeredimage </s>
<s> a class representing oﬀ-screen canvases” that is images that are stored in the computer’s memory and that can be used for drawing images oﬀ-screen branch </s>
<s> a control structure that allows the computer to choose among two or more diﬀerent courses of action </s>
<s> java has two branch statements if statements and switch statements byte </s>
<s> a unit of memory that consists of eight bits </s>
<s> one byte of memory can hold an eight-bit binary number bytecode java bytecode” is the usual name for the machine language of the java virtual machine </s>
<s> java programs are compiled into java bytecode which can then be executed by the jvm charset </s>
<s> a particular encoding of character data into binary form </s>
<s> examples include utf-8 and iso-8859-1 checked exception </s>
<s> an exception in java that must be handled either by a trycatch statement or by a throws clause on the method that can throw he exception </s>
<s> failure to handle a checked exception in one way or the other is a syntax error class </s>
<s> the basic unit of programming in java </s>
<s> a class is a collection of static and non-static methods and variables </s>
<s> static members of a class are part of the class itself non-static or instance” members constitute a blueprint for creating objects which are then said to belong” to the class client/server </s>
<s> a model of network communication in which a server” waits at a known address on the network for connection requests that are sent to the server by clients” this is the basic model for communication using the tcp/ip protocol command-line interface </s>
<s> a way of interacting with the computer in which the user types in commands to the computer and the computer responds to each command comment </s>
<s> in a computer program text that is ignored by the computer </s>
<s> comments are for human readers to help them understand the program compiler </s>
<s> a computer program that translates programs written in some computer language ( generally a high-level language ) into programs written in machine language component </s>
<s> general term for a visual element of a gui such as a window button or menu a component is represented in java by an object belonging to a subclass of the class javaawtcomponent constructor </s>
<s> a special kind of subroutine in a class whose purpose is to construct objects belonging to that class </s>
<s> a constructor is called using the new operator and is not considered to be a method” container </s>
<s> a component such as a jpanel that can contain other gui components </s>
<s> containers have add( ) methods that can be used to add components contract of a method </s>
<s> the semantic component of the method’s interface </s>
<s> the contract speciﬁes the responsibilities of the method and of the caller of the method </s>
<s> it says how to use the method correctly and speciﬁes the task that the method will perform when it is used correctly </s>
<s> the contract of a method should be fully speciﬁed by its javadoc comment 734 glossary control structure </s>
<s> a program structure such as an if statement or a while loop that aﬀects the ﬂow of control in a program ( that is the order in which the instructions in the program are executed ) cpu </s>
<s> central processing unit </s>
<s> the cpu is the part of the program that actually performs calculations and carries out programs data structure </s>
<s> an organized collection of data that can be treated as a unit in a program deadlock </s>
<s> a situation in which several threads hang indeﬁnitely for example because each of them is waiting for some resource that is locked by one of the other threads default package </s>
<s> the unnamed package </s>
<s> a class that does not declare itself to be in a named package is considered to be in the default package deﬁnite assignment </s>
<s> occurs at a particular point in a program if it is deﬁnitely true that a given variable must have been assigned a value before that point in the program </s>
<s> it is only legal to use the value of a local variable if that variable has deﬁnitely” been assigned a value before it is used </s>
<s> for this to be true the compiler must be able to verify that every path through the program from the declaration of the variable to its use must pass through a statement that assigns a value to that variable deprecated </s>
<s> considered to be obsolete but still available for backwards compatibility </s>
<s> a deprecated java class or method is still part of the java language but it is not advisable to use it in new code </s>
<s> deprecated items might be removed in future versions of java dialog box </s>
<s> a window that is dependent on another window called its parent </s>
<s> dialog boxes are usually popped up to get information from the user or to display a message to the user </s>
<s> dialog boxes in the swing api are represented by objects of type jdialog distributed computing </s>
<s> a kind of parallel processing in which several computers connected by a network work together to solve a problem dummy parameter </s>
<s> identiﬁer that is used in a subroutine deﬁnition to stand for the value of an actual parameter that will be passed to the subroutine when the subroutine is called dummy parameters are also called formal parameters” ( or sometimes just parameters” when the term argument” is used instead of actual parameter ) enum </s>
<s> enumerated type </s>
<s> a type that is deﬁned by listing every possible value of that type an enum type in java is a class and the possible values of the type are objects event </s>
<s> in gui programming something that happens outside the control of the program such as a mouse click and that the program must respond to when it occurs exception </s>
<s> an error or exceptional condition that is outside the normal ﬂow of control of a program </s>
<s> in java an exception can be represented by an object of type throwable that can be caught and handled in a trycatch statement fetch-and-execute cycle </s>
<s> the process by which the cpu executes machine language programs </s>
<s> it fetches ( that is reads ) an instruction from memory and carries out ( that is executes ) the instruction and it repeats this over and over in a continuous cycle ﬂag </s>
<s> a boolean value that is set to true to indicate that some condition or event is true </s>
<s> a single bit in a binary number can also be used as a ﬂag formal parameter </s>
<s> another term for dummy parameter” frame </s>
<s> one of the images that make up an animation </s>
<s> also used as another name for activation record function </s>
<s> a subroutine that returns a value glossary 735 garbage collection </s>
<s> the automatic process of reclaiming memory that is occupied by objects that can no longer be accessed generic programming </s>
<s> writing code that will work with various types of data rather than with just a single type of data </s>
<s> the java collection framework and classes that use similar techniques are examples of generic programming in java getter </s>
<s> an instance method in a class that is used to read the value of some property of that class </s>
<s> usually the property is just the value of some instance variable </s>
<s> by convention a getter is named getxyz( ) where xyz is the name of the property global variable </s>
<s> another name for member variable emphasizing the fact that a member variable in a class exists outside the methods of that class graphics context </s>
<s> the data and methods necessary for drawing to some particular destination </s>
<s> a graphics context in java is an object belonging to the graphics class gui </s>
<s> graphical user interface </s>
<s> the modern way of interacting with a computer in which the computer displays interface components such as buttons and menus on a screen and the user interacts with them—for example by clicking on them with a mouse hash table </s>
<s> a data structure optimized for eﬃcient search insertion and deletion of objects a hash table consists of an array of locations and the location in which an object is stored is determined by that object’s hash code” an integer that can be eﬃciently computed from the contents of the object heap </s>
<s> the section of the computer’s memory in which objects are stored high level language </s>
<s> a programming language such as java that is convenient for human programmers but that has to be translated into machine language before it can be executed hsb </s>
<s> a color system in which colors are speciﬁed by three numbers ( in java real numbers in the range 00 to 10 ) giving the hue saturation and brightness ide </s>
<s> integrated development environment </s>
<s> a programming environment with a graphical user interface that integrates tools for creating compiling and executing programs identiﬁer </s>
<s> a sequence of characters that can be used as a name in a program </s>
<s> identiﬁers are used as names of variables methods and classes index </s>
<s> the position number of one item in an array implementation </s>
<s> the inside of a black box such as the code that deﬁnes a subroutine inﬁnite loop </s>
<s> a loop that never ends because its continuation condition always evaluates to true inheritence </s>
<s> the fact that one class can extend another </s>
<s> it then inherits the data and behavior of the class that it extends instance of a class </s>
<s> an object that belongs to that class ( or a subclass of that class ) </s>
<s> an object belongs to a class in this sense when the class is used as a template for the object when the object is created by a constructor deﬁned in that class instance method </s>
<s> a non-static method in a class and hence a method in any object that is an instance of that class instance variable </s>
<s> a non-static variable in a class and hence a variable in any object that is an instance of that class interface </s>
<s> as a general term how to use a black box such as a subroutine </s>
<s> knowing the interface tells you nothing about what goes on inside the box interface” is also a 736 glossary reserved word in java in this sense an interface is a type that speciﬁes one or more abstract methods </s>
<s> an object that implements the interface must provide deﬁnitions for those methods interpreter </s>
<s> a computer program that executes program written in some computer language by reading instructions from the program one-by-one and carrying each one out ( by translating it into equivalent machine language instructions ) i/o </s>
<s> input/output the way a computer program communicates with the rest of the world such as by displaying data to the user getting information from the user reading and writing ﬁles and sending and receiving data over a network iterator </s>
<s> an object associated with a collection such a list or a set that can be used to traverse that collection </s>
<s> the iterator will visit each member of the collection in turn java collection framework ( jcf ) </s>
<s> a set of standard classed that implement generic data structures including arraylist and treeset for example jdk </s>
<s> java development kit </s>
<s> basic software that supports both compiling and running java programs </s>
<s> a jdk includes a command-line programming environment as well as a jre you need a jdk if you want to compile java source code as well as executing precompiled programs jre </s>
<s> java runtime environment </s>
<s> basic software that supports running standard java programs that have already been compiled </s>
<s> a jre includes a java virtual machine and all the standard java classes just-in-time compiler </s>
<s> a kind of combination interpreter/compiler that compiles parts of a program as it interprets them </s>
<s> this allows subsequent executions of the same parts of the program to be executed more quickly than they were the ﬁrst time </s>
<s> this can result is greatly increased speed of execution </s>
<s> modern jvms use a just-in-time compiler jvm </s>
<s> java virtual machine </s>
<s> the imaginary computer whose machine language is java bytecode </s>
<s> also used to refer to computer programs that act as interpreters for programs written in bytecode to run java programs on your computer you need a jvm layout manager </s>
<s> an object whose function is to lay out the components in a container that is to set their sizes and locations </s>
<s> diﬀerent types of layout managers implement diﬀerent policies for laying out components linked data structure </s>
<s> a collection of data consisting of a number of objects that are linked together by pointers which are stored in instance variables of the objects </s>
<s> examples include linked lists and binary trees linked list </s>
<s> a linked data structure in which nodes are linked together by pointers into a linear chain listener </s>
<s> in gui programming an object that can be registered to be notiﬁed when events of some given type occur </s>
<s> the object is said to listen” for the events literal </s>
<s> a sequence of characters that is typed in a program to represent a constant value </s>
<s> for example ’a’ is a literal that represents the constant char value a when it appears in a java program location ( in memory ) </s>
<s> the computer’s memory is made up of a sequence of locations </s>
<s> these locations are sequentially numbered and the number that identiﬁes a particular location is called the address of that location glossary 737 local variable </s>
<s> a variable declared within a method for use only inside that method </s>
<s> a variable declared inside a block is valid from the point where it is declared until the end of block in which the declaration occurs loop </s>
<s> a control structure that allows a sequence of instructions to be executed repeatedly java has three kinds of loops for loops while loops and do loops loop control variable </s>
<s> a variable in a for loop whose value is modiﬁed as the loop is executed and is checked to determine whether or not to end the loop machine language </s>
<s> a programming language consisting of instructions that can be executed directed by a computer </s>
<s> instructions in machine language are encoded as binary numbers </s>
<s> each type of computer has its own machine language </s>
<s> programs written in other languages must be translated into a computer’s machine language before they can be executed by that computer main memory </s>
<s> programs and data can be stored in a computer’s main memory where they are available to the cpu </s>
<s> other forms of memory such as a disk drive also store information but only main memory is directly accessible to the cpu </s>
<s> programs and data from a disk drive have to be copied into main memory before they can be used by the cpu map </s>
<s> an associative array a data structure that associates an object from some collection to each object in some set </s>
<s> in java maps are represented by the generic interface map<ts> member variable </s>
<s> a variable deﬁned in a class but not inside a method as opposed to a local variable which is deﬁned inside some method memory </s>
<s> memory in a computer is used to hold programs and data method </s>
<s> another term for subroutine used in the context of object-oriented programming </s>
<s> a method is a subroutine that is contained in a class or in an object module </s>
<s> a component of a larger system that interacts with the rest of the system in a simple well-deﬁned straightforward manner multitasking </s>
<s> performing multiple tasks at once either by switching rapidly back and forth from one task to another or by literally working on multiple tasks at the same time multiprocessing </s>
<s> multitasking in which more than one processor is used so that multiple tasks can literally be worked on at the same time mutual exclusion </s>
<s> prevents two threads from accessing the same resource at the same time in java this only applies to threads that access the resource in synchronized methods or synchronized statements </s>
<s> mutual exclusion can prevent race conditions but introduces the possibility of deadlock mvc pattern </s>
<s> the model/view/controller pattern a strategy for dividing responsibility in a gui component </s>
<s> the model is the data for the component </s>
<s> the view is the visual presentation of the component on the screen </s>
<s> the controller is responsible for reacting to events by changing the model </s>
<s> according to the mvc pattern these responsibilities should be handled by diﬀerent objects nan </s>
<s> not a number </s>
<s> doublenan is a special value of type double that represents an undeﬁned or illegal value node </s>
<s> common term for one of the objects in a linked data structure null </s>
<s> a special pointer value that means not pointing to anything” 738 glossary numerical analysis </s>
<s> the ﬁeld that studies algorithms that use approximations such as real numbers and the errors that can result from such approximation oﬀ-by-one error </s>
<s> a common type of error in which one too few or one too many items are processed often because counting is not being handled correctly or because the processing stops too soon or continues too long for some other reason object </s>
<s> an entity in a computer program that can have data ( variables ) and behaviors ( methods ) </s>
<s> an object in java must be created using some class as a template </s>
<s> the class of an object determines what variables and methods it contains object type </s>
<s> a type whose values are objects as opposed to primitive types </s>
<s> classes and interfaces are object types oop </s>
<s> object-oriented programming </s>
<s> an approach to the design and implementation of computer programs in which classes and objects are created to represent concepts and entities and their interactions operating system </s>
<s> the basic software that is always running on a computer without which it would not be able to function </s>
<s> examples include linux mac os and windows vista operator </s>
<s> a symbol such as +” <=” or ++” that represents an operation that can be applied to one or more values in an expression overloading ( of operators ) </s>
<s> the fact that the same operator can be used with diﬀerent types of data </s>
<s> for example the +” operator can be applied to both numbers and strings overloading ( of method names ) </s>
<s> the fact that several methods that are deﬁned in the same class can have the same name as long as they have diﬀerent signatures overriding </s>
<s> redeﬁning in a subclass </s>
<s> when a subclass provides a new deﬁnition of a method that is inherited from a superclass the new deﬁnition is said to override the original deﬁnition package </s>
<s> in java a named collection of related classes and sub-packages such as javaawt and javaxswing parallel processing </s>
<s> when several tasks are being performed simultaneously either by multiple processors or by one processor that switches back and forth among the tasks parameter </s>
<s> used to provide information to a subroutine when that subroutine is called </s>
<s> values of actual parameters” in the subroutine call statement are assigned to the dummy parameters” in the subroutine deﬁnition before the code in the subroutine is executed parameterized type </s>
<s> a type such as arraylist<string> that includes one or more type parameters ( string in the example ) parsing </s>
<s> determining the syntactical structure of a string in some language </s>
<s> to parse a string is to determine whether the string is legal according to the grammar of the language and if so how it can be created using the rules of the grammar partially full array </s>
<s> an array that is used to store varying numbers of items </s>
<s> a partially full array can be represented as a normal array plus a counter to keep track of how many items are actually stored pixel </s>
<s> a picture element” on the screen or in an image </s>
<s> a picture consists of rows and columns of pixels </s>
<s> the color of each pixel can be individually set polymorphism </s>
<s> the fact that the meaning of a call to an instance method can depend on the actual type of the object that is used to make the call at run time </s>
<s> that is if var is a variable of object type then the method that is called by a statement such as glossary 739 varaction( ) depends on the type of the object to which var refers when the statement is executed at run time not on the type of variable var pointer </s>
<s> a value that represents an address in the computer’s memory and hence can be thought of as pointing” to the location that has that address </s>
<s> a variable in java can never hold an object it can only hold a pointer to the location where the object is stored a pointer is also called a reference” pragmatics </s>
<s> rules of thumb that describe what it means to write a good program </s>
<s> for example style rules and guidelines about how to structure a program are part of the pragmatics of a programming language precedence </s>
<s> the precedence of operators determines the order in which they are applied when several operators occur in an expression in the absence of parentheses precondition </s>
<s> a condition that must be true at some point in the execution of a program in order for the program to proceed correctly from that point </s>
<s> a precondition of a subroutine is something that must be true when the subroutine is called in order for the subroutine to function properly </s>
<s> subroutine preconditions are often restrictions on the values of the actual parameters that can be passed into the subroutine postcondition </s>
<s> a condition that is known to be true at some point in the execution of a program as a result of the computation that has come before that point </s>
<s> a postcondition of a subroutine is something that must be true after the subroutine ﬁnishes its execution a postcondition of a function often describe the return value of the function primitive type </s>
<s> one of the eight basic built-in data types in java double ﬂoat long int short byte boolean and char </s>
<s> a variable of primitive type holds an actual value as opposed to a pointer to that value priority of a thread </s>
<s> an integer associated with a thread that can aﬀect the order in which threads are executed </s>
<s> a thread with greater priority is executed in preference to a thread with lower priority producer/consumer </s>
<s> a classic pattern in parallel programming in which one or more producers produce items that are consumed by one or more consumers and the producers and consumers are meant to run in parallel </s>
<s> the problem is to get items safely and eﬃciently from the producers to the consumers </s>
<s> in java the producer/consumer pattern is implemented by blocking queues program </s>
<s> a set of instructions to be carried out by a computer written in an appropriate programming language </s>
<s> used as a verb it means to create such a set of instructions programming language </s>
<s> a language that can be used to write programs for a computer </s>
<s> programming languages range in complexity from machine language to high-level languages such as java protocol </s>
<s> a speciﬁcation of what constitutes legal communication in a give context </s>
<s> a protocol speciﬁes the format of legal messages when they can be sent what kind of reply is expected and so on pseudocode </s>
<s> informal speciﬁcation of algorithms expressed in language that is closer to english than an actual programming language and usually without ﬁlling in every detail of the procedure queue </s>
<s> a data structure consisting of a list of items where items can only be added at one end and removed at the opposite end of the list 740 glossary race condition </s>
<s> a source of possible errors in parallel programming where one thread can cause an error in another thread by changing some aspect of the state of the program that the second thread is depending on ( such as the value of variable ) ram </s>
<s> random access memory </s>
<s> this term is often used as a synonym for the main memory of a computer </s>
<s> technically however it means memory in which all locations are equally accessible at any given time </s>
<s> the term also implies that data can be written to the memory as well as read from it recursion </s>
<s> deﬁning something in terms of itself </s>
<s> in particular a recursive subroutine is one that calls itself either directly or indirectly through a chain of other subroutines recursive algorithms work by reducing a complex problem into smaller problems which can be solved either directly or by applying the same algorithm recursively” rgb </s>
<s> a color system in which colors are speciﬁed by three numbers ( in java integers in the range 0 to 255 ) giving the red green and blue components of the color reference </s>
<s> another term for pointer” return type of a function </s>
<s> the type of value that is returned by that function reserved word </s>
<s> a sequence of characters that looks like an identiﬁer but can’t be used as an identiﬁer because it has a special meaning in the language </s>
<s> for example class public and if are reserved words in java resource </s>
<s> an image sound text or other data ﬁle that is part of a program </s>
<s> resource ﬁles for java programs are stored on the same class path where the compiled class ﬁles for the program are stored robust program </s>
<s> a program is robust if it is not only correct but also is capable of handling errors such as a non-existent ﬁle or a failed network connection in a reasonable way set </s>
<s> a collection of objects which contains no duplicates </s>
<s> in java sets are represented by the generic interface set<t> scope </s>
<s> the region in a program where the declaration of an identiﬁer is valid semantics </s>
<s> meaning </s>
<s> the semantics rules of a language determine the meaning of strings of symbols ( such as sentences or statements ) in that language sentinel value </s>
<s> a special value that marks the end of a sequence of data values to indicate the end of the data setter </s>
<s> an instance method in a class that is used to set the value of some property of that class </s>
<s> usually the property is just the value of some instance variable </s>
<s> by convention a setter is named setxyz( ) where xyz is the name of the property signature of a method </s>
<s> the name of the method the number of formal parameters in its deﬁnition and the type of each formal parameter </s>
<s> method signatures are the information needed by a compiler to tell which method is being called by a given subroutine call statement socket </s>
<s> an abstraction representing one end of a connection between two computers on a network </s>
<s> a socket represents a logical connection between computer programs not a physical connection between computers stack </s>
<s> a data structure consisting of a list of items where items can only be added and removed at one end of the list which is known as the top” of the stack </s>
<s> adding an item to a stack is called pushing” and removing an item is called popping” the term stack also refers to the stack of activation records that is used to implement subroutine calls glossary 741 state machine </s>
<s> a model of computation where an abstract machine” can be in any of some ﬁnite set of diﬀerent states </s>
<s> the behavior of the machine depends on its state and the state can change in response to inputs or events </s>
<s> the basic logical structure of a gui program can often be represented as a state machine step-wise reﬁnement </s>
<s> a technique for developing an algorithm by starting with a general outline of the procedure often expressed in pseudocode and then gradually ﬁlling in the details stream </s>
<s> an abstraction representing a source of input data or a destination for output data java has four basic stream classes representing input and output of character and binary data </s>
<s> these classes form the foundation for java’s input/output api source code </s>
<s> text written in a high-level programming language which must be translated into a machine language such as java bytecode before it can be executed by a computer subclass </s>
<s> a class that extends another class directly or indirectly and therefore inherits its data and behaviors </s>
<s> the ﬁrst class is said to be a subclass of the second subroutine </s>
<s> a sequence of program instructions that have been grouped together and given a name </s>
<s> the name can then be used to call” the subroutine </s>
<s> subroutines are also called methods in the context of object-oriented programming subroutine call statement </s>
<s> a statement in a program that calls a subroutine </s>
<s> when a subroutine call statement is executed the computer executes the code that is inside the subroutine super </s>
<s> a special variable automatically deﬁned in any instance method that refers to the object that contains the method but considered as belonging to the superclass of the class in which the method deﬁnition occurs super gives access to members of the superclass that are hidden by members of the same name in the subclass syntax </s>
<s> grammar </s>
<s> the syntax rules of a language determine what strings of symbols are legal—that is grammatical—in that language tcp/ip </s>
<s> protocols that are used for network communication on the internet this </s>
<s> a special variable automatically deﬁned in any instance method that refers to the object that contains the method thread </s>
<s> an abstraction representing a sequence of instructions to be executed one after the other </s>
<s> it is possible for a computer to execute several threads in parallel thread pool </s>
<s> a collection of worker threads” that are available to perform tasks </s>
<s> as tasks become available they are assigned to threads in the pool </s>
<s> a thread pool is often used with a blocking queue that holds the tasks top-down design </s>
<s> an approach to software design in which you start with the problems as a whole subdivide it into smaller problems divide those into even smaller problems and so on until you get to problems that can be solved directly type </s>
<s> speciﬁes some speciﬁc kind of data values </s>
<s> for example the type int speciﬁes integer data values that can be represented as 32-bit binary numbers </s>
<s> in java a type can be a primitive type a class names or an interface name </s>
<s> type names are used to specify the types of variables of dummy parameters in subroutines and of return values of subroutines type cast </s>
<s> forces the conversion of a value of one type into another type </s>
<s> for example in ( int )( 6*mathrandom( ) ) the ( int ) is a type-cast operation that converts the double 742 glossary value ( 6*mathrandom( ) ) into an integer by discarding the fractional part of the real number unicode </s>
<s> a way of encoding characters as binary numbers </s>
<s> the unicode character set includes characters used in many languages not just english </s>
<s> unicode is the character set that is used internally by java url </s>
<s> universal resource locator an address for a resource on the internet such as a web page variable </s>
<s> a named memory location ( or sequence of locations ) that can be used to store data </s>
<s> a variable is created in a program and a name is assigned to the variable in a variable declaration statement </s>
<s> the name can then be used in that program to refer to the memory location or to the data stored in that memory location depending on context </s>
<s> in java a variable has a type which speciﬁes what kind of data it can hold wrapper class </s>
<s> a class such as double or integer that makes it possible to wrap” a primitive type value in an object belonging to the wrapper class </s>
<s> this allows primitive type values to be used in contexts were objects are required such as with the java collection framework xml extensible markup language </s>
<s> a very common and well-supported standard syntax for creating text-based data-representation languages </s>
